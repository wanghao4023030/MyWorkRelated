//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.36415
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.36415.
// 
#pragma warning disable 1591

namespace KIOSK.Integration.WSProxy.NotifyService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="NotifyServiceSoap", Namespace="http://carestream.org/")]
    public partial class NotifyService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback NotifyExamInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifyReportFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPrintModeOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifyFilmInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifyReportInfoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public NotifyService() {
            this.Url = global::KIOSK.Integration.WSProxy.Properties.Settings.Default.KIOSK_Integration_WSProxy_NotifyService_NotifyService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event NotifyExamInfoCompletedEventHandler NotifyExamInfoCompleted;
        
        /// <remarks/>
        public event NotifyReportFileCompletedEventHandler NotifyReportFileCompleted;
        
        /// <remarks/>
        public event SetPrintModeCompletedEventHandler SetPrintModeCompleted;
        
        /// <remarks/>
        public event NotifyFilmInfoCompletedEventHandler NotifyFilmInfoCompleted;
        
        /// <remarks/>
        public event NotifyReportInfoCompletedEventHandler NotifyReportInfoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://carestream.org/NotifyExamInfo", RequestNamespace="http://carestream.org/", ResponseNamespace="http://carestream.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool NotifyExamInfo(ExamInfo exam) {
            object[] results = this.Invoke("NotifyExamInfo", new object[] {
                        exam});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void NotifyExamInfoAsync(ExamInfo exam) {
            this.NotifyExamInfoAsync(exam, null);
        }
        
        /// <remarks/>
        public void NotifyExamInfoAsync(ExamInfo exam, object userState) {
            if ((this.NotifyExamInfoOperationCompleted == null)) {
                this.NotifyExamInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyExamInfoOperationCompleted);
            }
            this.InvokeAsync("NotifyExamInfo", new object[] {
                        exam}, this.NotifyExamInfoOperationCompleted, userState);
        }
        
        private void OnNotifyExamInfoOperationCompleted(object arg) {
            if ((this.NotifyExamInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyExamInfoCompleted(this, new NotifyExamInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://carestream.org/NotifyReportFile", RequestNamespace="http://carestream.org/", ResponseNamespace="http://carestream.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool NotifyReportFile(ExamInfo exam, string reportPath) {
            object[] results = this.Invoke("NotifyReportFile", new object[] {
                        exam,
                        reportPath});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void NotifyReportFileAsync(ExamInfo exam, string reportPath) {
            this.NotifyReportFileAsync(exam, reportPath, null);
        }
        
        /// <remarks/>
        public void NotifyReportFileAsync(ExamInfo exam, string reportPath, object userState) {
            if ((this.NotifyReportFileOperationCompleted == null)) {
                this.NotifyReportFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyReportFileOperationCompleted);
            }
            this.InvokeAsync("NotifyReportFile", new object[] {
                        exam,
                        reportPath}, this.NotifyReportFileOperationCompleted, userState);
        }
        
        private void OnNotifyReportFileOperationCompleted(object arg) {
            if ((this.NotifyReportFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyReportFileCompleted(this, new NotifyReportFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://carestream.org/SetPrintMode", RequestNamespace="http://carestream.org/", ResponseNamespace="http://carestream.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetPrintMode(string strAccessionNumber, string strStudyInstanceUID, int nMode) {
            object[] results = this.Invoke("SetPrintMode", new object[] {
                        strAccessionNumber,
                        strStudyInstanceUID,
                        nMode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetPrintModeAsync(string strAccessionNumber, string strStudyInstanceUID, int nMode) {
            this.SetPrintModeAsync(strAccessionNumber, strStudyInstanceUID, nMode, null);
        }
        
        /// <remarks/>
        public void SetPrintModeAsync(string strAccessionNumber, string strStudyInstanceUID, int nMode, object userState) {
            if ((this.SetPrintModeOperationCompleted == null)) {
                this.SetPrintModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPrintModeOperationCompleted);
            }
            this.InvokeAsync("SetPrintMode", new object[] {
                        strAccessionNumber,
                        strStudyInstanceUID,
                        nMode}, this.SetPrintModeOperationCompleted, userState);
        }
        
        private void OnSetPrintModeOperationCompleted(object arg) {
            if ((this.SetPrintModeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPrintModeCompleted(this, new SetPrintModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://carestream.org/NotifyFilmInfo", RequestNamespace="http://carestream.org/", ResponseNamespace="http://carestream.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool NotifyFilmInfo(string accessionNumber, string patientID) {
            object[] results = this.Invoke("NotifyFilmInfo", new object[] {
                        accessionNumber,
                        patientID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void NotifyFilmInfoAsync(string accessionNumber, string patientID) {
            this.NotifyFilmInfoAsync(accessionNumber, patientID, null);
        }
        
        /// <remarks/>
        public void NotifyFilmInfoAsync(string accessionNumber, string patientID, object userState) {
            if ((this.NotifyFilmInfoOperationCompleted == null)) {
                this.NotifyFilmInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyFilmInfoOperationCompleted);
            }
            this.InvokeAsync("NotifyFilmInfo", new object[] {
                        accessionNumber,
                        patientID}, this.NotifyFilmInfoOperationCompleted, userState);
        }
        
        private void OnNotifyFilmInfoOperationCompleted(object arg) {
            if ((this.NotifyFilmInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyFilmInfoCompleted(this, new NotifyFilmInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://carestream.org/NotifyReportInfo", RequestNamespace="http://carestream.org/", ResponseNamespace="http://carestream.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int NotifyReportInfo(string patientName, string patientID, string accessionNumber, string studyInstanceUID, int reportStatus, string[] reportFileName) {
            object[] results = this.Invoke("NotifyReportInfo", new object[] {
                        patientName,
                        patientID,
                        accessionNumber,
                        studyInstanceUID,
                        reportStatus,
                        reportFileName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void NotifyReportInfoAsync(string patientName, string patientID, string accessionNumber, string studyInstanceUID, int reportStatus, string[] reportFileName) {
            this.NotifyReportInfoAsync(patientName, patientID, accessionNumber, studyInstanceUID, reportStatus, reportFileName, null);
        }
        
        /// <remarks/>
        public void NotifyReportInfoAsync(string patientName, string patientID, string accessionNumber, string studyInstanceUID, int reportStatus, string[] reportFileName, object userState) {
            if ((this.NotifyReportInfoOperationCompleted == null)) {
                this.NotifyReportInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyReportInfoOperationCompleted);
            }
            this.InvokeAsync("NotifyReportInfo", new object[] {
                        patientName,
                        patientID,
                        accessionNumber,
                        studyInstanceUID,
                        reportStatus,
                        reportFileName}, this.NotifyReportInfoOperationCompleted, userState);
        }
        
        private void OnNotifyReportInfoOperationCompleted(object arg) {
            if ((this.NotifyReportInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyReportInfoCompleted(this, new NotifyReportInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.36415")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://carestream.org/")]
    public partial class ExamInfo {
        
        private string createDTField;
        
        private string updateDTField;
        
        private string patientIDField;
        
        private string accessionNumberField;
        
        private string studyInstanceUIDField;
        
        private string nameCNField;
        
        private string nameENField;
        
        private string genderField;
        
        private string birthdayField;
        
        private string modalityField;
        
        private string modalityNameField;
        
        private string patientTypeField;
        
        private string visitIDField;
        
        private string requestIDField;
        
        private string requestDepartmentField;
        
        private string requestDTField;
        
        private string registerDTField;
        
        private string examDTField;
        
        private string reportDTField;
        
        private string submitDTField;
        
        private string approveDTField;
        
        private string pDFReportURLField;
        
        private string studyStatusField;
        
        private string outHospitalNoField;
        
        private string inHospitalNoField;
        
        private string physicalNumberField;
        
        private string examNameField;
        
        private string examBodyPartField;
        
        private string optional0Field;
        
        private string optional1Field;
        
        private string optional2Field;
        
        private string optional3Field;
        
        private string optional4Field;
        
        private string optional5Field;
        
        private string optional6Field;
        
        private string optional7Field;
        
        private string optional8Field;
        
        private string optional9Field;
        
        /// <remarks/>
        public string CreateDT {
            get {
                return this.createDTField;
            }
            set {
                this.createDTField = value;
            }
        }
        
        /// <remarks/>
        public string UpdateDT {
            get {
                return this.updateDTField;
            }
            set {
                this.updateDTField = value;
            }
        }
        
        /// <remarks/>
        public string PatientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public string AccessionNumber {
            get {
                return this.accessionNumberField;
            }
            set {
                this.accessionNumberField = value;
            }
        }
        
        /// <remarks/>
        public string StudyInstanceUID {
            get {
                return this.studyInstanceUIDField;
            }
            set {
                this.studyInstanceUIDField = value;
            }
        }
        
        /// <remarks/>
        public string NameCN {
            get {
                return this.nameCNField;
            }
            set {
                this.nameCNField = value;
            }
        }
        
        /// <remarks/>
        public string NameEN {
            get {
                return this.nameENField;
            }
            set {
                this.nameENField = value;
            }
        }
        
        /// <remarks/>
        public string Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        public string Birthday {
            get {
                return this.birthdayField;
            }
            set {
                this.birthdayField = value;
            }
        }
        
        /// <remarks/>
        public string Modality {
            get {
                return this.modalityField;
            }
            set {
                this.modalityField = value;
            }
        }
        
        /// <remarks/>
        public string ModalityName {
            get {
                return this.modalityNameField;
            }
            set {
                this.modalityNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientType {
            get {
                return this.patientTypeField;
            }
            set {
                this.patientTypeField = value;
            }
        }
        
        /// <remarks/>
        public string VisitID {
            get {
                return this.visitIDField;
            }
            set {
                this.visitIDField = value;
            }
        }
        
        /// <remarks/>
        public string RequestID {
            get {
                return this.requestIDField;
            }
            set {
                this.requestIDField = value;
            }
        }
        
        /// <remarks/>
        public string RequestDepartment {
            get {
                return this.requestDepartmentField;
            }
            set {
                this.requestDepartmentField = value;
            }
        }
        
        /// <remarks/>
        public string RequestDT {
            get {
                return this.requestDTField;
            }
            set {
                this.requestDTField = value;
            }
        }
        
        /// <remarks/>
        public string RegisterDT {
            get {
                return this.registerDTField;
            }
            set {
                this.registerDTField = value;
            }
        }
        
        /// <remarks/>
        public string ExamDT {
            get {
                return this.examDTField;
            }
            set {
                this.examDTField = value;
            }
        }
        
        /// <remarks/>
        public string ReportDT {
            get {
                return this.reportDTField;
            }
            set {
                this.reportDTField = value;
            }
        }
        
        /// <remarks/>
        public string SubmitDT {
            get {
                return this.submitDTField;
            }
            set {
                this.submitDTField = value;
            }
        }
        
        /// <remarks/>
        public string ApproveDT {
            get {
                return this.approveDTField;
            }
            set {
                this.approveDTField = value;
            }
        }
        
        /// <remarks/>
        public string PDFReportURL {
            get {
                return this.pDFReportURLField;
            }
            set {
                this.pDFReportURLField = value;
            }
        }
        
        /// <remarks/>
        public string StudyStatus {
            get {
                return this.studyStatusField;
            }
            set {
                this.studyStatusField = value;
            }
        }
        
        /// <remarks/>
        public string OutHospitalNo {
            get {
                return this.outHospitalNoField;
            }
            set {
                this.outHospitalNoField = value;
            }
        }
        
        /// <remarks/>
        public string InHospitalNo {
            get {
                return this.inHospitalNoField;
            }
            set {
                this.inHospitalNoField = value;
            }
        }
        
        /// <remarks/>
        public string PhysicalNumber {
            get {
                return this.physicalNumberField;
            }
            set {
                this.physicalNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ExamName {
            get {
                return this.examNameField;
            }
            set {
                this.examNameField = value;
            }
        }
        
        /// <remarks/>
        public string ExamBodyPart {
            get {
                return this.examBodyPartField;
            }
            set {
                this.examBodyPartField = value;
            }
        }
        
        /// <remarks/>
        public string Optional0 {
            get {
                return this.optional0Field;
            }
            set {
                this.optional0Field = value;
            }
        }
        
        /// <remarks/>
        public string Optional1 {
            get {
                return this.optional1Field;
            }
            set {
                this.optional1Field = value;
            }
        }
        
        /// <remarks/>
        public string Optional2 {
            get {
                return this.optional2Field;
            }
            set {
                this.optional2Field = value;
            }
        }
        
        /// <remarks/>
        public string Optional3 {
            get {
                return this.optional3Field;
            }
            set {
                this.optional3Field = value;
            }
        }
        
        /// <remarks/>
        public string Optional4 {
            get {
                return this.optional4Field;
            }
            set {
                this.optional4Field = value;
            }
        }
        
        /// <remarks/>
        public string Optional5 {
            get {
                return this.optional5Field;
            }
            set {
                this.optional5Field = value;
            }
        }
        
        /// <remarks/>
        public string Optional6 {
            get {
                return this.optional6Field;
            }
            set {
                this.optional6Field = value;
            }
        }
        
        /// <remarks/>
        public string Optional7 {
            get {
                return this.optional7Field;
            }
            set {
                this.optional7Field = value;
            }
        }
        
        /// <remarks/>
        public string Optional8 {
            get {
                return this.optional8Field;
            }
            set {
                this.optional8Field = value;
            }
        }
        
        /// <remarks/>
        public string Optional9 {
            get {
                return this.optional9Field;
            }
            set {
                this.optional9Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    public delegate void NotifyExamInfoCompletedEventHandler(object sender, NotifyExamInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NotifyExamInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NotifyExamInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    public delegate void NotifyReportFileCompletedEventHandler(object sender, NotifyReportFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NotifyReportFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NotifyReportFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    public delegate void SetPrintModeCompletedEventHandler(object sender, SetPrintModeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPrintModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetPrintModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    public delegate void NotifyFilmInfoCompletedEventHandler(object sender, NotifyFilmInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NotifyFilmInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NotifyFilmInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    public delegate void NotifyReportInfoCompletedEventHandler(object sender, NotifyReportInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.36415")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NotifyReportInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NotifyReportInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591