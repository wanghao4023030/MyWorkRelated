//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace KIOSK.Integration.WSProxy.PS1000 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PrintServiceSoap", Namespace="http://tempuri.org/")]
    public partial class PrintService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetPatientInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPrintModeOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifyReportInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrintServerStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePrintTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePrintTask2OperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrintTaskStatusOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PrintService() {
            this.Url = global::KIOSK.Integration.WSProxy.Properties.Settings.Default.KIOSK_Integration_WSProxy_PS1000_PrintService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetPatientInfoCompletedEventHandler GetPatientInfoCompleted;
        
        /// <remarks/>
        public event SetPrintModeCompletedEventHandler SetPrintModeCompleted;
        
        /// <remarks/>
        public event NotifyReportInfoCompletedEventHandler NotifyReportInfoCompleted;
        
        /// <remarks/>
        public event GetPrintServerStatusCompletedEventHandler GetPrintServerStatusCompleted;
        
        /// <remarks/>
        public event CreatePrintTaskCompletedEventHandler CreatePrintTaskCompleted;
        
        /// <remarks/>
        public event CreatePrintTask2CompletedEventHandler CreatePrintTask2Completed;
        
        /// <remarks/>
        public event PrintCompletedEventHandler PrintCompleted;
        
        /// <remarks/>
        public event GetPrintTaskStatusCompletedEventHandler GetPrintTaskStatusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPatientInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetPatientInfo(string strCardType, string strCardNumber, string strReturnType, out string strReturnValue, out string strPatientName, out string strMessage) {
            object[] results = this.Invoke("GetPatientInfo", new object[] {
                        strCardType,
                        strCardNumber,
                        strReturnType});
            strReturnValue = ((string)(results[1]));
            strPatientName = ((string)(results[2]));
            strMessage = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientInfoAsync(string strCardType, string strCardNumber, string strReturnType) {
            this.GetPatientInfoAsync(strCardType, strCardNumber, strReturnType, null);
        }
        
        /// <remarks/>
        public void GetPatientInfoAsync(string strCardType, string strCardNumber, string strReturnType, object userState) {
            if ((this.GetPatientInfoOperationCompleted == null)) {
                this.GetPatientInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientInfoOperationCompleted);
            }
            this.InvokeAsync("GetPatientInfo", new object[] {
                        strCardType,
                        strCardNumber,
                        strReturnType}, this.GetPatientInfoOperationCompleted, userState);
        }
        
        private void OnGetPatientInfoOperationCompleted(object arg) {
            if ((this.GetPatientInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientInfoCompleted(this, new GetPatientInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetPrintMode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetPrintMode(string strAccessionNumber, string strStudyInstanceUID, int nMode) {
            object[] results = this.Invoke("SetPrintMode", new object[] {
                        strAccessionNumber,
                        strStudyInstanceUID,
                        nMode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetPrintModeAsync(string strAccessionNumber, string strStudyInstanceUID, int nMode) {
            this.SetPrintModeAsync(strAccessionNumber, strStudyInstanceUID, nMode, null);
        }
        
        /// <remarks/>
        public void SetPrintModeAsync(string strAccessionNumber, string strStudyInstanceUID, int nMode, object userState) {
            if ((this.SetPrintModeOperationCompleted == null)) {
                this.SetPrintModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPrintModeOperationCompleted);
            }
            this.InvokeAsync("SetPrintMode", new object[] {
                        strAccessionNumber,
                        strStudyInstanceUID,
                        nMode}, this.SetPrintModeOperationCompleted, userState);
        }
        
        private void OnSetPrintModeOperationCompleted(object arg) {
            if ((this.SetPrintModeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPrintModeCompleted(this, new SetPrintModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NotifyReportInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int NotifyReportInfo(string patientName, string patientID, string accessionNumber, string studyInstanceUID, int reportStatus, string[] reportFileName) {
            object[] results = this.Invoke("NotifyReportInfo", new object[] {
                        patientName,
                        patientID,
                        accessionNumber,
                        studyInstanceUID,
                        reportStatus,
                        reportFileName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void NotifyReportInfoAsync(string patientName, string patientID, string accessionNumber, string studyInstanceUID, int reportStatus, string[] reportFileName) {
            this.NotifyReportInfoAsync(patientName, patientID, accessionNumber, studyInstanceUID, reportStatus, reportFileName, null);
        }
        
        /// <remarks/>
        public void NotifyReportInfoAsync(string patientName, string patientID, string accessionNumber, string studyInstanceUID, int reportStatus, string[] reportFileName, object userState) {
            if ((this.NotifyReportInfoOperationCompleted == null)) {
                this.NotifyReportInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyReportInfoOperationCompleted);
            }
            this.InvokeAsync("NotifyReportInfo", new object[] {
                        patientName,
                        patientID,
                        accessionNumber,
                        studyInstanceUID,
                        reportStatus,
                        reportFileName}, this.NotifyReportInfoOperationCompleted, userState);
        }
        
        private void OnNotifyReportInfoOperationCompleted(object arg) {
            if ((this.NotifyReportInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyReportInfoCompleted(this, new NotifyReportInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrintServerStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPrintServerStatus(out int error_code, out string error_description) {
            object[] results = this.Invoke("GetPrintServerStatus", new object[0]);
            error_code = ((int)(results[1]));
            error_description = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrintServerStatusAsync() {
            this.GetPrintServerStatusAsync(null);
        }
        
        /// <remarks/>
        public void GetPrintServerStatusAsync(object userState) {
            if ((this.GetPrintServerStatusOperationCompleted == null)) {
                this.GetPrintServerStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrintServerStatusOperationCompleted);
            }
            this.InvokeAsync("GetPrintServerStatus", new object[0], this.GetPrintServerStatusOperationCompleted, userState);
        }
        
        private void OnGetPrintServerStatusOperationCompleted(object arg) {
            if ((this.GetPrintServerStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrintServerStatusCompleted(this, new GetPrintServerStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreatePrintTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreatePrintTask(string patient_id, string patient_id_type, out string patient_name, out string print_task_id, out int warning_code, out string warning_description) {
            object[] results = this.Invoke("CreatePrintTask", new object[] {
                        patient_id,
                        patient_id_type});
            patient_name = ((string)(results[1]));
            print_task_id = ((string)(results[2]));
            warning_code = ((int)(results[3]));
            warning_description = ((string)(results[4]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePrintTaskAsync(string patient_id, string patient_id_type) {
            this.CreatePrintTaskAsync(patient_id, patient_id_type, null);
        }
        
        /// <remarks/>
        public void CreatePrintTaskAsync(string patient_id, string patient_id_type, object userState) {
            if ((this.CreatePrintTaskOperationCompleted == null)) {
                this.CreatePrintTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePrintTaskOperationCompleted);
            }
            this.InvokeAsync("CreatePrintTask", new object[] {
                        patient_id,
                        patient_id_type}, this.CreatePrintTaskOperationCompleted, userState);
        }
        
        private void OnCreatePrintTaskOperationCompleted(object arg) {
            if ((this.CreatePrintTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePrintTaskCompleted(this, new CreatePrintTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreatePrintTask2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreatePrintTask2(string patient_id, string patient_id_type, out string patient_name, out string print_task_id, out int warning_code, out string warning_description, out string extensions) {
            object[] results = this.Invoke("CreatePrintTask2", new object[] {
                        patient_id,
                        patient_id_type});
            patient_name = ((string)(results[1]));
            print_task_id = ((string)(results[2]));
            warning_code = ((int)(results[3]));
            warning_description = ((string)(results[4]));
            extensions = ((string)(results[5]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePrintTask2Async(string patient_id, string patient_id_type) {
            this.CreatePrintTask2Async(patient_id, patient_id_type, null);
        }
        
        /// <remarks/>
        public void CreatePrintTask2Async(string patient_id, string patient_id_type, object userState) {
            if ((this.CreatePrintTask2OperationCompleted == null)) {
                this.CreatePrintTask2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePrintTask2OperationCompleted);
            }
            this.InvokeAsync("CreatePrintTask2", new object[] {
                        patient_id,
                        patient_id_type}, this.CreatePrintTask2OperationCompleted, userState);
        }
        
        private void OnCreatePrintTask2OperationCompleted(object arg) {
            if ((this.CreatePrintTask2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePrintTask2Completed(this, new CreatePrintTask2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Print", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Print(string print_task_id, out int error_code, out string error_description) {
            object[] results = this.Invoke("Print", new object[] {
                        print_task_id});
            error_code = ((int)(results[1]));
            error_description = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void PrintAsync(string print_task_id) {
            this.PrintAsync(print_task_id, null);
        }
        
        /// <remarks/>
        public void PrintAsync(string print_task_id, object userState) {
            if ((this.PrintOperationCompleted == null)) {
                this.PrintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintOperationCompleted);
            }
            this.InvokeAsync("Print", new object[] {
                        print_task_id}, this.PrintOperationCompleted, userState);
        }
        
        private void OnPrintOperationCompleted(object arg) {
            if ((this.PrintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintCompleted(this, new PrintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrintTaskStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPrintTaskStatus(string print_task_id, out PrintTask task_status) {
            object[] results = this.Invoke("GetPrintTaskStatus", new object[] {
                        print_task_id});
            task_status = ((PrintTask)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrintTaskStatusAsync(string print_task_id) {
            this.GetPrintTaskStatusAsync(print_task_id, null);
        }
        
        /// <remarks/>
        public void GetPrintTaskStatusAsync(string print_task_id, object userState) {
            if ((this.GetPrintTaskStatusOperationCompleted == null)) {
                this.GetPrintTaskStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrintTaskStatusOperationCompleted);
            }
            this.InvokeAsync("GetPrintTaskStatus", new object[] {
                        print_task_id}, this.GetPrintTaskStatusOperationCompleted, userState);
        }
        
        private void OnGetPrintTaskStatusOperationCompleted(object arg) {
            if ((this.GetPrintTaskStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrintTaskStatusCompleted(this, new GetPrintTaskStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PrintTask {
        
        private string printTaskIdField;
        
        private int printStatusField;
        
        private int totalReportsField;
        
        private int totalImagesField;
        
        private int reportsLeftField;
        
        private int imagesLeftField;
        
        private int timeNeededField;
        
        private int errorCodeField;
        
        private string errorDescField;
        
        /// <remarks/>
        public string PrintTaskId {
            get {
                return this.printTaskIdField;
            }
            set {
                this.printTaskIdField = value;
            }
        }
        
        /// <remarks/>
        public int PrintStatus {
            get {
                return this.printStatusField;
            }
            set {
                this.printStatusField = value;
            }
        }
        
        /// <remarks/>
        public int TotalReports {
            get {
                return this.totalReportsField;
            }
            set {
                this.totalReportsField = value;
            }
        }
        
        /// <remarks/>
        public int TotalImages {
            get {
                return this.totalImagesField;
            }
            set {
                this.totalImagesField = value;
            }
        }
        
        /// <remarks/>
        public int ReportsLeft {
            get {
                return this.reportsLeftField;
            }
            set {
                this.reportsLeftField = value;
            }
        }
        
        /// <remarks/>
        public int ImagesLeft {
            get {
                return this.imagesLeftField;
            }
            set {
                this.imagesLeftField = value;
            }
        }
        
        /// <remarks/>
        public int TimeNeeded {
            get {
                return this.timeNeededField;
            }
            set {
                this.timeNeededField = value;
            }
        }
        
        /// <remarks/>
        public int ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorDesc {
            get {
                return this.errorDescField;
            }
            set {
                this.errorDescField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetPatientInfoCompletedEventHandler(object sender, GetPatientInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strReturnValue {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strPatientName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string strMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void SetPrintModeCompletedEventHandler(object sender, SetPrintModeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPrintModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetPrintModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void NotifyReportInfoCompletedEventHandler(object sender, NotifyReportInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NotifyReportInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NotifyReportInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetPrintServerStatusCompletedEventHandler(object sender, GetPrintServerStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrintServerStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrintServerStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int error_code {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string error_description {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void CreatePrintTaskCompletedEventHandler(object sender, CreatePrintTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePrintTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePrintTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string patient_name {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string print_task_id {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public int warning_code {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string warning_description {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void CreatePrintTask2CompletedEventHandler(object sender, CreatePrintTask2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePrintTask2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePrintTask2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string patient_name {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string print_task_id {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public int warning_code {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string warning_description {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string extensions {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void PrintCompletedEventHandler(object sender, PrintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int error_code {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string error_description {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetPrintTaskStatusCompletedEventHandler(object sender, GetPrintTaskStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrintTaskStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrintTaskStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public PrintTask task_status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PrintTask)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591