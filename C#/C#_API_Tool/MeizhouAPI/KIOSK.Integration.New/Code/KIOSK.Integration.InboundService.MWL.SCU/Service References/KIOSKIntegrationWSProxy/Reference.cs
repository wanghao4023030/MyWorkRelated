//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KIOSK.Integration.InboundService.MWL.SCU.KIOSKIntegrationWSProxy {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://tempuri.org", ConfigurationName="KIOSKIntegrationWSProxy.WSProxySoap")]
    public interface WSProxySoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryExamInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool QueryExamInfo(out string strExamInfoList, string strPatientName, string strPatientID, string strAccessionNumber, string strModality, string strStartDT, string strEndDT);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryExamInfoForMOZI", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string QueryExamInfoForMOZI(string strPatientID, string strAccessionNumber, string strModality, string strStartDT, string strEndDT);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateExamInfoForMOZI", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateExamInfoForMOZI(string strPatientID, string strAccessionNumber, string strModality, int iType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/QueryMWL", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool QueryMWL(string strPatientID, string strPatientName, string strAccessionNumber, string strModality, string strStudyDate, string strStudyTime, string strStudyStatusID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPatientInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool GetPatientInfo(out string strReturnValue, out string strPatientName, out string strMessage, string strTerminalInfo, string strCardType, string strCardNumber, string strReturnType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotifyStudyInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int NotifyStudyInfo(string strAccessionNumber, string strStudyInstanceUID, int iStudyType, int iStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NotifyReportInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool NotifyReportInfo();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WSProxySoapChannel : KIOSK.Integration.InboundService.MWL.SCU.KIOSKIntegrationWSProxy.WSProxySoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WSProxySoapClient : System.ServiceModel.ClientBase<KIOSK.Integration.InboundService.MWL.SCU.KIOSKIntegrationWSProxy.WSProxySoap>, KIOSK.Integration.InboundService.MWL.SCU.KIOSKIntegrationWSProxy.WSProxySoap {
        
        public WSProxySoapClient() {
        }
        
        public WSProxySoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WSProxySoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSProxySoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSProxySoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool QueryExamInfo(out string strExamInfoList, string strPatientName, string strPatientID, string strAccessionNumber, string strModality, string strStartDT, string strEndDT) {
            return base.Channel.QueryExamInfo(out strExamInfoList, strPatientName, strPatientID, strAccessionNumber, strModality, strStartDT, strEndDT);
        }
        
        public string QueryExamInfoForMOZI(string strPatientID, string strAccessionNumber, string strModality, string strStartDT, string strEndDT) {
            return base.Channel.QueryExamInfoForMOZI(strPatientID, strAccessionNumber, strModality, strStartDT, strEndDT);
        }
        
        public string UpdateExamInfoForMOZI(string strPatientID, string strAccessionNumber, string strModality, int iType) {
            return base.Channel.UpdateExamInfoForMOZI(strPatientID, strAccessionNumber, strModality, iType);
        }
        
        public bool QueryMWL(string strPatientID, string strPatientName, string strAccessionNumber, string strModality, string strStudyDate, string strStudyTime, string strStudyStatusID) {
            return base.Channel.QueryMWL(strPatientID, strPatientName, strAccessionNumber, strModality, strStudyDate, strStudyTime, strStudyStatusID);
        }
        
        public bool GetPatientInfo(out string strReturnValue, out string strPatientName, out string strMessage, string strTerminalInfo, string strCardType, string strCardNumber, string strReturnType) {
            return base.Channel.GetPatientInfo(out strReturnValue, out strPatientName, out strMessage, strTerminalInfo, strCardType, strCardNumber, strReturnType);
        }
        
        public int NotifyStudyInfo(string strAccessionNumber, string strStudyInstanceUID, int iStudyType, int iStatus) {
            return base.Channel.NotifyStudyInfo(strAccessionNumber, strStudyInstanceUID, iStudyType, iStatus);
        }
        
        public bool NotifyReportInfo() {
            return base.Channel.NotifyReportInfo();
        }
    }
}
