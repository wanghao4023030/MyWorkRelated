<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.4 on win32)" generated="20191112 13:56:07.066" rpa="false">
<suite id="s1" name="SmokeTest" source="D:\PUMA_AUTO\RF_PUMA\PUMA\SmokeTest.robot">
<test id="s1-t1" name="SmokeTest_001_Core_4170_01.01.01 OCR Image process failed(9).">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step1 \nDescription:\n Create a patient in RIS or local table in PS.\nExpected:\n The patient can create successfully.</arg>
</arguments>
<msg timestamp="20191112 13:56:08.051" level="INFO">Step1 
Description:
Create a patient in RIS or local table in PS.
Expected:
The patient can create successfully.</msg>
<status status="PASS" starttime="20191112 13:56:08.051" endtime="20191112 13:56:08.051"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191112 13:56:08.051" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 13:56:08.066" level="DEBUG">http://10.112.20.84:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191112 13:56:08.066" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-12 13:56:08.050863", "UpdateDT": "2019-11-12 13:56:08.050863", "PatientID": "P20191112135608050863", "AccessionNumber": "A20191112135608050863", "StudyInstanceUID": "UID20191112135608050863", "NameCN": "CN20191112135608050863", "NameEN": "EN20191112135608050863", "Gender": "M", "Birthday": "2017-11-12", "Modality": "OT", "ModalityName": "MR", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-12 13:56:08.050863", "RegisterDT": "2019-11-12 13:56:08.050863", "ExamDT": "2019-11-12 13:56:08.050863", "ReportDT": "2019-11-12 13:56:08.050863", "SubmitDT": "2019-11-12 13:56:08.050863", "ApproveDT": "2019-11-12 13:56:08.050863", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191112135608050863", "ExamBodyPart": "Head", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191112 13:56:08.066" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-12 13:56:08.050863", "UpdateDT": "2019-11-12 13:56:08.050863", "PatientID": "P20191112135608050863", "AccessionNumber": "A20191112135608050863", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191112 13:56:08.051" endtime="20191112 13:56:08.066"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191112 13:56:08.066" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-12 13:56:08.050863', 'UpdateDT': '2019-11-12 13:56:08.050863', 'PatientID': 'P20191112135608050863', 'AccessionNumber': 'A20191112135608050863', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191112 13:56:08.066" endtime="20191112 13:56:08.066"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191112 13:56:08.113" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191112 13:56:08.066" endtime="20191112 13:56:08.113"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191112 13:56:08.160" level="INFO">${patientID} = ['P20191112135608050863']</msg>
<status status="PASS" starttime="20191112 13:56:08.113" endtime="20191112 13:56:08.160"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191112 13:56:08.191" level="INFO">${Accessionnumber} = ['A20191112135608050863']</msg>
<status status="PASS" starttime="20191112 13:56:08.160" endtime="20191112 13:56:08.191"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 13:56:08.191" endtime="20191112 13:56:08.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step2 \n Description:\n1.Prepare a DICOM file whose patientid and accession number is same as that in step1.\n 2.The film is configured in OCR config tool in PS include PID&amp;ACCN, but not ROI rule.\n 3.The grammar configuration should meet the DICOM file that means the film will not recognize successfully.\n Expected: \n The preparation can execute successfully.</arg>
</arguments>
<msg timestamp="20191112 13:56:08.191" level="INFO">Step2 
Description:
1.Prepare a DICOM file whose patientid and accession number is same as that in step1.
2.The film is configured in OCR config tool in PS include PID&amp;ACCN, but not ROI rule.
3.The grammar configuration should meet the DICOM file that means the film will not recognize successfully.
Expected: 
The preparation can execute successfully.</msg>
<status status="PASS" starttime="20191112 13:56:08.191" endtime="20191112 13:56:08.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step3\n Description:\n 1. Delete the patient information from RIS or local table in step1. \nExpected:\n The patient can delete successfully.</arg>
</arguments>
<msg timestamp="20191112 13:56:08.191" level="INFO">Step3
Description:
1. Delete the patient information from RIS or local table in step1. 
Expected:
The patient can delete successfully.</msg>
<status status="PASS" starttime="20191112 13:56:08.191" endtime="20191112 13:56:08.191"></status>
</kw>
<kw name="Patient Delete By Pid Accn" library="PUMA_PatientLibrary">
<doc>patient delete by pid accn</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${delete_result}</var>
</assign>
<msg timestamp="20191112 13:56:08.488" level="INFO">Patient.patient_delete_by_pid_accn: [1] records will deleted.</msg>
<msg timestamp="20191112 13:56:08.488" level="INFO">${delete_result} = True</msg>
<status status="PASS" starttime="20191112 13:56:08.191" endtime="20191112 13:56:08.488"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${delete_result} == True</arg>
<arg>The patient delete successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 13:56:08.488" endtime="20191112 13:56:08.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4 \n Description:\n 1. Print the DICOM file(film) to PS. \nExpected:\n The DICOM file(film) can print to PS successfully.</arg>
</arguments>
<msg timestamp="20191112 13:56:08.488" level="INFO">Step 4 
Description:
1. Print the DICOM file(film) to PS. 
Expected:
The DICOM file(film) can print to PS successfully.</msg>
<status status="PASS" starttime="20191112 13:56:08.488" endtime="20191112 13:56:08.488"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191112 13:56:49.785" level="INFO">Film.film_create_film_with_sample:Film archived failed: {"Status": false, "PatientID": "P20191112135608050863", "AccessionNumber": "A20191112135608050863", "FilmSessionLable": "20191112135608488366", "DeliveryJob_status": 9, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191112 13:56:49.785" level="INFO">${Print_res} = {"Status": false, "PatientID": "P20191112135608050863", "AccessionNumber": "A20191112135608050863", "FilmSessionLable": "20191112135608488366", "DeliveryJob_status": 9, "WaterMark_Path": "D:\\PUMA_AUT...</msg>
<status status="PASS" starttime="20191112 13:56:08.488" endtime="20191112 13:56:49.785"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191112 13:56:49.785" level="INFO">${Print_Res_Json} = {'Status': False, 'PatientID': 'P20191112135608050863', 'AccessionNumber': 'A20191112135608050863', 'FilmSessionLable': '20191112135608488366', 'DeliveryJob_status': 9, 'WaterMark_Path': 'D:\\PUMA_AUT...</msg>
<status status="PASS" starttime="20191112 13:56:49.785" endtime="20191112 13:56:49.785"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191112 13:56:49.817" level="INFO">${Print_Result} = [False]</msg>
<status status="PASS" starttime="20191112 13:56:49.785" endtime="20191112 13:56:49.817"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${Print_Result}</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<msg timestamp="20191112 13:56:49.817" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20191112 13:56:49.817" endtime="20191112 13:56:49.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5\n Description:\n 1. Wait the OCR process finished. The default time is '600'. \n2. Check the jobstatus in printer.dbo.deliveryjob table.\nNote: query the records with filmsessionlabel. \ \ \nExpected: \nThe value should be 9 means grammar configured but identify failed.</arg>
</arguments>
<msg timestamp="20191112 13:56:49.817" level="INFO">Step 5
Description:
1. Wait the OCR process finished. The default time is '600'. 
2. Check the jobstatus in printer.dbo.deliveryjob table.
Note: query the records with filmsessionlabel.   
Expected: 
The value should be 9 means grammar configured but identify failed.</msg>
<status status="PASS" starttime="20191112 13:56:49.817" endtime="20191112 13:56:49.817"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>DeliveryJob_status</arg>
</arguments>
<assign>
<var>${Job_status}</var>
</assign>
<msg timestamp="20191112 13:56:49.863" level="INFO">${Job_status} = [9]</msg>
<status status="PASS" starttime="20191112 13:56:49.817" endtime="20191112 13:56:49.863"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Job_status}[0]</arg>
</arguments>
<assign>
<var>${Job_status}</var>
</assign>
<msg timestamp="20191112 13:56:49.863" level="DEBUG">Argument types are:
&lt;class 'int'&gt;</msg>
<msg timestamp="20191112 13:56:49.863" level="INFO">${Job_status} = 9</msg>
<status status="PASS" starttime="20191112 13:56:49.863" endtime="20191112 13:56:49.863"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${Job_status}</arg>
<arg>9</arg>
<arg>The film`s jobstatus in printer.dbo.DeliveryJob is 9.</arg>
</arguments>
<msg timestamp="20191112 13:56:49.863" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 13:56:49.863" endtime="20191112 13:56:49.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6:\nDescription\n1. Query the records in wggc.dbo.afp_filminfo with patient id and accession number.\nExpected:\n There is no record insert into this table.</arg>
</arguments>
<msg timestamp="20191112 13:56:49.863" level="INFO">Step 6:
Description
1. Query the records in wggc.dbo.afp_filminfo with patient id and accession number.
Expected:
There is no record insert into this table.</msg>
<status status="PASS" starttime="20191112 13:56:49.863" endtime="20191112 13:56:49.863"></status>
</kw>
<kw name="Film Check Archive In Filminfo Table" library="PUMA_FilmLibrary">
<doc>film_check_archive_in_filminfo_table</doc>
<assign>
<var>${Archive_Filminfo_Table_Result}</var>
</assign>
<msg timestamp="20191112 13:56:49.863" level="INFO">Film.film_check_archive_in_filminfo_table: Data exception!
Film.film_check_archive_in_filminfo_table:There is [0] records for patient[P20191112135608050863, A20191112135608050863] and filmsessionlable is [20191112135608488366]</msg>
<msg timestamp="20191112 13:56:49.863" level="INFO">${Archive_Filminfo_Table_Result} = False</msg>
<status status="PASS" starttime="20191112 13:56:49.863" endtime="20191112 13:56:49.863"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Archive_Filminfo_Table_Result} == False</arg>
<arg>There is no record insert into wggc.dbo.afp_filminfo table.</arg>
</arguments>
<status status="PASS" starttime="20191112 13:56:49.863" endtime="20191112 13:56:49.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 7:\nDescription:\n1. Query the records in wggc.dbo.afp_examinfo with patient id and accession number. \nExpected: \nThere is no record insert into this table.</arg>
</arguments>
<msg timestamp="20191112 13:56:49.863" level="INFO">Step 7:
Description:
1. Query the records in wggc.dbo.afp_examinfo with patient id and accession number. 
Expected: 
There is no record insert into this table.</msg>
<status status="PASS" starttime="20191112 13:56:49.863" endtime="20191112 13:56:49.863"></status>
</kw>
<kw name="Film Check Archive In Examinfo Table" library="PUMA_FilmLibrary">
<doc>film_check_archive_in_examinfo_table</doc>
<assign>
<var>${Archived_Examinfo_Table_result}</var>
</assign>
<msg timestamp="20191112 13:56:49.879" level="INFO">Film.film_check_archive_in_examinfo_table: There are no film records in wggc.dbo.Examinfo of patient [A20191112135608050863, P20191112135608050863]</msg>
<msg timestamp="20191112 13:56:49.879" level="INFO">${Archived_Examinfo_Table_result} = False</msg>
<status status="PASS" starttime="20191112 13:56:49.863" endtime="20191112 13:56:49.879"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Archived_Examinfo_Table_result} == False</arg>
<arg>There is no record insert into wggc.dbo.afp_examinfo table.</arg>
</arguments>
<status status="PASS" starttime="20191112 13:56:49.879" endtime="20191112 13:56:49.879"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191112 13:56:08.051" endtime="20191112 13:56:49.879" critical="yes"></status>
</test>
<test id="s1-t2" name="SmokeTest_002_Core_4172_01.01.02 OCR Image process success(2).">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description:\n Create a patient in RIS or local table in PS.\nExpected:\n The patient can create successfully.</arg>
</arguments>
<msg timestamp="20191112 13:56:49.879" level="INFO">Step 1 
Description:
Create a patient in RIS or local table in PS.
Expected:
The patient can create successfully.</msg>
<status status="PASS" starttime="20191112 13:56:49.879" endtime="20191112 13:56:49.879"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191112 13:56:49.879" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 13:56:49.910" level="DEBUG">http://10.112.20.84:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191112 13:56:49.910" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-12 13:56:49.879043", "UpdateDT": "2019-11-12 13:56:49.879043", "PatientID": "P20191112135649879043", "AccessionNumber": "A20191112135649879043", "StudyInstanceUID": "UID20191112135649879043", "NameCN": "CN20191112135649879043", "NameEN": "EN20191112135649879043", "Gender": "M", "Birthday": "1950-11-29", "Modality": "XA", "ModalityName": "DR", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-12 13:56:49.879043", "RegisterDT": "2019-11-12 13:56:49.879043", "ExamDT": "2019-11-12 13:56:49.879043", "ReportDT": "2019-11-12 13:56:49.879043", "SubmitDT": "2019-11-12 13:56:49.879043", "ApproveDT": "2019-11-12 13:56:49.879043", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191112135649879043", "ExamBodyPart": "Neck", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191112 13:56:49.910" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-12 13:56:49.879043", "UpdateDT": "2019-11-12 13:56:49.879043", "PatientID": "P20191112135649879043", "AccessionNumber": "A20191112135649879043", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191112 13:56:49.879" endtime="20191112 13:56:49.910"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191112 13:56:49.910" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-12 13:56:49.879043', 'UpdateDT': '2019-11-12 13:56:49.879043', 'PatientID': 'P20191112135649879043', 'AccessionNumber': 'A20191112135649879043', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191112 13:56:49.910" endtime="20191112 13:56:49.910"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191112 13:56:49.957" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191112 13:56:49.910" endtime="20191112 13:56:49.957"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191112 13:56:49.988" level="INFO">${patientID} = ['P20191112135649879043']</msg>
<status status="PASS" starttime="20191112 13:56:49.957" endtime="20191112 13:56:49.988"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191112 13:56:50.020" level="INFO">${Accessionnumber} = ['A20191112135649879043']</msg>
<status status="PASS" starttime="20191112 13:56:49.988" endtime="20191112 13:56:50.020"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0] == True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 13:56:50.020" endtime="20191112 13:56:50.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description:\n1.Prepare a DICOM file whose patientid and accession number is same as that in step1.\n 2.The film is configured in OCR config tool in PS include PID&amp;ACCN, but not ROI rule.\n 3.The grammar configuration should meet the DICOM file that means the film will not recognize successfully.\n Expected: \n The preparation can execute successfully.</arg>
</arguments>
<msg timestamp="20191112 13:56:50.020" level="INFO">Step 2 
Description:
1.Prepare a DICOM file whose patientid and accession number is same as that in step1.
2.The film is configured in OCR config tool in PS include PID&amp;ACCN, but not ROI rule.
3.The grammar configuration should meet the DICOM file that means the film will not recognize successfully.
Expected: 
The preparation can execute successfully.</msg>
<status status="PASS" starttime="20191112 13:56:50.020" endtime="20191112 13:56:50.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3 \n Description:\n 1. Print the DICOM file(film) to PS. \nExpected:\n The DICOM file(film) can print to PS successfully.</arg>
</arguments>
<msg timestamp="20191112 13:56:50.020" level="INFO">Step 3 
Description:
1. Print the DICOM file(film) to PS. 
Expected:
The DICOM file(film) can print to PS successfully.</msg>
<status status="PASS" starttime="20191112 13:56:50.020" endtime="20191112 13:56:50.020"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191112 13:57:21.207" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191112135649879043", "AccessionNumber": "A20191112135649879043", "FilmSessionLable": "20191112135650019668", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191112 13:57:21.207" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191112135649879043", "AccessionNumber": "A20191112135649879043", "FilmSessionLable": "20191112135650019668", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191112 13:56:50.020" endtime="20191112 13:57:21.207"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191112 13:57:21.207" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191112135649879043', 'AccessionNumber': 'A20191112135649879043', 'FilmSessionLable': '20191112135650019668', 'DeliveryJob_status': 2, 'WaterMark_Path': 'D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191112 13:57:21.207" endtime="20191112 13:57:21.207"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191112 13:57:21.238" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191112 13:57:21.207" endtime="20191112 13:57:21.238"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${Print_Result}</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<msg timestamp="20191112 13:57:21.238" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20191112 13:57:21.238" endtime="20191112 13:57:21.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4\n Description:\n 1. Wait the OCR process finished. The default time is '600'. \n2. Check the jobstatus in printer.dbo.deliveryjob table.\nNote: query the records with filmsessionlabel. \ \ \nExpected: \nThe value should be 2 means have condifuration but indentfy successfully.</arg>
</arguments>
<msg timestamp="20191112 13:57:21.238" level="INFO">Step 4
Description:
1. Wait the OCR process finished. The default time is '600'. 
2. Check the jobstatus in printer.dbo.deliveryjob table.
Note: query the records with filmsessionlabel.   
Expected: 
The value should be 2 means have condifuration but indentfy successfully.</msg>
<status status="PASS" starttime="20191112 13:57:21.238" endtime="20191112 13:57:21.238"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>DeliveryJob_status</arg>
</arguments>
<assign>
<var>${Job_status}</var>
</assign>
<msg timestamp="20191112 13:57:21.285" level="INFO">${Job_status} = [2]</msg>
<status status="PASS" starttime="20191112 13:57:21.238" endtime="20191112 13:57:21.285"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Job_status}[0]</arg>
</arguments>
<assign>
<var>${Job_status}</var>
</assign>
<msg timestamp="20191112 13:57:21.285" level="DEBUG">Argument types are:
&lt;class 'int'&gt;</msg>
<msg timestamp="20191112 13:57:21.285" level="INFO">${Job_status} = 2</msg>
<status status="PASS" starttime="20191112 13:57:21.285" endtime="20191112 13:57:21.285"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${Job_status}</arg>
<arg>2</arg>
<arg>The film`s jobstatus in printer.dbo.DeliveryJob is 2.</arg>
</arguments>
<msg timestamp="20191112 13:57:21.285" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 13:57:21.285" endtime="20191112 13:57:21.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5:\nDescription\n1. Query the records in wggc.dbo.afp_filminfo with patient id and accession number.\nExpected:\n There is new record insert into this table..</arg>
</arguments>
<msg timestamp="20191112 13:57:21.285" level="INFO">Step 5:
Description
1. Query the records in wggc.dbo.afp_filminfo with patient id and accession number.
Expected:
There is new record insert into this table..</msg>
<status status="PASS" starttime="20191112 13:57:21.285" endtime="20191112 13:57:21.285"></status>
</kw>
<kw name="Film Check Archive In Filminfo Table" library="PUMA_FilmLibrary">
<doc>film_check_archive_in_filminfo_table</doc>
<assign>
<var>${Archive_Filminfo_Table_Result}</var>
</assign>
<msg timestamp="20191112 13:57:21.285" level="INFO">Film.film_check_archive_in_filminfo_table:There is [1] records for patient[P20191112135649879043, A20191112135649879043] and filmsessionlable is [20191112135650019668]</msg>
<msg timestamp="20191112 13:57:21.285" level="INFO">${Archive_Filminfo_Table_Result} = True</msg>
<status status="PASS" starttime="20191112 13:57:21.285" endtime="20191112 13:57:21.285"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Archive_Filminfo_Table_Result} == True</arg>
<arg>There is new record insert into this table.</arg>
</arguments>
<status status="PASS" starttime="20191112 13:57:21.285" endtime="20191112 13:57:21.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6:\nDescription:\n1. Query the records in wggc.dbo.afp_examinfo with patient id and accession number. \nExpected: \nThere is new record insert into this table..</arg>
</arguments>
<msg timestamp="20191112 13:57:21.285" level="INFO">Step 6:
Description:
1. Query the records in wggc.dbo.afp_examinfo with patient id and accession number. 
Expected: 
There is new record insert into this table..</msg>
<status status="PASS" starttime="20191112 13:57:21.285" endtime="20191112 13:57:21.285"></status>
</kw>
<kw name="Film Check Archive In Examinfo Table" library="PUMA_FilmLibrary">
<doc>film_check_archive_in_examinfo_table</doc>
<assign>
<var>${Archived_Examinfo_Table_result}</var>
</assign>
<msg timestamp="20191112 13:57:21.285" level="INFO">Film.film_check_archive_in_examinfo_table: There are [1] new records archived in wggc.dbo.Examinfo for film of patient [A20191112135649879043, P20191112135649879043]</msg>
<msg timestamp="20191112 13:57:21.285" level="INFO">${Archived_Examinfo_Table_result} = True</msg>
<status status="PASS" starttime="20191112 13:57:21.285" endtime="20191112 13:57:21.285"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Archived_Examinfo_Table_result} == True</arg>
<arg>There is new record insert into this table.</arg>
</arguments>
<status status="PASS" starttime="20191112 13:57:21.285" endtime="20191112 13:57:21.285"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191112 13:56:49.879" endtime="20191112 13:57:21.285" critical="yes"></status>
</test>
<test id="s1-t3" name="SmokeTest_003_Core_4713_02.01.01 Report receive from web service NotifyServer.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1\n Description:\n1. Create a patient with an exam in RIS or local table in PS.\nExpected:\n 1. The patient with an exam can create successfully.</arg>
</arguments>
<msg timestamp="20191112 13:57:21.285" level="INFO">Step 1
Description:
1. Create a patient with an exam in RIS or local table in PS.
Expected:
1. The patient with an exam can create successfully.</msg>
<status status="PASS" starttime="20191112 13:57:21.285" endtime="20191112 13:57:21.285"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191112 13:57:21.285" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 13:57:21.301" level="DEBUG">http://10.112.20.84:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191112 13:57:21.301" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-12 13:57:21.285336", "UpdateDT": "2019-11-12 13:57:21.285336", "PatientID": "P20191112135721285336", "AccessionNumber": "A20191112135721285336", "StudyInstanceUID": "UID20191112135721285336", "NameCN": "CN20191112135721285336", "NameEN": "EN20191112135721285336", "Gender": "M", "Birthday": "1926-12-05", "Modality": "DR", "ModalityName": "CT", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-12 13:57:21.285336", "RegisterDT": "2019-11-12 13:57:21.285336", "ExamDT": "2019-11-12 13:57:21.285336", "ReportDT": "2019-11-12 13:57:21.285336", "SubmitDT": "2019-11-12 13:57:21.285336", "ApproveDT": "2019-11-12 13:57:21.285336", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191112135721285336", "ExamBodyPart": "Neck", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191112 13:57:21.301" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-12 13:57:21.285336", "UpdateDT": "2019-11-12 13:57:21.285336", "PatientID": "P20191112135721285336", "AccessionNumber": "A20191112135721285336", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191112 13:57:21.285" endtime="20191112 13:57:21.301"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191112 13:57:21.301" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-12 13:57:21.285336', 'UpdateDT': '2019-11-12 13:57:21.285336', 'PatientID': 'P20191112135721285336', 'AccessionNumber': 'A20191112135721285336', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191112 13:57:21.301" endtime="20191112 13:57:21.301"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191112 13:57:21.348" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191112 13:57:21.301" endtime="20191112 13:57:21.348"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]</arg>
<arg>Patient create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 13:57:21.348" endtime="20191112 13:57:21.348"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191112 13:57:21.379" level="INFO">${patientID} = ['P20191112135721285336']</msg>
<status status="PASS" starttime="20191112 13:57:21.348" endtime="20191112 13:57:21.379"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${AccessionNumber}</var>
</assign>
<msg timestamp="20191112 13:57:21.410" level="INFO">${AccessionNumber} = ['A20191112135721285336']</msg>
<status status="PASS" starttime="20191112 13:57:21.379" endtime="20191112 13:57:21.410"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>NameCN</arg>
</arguments>
<assign>
<var>${PatientName}</var>
</assign>
<msg timestamp="20191112 13:57:21.457" level="INFO">${PatientName} = ['CN20191112135721285336']</msg>
<status status="PASS" starttime="20191112 13:57:21.410" endtime="20191112 13:57:21.457"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>formal</arg>
</arguments>
<assign>
<var>${Report_type}</var>
</assign>
<msg timestamp="20191112 13:57:21.457" level="INFO">${Report_type} = formal</msg>
<status status="PASS" starttime="20191112 13:57:21.457" endtime="20191112 13:57:21.457"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>E:\\PUMA_AUTO_Ref\\Cases\\SmokeTest\\4713\\Report\\Performance1.pdf,E:\\PUMA_AUTO_Ref\\Cases\\SmokeTest\\4713\\Report\\Performance1.pdf</arg>
</arguments>
<assign>
<var>${File_path}</var>
</assign>
<msg timestamp="20191112 13:57:21.457" level="INFO">${File_path} = E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf,E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf</msg>
<status status="PASS" starttime="20191112 13:57:21.457" endtime="20191112 13:57:21.457"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>,</arg>
</arguments>
<assign>
<var>${PDF_Password}</var>
</assign>
<msg timestamp="20191112 13:57:21.457" level="INFO">${PDF_Password} = ,</msg>
<status status="PASS" starttime="20191112 13:57:21.457" endtime="20191112 13:57:21.457"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191112 13:57:26.457" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191112 13:57:21.457" endtime="20191112 13:57:26.457"></status>
</kw>
<kw name="Report Create By Notifyserver Reportinfo" library="PUMA_ReportLibrary">
<doc>report_create_by_notifyserver_reportinfo</doc>
<arguments>
<arg>${PatientName}[0]</arg>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
<arg>${Report_type}</arg>
<arg>${File_path}</arg>
<arg>${PDF_Password}</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191112 13:57:26.457" level="DEBUG">reading WSDL at: http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl ...</msg>
<msg timestamp="20191112 13:57:26.457" level="DEBUG">opening (http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl)</msg>
<msg timestamp="20191112 13:57:26.473" level="DEBUG">b'&lt;?xml version="1.0" encoding="utf-8"?&gt;\r\n&lt;wsdl:definitions xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://carestream.org/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" targetNamespace="http://carestream.org/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"&gt;\r\n  &lt;wsdl:types&gt;\r\n    &lt;s:schema elementFormDefault="qualified" targetNamespace="http://carestream.org/"&gt;\r\n      &lt;s:element name="NotifyExamInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:complexType name="ExamInfo"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="CreateDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="UpdateDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="AccessionNumber" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="StudyInstanceUID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="NameCN" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="NameEN" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Modality" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ModalityName" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PatientType" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="VisitID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="RequestID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDepartment" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="RegisterDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ExamDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ReportDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="SubmitDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ApproveDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PDFReportURL" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="StudyStatus" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="OutHospitalNo" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="InHospitalNo" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PhysicalNumber" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ExamName" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ExamBodyPart" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="RefferingDepartment" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional0" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional1" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional2" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional3" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional4" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional5" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional6" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional7" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional8" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional9" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:element name="NotifyExamInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamInfoResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyReportFile"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="reportPath" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyReportFileResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportFileResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="SetPrintMode"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="printWaitTime" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="reportWaitTime" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="SetPrintModeResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyFilmInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyFilmInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyReportInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="tns:ArrayOfString" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:complexType name="ArrayOfString"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:element name="NotifyReportInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyExamReservationInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="base64ExamReservation" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyExamReservationInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamReservationInfoResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyPatientInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientInfo" type="tns:PatientInfoEx" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:complexType name="PatientInfoEx"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PatientName" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="LocalName" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Age" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="IdentifyCardNumber" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="MedicalCardNumber" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="SocialSecurityCardNumber" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:element name="NotifyPatientInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyPatientInfoResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryCloudFilmUrl"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryCloudFilmUrlResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlResult" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryCloudFilmUrlForQrCode"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryCloudFilmUrlForQrCodeResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlForQrCodeResult" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n    &lt;/s:schema&gt;\r\n  &lt;/wsdl:types&gt;\r\n  &lt;wsdl:message name="NotifyExamInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyExamInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportFileSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyReportFile" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportFileSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetPrintModeSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetPrintMode" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetPrintModeSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyExamReservationInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyExamReservationInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyPatientInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyPatientInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryCloudFilmUrlSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryCloudFilmUrlSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryCloudFilmUrlForQrCodeSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryCloudFilmUrlForQrCodeSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:portType name="NotifyServiceSoap"&gt;\r\n    &lt;wsdl:operation name="NotifyExamInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyExamInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyExamInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportFile"&gt;\r\n      &lt;wsdl:input message="tns:NotifyReportFileSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyReportFileSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;wsdl:input message="tns:SetPrintModeSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetPrintModeSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyFilmInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyFilmInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyReportInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyReportInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyExamReservationInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyExamReservationInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyExamReservationInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyPatientInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyPatientInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyPatientInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryCloudFilmUrl"&gt;\r\n      &lt;wsdl:input message="tns:QueryCloudFilmUrlSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryCloudFilmUrlSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryCloudFilmUrlForQrCode"&gt;\r\n      &lt;wsdl:input message="tns:QueryCloudFilmUrlForQrCodeSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryCloudFilmUrlForQrCodeSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:portType&gt;\r\n  &lt;wsdl:binding name="NotifyServiceSoap" type="tns:NotifyServiceSoap"&gt;\r\n    &lt;soap:binding transport="http://schemas.xmlsoap.org/soap/http" /&gt;\r\n    &lt;wsdl:operation name="NotifyExamInfo"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/NotifyExamInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportFile"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/NotifyReportFile" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/SetPrintMode" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/NotifyFilmInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/NotifyReportInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyExamReservationInfo"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/NotifyExamReservationInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyPatientInfo"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/NotifyPatientInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryCloudFilmUrl"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/QueryCloudFilmUrl" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryCloudFilmUrlForQrCode"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/QueryCloudFilmUrlForQrCode" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:binding&gt;\r\n  &lt;wsdl:binding name="NotifyServiceSoap12" type="tns:NotifyServiceSoap"&gt;\r\n    &lt;soap12:binding transport="http://schemas.xmlsoap.org/soap/http" /&gt;\r\n    &lt;wsdl:operation name="NotifyExamInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/NotifyExamInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportFile"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/NotifyReportFile" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/SetPrintMode" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/NotifyFilmInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/NotifyReportInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyExamReservationInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/NotifyExamReservationInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyPatientInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/NotifyPatientInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryCloudFilmUrl"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/QueryCloudFilmUrl" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryCloudFilmUrlForQrCode"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/QueryCloudFilmUrlForQrCode" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:binding&gt;\r\n  &lt;wsdl:service name="NotifyService"&gt;\r\n    &lt;wsdl:port name="NotifyServiceSoap" binding="tns:NotifyServiceSoap"&gt;\r\n      &lt;soap:address location="http://10.112.20.84/NotifyServer/NotifyService.asmx" /&gt;\r\n    &lt;/wsdl:port&gt;\r\n    &lt;wsdl:port name="NotifyServiceSoap12" binding="tns:NotifyServiceSoap12"&gt;\r\n      &lt;soap12:address location="http://10.112.20.84/NotifyServer/NotifyService.asmx" /&gt;\r\n    &lt;/wsdl:port&gt;\r\n  &lt;/wsdl:service&gt;\r\n&lt;/wsdl:definitions&gt;'
sax duration: 15 (ms)</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441070, convert type="tns:ExamInfo" to ('ExamInfo', 'http://carestream.org/')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x44410d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441110, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441130, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441150, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441170, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x44411b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x44411d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x44411f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441210, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441190, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441230, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441250, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441270, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441290, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x44412b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x44412d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x44412f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441310, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441330, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441350, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441370, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441390, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x44413b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x44413d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x44413f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441410, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441430, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441450, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441470, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441490, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x44414b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x44414d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x44414f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441510, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441530, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441550, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441570, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441590, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x44415b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441610, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441690, convert type="tns:ExamInfo" to ('ExamInfo', 'http://carestream.org/')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x44416f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441710, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441730, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441790, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441810, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441890, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x44418b0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x44418d0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x44418f0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441910, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x44419b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441a10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x44419f0, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441ab0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441b30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441b50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441b70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441b90, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441bd0, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://carestream.org/')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441bf0, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://carestream.org/')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441b10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441c70, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441cf0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441d70, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441df0, convert type="tns:PatientInfoEx" to ('PatientInfoEx', 'http://carestream.org/')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441e50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441e90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441eb0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441ed0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441ef0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441f30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441f50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441f70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441f90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441f10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x4441fb0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x444a030, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x444a0b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x444a110, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x444a150, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x444a1d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x444a230, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.488" level="DEBUG">Element:0x444a270, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">loaded:

schema collection
   Schema:0x4429f90
   (raw)
      &lt;s:schema elementFormDefault="qualified" targetNamespace="http://carestream.org/"&gt;
         &lt;s:element name="NotifyExamInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ExamInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="CreateDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="UpdateDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="AccessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="StudyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="NameCN" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="NameEN" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Modality" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ModalityName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientType" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="VisitID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDepartment" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RegisterDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ReportDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="SubmitDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ApproveDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PDFReportURL" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="StudyStatus" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="OutHospitalNo" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="InHospitalNo" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PhysicalNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamBodyPart" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RefferingDepartment" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional0" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional1" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional2" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional3" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional4" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional5" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional6" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional7" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional8" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional9" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyExamInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportFile"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportPath" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportFileResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportFileResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetPrintMode"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="printWaitTime" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportWaitTime" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetPrintModeResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyFilmInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyFilmInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="tns:ArrayOfString"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ArrayOfString"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyReportInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyExamReservationInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="base64ExamReservation" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyExamReservationInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamReservationInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyPatientInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientInfo" type="tns:PatientInfoEx"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="PatientInfoEx"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="LocalName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Age" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="IdentifyCardNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="MedicalCardNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="SocialSecurityCardNumber" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyPatientInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyPatientInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrl"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlForQrCode"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlForQrCodeResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlForQrCodeResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
      &lt;/s:schema&gt;
   (model)
      &lt;Element:0x4429dd0 name="NotifyExamInfo"&gt;
         &lt;Complex:0x4429fd0&gt;
            &lt;Sequence:0x4441030&gt;
               &lt;Element:0x4441070 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x4429ff0 name="ExamInfo"&gt;
         &lt;Sequence:0x4441050&gt;
            &lt;Element:0x44410d0 name="CreateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441110 name="UpdateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441130 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441150 name="AccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441170 name="StudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x44411b0 name="NameCN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x44411d0 name="NameEN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x44411f0 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441210 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441190 name="Modality" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441230 name="ModalityName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441250 name="PatientType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441270 name="VisitID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441290 name="RequestID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x44412b0 name="RequestDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x44412d0 name="RequestDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x44412f0 name="RegisterDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441310 name="ExamDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441330 name="ReportDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441350 name="SubmitDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441370 name="ApproveDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441390 name="PDFReportURL" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x44413b0 name="StudyStatus" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x44413d0 name="OutHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x44413f0 name="InHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441410 name="PhysicalNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441430 name="ExamName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441450 name="ExamBodyPart" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441470 name="RefferingDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441490 name="Optional0" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x44414b0 name="Optional1" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x44414d0 name="Optional2" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x44414f0 name="Optional3" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441510 name="Optional4" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441530 name="Optional5" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441550 name="Optional6" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441570 name="Optional7" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441590 name="Optional8" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x44415b0 name="Optional9" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x4441090 name="NotifyExamInfoResponse"&gt;
         &lt;Complex:0x44410b0&gt;
            &lt;Sequence:0x44410f0&gt;
               &lt;Element:0x4441610 name="NotifyExamInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x44415d0 name="NotifyReportFile"&gt;
         &lt;Complex:0x44415f0&gt;
            &lt;Sequence:0x4441670&gt;
               &lt;Element:0x4441690 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
               &lt;Element:0x44416f0 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4441710 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4441730 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4441630 name="NotifyReportFileResponse"&gt;
         &lt;Complex:0x44416b0&gt;
            &lt;Sequence:0x44416d0&gt;
               &lt;Element:0x4441790 name="NotifyReportFileResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4441750 name="SetPrintMode"&gt;
         &lt;Complex:0x4441770&gt;
            &lt;Sequence:0x44417f0&gt;
               &lt;Element:0x4441810 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4441890 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x44418b0 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x44418d0 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x44418f0 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x44417b0 name="SetPrintModeResponse"&gt;
         &lt;Complex:0x44417d0&gt;
            &lt;Sequence:0x4441870&gt;
               &lt;Element:0x4441910 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4441830 name="NotifyFilmInfo"&gt;
         &lt;Complex:0x4441930&gt;
            &lt;Sequence:0x4441990&gt;
               &lt;Element:0x44419b0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4441a10 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4441950 name="NotifyFilmInfoResponse"&gt;
         &lt;Complex:0x4441650&gt;
            &lt;Sequence:0x44419d0&gt;
               &lt;Element:0x44419f0 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4441970 name="NotifyReportInfo"&gt;
         &lt;Complex:0x4441a30&gt;
            &lt;Sequence:0x4441a90&gt;
               &lt;Element:0x4441ab0 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4441b30 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4441b50 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4441b70 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4441b90 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4441bd0 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
               &lt;Element:0x4441bf0 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x4441a50 name="ArrayOfString"&gt;
         &lt;Sequence:0x4441a70&gt;
            &lt;Element:0x4441b10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x4441ad0 name="NotifyReportInfoResponse"&gt;
         &lt;Complex:0x4441c10&gt;
            &lt;Sequence:0x4441bb0&gt;
               &lt;Element:0x4441c70 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4441c30 name="NotifyExamReservationInfo"&gt;
         &lt;Complex:0x4441c50&gt;
            &lt;Sequence:0x4441cd0&gt;
               &lt;Element:0x4441cf0 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4441c90 name="NotifyExamReservationInfoResponse"&gt;
         &lt;Complex:0x4441cb0&gt;
            &lt;Sequence:0x4441d50&gt;
               &lt;Element:0x4441d70 name="NotifyExamReservationInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4441d10 name="NotifyPatientInfo"&gt;
         &lt;Complex:0x4441d30&gt;
            &lt;Sequence:0x4441dd0&gt;
               &lt;Element:0x4441df0 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x4441d90 name="PatientInfoEx"&gt;
         &lt;Sequence:0x4441db0&gt;
            &lt;Element:0x4441e50 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441e90 name="PatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441eb0 name="LocalName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441ed0 name="Age" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441ef0 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441f30 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441f50 name="Address" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441f70 name="IdentifyCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441f90 name="MedicalCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441f10 name="PhoneNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441fb0 name="SocialSecurityCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x4441e10 name="NotifyPatientInfoResponse"&gt;
         &lt;Complex:0x4441e30&gt;
            &lt;Sequence:0x4441e70&gt;
               &lt;Element:0x444a030 name="NotifyPatientInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4441fd0 name="QueryCloudFilmUrl"&gt;
         &lt;Complex:0x444a050&gt;
            &lt;Sequence:0x444a090&gt;
               &lt;Element:0x444a0b0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x444a110 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4441ff0 name="QueryCloudFilmUrlResponse"&gt;
         &lt;Complex:0x444a070&gt;
            &lt;Sequence:0x444a130&gt;
               &lt;Element:0x444a150 name="QueryCloudFilmUrlResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x444a0d0 name="QueryCloudFilmUrlForQrCode"&gt;
         &lt;Complex:0x444a0f0&gt;
            &lt;Sequence:0x444a1b0&gt;
               &lt;Element:0x444a1d0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x444a230 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x444a170 name="QueryCloudFilmUrlForQrCodeResponse"&gt;
         &lt;Complex:0x444a190&gt;
            &lt;Sequence:0x444a250&gt;
               &lt;Element:0x444a270 name="QueryCloudFilmUrlForQrCodeResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">MERGED:
Schema:0x4429f90
(raw)
   &lt;s:schema elementFormDefault="qualified" targetNamespace="http://carestream.org/"&gt;
      &lt;s:element name="NotifyExamInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ExamInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="CreateDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="UpdateDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="AccessionNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="StudyInstanceUID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="NameCN" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="NameEN" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Modality" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ModalityName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientType" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="VisitID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDepartment" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RegisterDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ReportDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="SubmitDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ApproveDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PDFReportURL" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="StudyStatus" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="OutHospitalNo" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="InHospitalNo" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PhysicalNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamBodyPart" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RefferingDepartment" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional0" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional1" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional2" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional3" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional4" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional5" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional6" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional7" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional8" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional9" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyExamInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportFile"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportPath" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportFileResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportFileResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetPrintMode"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="printWaitTime" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportWaitTime" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetPrintModeResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyFilmInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyFilmInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="tns:ArrayOfString"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ArrayOfString"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyReportInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyExamReservationInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="base64ExamReservation" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyExamReservationInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamReservationInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyPatientInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientInfo" type="tns:PatientInfoEx"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="PatientInfoEx"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="LocalName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Age" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="IdentifyCardNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="MedicalCardNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="SocialSecurityCardNumber" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyPatientInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyPatientInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrl"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlForQrCode"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlForQrCodeResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlForQrCodeResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
   &lt;/s:schema&gt;
(model)
   &lt;Element:0x4429dd0 name="NotifyExamInfo"&gt;
      &lt;Complex:0x4429fd0&gt;
         &lt;Sequence:0x4441030&gt;
            &lt;Element:0x4441070 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x4429ff0 name="ExamInfo"&gt;
      &lt;Sequence:0x4441050&gt;
         &lt;Element:0x44410d0 name="CreateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441110 name="UpdateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441130 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441150 name="AccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441170 name="StudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x44411b0 name="NameCN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x44411d0 name="NameEN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x44411f0 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441210 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441190 name="Modality" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441230 name="ModalityName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441250 name="PatientType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441270 name="VisitID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441290 name="RequestID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x44412b0 name="RequestDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x44412d0 name="RequestDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x44412f0 name="RegisterDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441310 name="ExamDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441330 name="ReportDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441350 name="SubmitDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441370 name="ApproveDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441390 name="PDFReportURL" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x44413b0 name="StudyStatus" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x44413d0 name="OutHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x44413f0 name="InHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441410 name="PhysicalNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441430 name="ExamName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441450 name="ExamBodyPart" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441470 name="RefferingDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441490 name="Optional0" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x44414b0 name="Optional1" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x44414d0 name="Optional2" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x44414f0 name="Optional3" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441510 name="Optional4" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441530 name="Optional5" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441550 name="Optional6" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441570 name="Optional7" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441590 name="Optional8" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x44415b0 name="Optional9" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4441090 name="NotifyExamInfoResponse"&gt;
      &lt;Complex:0x44410b0&gt;
         &lt;Sequence:0x44410f0&gt;
            &lt;Element:0x4441610 name="NotifyExamInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x44415d0 name="NotifyReportFile"&gt;
      &lt;Complex:0x44415f0&gt;
         &lt;Sequence:0x4441670&gt;
            &lt;Element:0x4441690 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
            &lt;Element:0x44416f0 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441710 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441730 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4441630 name="NotifyReportFileResponse"&gt;
      &lt;Complex:0x44416b0&gt;
         &lt;Sequence:0x44416d0&gt;
            &lt;Element:0x4441790 name="NotifyReportFileResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4441750 name="SetPrintMode"&gt;
      &lt;Complex:0x4441770&gt;
         &lt;Sequence:0x44417f0&gt;
            &lt;Element:0x4441810 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441890 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x44418b0 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x44418d0 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x44418f0 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x44417b0 name="SetPrintModeResponse"&gt;
      &lt;Complex:0x44417d0&gt;
         &lt;Sequence:0x4441870&gt;
            &lt;Element:0x4441910 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4441830 name="NotifyFilmInfo"&gt;
      &lt;Complex:0x4441930&gt;
         &lt;Sequence:0x4441990&gt;
            &lt;Element:0x44419b0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441a10 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4441950 name="NotifyFilmInfoResponse"&gt;
      &lt;Complex:0x4441650&gt;
         &lt;Sequence:0x44419d0&gt;
            &lt;Element:0x44419f0 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4441970 name="NotifyReportInfo"&gt;
      &lt;Complex:0x4441a30&gt;
         &lt;Sequence:0x4441a90&gt;
            &lt;Element:0x4441ab0 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441b30 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441b50 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441b70 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441b90 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4441bd0 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
            &lt;Element:0x4441bf0 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x4441a50 name="ArrayOfString"&gt;
      &lt;Sequence:0x4441a70&gt;
         &lt;Element:0x4441b10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4441ad0 name="NotifyReportInfoResponse"&gt;
      &lt;Complex:0x4441c10&gt;
         &lt;Sequence:0x4441bb0&gt;
            &lt;Element:0x4441c70 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4441c30 name="NotifyExamReservationInfo"&gt;
      &lt;Complex:0x4441c50&gt;
         &lt;Sequence:0x4441cd0&gt;
            &lt;Element:0x4441cf0 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4441c90 name="NotifyExamReservationInfoResponse"&gt;
      &lt;Complex:0x4441cb0&gt;
         &lt;Sequence:0x4441d50&gt;
            &lt;Element:0x4441d70 name="NotifyExamReservationInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4441d10 name="NotifyPatientInfo"&gt;
      &lt;Complex:0x4441d30&gt;
         &lt;Sequence:0x4441dd0&gt;
            &lt;Element:0x4441df0 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x4441d90 name="PatientInfoEx"&gt;
      &lt;Sequence:0x4441db0&gt;
         &lt;Element:0x4441e50 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441e90 name="PatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441eb0 name="LocalName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441ed0 name="Age" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441ef0 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441f30 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441f50 name="Address" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441f70 name="IdentifyCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441f90 name="MedicalCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441f10 name="PhoneNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4441fb0 name="SocialSecurityCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4441e10 name="NotifyPatientInfoResponse"&gt;
      &lt;Complex:0x4441e30&gt;
         &lt;Sequence:0x4441e70&gt;
            &lt;Element:0x444a030 name="NotifyPatientInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4441fd0 name="QueryCloudFilmUrl"&gt;
      &lt;Complex:0x444a050&gt;
         &lt;Sequence:0x444a090&gt;
            &lt;Element:0x444a0b0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x444a110 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4441ff0 name="QueryCloudFilmUrlResponse"&gt;
      &lt;Complex:0x444a070&gt;
         &lt;Sequence:0x444a130&gt;
            &lt;Element:0x444a150 name="QueryCloudFilmUrlResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x444a0d0 name="QueryCloudFilmUrlForQrCode"&gt;
      &lt;Complex:0x444a0f0&gt;
         &lt;Sequence:0x444a1b0&gt;
            &lt;Element:0x444a1d0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x444a230 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x444a170 name="QueryCloudFilmUrlForQrCodeResponse"&gt;
      &lt;Complex:0x444a190&gt;
         &lt;Sequence:0x444a250&gt;
            &lt;Element:0x444a270 name="QueryCloudFilmUrlForQrCodeResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x4429dd0 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('NotifyExamInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4441090 name="NotifyExamInfoResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x44415d0 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('NotifyReportFileResponse', 'http://carestream.org/'), found as: &lt;Element:0x4441630 name="NotifyReportFileResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4441750 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x44417b0 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x4441830 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('NotifyFilmInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4441950 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x4441970 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('NotifyReportInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4441ad0 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x4441c30 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('NotifyExamReservationInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4441c90 name="NotifyExamReservationInfoResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x4441d10 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('NotifyPatientInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4441e10 name="NotifyPatientInfoResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x4441fd0 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('QueryCloudFilmUrlResponse', 'http://carestream.org/'), found as: &lt;Element:0x4441ff0 name="QueryCloudFilmUrlResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x444a0d0 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/'), found as: &lt;Element:0x444a170 name="QueryCloudFilmUrlForQrCodeResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x4429dd0 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('NotifyExamInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4441090 name="NotifyExamInfoResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x44415d0 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('NotifyReportFileResponse', 'http://carestream.org/'), found as: &lt;Element:0x4441630 name="NotifyReportFileResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4441750 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x44417b0 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x4441830 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('NotifyFilmInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4441950 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x4441970 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('NotifyReportInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4441ad0 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x4441c30 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('NotifyExamReservationInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4441c90 name="NotifyExamReservationInfoResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x4441d10 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('NotifyPatientInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4441e10 name="NotifyPatientInfoResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x4441fd0 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('QueryCloudFilmUrlResponse', 'http://carestream.org/'), found as: &lt;Element:0x4441ff0 name="QueryCloudFilmUrlResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x444a0d0 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191112 13:57:26.504" level="DEBUG">('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/'), found as: &lt;Element:0x444a170 name="QueryCloudFilmUrlForQrCodeResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">WSDL at 'http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl' loaded:
(Definitions){
   id = "Definitions:0x41581d0"
   options = Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x0417E970&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x03CD8890&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x04158170&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x03CD8890&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x0417EE10&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
Linked:
Definitions:
	proxy: classes=(&lt;class 'dict'&gt;,), default={}
	timeout: classes=(&lt;class 'int'&gt;, &lt;class 'float'&gt;), default=90
	headers: classes=(&lt;class 'dict'&gt;,), default={}
	username: classes=(&lt;class 'str'&gt;,), default=None
	password: classes=(&lt;class 'str'&gt;,), default=None
Content:
	('proxy', {})
	('timeout', 90)
	('headers', {})
	('username', None)
	('password', None)
Linked:
Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x0417E970&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x03CD8890&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x04158170&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x03CD8890&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x0417EE10&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
   url = "http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl"
   tns[] = 
      "tns",
      "http://carestream.org/",
   types[] = 
      (Types){
         definitions = (Definitions)...
      },
   schema = "&lt;Schema:0x4429f90 tns="http://carestream.org/"/&gt;"
   imports[] = &lt;empty&gt;
   messages = 
      {
         (NotifyExamInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamInfoSoapIn"
               qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamInfoSoapOut"
               qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportFileSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportFileSoapIn"
               qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportFile', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportFileSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportFileSoapOut"
               qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "SetPrintModeSoapIn"
               qname = "(SetPrintModeSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('SetPrintMode', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "SetPrintModeSoapOut"
               qname = "(SetPrintModeSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('SetPrintModeResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapIn"
               qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyFilmInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapOut"
               qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapIn"
               qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapOut"
               qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamReservationInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamReservationInfoSoapIn"
               qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamReservationInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamReservationInfoSoapOut"
               qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyPatientInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyPatientInfoSoapIn"
               qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyPatientInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyPatientInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyPatientInfoSoapOut"
               qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlSoapIn"
               qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlSoapOut"
               qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlForQrCodeSoapIn"
               qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlForQrCodeSoapOut"
               qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
      }
   port_types = 
      {
         (NotifyServiceSoap, http://carestream.org/, ) = 
            (PortType){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyExamInfoSoapIn"
                                 qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyExamInfoSoapOut"
                                 qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportFileSoapIn"
                                 qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportFile', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportFileSoapOut"
                                 qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "SetPrintModeSoapIn"
                                 qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('SetPrintMode', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetPrintModeSoapOut"
                                 qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyFilmInfoSoapIn"
                                 qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyFilmInfoSoapOut"
                                 qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportInfoSoapIn"
                                 qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportInfoSoapOut"
                                 qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyExamReservationInfoSoapIn"
                                 qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyExamReservationInfoSoapOut"
                                 qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyPatientInfoSoapIn"
                                 qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyPatientInfoSoapOut"
                                 qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "QueryCloudFilmUrlSoapIn"
                                 qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryCloudFilmUrlSoapOut"
                                 qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                 qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                 qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                  }
            }
      }
   bindings = 
      {
         (NotifyServiceSoap, http://carestream.org/, ) = 
            (Binding){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamInfoSoapIn"
                                       qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamInfoSoapOut"
                                       qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportFileSoapIn"
                                       qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFile', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportFileSoapOut"
                                       qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintMode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapIn"
                                       qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapOut"
                                       qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapIn"
                                       qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapOut"
                                       qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapIn"
                                       qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapOut"
                                       qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
         (NotifyServiceSoap12, http://carestream.org/, ) = 
            (Binding){
               name = "NotifyServiceSoap12"
               qname = "(NotifyServiceSoap12, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamInfoSoapIn"
                                       qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamInfoSoapOut"
                                       qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportFileSoapIn"
                                       qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFile', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportFileSoapOut"
                                       qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintMode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapIn"
                                       qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapOut"
                                       qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapIn"
                                       qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapOut"
                                       qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapIn"
                                       qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapOut"
                                       qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
      }
   services[] = 
      (Service){
         name = "NotifyService"
         qname = "(NotifyService, http://carestream.org/)"
         ports[] = 
            (Port){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportFile""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFile', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintMode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamReservationInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyPatientInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrl""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "NotifyServiceSoap"
                           qname = "(NotifyServiceSoap, http://carestream.org/)"
                           operations = 
                              {
                                 NotifyExamInfo = 
                                    (Operation){
                                       name = "NotifyExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamInfoSoapIn"
                                             qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamInfoSoapOut"
                                             qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportFile = 
                                    (Operation){
                                       name = "NotifyReportFile"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportFileSoapIn"
                                             qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportFileSoapOut"
                                             qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyExamReservationInfo = 
                                    (Operation){
                                       name = "NotifyExamReservationInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapIn"
                                             qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapOut"
                                             qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyPatientInfo = 
                                    (Operation){
                                       name = "NotifyPatientInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapIn"
                                             qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapOut"
                                             qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrl = 
                                    (Operation){
                                       name = "QueryCloudFilmUrl"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapIn"
                                             qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapOut"
                                             qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrlForQrCode = 
                                    (Operation){
                                       name = "QueryCloudFilmUrlForQrCode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
               methods = 
                  {
                     NotifyExamInfo = 
                        (Method){
                           name = "NotifyExamInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Method){
                           name = "NotifyReportFile"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Method){
                           name = "NotifyExamReservationInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Method){
                           name = "NotifyPatientInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Method){
                           name = "QueryCloudFilmUrl"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Method){
                           name = "QueryCloudFilmUrlForQrCode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
            (Port){
               name = "NotifyServiceSoap12"
               qname = "(NotifyServiceSoap12, http://carestream.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "NotifyServiceSoap12"
                     qname = "(NotifyServiceSoap12, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportFile""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFile', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintMode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamReservationInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyPatientInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrl""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "NotifyServiceSoap"
                           qname = "(NotifyServiceSoap, http://carestream.org/)"
                           operations = 
                              {
                                 NotifyExamInfo = 
                                    (Operation){
                                       name = "NotifyExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamInfoSoapIn"
                                             qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamInfoSoapOut"
                                             qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportFile = 
                                    (Operation){
                                       name = "NotifyReportFile"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportFileSoapIn"
                                             qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportFileSoapOut"
                                             qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyExamReservationInfo = 
                                    (Operation){
                                       name = "NotifyExamReservationInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapIn"
                                             qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapOut"
                                             qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyPatientInfo = 
                                    (Operation){
                                       name = "NotifyPatientInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapIn"
                                             qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapOut"
                                             qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrl = 
                                    (Operation){
                                       name = "QueryCloudFilmUrl"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapIn"
                                             qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapOut"
                                             qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrlForQrCode = 
                                    (Operation){
                                       name = "QueryCloudFilmUrlForQrCode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
               methods = 
                  {
                     NotifyExamInfo = 
                        (Method){
                           name = "NotifyExamInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Method){
                           name = "NotifyReportFile"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Method){
                           name = "NotifyExamReservationInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Method){
                           name = "NotifyPatientInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Method){
                           name = "QueryCloudFilmUrl"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Method){
                           name = "QueryCloudFilmUrlForQrCode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04429FB0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
      },
 }</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x4429dd0 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">method 'NotifyExamInfo' created: started: 1573538246 (running)</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x44415d0 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">method 'NotifyReportFile' created: started: 1573538246 (running)</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4441750 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">method 'SetPrintMode' created: started: 1573538246 (running)</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x4441830 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">method 'NotifyFilmInfo' created: started: 1573538246 (running)</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x4441970 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">method 'NotifyReportInfo' created: started: 1573538246 (running)</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x4441c30 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">method 'NotifyExamReservationInfo' created: started: 1573538246 (running)</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x4441d10 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">method 'NotifyPatientInfo' created: started: 1573538246 (running)</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x4441fd0 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">method 'QueryCloudFilmUrl' created: started: 1573538246 (running)</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x444a0d0 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">method 'QueryCloudFilmUrlForQrCode' created: started: 1573538246 (running)</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x4429dd0 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">method 'NotifyExamInfo' created: started: 1573538246 (running)</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x44415d0 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">method 'NotifyReportFile' created: started: 1573538246 (running)</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4441750 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">method 'SetPrintMode' created: started: 1573538246 (running)</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x4441830 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">method 'NotifyFilmInfo' created: started: 1573538246 (running)</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x4441970 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">method 'NotifyReportInfo' created: started: 1573538246 (running)</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x4441c30 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">method 'NotifyExamReservationInfo' created: started: 1573538246 (running)</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x4441d10 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">method 'NotifyPatientInfo' created: started: 1573538246 (running)</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x4441fd0 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">method 'QueryCloudFilmUrl' created: started: 1573538246 (running)</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x444a0d0 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">method 'QueryCloudFilmUrlForQrCode' created: started: 1573538246 (running)</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">Element:0x4441070, resolving: ('ExamInfo', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x2dfeaf0"
   ref[] = 
      "ExamInfo",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x4441070 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">('ExamInfo', 'http://carestream.org/'), found as: &lt;Complex:0x4429ff0 name="ExamInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">Element:0x4441cf0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2dfeaf0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4441cf0 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">TypeQuery:0x2dfeaf0, found builtin (string)</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">Element:0x44419b0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2dfeaf0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x44419b0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">TypeQuery:0x2dfeaf0, found builtin (string)</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">Element:0x4441a10, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2dfeaf0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4441a10 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:26.551" level="DEBUG">TypeQuery:0x2dfeaf0, found builtin (string)</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">Element:0x4441df0, resolving: ('PatientInfoEx', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x2dfeaf0"
   ref[] = 
      "PatientInfoEx",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x4441df0 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">('PatientInfoEx', 'http://carestream.org/'), found as: &lt;Complex:0x4441d90 name="PatientInfoEx" /&gt;</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">Element:0x4441690, resolving: ('ExamInfo', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x41589b0"
   ref[] = 
      "ExamInfo",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x4441690 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">('ExamInfo', 'http://carestream.org/'), found as: &lt;Complex:0x4429ff0 name="ExamInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">Element:0x44416f0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41589b0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x44416f0 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">TypeQuery:0x41589b0, found builtin (string)</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">Element:0x4441710, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41589b0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4441710 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">TypeQuery:0x41589b0, found builtin (int)</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">Element:0x4441730, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41589b0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4441730 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">TypeQuery:0x41589b0, found builtin (string)</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">Element:0x4441ab0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2dfeaf0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4441ab0 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">TypeQuery:0x2dfeaf0, found builtin (string)</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">Element:0x4441b30, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2dfeaf0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4441b30 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">TypeQuery:0x2dfeaf0, found builtin (string)</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">Element:0x4441b50, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2dfeaf0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4441b50 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">TypeQuery:0x2dfeaf0, found builtin (string)</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">Element:0x4441b70, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2dfeaf0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4441b70 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">TypeQuery:0x2dfeaf0, found builtin (string)</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">Element:0x4441b90, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2dfeaf0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4441b90 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">TypeQuery:0x2dfeaf0, found builtin (int)</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">Element:0x4441bd0, resolving: ('ArrayOfString', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x2dfeaf0"
   ref[] = 
      "ArrayOfString",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x4441bd0 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">('ArrayOfString', 'http://carestream.org/'), found as: &lt;Complex:0x4441a50 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">Element:0x4441bf0, resolving: ('ArrayOfString', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x2dfeaf0"
   ref[] = 
      "ArrayOfString",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x4441bf0 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">('ArrayOfString', 'http://carestream.org/'), found as: &lt;Complex:0x4441a50 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">Element:0x444a0b0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2dfeaf0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x444a0b0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">TypeQuery:0x2dfeaf0, found builtin (string)</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">Element:0x444a110, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2dfeaf0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x444a110 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">TypeQuery:0x2dfeaf0, found builtin (string)</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">Element:0x444a1d0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2dfeaf0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x444a1d0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">TypeQuery:0x2dfeaf0, found builtin (string)</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">Element:0x444a230, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2dfeaf0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x444a230 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">TypeQuery:0x2dfeaf0, found builtin (string)</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">Element:0x4441810, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2dfeaf0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4441810 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">TypeQuery:0x2dfeaf0, found builtin (string)</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">Element:0x4441890, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2dfeaf0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4441890 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">TypeQuery:0x2dfeaf0, found builtin (string)</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">Element:0x44418b0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2dfeaf0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x44418b0 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">TypeQuery:0x2dfeaf0, found builtin (int)</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">Element:0x44418d0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2dfeaf0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x44418d0 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">TypeQuery:0x2dfeaf0, found builtin (int)</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">Element:0x44418f0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x2dfeaf0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x44418f0 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">TypeQuery:0x2dfeaf0, found builtin (int)</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">searching schema for (ArrayOfString)</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">('ArrayOfString', http://carestream.org/), found as: &lt;Complex:0x4441a50 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">found (ArrayOfString) as (&lt;Complex:0x4441a50 name="ArrayOfString" /&gt;)</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">Element:0x4441b10, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41581b0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4441b10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">TypeQuery:0x41581b0, found builtin (string)</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">ArrayOfString created: 0 (ms)</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">searching schema for (ArrayOfString)</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">('ArrayOfString', http://carestream.org/), found as: &lt;Complex:0x4441a50 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">found (ArrayOfString) as (&lt;Complex:0x4441a50 name="ArrayOfString" /&gt;)</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">ArrayOfString created: 0 (ms)</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x4441970 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x4441970 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">processing:
(Content){
   tag = "patientName"
   value = "CN20191112135721285336"
   type = &lt;Element:0x4441ab0 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4456170 /&gt;
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x04456AD0&gt;
content:
(Content){
   tag = "patientName"
   value = "CN20191112135721285336"
   type = &lt;Element:0x4441ab0 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4456170 /&gt;
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">starting content:
(Content){
   tag = "patientName"
   value = "CN20191112135721285336"
   type = &lt;Element:0x4441ab0 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4456170 /&gt;
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04456B10&gt;)
&lt;suds.resolver.Frame object at 0x04456B10&gt;</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">created - node:
&lt;tns:patientName xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">ending content:
(Content){
   tag = "patientName"
   value = "CN20191112135721285336"
   type = &lt;Element:0x4441ab0 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4456170 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04456B10&gt;)
</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">processing:
(Content){
   tag = "patientID"
   value = "P20191112135721285336"
   type = &lt;Element:0x4441b30 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4456270 /&gt;
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x04456DB0&gt;
content:
(Content){
   tag = "patientID"
   value = "P20191112135721285336"
   type = &lt;Element:0x4441b30 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4456270 /&gt;
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">starting content:
(Content){
   tag = "patientID"
   value = "P20191112135721285336"
   type = &lt;Element:0x4441b30 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4456270 /&gt;
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04456DF0&gt;)
&lt;suds.resolver.Frame object at 0x04456DF0&gt;</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">created - node:
&lt;tns:patientID xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">ending content:
(Content){
   tag = "patientID"
   value = "P20191112135721285336"
   type = &lt;Element:0x4441b30 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4456270 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04456DF0&gt;)
</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">processing:
(Content){
   tag = "accessionNumber"
   value = "A20191112135721285336"
   type = &lt;Element:0x4441b50 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x44561d0 /&gt;
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x044720D0&gt;
content:
(Content){
   tag = "accessionNumber"
   value = "A20191112135721285336"
   type = &lt;Element:0x4441b50 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x44561d0 /&gt;
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">starting content:
(Content){
   tag = "accessionNumber"
   value = "A20191112135721285336"
   type = &lt;Element:0x4441b50 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x44561d0 /&gt;
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04472110&gt;)
&lt;suds.resolver.Frame object at 0x04472110&gt;</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">created - node:
&lt;tns:accessionNumber xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">ending content:
(Content){
   tag = "accessionNumber"
   value = "A20191112135721285336"
   type = &lt;Element:0x4441b50 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x44561d0 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04472110&gt;)
</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">processing:
(Content){
   tag = "studyInstanceUID"
   value = "bb38ac48-1b6b-4520-8381-7190fb95ced1"
   type = &lt;Element:0x4441b70 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x44562f0 /&gt;
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x044723B0&gt;
content:
(Content){
   tag = "studyInstanceUID"
   value = "bb38ac48-1b6b-4520-8381-7190fb95ced1"
   type = &lt;Element:0x4441b70 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x44562f0 /&gt;
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">starting content:
(Content){
   tag = "studyInstanceUID"
   value = "bb38ac48-1b6b-4520-8381-7190fb95ced1"
   type = &lt;Element:0x4441b70 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x44562f0 /&gt;
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x044723F0&gt;)
&lt;suds.resolver.Frame object at 0x044723F0&gt;</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">created - node:
&lt;tns:studyInstanceUID xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">ending content:
(Content){
   tag = "studyInstanceUID"
   value = "bb38ac48-1b6b-4520-8381-7190fb95ced1"
   type = &lt;Element:0x4441b70 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x44562f0 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x044723F0&gt;)
</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">processing:
(Content){
   tag = "reportStatus"
   value = 2
   type = &lt;Element:0x4441b90 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4456330 /&gt;
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x04472670&gt;
content:
(Content){
   tag = "reportStatus"
   value = 2
   type = &lt;Element:0x4441b90 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4456330 /&gt;
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">starting content:
(Content){
   tag = "reportStatus"
   value = 2
   type = &lt;Element:0x4441b90 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4456330 /&gt;
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x044726B0&gt;)
&lt;suds.resolver.Frame object at 0x044726B0&gt;</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">created - node:
&lt;tns:reportStatus xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">ending content:
(Content){
   tag = "reportStatus"
   value = "2"
   type = &lt;Element:0x4441b90 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4456330 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x044726B0&gt;)
</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">processing:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
      }
   type = &lt;Element:0x4441bd0 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x4441a50 name="ArrayOfString"&gt;
   &lt;Sequence:0x4441a70&gt;
      &lt;Element:0x4441b10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191112 13:57:26.567" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x04456D70&gt;
content:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
      }
   type = &lt;Element:0x4441bd0 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x4441a50 name="ArrayOfString"&gt;
   &lt;Sequence:0x4441a70&gt;
      &lt;Element:0x4441b10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">starting content:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
      }
   type = &lt;Element:0x4441bd0 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x4441a50 name="ArrayOfString"&gt;
   &lt;Sequence:0x4441a70&gt;
      &lt;Element:0x4441b10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04456D90&gt;)
&lt;suds.resolver.Frame object at 0x04456D90&gt;</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">created - node:
&lt;tns:reportFileName xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">appending parent:
&lt;tns:reportFileName xmlns:tns="http://carestream.org/"/&gt;
content:
(Content){
   tag = "string"
   value[] = 
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
 }</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">starting content:
(Content){
   tag = "string"
   value[] = 
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
 }</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">searching parent (&lt;Complex:0x4441a50 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04456D30&gt;)
&lt;suds.resolver.Frame object at 0x04456D90&gt;
&lt;suds.resolver.Frame object at 0x04456D30&gt;</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04456D30&gt;)
&lt;suds.resolver.Frame object at 0x04456D90&gt;</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">appending parent:
&lt;tns:reportFileName xmlns:tns="http://carestream.org/"/&gt;
content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf"
 }</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">starting content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf"
 }</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">searching parent (&lt;Complex:0x4441a50 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04456EB0&gt;)
&lt;suds.resolver.Frame object at 0x04456D90&gt;
&lt;suds.resolver.Frame object at 0x04456EB0&gt;</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">created - node:
&lt;tns:string xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">ending content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf"
   type = &lt;Element:0x4441b10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4456410 /&gt;
   ancestry[] = 
      &lt;Complex:0x4441a50 name="ArrayOfString"&gt;
   &lt;Sequence:0x4441a70&gt;
      &lt;Element:0x4441b10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x4441a70&gt;
   &lt;Element:0x4441b10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04456EB0&gt;)
&lt;suds.resolver.Frame object at 0x04456D90&gt;</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">appending parent:
&lt;tns:reportFileName xmlns:tns="http://carestream.org/"&gt;
   &lt;tns:string&gt;E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf&lt;/tns:string&gt;
&lt;/tns:reportFileName&gt;
content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf"
 }</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">starting content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf"
 }</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">searching parent (&lt;Complex:0x4441a50 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04456F10&gt;)
&lt;suds.resolver.Frame object at 0x04456D90&gt;
&lt;suds.resolver.Frame object at 0x04456F10&gt;</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">created - node:
&lt;tns:string xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">ending content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf"
   type = &lt;Element:0x4441b10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4456410 /&gt;
   ancestry[] = 
      &lt;Complex:0x4441a50 name="ArrayOfString"&gt;
   &lt;Sequence:0x4441a70&gt;
      &lt;Element:0x4441b10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x4441a70&gt;
   &lt;Element:0x4441b10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04456F10&gt;)
&lt;suds.resolver.Frame object at 0x04456D90&gt;</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04456D30&gt;)
&lt;suds.resolver.Frame object at 0x04456D90&gt;
&lt;suds.resolver.Frame object at 0x04456D30&gt;</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">ending content:
(Content){
   tag = "string"
   value[] = 
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
   type = &lt;Element:0x4441b10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4456410 /&gt;
   ancestry[] = 
      &lt;Complex:0x4441a50 name="ArrayOfString"&gt;
   &lt;Sequence:0x4441a70&gt;
      &lt;Element:0x4441b10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x4441a70&gt;
   &lt;Element:0x4441b10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04456D30&gt;)
&lt;suds.resolver.Frame object at 0x04456D90&gt;</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">ending content:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
      }
   type = &lt;Element:0x4441bd0 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x4441a50 name="ArrayOfString"&gt;
   &lt;Sequence:0x4441a70&gt;
      &lt;Element:0x4441b10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04456D90&gt;)
</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">processing:
(Content){
   tag = "pdfPassword"
   value = 
      (ArrayOfString){
         string[] = 
            "",
            "",
      }
   type = &lt;Element:0x4441bf0 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x4441a50 name="ArrayOfString"&gt;
   &lt;Sequence:0x4441a70&gt;
      &lt;Element:0x4441b10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x04456B70&gt;
content:
(Content){
   tag = "pdfPassword"
   value = 
      (ArrayOfString){
         string[] = 
            "",
            "",
      }
   type = &lt;Element:0x4441bf0 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x4441a50 name="ArrayOfString"&gt;
   &lt;Sequence:0x4441a70&gt;
      &lt;Element:0x4441b10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">starting content:
(Content){
   tag = "pdfPassword"
   value = 
      (ArrayOfString){
         string[] = 
            "",
            "",
      }
   type = &lt;Element:0x4441bf0 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x4441a50 name="ArrayOfString"&gt;
   &lt;Sequence:0x4441a70&gt;
      &lt;Element:0x4441b10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04456BB0&gt;)
&lt;suds.resolver.Frame object at 0x04456BB0&gt;</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">created - node:
&lt;tns:pdfPassword xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">appending parent:
&lt;tns:pdfPassword xmlns:tns="http://carestream.org/"/&gt;
content:
(Content){
   tag = "string"
   value[] = 
      "",
      "",
 }</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">starting content:
(Content){
   tag = "string"
   value[] = 
      "",
      "",
 }</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">searching parent (&lt;Complex:0x4441a50 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04456C10&gt;)
&lt;suds.resolver.Frame object at 0x04456BB0&gt;
&lt;suds.resolver.Frame object at 0x04456C10&gt;</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04456C10&gt;)
&lt;suds.resolver.Frame object at 0x04456BB0&gt;</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">appending parent:
&lt;tns:pdfPassword xmlns:tns="http://carestream.org/"/&gt;
content:
(Content){
   tag = "string"
   value = ""
 }</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">starting content:
(Content){
   tag = "string"
   value = ""
 }</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">searching parent (&lt;Complex:0x4441a50 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04456830&gt;)
&lt;suds.resolver.Frame object at 0x04456BB0&gt;
&lt;suds.resolver.Frame object at 0x04456830&gt;</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">created - node:
&lt;tns:string xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">ending content:
(Content){
   tag = "string"
   value = ""
   type = &lt;Element:0x4441b10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4456410 /&gt;
   ancestry[] = 
      &lt;Complex:0x4441a50 name="ArrayOfString"&gt;
   &lt;Sequence:0x4441a70&gt;
      &lt;Element:0x4441b10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x4441a70&gt;
   &lt;Element:0x4441b10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04456830&gt;)
&lt;suds.resolver.Frame object at 0x04456BB0&gt;</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">appending parent:
&lt;tns:pdfPassword xmlns:tns="http://carestream.org/"&gt;
   &lt;tns:string&gt;&lt;/tns:string&gt;
&lt;/tns:pdfPassword&gt;
content:
(Content){
   tag = "string"
   value = ""
 }</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">starting content:
(Content){
   tag = "string"
   value = ""
 }</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">searching parent (&lt;Complex:0x4441a50 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04456CF0&gt;)
&lt;suds.resolver.Frame object at 0x04456BB0&gt;
&lt;suds.resolver.Frame object at 0x04456CF0&gt;</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">created - node:
&lt;tns:string xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">ending content:
(Content){
   tag = "string"
   value = ""
   type = &lt;Element:0x4441b10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4456410 /&gt;
   ancestry[] = 
      &lt;Complex:0x4441a50 name="ArrayOfString"&gt;
   &lt;Sequence:0x4441a70&gt;
      &lt;Element:0x4441b10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x4441a70&gt;
   &lt;Element:0x4441b10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04456CF0&gt;)
&lt;suds.resolver.Frame object at 0x04456BB0&gt;</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04456C10&gt;)
&lt;suds.resolver.Frame object at 0x04456BB0&gt;
&lt;suds.resolver.Frame object at 0x04456C10&gt;</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">ending content:
(Content){
   tag = "string"
   value[] = 
      "",
      "",
   type = &lt;Element:0x4441b10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4456410 /&gt;
   ancestry[] = 
      &lt;Complex:0x4441a50 name="ArrayOfString"&gt;
   &lt;Sequence:0x4441a70&gt;
      &lt;Element:0x4441b10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x4441a70&gt;
   &lt;Element:0x4441b10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04456C10&gt;)
&lt;suds.resolver.Frame object at 0x04456BB0&gt;</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">ending content:
(Content){
   tag = "pdfPassword"
   value = 
      (ArrayOfString){
         string[] = 
            "",
            "",
      }
   type = &lt;Element:0x4441bf0 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x4441a50 name="ArrayOfString"&gt;
   &lt;Sequence:0x4441a70&gt;
      &lt;Element:0x4441b10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04456BB0&gt;)
</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">message for 'NotifyReportInfo' created: 15 (ms)</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">sending to (http://10.112.20.84/NotifyServer/NotifyService.asmx)
message:
&lt;suds.sax.document.Document object at 0x044565D0&gt;</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">headers = {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://carestream.org/NotifyReportInfo"'}</msg>
<msg timestamp="20191112 13:57:26.582" level="DEBUG">sending:
URL: http://10.112.20.84/NotifyServer/NotifyService.asmx
HEADERS: {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://carestream.org/NotifyReportInfo"', 'Content-type': 'text/xml; charset=utf-8', 'Soapaction': b'"http://carestream.org/NotifyReportInfo"'}
MESSAGE:
b'&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://carestream.org/"&gt;&lt;SOAP-ENV:Header/&gt;&lt;ns0:Body&gt;&lt;ns1:NotifyReportInfo&gt;&lt;ns1:patientName&gt;CN20191112135721285336&lt;/ns1:patientName&gt;&lt;ns1:patientID&gt;P20191112135721285336&lt;/ns1:patientID&gt;&lt;ns1:accessionNumber&gt;A20191112135721285336&lt;/ns1:accessionNumber&gt;&lt;ns1:studyInstanceUID&gt;bb38ac48-1b6b-4520-8381-7190fb95ced1&lt;/ns1:studyInstanceUID&gt;&lt;ns1:reportStatus&gt;2&lt;/ns1:reportStatus&gt;&lt;ns1:reportFileName&gt;&lt;ns1:string&gt;E:\\PUMA_AUTO_Ref\\Cases\\SmokeTest\\4713\\Report\\Performance1.pdf&lt;/ns1:string&gt;&lt;ns1:string&gt;E:\\PUMA_AUTO_Ref\\Cases\\SmokeTest\\4713\\Report\\Performance1.pdf&lt;/ns1:string&gt;&lt;/ns1:reportFileName&gt;&lt;ns1:pdfPassword&gt;&lt;ns1:string&gt;&lt;/ns1:string&gt;&lt;ns1:string&gt;&lt;/ns1:string&gt;&lt;/ns1:pdfPassword&gt;&lt;/ns1:NotifyReportInfo&gt;&lt;/ns0:Body&gt;&lt;/SOAP-ENV:Envelope&gt;'</msg>
<msg timestamp="20191112 13:57:26.848" level="DEBUG">received:
CODE: HTTPStatus.OK
HEADERS: Cache-Control: private, max-age=0
Content-Type: text/xml; charset=utf-8
Server: Microsoft-IIS/7.5
X-AspNet-Version: 4.0.30319
X-Powered-By: ASP.NET
Date: Tue, 12 Nov 2019 05:57:27 GMT
Connection: close
Content-Length: 380


MESSAGE:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;NotifyReportInfoResponse xmlns="http://carestream.org/"&gt;&lt;NotifyReportInfoResult&gt;0&lt;/NotifyReportInfoResult&gt;&lt;/NotifyReportInfoResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191112 13:57:26.848" level="DEBUG">waited 265 (ms) on server reply</msg>
<msg timestamp="20191112 13:57:26.848" level="DEBUG">HTTP succeeded:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;NotifyReportInfoResponse xmlns="http://carestream.org/"&gt;&lt;NotifyReportInfoResult&gt;0&lt;/NotifyReportInfoResult&gt;&lt;/NotifyReportInfoResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191112 13:57:26.848" level="DEBUG">b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;NotifyReportInfoResponse xmlns="http://carestream.org/"&gt;&lt;NotifyReportInfoResult&gt;0&lt;/NotifyReportInfoResult&gt;&lt;/NotifyReportInfoResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'
sax duration: 0 (ms)</msg>
<msg timestamp="20191112 13:57:26.848" level="DEBUG">('NotifyReportInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4441ad0 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:26.848" level="DEBUG">Element:0x4441c70, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4456b10"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4441c70 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:26.848" level="DEBUG">TypeQuery:0x4456b10, found builtin (int)</msg>
<msg timestamp="20191112 13:57:26.848" level="DEBUG">reset</msg>
<msg timestamp="20191112 13:57:26.848" level="DEBUG">Element:0x4441c70, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4456950"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4441c70 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:26.848" level="DEBUG">TypeQuery:0x4456950, found builtin (int)</msg>
<msg timestamp="20191112 13:57:26.848" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04456870&gt;)
&lt;suds.resolver.Frame object at 0x04456870&gt;</msg>
<msg timestamp="20191112 13:57:26.848" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04456870&gt;)
</msg>
<msg timestamp="20191112 13:57:26.848" level="DEBUG">method 'NotifyReportInfo' invoked: 265 (ms)</msg>
<msg timestamp="20191112 13:57:26.848" level="INFO">Report.report_create_by_notifyserver_reportinfo: Report Archived successfully!</msg>
<msg timestamp="20191112 13:57:26.848" level="INFO">${Report_archived_Info} = {"result": true, "patient_name": "CN20191112135721285336", "patient_id": "P20191112135721285336", "accessionNumber": "A20191112135721285336", "StudyInstanceUID": "bb38ac48-1b6b-4520-8381-7190fb95ced1"...</msg>
<status status="PASS" starttime="20191112 13:57:26.457" endtime="20191112 13:57:26.848"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191112 13:57:26.848" level="INFO">${Report_archived_Info_Json} = {'result': True, 'patient_name': 'CN20191112135721285336', 'patient_id': 'P20191112135721285336', 'accessionNumber': 'A20191112135721285336', 'StudyInstanceUID': 'bb38ac48-1b6b-4520-8381-7190fb95ced1'...</msg>
<status status="PASS" starttime="20191112 13:57:26.848" endtime="20191112 13:57:26.848"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191112 13:57:26.879" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191112 13:57:26.848" endtime="20191112 13:57:26.879"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The web service should return true or return successfully response. Th web service return 0 as true.</arg>
</arguments>
<status status="PASS" starttime="20191112 13:57:26.879" endtime="20191112 13:57:26.879"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191112 13:57:31.879" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191112 13:57:26.879" endtime="20191112 13:57:31.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4:\n Description \n 1. Check the WGGC.dbo.AFP_ReportInfo table. \n Expected \n 1. New record can be found in AFP_ReportInfo table for received report, and the ReportStatus value should be 2.</arg>
</arguments>
<msg timestamp="20191112 13:57:31.879" level="INFO">Step 4:
Description 
1. Check the WGGC.dbo.AFP_ReportInfo table. 
Expected 
1. New record can be found in AFP_ReportInfo table for received report, and the ReportStatus value should be 2.</msg>
<status status="PASS" starttime="20191112 13:57:31.879" endtime="20191112 13:57:31.879"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>StudyInstanceUID</arg>
</arguments>
<assign>
<var>${Report_StudyInstanceUID}</var>
</assign>
<msg timestamp="20191112 13:57:31.910" level="INFO">${Report_StudyInstanceUID} = ['bb38ac48-1b6b-4520-8381-7190fb95ced1']</msg>
<status status="PASS" starttime="20191112 13:57:31.879" endtime="20191112 13:57:31.910"></status>
</kw>
<kw name="Report Check Archive In Reportinfo By UUID" library="PUMA_ReportLibrary">
<doc>Report_check_archive_in_reportinfo_by_UUID</doc>
<arguments>
<arg>${Report_StudyInstanceUID}[0]</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Info}</var>
</assign>
<msg timestamp="20191112 13:57:31.910" level="INFO">Report.Report_check_archive_by_studyUID: The report archived successfully and the ReportStatus value in wggc.dbo.afp_reportinfo is [2]</msg>
<msg timestamp="20191112 13:57:31.910" level="INFO">${Report_Check_ReportInfo_Info_Info} = {"result": true, "ReportStatus": "2"}</msg>
<status status="PASS" starttime="20191112 13:57:31.910" endtime="20191112 13:57:31.910"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Info}</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Json}</var>
</assign>
<msg timestamp="20191112 13:57:31.910" level="INFO">${Report_Check_ReportInfo_Info_Json} = {'result': True, 'ReportStatus': '2'}</msg>
<status status="PASS" starttime="20191112 13:57:31.910" endtime="20191112 13:57:31.910"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Result}</var>
</assign>
<msg timestamp="20191112 13:57:31.957" level="INFO">${Report_Check_ReportInfo_Info_Result} = [True]</msg>
<status status="PASS" starttime="20191112 13:57:31.910" endtime="20191112 13:57:31.957"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>ReportStatus</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_ReportStatus}</var>
</assign>
<msg timestamp="20191112 13:57:31.988" level="INFO">${Report_Check_ReportInfo_Info_ReportStatus} = ['2']</msg>
<status status="PASS" starttime="20191112 13:57:31.957" endtime="20191112 13:57:31.988"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Result}[0]</arg>
<arg>Wggc.dbo.AFP_ReportInfo table have new records of this report</arg>
</arguments>
<status status="PASS" starttime="20191112 13:57:31.988" endtime="20191112 13:57:31.988"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_ReportStatus}[0]</arg>
<arg>2</arg>
<arg>The report status value in table wggc.dbo.afp_reportinfo is 2</arg>
</arguments>
<msg timestamp="20191112 13:57:31.988" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 13:57:31.988" endtime="20191112 13:57:31.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5: \n Description: \n 1. Check the WGGC.dbo.AFP_PrintMode table. \n Expected: \n 1. Can find a new record in table and value should be correct. \n</arg>
</arguments>
<msg timestamp="20191112 13:57:31.988" level="INFO">Step 5: 
Description: 
1. Check the WGGC.dbo.AFP_PrintMode table. 
Expected: 
1. Can find a new record in table and value should be correct. 
</msg>
<status status="PASS" starttime="20191112 13:57:31.988" endtime="20191112 13:57:31.988"></status>
</kw>
<kw name="Printmode Get Info From Db By Accn" library="PUMA_PrintModeLibrary">
<doc>printmode_get_info_from_db_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${PrintMode_info}</var>
</assign>
<msg timestamp="20191112 13:57:31.988" level="INFO">${PrintMode_info} = {"result": true, "AccessionNumber": "A20191112135721285336", "StudyInstanceUID": "", "PrintMode": 0, "StatusTime": "2019-11-12 13:57:27.867000", "HoldFlag": 1, "PrintWaitTime": "60", "ReportWaitTime":...</msg>
<status status="PASS" starttime="20191112 13:57:31.988" endtime="20191112 13:57:31.988"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintMode_info}</arg>
</arguments>
<assign>
<var>${PrintMode_info_Json}</var>
</assign>
<msg timestamp="20191112 13:57:31.988" level="INFO">${PrintMode_info_Json} = {'result': True, 'AccessionNumber': 'A20191112135721285336', 'StudyInstanceUID': '', 'PrintMode': 0, 'StatusTime': '2019-11-12 13:57:27.867000', 'HoldFlag': 1, 'PrintWaitTime': '60', 'ReportWaitTime':...</msg>
<status status="PASS" starttime="20191112 13:57:31.988" endtime="20191112 13:57:31.988"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${PrintMode_info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${PrintMode_result}</var>
</assign>
<msg timestamp="20191112 13:57:32.035" level="INFO">${PrintMode_result} = [True]</msg>
<status status="PASS" starttime="20191112 13:57:31.988" endtime="20191112 13:57:32.035"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${PrintMode_info_Json}</arg>
<arg>PrintMode</arg>
</arguments>
<assign>
<var>${PrintMode_value}</var>
</assign>
<msg timestamp="20191112 13:57:32.067" level="INFO">${PrintMode_value} = [0]</msg>
<status status="PASS" starttime="20191112 13:57:32.035" endtime="20191112 13:57:32.067"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${PrintMode_result}</arg>
</arguments>
<status status="PASS" starttime="20191112 13:57:32.067" endtime="20191112 13:57:32.067"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${PrintMode_value}[0]</arg>
<arg>0</arg>
<arg>The patient print mode is 0 for "门诊病人"</arg>
</arguments>
<msg timestamp="20191112 13:57:32.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 13:57:32.067" endtime="20191112 13:57:32.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6: \n Description: \n 1. Check the ReportStoredFlag value in T_Integration_ExamInfo table in WGGC database for this report. \n Expected: \n 1. The ReportStoredFlag value should be 9 \n</arg>
</arguments>
<msg timestamp="20191112 13:57:32.067" level="INFO">Step 6: 
Description: 
1. Check the ReportStoredFlag value in T_Integration_ExamInfo table in WGGC database for this report. 
Expected: 
1. The ReportStoredFlag value should be 9 
</msg>
<status status="PASS" starttime="20191112 13:57:32.067" endtime="20191112 13:57:32.067"></status>
</kw>
<kw name="Report Check ReportStoredFlag In T Integration ExamInfo" library="PUMA_ReportLibrary">
<doc>report_check_ReportStoredFlag_in_T_Integration_ExamInfo</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlag_info}</var>
</assign>
<msg timestamp="20191112 13:57:32.067" level="INFO">Report.report_check_ReportStoredFlag_in_T_Integration_ExamInfo: Get the ReportStoredFlag of patient [P20191112135721285336, A20191112135721285336] correct and value is 9</msg>
<msg timestamp="20191112 13:57:32.067" level="INFO">${Report_ReportStoreFlag_info} = {"result": true, "ReportStoredFlag": 9}</msg>
<status status="PASS" starttime="20191112 13:57:32.067" endtime="20191112 13:57:32.067"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info}</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlag_info_json}</var>
</assign>
<msg timestamp="20191112 13:57:32.067" level="INFO">${Report_ReportStoreFlag_info_json} = {'result': True, 'ReportStoredFlag': 9}</msg>
<status status="PASS" starttime="20191112 13:57:32.067" endtime="20191112 13:57:32.067"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info_json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlage_info_result}</var>
</assign>
<msg timestamp="20191112 13:57:32.113" level="INFO">${Report_ReportStoreFlage_info_result} = [True]</msg>
<status status="PASS" starttime="20191112 13:57:32.067" endtime="20191112 13:57:32.113"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info_json}</arg>
<arg>ReportStoredFlag</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlage_value}</var>
</assign>
<msg timestamp="20191112 13:57:32.145" level="INFO">${Report_ReportStoreFlage_value} = [9]</msg>
<status status="PASS" starttime="20191112 13:57:32.113" endtime="20191112 13:57:32.145"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_ReportStoreFlage_info_result}[0]</arg>
</arguments>
<status status="PASS" starttime="20191112 13:57:32.145" endtime="20191112 13:57:32.145"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Report_ReportStoreFlage_value}[0]</arg>
<arg>9</arg>
<arg>The ReportStoredFlag value should be 9 in T_integration_examInfo table</arg>
</arguments>
<msg timestamp="20191112 13:57:32.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 13:57:32.145" endtime="20191112 13:57:32.145"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191112 13:57:21.285" endtime="20191112 13:57:32.145" critical="yes"></status>
</test>
<test id="s1-t4" name="SmokeTest_004_Core_4714_02.01.02 Report receive from web service PrintServer_Reportinfo">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1\n Description:\n1. Create a patient with an exam in RIS or local table in PS.\nExpected:\n 1. The patient with an exam can create successfully.</arg>
</arguments>
<msg timestamp="20191112 13:57:32.145" level="INFO">Step 1
Description:
1. Create a patient with an exam in RIS or local table in PS.
Expected:
1. The patient with an exam can create successfully.</msg>
<status status="PASS" starttime="20191112 13:57:32.145" endtime="20191112 13:57:32.145"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191112 13:57:32.160" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 13:57:32.160" level="DEBUG">http://10.112.20.84:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191112 13:57:32.160" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-12 13:57:32.144722", "UpdateDT": "2019-11-12 13:57:32.144722", "PatientID": "P20191112135732144722", "AccessionNumber": "A20191112135732144722", "StudyInstanceUID": "UID20191112135732144722", "NameCN": "CN20191112135732144722", "NameEN": "EN20191112135732144722", "Gender": "F", "Birthday": "1940-12-01", "Modality": "IO", "ModalityName": "DX", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-12 13:57:32.144722", "RegisterDT": "2019-11-12 13:57:32.144722", "ExamDT": "2019-11-12 13:57:32.144722", "ReportDT": "2019-11-12 13:57:32.144722", "SubmitDT": "2019-11-12 13:57:32.144722", "ApproveDT": "2019-11-12 13:57:32.144722", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191112135732144722", "ExamBodyPart": "Chest", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191112 13:57:32.160" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-12 13:57:32.144722", "UpdateDT": "2019-11-12 13:57:32.144722", "PatientID": "P20191112135732144722", "AccessionNumber": "A20191112135732144722", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191112 13:57:32.145" endtime="20191112 13:57:32.160"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191112 13:57:32.160" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-12 13:57:32.144722', 'UpdateDT': '2019-11-12 13:57:32.144722', 'PatientID': 'P20191112135732144722', 'AccessionNumber': 'A20191112135732144722', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191112 13:57:32.160" endtime="20191112 13:57:32.160"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191112 13:57:32.207" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191112 13:57:32.160" endtime="20191112 13:57:32.207"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]</arg>
<arg>Patient create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 13:57:32.207" endtime="20191112 13:57:32.207"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191112 13:57:32.238" level="INFO">${patientID} = ['P20191112135732144722']</msg>
<status status="PASS" starttime="20191112 13:57:32.207" endtime="20191112 13:57:32.238"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${AccessionNumber}</var>
</assign>
<msg timestamp="20191112 13:57:32.301" level="INFO">${AccessionNumber} = ['A20191112135732144722']</msg>
<status status="PASS" starttime="20191112 13:57:32.238" endtime="20191112 13:57:32.301"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>NameCN</arg>
</arguments>
<assign>
<var>${PatientName}</var>
</assign>
<msg timestamp="20191112 13:57:32.332" level="INFO">${PatientName} = ['CN20191112135732144722']</msg>
<status status="PASS" starttime="20191112 13:57:32.301" endtime="20191112 13:57:32.332"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>formal</arg>
</arguments>
<assign>
<var>${Report_type}</var>
</assign>
<msg timestamp="20191112 13:57:32.332" level="INFO">${Report_type} = formal</msg>
<status status="PASS" starttime="20191112 13:57:32.332" endtime="20191112 13:57:32.332"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>E:\\PUMA_AUTO_Ref\\Cases\\SmokeTest\\4714\\Report\\Performance1.pdf</arg>
</arguments>
<assign>
<var>${File_path}</var>
</assign>
<msg timestamp="20191112 13:57:32.332" level="INFO">${File_path} = E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf</msg>
<status status="PASS" starttime="20191112 13:57:32.332" endtime="20191112 13:57:32.332"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191112 13:57:37.332" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191112 13:57:32.332" endtime="20191112 13:57:37.332"></status>
</kw>
<kw name="Report Create By Printserver Reportinfo" library="PUMA_ReportLibrary">
<doc>report_create_by_printserver_reportinfo</doc>
<arguments>
<arg>${PatientName}[0]</arg>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
<arg>${Report_type}</arg>
<arg>${File_path}</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191112 13:57:37.332" level="DEBUG">reading WSDL at: http://10.112.20.84/PrintServer/PrintService.asmx?wsdl ...</msg>
<msg timestamp="20191112 13:57:37.332" level="DEBUG">opening (http://10.112.20.84/PrintServer/PrintService.asmx?wsdl)</msg>
<msg timestamp="20191112 13:57:37.379" level="DEBUG">b'&lt;?xml version="1.0" encoding="utf-8"?&gt;\r\n&lt;wsdl:definitions xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://tempuri.org/" xmlns:s1="http://tempuri.org/AbstractTypes" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" targetNamespace="http://tempuri.org/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"&gt;\r\n  &lt;wsdl:types&gt;\r\n    &lt;s:schema elementFormDefault="qualified" targetNamespace="http://tempuri.org/"&gt;\r\n      &lt;s:element name="SetPrintMode"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="SetPrintModeResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyReportInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:complexType name="ArrayOfString"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:element name="NotifyReportInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="GetPrintServerStatus"&gt;\r\n        &lt;s:complexType /&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="GetPrintServerStatusResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="GetPrintServerStatusResult" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="error_code" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="error_description" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="CreatePrintTask"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id_type" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="CreatePrintTaskResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="CreatePrintTaskResult" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patient_name" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="warning_code" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="warning_description" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="CreatePrintTask2"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id_type" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="CreatePrintTask2Response"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="CreatePrintTask2Result" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patient_name" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="warning_code" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="warning_description" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="extensions" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="Print"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="PrintResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="PrintResult" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="error_code" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="error_description" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="GetPrintTaskStatus"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="GetPrintTaskStatusResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="GetPrintTaskStatusResult" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="task_status" type="tns:PrintTask" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:complexType name="PrintTask"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PrintTaskId" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="1" maxOccurs="1" name="PrintStatus" type="s:int" /&gt;\r\n          &lt;s:element minOccurs="1" maxOccurs="1" name="TotalReports" type="s:int" /&gt;\r\n          &lt;s:element minOccurs="1" maxOccurs="1" name="TotalImages" type="s:int" /&gt;\r\n          &lt;s:element minOccurs="1" maxOccurs="1" name="ReportsLeft" type="s:int" /&gt;\r\n          &lt;s:element minOccurs="1" maxOccurs="1" name="ImagesLeft" type="s:int" /&gt;\r\n          &lt;s:element minOccurs="1" maxOccurs="1" name="TimeNeeded" type="s:int" /&gt;\r\n          &lt;s:element minOccurs="1" maxOccurs="1" name="ErrorCode" type="s:int" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ErrorDesc" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:element name="CentralPrintCombine"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strTerminalID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strIDAccID" type="tns:ArrayOfString" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strAccType" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strIDUsID" type="tns:ArrayOfString" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strUsType" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="userId" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="CentralPrintCombineResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="CentralPrintCombineResult" type="tns:ArrayOfInt" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strPatientName" type="tns:ArrayOfString" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strPrintTaskID" type="tns:ArrayOfString" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="nWarningCode" type="tns:ArrayOfInt" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strWarningDescription" type="tns:ArrayOfString" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strExtensions" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:complexType name="ArrayOfInt"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="unbounded" name="int" type="s:int" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:element name="CentralPrint"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strTerminalID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strIDType" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="userId" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="CentralPrintResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="CentralPrintResult" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strPatientName" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strPrintTaskID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="nWarningCode" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strWarningDescription" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strExtensions" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="AddQCLog"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QCUID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QCLevel" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QCUser" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QCEvent" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QCDescription" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="AddQCLogResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="AddQCLogResult" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="Version"&gt;\r\n        &lt;s:complexType /&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="VersionResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="VersionResult" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="UpdateReportPrinterStatus"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="nPrinterStatus" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="nErrorCode" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strErrorDesc" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="UpdateReportPrinterStatusResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="UpdateReportPrinterStatusResult" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryExamInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="cardNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="cardType" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryExamInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QueryExamInfoResult" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="SetReportPrinted"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="reportId" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="SetReportPrintedResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="SetReportPrintedResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="SetReportUnPrinted"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="reportId" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="SetReportUnPrintedResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="SetReportUnPrintedResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryPrintTask"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryPrintTaskResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="PrintTask" type="tns:TaskInfo" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:complexType name="TaskInfo"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="TerminalID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="FilmCount" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ReportCount" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PrintedFilmCount" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PrintedReportCount" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Patient" type="tns:PatientInfo" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Films" type="tns:ArrayOfFilmInfo" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Reports" type="tns:ArrayOfReportInfo" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:complexType name="PatientInfo"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Name" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Type" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:complexType name="ArrayOfFilmInfo"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="unbounded" name="FilmInfo" nillable="true" type="tns:FilmInfo" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:complexType name="FilmInfo"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Size" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Type" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:complexType name="ArrayOfReportInfo"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="unbounded" name="ReportInfo" nillable="true" type="tns:ReportInfo" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:complexType name="ReportInfo"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:element name="NotifyFilmInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyFilmInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="int" type="s:int" /&gt;\r\n      &lt;s:element name="string" nillable="true" type="s:string" /&gt;\r\n      &lt;s:element name="boolean" type="s:boolean" /&gt;\r\n      &lt;s:element name="PrintTask" type="tns:TaskInfo" /&gt;\r\n    &lt;/s:schema&gt;\r\n    &lt;s:schema targetNamespace="http://tempuri.org/AbstractTypes"&gt;\r\n      &lt;s:import namespace="http://schemas.xmlsoap.org/soap/encoding/" /&gt;\r\n      &lt;s:complexType name="StringArray"&gt;\r\n        &lt;s:complexContent mixed="false"&gt;\r\n          &lt;s:restriction base="soapenc:Array"&gt;\r\n            &lt;s:sequence&gt;\r\n              &lt;s:element minOccurs="0" maxOccurs="unbounded" name="String" type="s:string" /&gt;\r\n            &lt;/s:sequence&gt;\r\n          &lt;/s:restriction&gt;\r\n        &lt;/s:complexContent&gt;\r\n      &lt;/s:complexType&gt;\r\n    &lt;/s:schema&gt;\r\n  &lt;/wsdl:types&gt;\r\n  &lt;wsdl:message name="SetPrintModeSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetPrintMode" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetPrintModeSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="GetPrintServerStatusSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="GetPrintServerStatusSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CreatePrintTaskSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CreatePrintTask" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CreatePrintTaskSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CreatePrintTask2SoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CreatePrintTask2SoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="PrintSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:Print" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="PrintSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:PrintResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="GetPrintTaskStatusSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="GetPrintTaskStatusSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CentralPrintCombineSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CentralPrintCombineSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CentralPrintSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CentralPrint" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CentralPrintSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="AddQCLogSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:AddQCLog" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="AddQCLogSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="VersionSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:Version" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="VersionSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:VersionResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="UpdateReportPrinterStatusSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="UpdateReportPrinterStatusSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryExamInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryExamInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryExamInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportPrintedSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetReportPrinted" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportPrintedSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportUnPrintedSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportUnPrintedSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryPrintTaskSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryPrintTask" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryPrintTaskSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetPrintModeHttpGetIn"&gt;\r\n    &lt;wsdl:part name="strAccessionNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="strStudyInstanceUID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="nMode" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetPrintModeHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoHttpGetIn"&gt;\r\n    &lt;wsdl:part name="patientName" type="s:string" /&gt;\r\n    &lt;wsdl:part name="patientID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="accessionNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="studyInstanceUID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="reportStatus" type="s:string" /&gt;\r\n    &lt;wsdl:part name="reportFileName" type="s1:StringArray" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="AddQCLogHttpGetIn"&gt;\r\n    &lt;wsdl:part name="QCUID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCLevel" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCUser" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCEvent" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCDescription" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="AddQCLogHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="VersionHttpGetIn" /&gt;\r\n  &lt;wsdl:message name="VersionHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="UpdateReportPrinterStatusHttpGetIn"&gt;\r\n    &lt;wsdl:part name="nPrinterStatus" type="s:string" /&gt;\r\n    &lt;wsdl:part name="nErrorCode" type="s:string" /&gt;\r\n    &lt;wsdl:part name="strErrorDesc" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="UpdateReportPrinterStatusHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryExamInfoHttpGetIn"&gt;\r\n    &lt;wsdl:part name="cardNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="cardType" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryExamInfoHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportPrintedHttpGetIn"&gt;\r\n    &lt;wsdl:part name="reportId" type="s:string" /&gt;\r\n    &lt;wsdl:part name="taskId" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportPrintedHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:boolean" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportUnPrintedHttpGetIn"&gt;\r\n    &lt;wsdl:part name="reportId" type="s:string" /&gt;\r\n    &lt;wsdl:part name="taskId" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportUnPrintedHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:boolean" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryPrintTaskHttpGetIn"&gt;\r\n    &lt;wsdl:part name="taskId" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryPrintTaskHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:PrintTask" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoHttpGetIn"&gt;\r\n    &lt;wsdl:part name="accessionNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="patientID" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:boolean" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetPrintModeHttpPostIn"&gt;\r\n    &lt;wsdl:part name="strAccessionNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="strStudyInstanceUID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="nMode" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetPrintModeHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoHttpPostIn"&gt;\r\n    &lt;wsdl:part name="patientName" type="s:string" /&gt;\r\n    &lt;wsdl:part name="patientID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="accessionNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="studyInstanceUID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="reportStatus" type="s:string" /&gt;\r\n    &lt;wsdl:part name="reportFileName" type="s1:StringArray" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="AddQCLogHttpPostIn"&gt;\r\n    &lt;wsdl:part name="QCUID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCLevel" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCUser" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCEvent" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCDescription" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="AddQCLogHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="VersionHttpPostIn" /&gt;\r\n  &lt;wsdl:message name="VersionHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="UpdateReportPrinterStatusHttpPostIn"&gt;\r\n    &lt;wsdl:part name="nPrinterStatus" type="s:string" /&gt;\r\n    &lt;wsdl:part name="nErrorCode" type="s:string" /&gt;\r\n    &lt;wsdl:part name="strErrorDesc" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="UpdateReportPrinterStatusHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryExamInfoHttpPostIn"&gt;\r\n    &lt;wsdl:part name="cardNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="cardType" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryExamInfoHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportPrintedHttpPostIn"&gt;\r\n    &lt;wsdl:part name="reportId" type="s:string" /&gt;\r\n    &lt;wsdl:part name="taskId" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportPrintedHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:boolean" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportUnPrintedHttpPostIn"&gt;\r\n    &lt;wsdl:part name="reportId" type="s:string" /&gt;\r\n    &lt;wsdl:part name="taskId" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportUnPrintedHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:boolean" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryPrintTaskHttpPostIn"&gt;\r\n    &lt;wsdl:part name="taskId" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryPrintTaskHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:PrintTask" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoHttpPostIn"&gt;\r\n    &lt;wsdl:part name="accessionNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="patientID" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:boolean" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:portType name="PrintServiceSoap"&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;wsdl:input message="tns:SetPrintModeSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetPrintModeSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyReportInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyReportInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="GetPrintServerStatus"&gt;\r\n      &lt;wsdl:input message="tns:GetPrintServerStatusSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:GetPrintServerStatusSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CreatePrintTask"&gt;\r\n      &lt;wsdl:input message="tns:CreatePrintTaskSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:CreatePrintTaskSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CreatePrintTask2"&gt;\r\n      &lt;wsdl:input message="tns:CreatePrintTask2SoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:CreatePrintTask2SoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Print"&gt;\r\n      &lt;wsdl:input message="tns:PrintSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:PrintSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="GetPrintTaskStatus"&gt;\r\n      &lt;wsdl:input message="tns:GetPrintTaskStatusSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:GetPrintTaskStatusSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CentralPrintCombine"&gt;\r\n      &lt;wsdl:input message="tns:CentralPrintCombineSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:CentralPrintCombineSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CentralPrint"&gt;\r\n      &lt;wsdl:input message="tns:CentralPrintSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:CentralPrintSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="AddQCLog"&gt;\r\n      &lt;wsdl:input message="tns:AddQCLogSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:AddQCLogSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Version"&gt;\r\n      &lt;wsdl:input message="tns:VersionSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:VersionSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="UpdateReportPrinterStatus"&gt;\r\n      &lt;wsdl:input message="tns:UpdateReportPrinterStatusSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:UpdateReportPrinterStatusSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryExamInfo"&gt;\r\n      &lt;wsdl:input message="tns:QueryExamInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryExamInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportPrinted"&gt;\r\n      &lt;wsdl:input message="tns:SetReportPrintedSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetReportPrintedSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportUnPrinted"&gt;\r\n      &lt;wsdl:input message="tns:SetReportUnPrintedSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetReportUnPrintedSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryPrintTask"&gt;\r\n      &lt;wsdl:input message="tns:QueryPrintTaskSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryPrintTaskSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyFilmInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyFilmInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:portType&gt;\r\n  &lt;wsdl:portType name="PrintServiceHttpGet"&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;wsdl:input message="tns:SetPrintModeHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetPrintModeHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyReportInfoHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyReportInfoHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="AddQCLog"&gt;\r\n      &lt;wsdl:input message="tns:AddQCLogHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:AddQCLogHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Version"&gt;\r\n      &lt;wsdl:input message="tns:VersionHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:VersionHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="UpdateReportPrinterStatus"&gt;\r\n      &lt;wsdl:input message="tns:UpdateReportPrinterStatusHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:UpdateReportPrinterStatusHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryExamInfo"&gt;\r\n      &lt;wsdl:input message="tns:QueryExamInfoHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryExamInfoHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportPrinted"&gt;\r\n      &lt;wsdl:input message="tns:SetReportPrintedHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetReportPrintedHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportUnPrinted"&gt;\r\n      &lt;wsdl:input message="tns:SetReportUnPrintedHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetReportUnPrintedHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryPrintTask"&gt;\r\n      &lt;wsdl:input message="tns:QueryPrintTaskHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryPrintTaskHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyFilmInfoHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyFilmInfoHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:portType&gt;\r\n  &lt;wsdl:portType name="PrintServiceHttpPost"&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;wsdl:input message="tns:SetPrintModeHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetPrintModeHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyReportInfoHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyReportInfoHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="AddQCLog"&gt;\r\n      &lt;wsdl:input message="tns:AddQCLogHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:AddQCLogHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Version"&gt;\r\n      &lt;wsdl:input message="tns:VersionHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:VersionHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="UpdateReportPrinterStatus"&gt;\r\n      &lt;wsdl:input message="tns:UpdateReportPrinterStatusHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:UpdateReportPrinterStatusHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryExamInfo"&gt;\r\n      &lt;wsdl:input message="tns:QueryExamInfoHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryExamInfoHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportPrinted"&gt;\r\n      &lt;wsdl:input message="tns:SetReportPrintedHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetReportPrintedHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportUnPrinted"&gt;\r\n      &lt;wsdl:input message="tns:SetReportUnPrintedHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetReportUnPrintedHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryPrintTask"&gt;\r\n      &lt;wsdl:input message="tns:QueryPrintTaskHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryPrintTaskHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyFilmInfoHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyFilmInfoHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:portType&gt;\r\n  &lt;wsdl:binding name="PrintServiceSoap" type="tns:PrintServiceSoap"&gt;\r\n    &lt;soap:binding transport="http://schemas.xmlsoap.org/soap/http" /&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/SetPrintMode" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/NotifyReportInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="GetPrintServerStatus"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/GetPrintServerStatus" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CreatePrintTask"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/CreatePrintTask" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CreatePrintTask2"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/CreatePrintTask2" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Print"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/Print" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="GetPrintTaskStatus"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/GetPrintTaskStatus" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CentralPrintCombine"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/CentralPrintCombine" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CentralPrint"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/CentralPrint" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="AddQCLog"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/AddQCLog" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Version"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/Version" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="UpdateReportPrinterStatus"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/UpdateReportPrinterStatus" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryExamInfo"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/QueryExamInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportPrinted"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/SetReportPrinted" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportUnPrinted"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/SetReportUnPrinted" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryPrintTask"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/QueryPrintTask" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/NotifyFilmInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:binding&gt;\r\n  &lt;wsdl:binding name="PrintServiceSoap12" type="tns:PrintServiceSoap"&gt;\r\n    &lt;soap12:binding transport="http://schemas.xmlsoap.org/soap/http" /&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/SetPrintMode" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/NotifyReportInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="GetPrintServerStatus"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/GetPrintServerStatus" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CreatePrintTask"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/CreatePrintTask" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CreatePrintTask2"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/CreatePrintTask2" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Print"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/Print" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="GetPrintTaskStatus"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/GetPrintTaskStatus" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CentralPrintCombine"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/CentralPrintCombine" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CentralPrint"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/CentralPrint" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="AddQCLog"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/AddQCLog" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Version"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/Version" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="UpdateReportPrinterStatus"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/UpdateReportPrinterStatus" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryExamInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/QueryExamInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportPrinted"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/SetReportPrinted" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportUnPrinted"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/SetReportUnPrinted" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryPrintTask"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/QueryPrintTask" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/NotifyFilmInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:binding&gt;\r\n  &lt;wsdl:binding name="PrintServiceHttpGet" type="tns:PrintServiceHttpGet"&gt;\r\n    &lt;http:binding verb="GET" /&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;http:operation location="/SetPrintMode" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;http:operation location="/NotifyReportInfo" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="AddQCLog"&gt;\r\n      &lt;http:operation location="/AddQCLog" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Version"&gt;\r\n      &lt;http:operation location="/Version" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="UpdateReportPrinterStatus"&gt;\r\n      &lt;http:operation location="/UpdateReportPrinterStatus" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryExamInfo"&gt;\r\n      &lt;http:operation location="/QueryExamInfo" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportPrinted"&gt;\r\n      &lt;http:operation location="/SetReportPrinted" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportUnPrinted"&gt;\r\n      &lt;http:operation location="/SetReportUnPrinted" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryPrintTask"&gt;\r\n      &lt;http:operation location="/QueryPrintTask" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;http:operation location="/NotifyFilmInfo" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:binding&gt;\r\n  &lt;wsdl:binding name="PrintServiceHttpPost" type="tns:PrintServiceHttpPost"&gt;\r\n    &lt;http:binding verb="POST" /&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;http:operation location="/SetPrintMode" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;http:operation location="/NotifyReportInfo" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="AddQCLog"&gt;\r\n      &lt;http:operation location="/AddQCLog" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Version"&gt;\r\n      &lt;http:operation location="/Version" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="UpdateReportPrinterStatus"&gt;\r\n      &lt;http:operation location="/UpdateReportPrinterStatus" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryExamInfo"&gt;\r\n      &lt;http:operation location="/QueryExamInfo" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportPrinted"&gt;\r\n      &lt;http:operation location="/SetReportPrinted" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportUnPrinted"&gt;\r\n      &lt;http:operation location="/SetReportUnPrinted" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryPrintTask"&gt;\r\n      &lt;http:operation location="/QueryPrintTask" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;http:operation location="/NotifyFilmInfo" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:binding&gt;\r\n  &lt;wsdl:service name="PrintService"&gt;\r\n    &lt;wsdl:port name="PrintServiceSoap" binding="tns:PrintServiceSoap"&gt;\r\n      &lt;soap:address location="http://10.112.20.84/PrintServer/PrintService.asmx" /&gt;\r\n    &lt;/wsdl:port&gt;\r\n    &lt;wsdl:port name="PrintServiceSoap12" binding="tns:PrintServiceSoap12"&gt;\r\n      &lt;soap12:address location="http://10.112.20.84/PrintServer/PrintService.asmx" /&gt;\r\n    &lt;/wsdl:port&gt;\r\n    &lt;wsdl:port name="PrintServiceHttpGet" binding="tns:PrintServiceHttpGet"&gt;\r\n      &lt;http:address location="http://10.112.20.84/PrintServer/PrintService.asmx" /&gt;\r\n    &lt;/wsdl:port&gt;\r\n    &lt;wsdl:port name="PrintServiceHttpPost" binding="tns:PrintServiceHttpPost"&gt;\r\n      &lt;http:address location="http://10.112.20.84/PrintServer/PrintService.asmx" /&gt;\r\n    &lt;/wsdl:port&gt;\r\n  &lt;/wsdl:service&gt;\r\n&lt;/wsdl:definitions&gt;'
sax duration: 31 (ms)</msg>
<msg timestamp="20191112 13:57:37.395" level="DEBUG">binding: "PrintServiceHttpGet" not a SOAP binding</msg>
<msg timestamp="20191112 13:57:37.395" level="DEBUG">binding: "PrintServiceHttpPost" not a SOAP binding</msg>
<msg timestamp="20191112 13:57:37.395" level="DEBUG">binding "PrintServiceHttpGet" - not a SOAP binding, discarded</msg>
<msg timestamp="20191112 13:57:37.395" level="DEBUG">binding "PrintServiceHttpPost" - not a SOAP binding, discarded</msg>
<msg timestamp="20191112 13:57:37.410" level="DEBUG">Import:0x3e641d0, importing ns="http://schemas.xmlsoap.org/soap/encoding/", location="suds://schemas.xmlsoap.org/soap/encoding/"</msg>
<msg timestamp="20191112 13:57:37.410" level="DEBUG">b'&lt;?xml version="1.0" encoding="UTF-8"?&gt;\n&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"\n    xmlns:tns="http://schemas.xmlsoap.org/soap/encoding/"\n    targetNamespace="http://schemas.xmlsoap.org/soap/encoding/"&gt;\n\n &lt;xs:attribute name="root"&gt;\n   &lt;xs:annotation&gt;\n     &lt;xs:documentation&gt;\n       \'root\' can be used to distinguish serialization roots from other\n       elements that are present in a serialization but are not roots of\n       a serialized value graph\n     &lt;/xs:documentation&gt;\n   &lt;/xs:annotation&gt;\n   &lt;xs:simpleType&gt;\n     &lt;xs:restriction base="xs:boolean"&gt;\n       &lt;xs:pattern value="0|1"/&gt;\n     &lt;/xs:restriction&gt;\n   &lt;/xs:simpleType&gt;\n &lt;/xs:attribute&gt;\n\n  &lt;xs:attributeGroup name="commonAttributes"&gt;\n    &lt;xs:annotation&gt;\n      &lt;xs:documentation&gt;\n        Attributes common to all elements that function as accessors or\n        represent independent (multi-ref) values.  The href attribute is\n        intended to be used in a manner like CONREF.  That is, the element\n        content should be empty iff the href attribute appears\n      &lt;/xs:documentation&gt;\n    &lt;/xs:annotation&gt;\n    &lt;xs:attribute name="id" type="xs:ID"/&gt;\n    &lt;xs:attribute name="href" type="xs:anyURI"/&gt;\n    &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;\n  &lt;/xs:attributeGroup&gt;\n\n  &lt;!-- Global Attributes.  The following attributes are intended to be usable via qualified attribute names on any complex type referencing them. --&gt;\n\n  &lt;!-- Array attributes. Needed to give the type and dimensions of an array\'s contents, and the offset for partially-transmitted arrays. --&gt;\n\n  &lt;xs:simpleType name="arrayCoordinate"&gt;\n    &lt;xs:restriction base="xs:string"/&gt;\n  &lt;/xs:simpleType&gt;\n\n  &lt;xs:attribute name="arrayType" type="xs:string"/&gt;\n  &lt;xs:attribute name="offset" type="tns:arrayCoordinate"/&gt;\n\n  &lt;xs:attributeGroup name="arrayAttributes"&gt;\n    &lt;xs:attribute ref="tns:arrayType"/&gt;\n    &lt;xs:attribute ref="tns:offset"/&gt;\n  &lt;/xs:attributeGroup&gt;\n\n  &lt;xs:attribute name="position" type="tns:arrayCoordinate"/&gt;\n\n  &lt;xs:attributeGroup name="arrayMemberAttributes"&gt;\n    &lt;xs:attribute ref="tns:position"/&gt;\n  &lt;/xs:attributeGroup&gt;\n\n  &lt;xs:group name="Array"&gt;\n    &lt;xs:sequence&gt;\n      &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;\n    &lt;/xs:sequence&gt;\n  &lt;/xs:group&gt;\n\n  &lt;xs:element name="Array" type="tns:Array"/&gt;\n  &lt;xs:complexType name="Array"&gt;\n    &lt;xs:annotation&gt;\n      &lt;xs:documentation&gt;\n       \'Array\' is a complex type for accessors identified by position\n      &lt;/xs:documentation&gt;\n    &lt;/xs:annotation&gt;\n    &lt;xs:group ref="tns:Array" minOccurs="0"/&gt;\n    &lt;xs:attributeGroup ref="tns:arrayAttributes"/&gt;\n    &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;!-- \'Struct\' is a complex type for accessors identified by name.\n       Constraint: No element may be have the same name as any other,\n       nor may any element have a maxOccurs &gt; 1. --&gt;\n\n  &lt;xs:element name="Struct" type="tns:Struct"/&gt;\n\n  &lt;xs:group name="Struct"&gt;\n    &lt;xs:sequence&gt;\n      &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;\n    &lt;/xs:sequence&gt;\n  &lt;/xs:group&gt;\n\n  &lt;xs:complexType name="Struct"&gt;\n    &lt;xs:group ref="tns:Struct" minOccurs="0"/&gt;\n    &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;!-- \'Base64\' can be used to serialize binary data using base64 encoding\n       as defined in RFC2045 but without the MIME line length limitation. --&gt;\n\n  &lt;xs:simpleType name="base64"&gt;\n    &lt;xs:restriction base="xs:base64Binary"/&gt;\n  &lt;/xs:simpleType&gt;\n\n &lt;!-- Element declarations corresponding to each of the simple types in the\n      XML Schemas Specification. --&gt;\n\n  &lt;xs:element name="duration" type="tns:duration"/&gt;\n  &lt;xs:complexType name="duration"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:duration"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="dateTime" type="tns:dateTime"/&gt;\n  &lt;xs:complexType name="dateTime"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:dateTime"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="NOTATION" type="tns:NOTATION"/&gt;\n  &lt;xs:complexType name="NOTATION"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:QName"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="time" type="tns:time"/&gt;\n  &lt;xs:complexType name="time"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:time"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="date" type="tns:date"/&gt;\n  &lt;xs:complexType name="date"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:date"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="gYearMonth" type="tns:gYearMonth"/&gt;\n  &lt;xs:complexType name="gYearMonth"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:gYearMonth"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="gYear" type="tns:gYear"/&gt;\n  &lt;xs:complexType name="gYear"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:gYear"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="gMonthDay" type="tns:gMonthDay"/&gt;\n  &lt;xs:complexType name="gMonthDay"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:gMonthDay"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="gDay" type="tns:gDay"/&gt;\n  &lt;xs:complexType name="gDay"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:gDay"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="gMonth" type="tns:gMonth"/&gt;\n  &lt;xs:complexType name="gMonth"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:gMonth"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="boolean" type="tns:boolean"/&gt;\n  &lt;xs:complexType name="boolean"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:boolean"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="base64Binary" type="tns:base64Binary"/&gt;\n  &lt;xs:complexType name="base64Binary"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:base64Binary"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="hexBinary" type="tns:hexBinary"/&gt;\n  &lt;xs:complexType name="hexBinary"&gt;\n    &lt;xs:simpleContent&gt;\n     &lt;xs:extension base="xs:hexBinary"&gt;\n       &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n     &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="float" type="tns:float"/&gt;\n  &lt;xs:complexType name="float"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:float"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="double" type="tns:double"/&gt;\n  &lt;xs:complexType name="double"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:double"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="anyURI" type="tns:anyURI"/&gt;\n  &lt;xs:complexType name="anyURI"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:anyURI"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="QName" type="tns:QName"/&gt;\n  &lt;xs:complexType name="QName"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:QName"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="string" type="tns:string"/&gt;\n  &lt;xs:complexType name="string"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:string"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="normalizedString" type="tns:normalizedString"/&gt;\n  &lt;xs:complexType name="normalizedString"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:normalizedString"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="token" type="tns:token"/&gt;\n  &lt;xs:complexType name="token"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:token"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="language" type="tns:language"/&gt;\n  &lt;xs:complexType name="language"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:language"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="Name" type="tns:Name"/&gt;\n  &lt;xs:complexType name="Name"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:Name"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="NMTOKEN" type="tns:NMTOKEN"/&gt;\n  &lt;xs:complexType name="NMTOKEN"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:NMTOKEN"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="NCName" type="tns:NCName"/&gt;\n  &lt;xs:complexType name="NCName"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:NCName"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="NMTOKENS" type="tns:NMTOKENS"/&gt;\n  &lt;xs:complexType name="NMTOKENS"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:NMTOKENS"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="ID" type="tns:ID"/&gt;\n  &lt;xs:complexType name="ID"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:ID"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="IDREF" type="tns:IDREF"/&gt;\n  &lt;xs:complexType name="IDREF"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:IDREF"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="ENTITY" type="tns:ENTITY"/&gt;\n  &lt;xs:complexType name="ENTITY"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:ENTITY"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="IDREFS" type="tns:IDREFS"/&gt;\n  &lt;xs:complexType name="IDREFS"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:IDREFS"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="ENTITIES" type="tns:ENTITIES"/&gt;\n  &lt;xs:complexType name="ENTITIES"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:ENTITIES"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="decimal" type="tns:decimal"/&gt;\n  &lt;xs:complexType name="decimal"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:decimal"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="integer" type="tns:integer"/&gt;\n  &lt;xs:complexType name="integer"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:integer"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="nonPositiveInteger" type="tns:nonPositiveInteger"/&gt;\n  &lt;xs:complexType name="nonPositiveInteger"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:nonPositiveInteger"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="negativeInteger" type="tns:negativeInteger"/&gt;\n  &lt;xs:complexType name="negativeInteger"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:negativeInteger"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="long" type="tns:long"/&gt;\n  &lt;xs:complexType name="long"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:long"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="int" type="tns:int"/&gt;\n  &lt;xs:complexType name="int"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:int"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="short" type="tns:short"/&gt;\n  &lt;xs:complexType name="short"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:short"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="byte" type="tns:byte"/&gt;\n  &lt;xs:complexType name="byte"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:byte"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="nonNegativeInteger" type="tns:nonNegativeInteger"/&gt;\n  &lt;xs:complexType name="nonNegativeInteger"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:nonNegativeInteger"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="unsignedLong" type="tns:unsignedLong"/&gt;\n  &lt;xs:complexType name="unsignedLong"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:unsignedLong"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="unsignedInt" type="tns:unsignedInt"/&gt;\n  &lt;xs:complexType name="unsignedInt"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:unsignedInt"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="unsignedShort" type="tns:unsignedShort"/&gt;\n  &lt;xs:complexType name="unsignedShort"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:unsignedShort"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="unsignedByte" type="tns:unsignedByte"/&gt;\n  &lt;xs:complexType name="unsignedByte"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:unsignedByte"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="positiveInteger" type="tns:positiveInteger"/&gt;\n  &lt;xs:complexType name="positiveInteger"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:positiveInteger"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="anyType"/&gt;\n&lt;/xs:schema&gt;\n'
sax duration: 0 (ms)</msg>
<msg timestamp="20191112 13:57:37.426" level="DEBUG">built:
Schema:0x4173130
(raw)
   &lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.xmlsoap.org/soap/encoding/" targetNamespace="http://schemas.xmlsoap.org/soap/encoding/" url="suds://schemas.xmlsoap.org/soap/encoding/"&gt;
      &lt;xs:attribute name="root"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;root&amp;apos; can be used to distinguish serialization roots from other
       elements that are present in a serialization but are not roots of
       a serialized value graph
     &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:simpleType&gt;
            &lt;xs:restriction base="xs:boolean"&gt;
               &lt;xs:pattern value="0|1"/&gt;
            &lt;/xs:restriction&gt;
         &lt;/xs:simpleType&gt;
      &lt;/xs:attribute&gt;
      &lt;xs:attributeGroup name="commonAttributes"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
        Attributes common to all elements that function as accessors or
        represent independent (multi-ref) values.  The href attribute is
        intended to be used in a manner like CONREF.  That is, the element
        content should be empty iff the href attribute appears
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:attribute name="id" type="xs:ID"/&gt;
         &lt;xs:attribute name="href" type="xs:anyURI"/&gt;
         &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:simpleType name="arrayCoordinate"&gt;
         &lt;xs:restriction base="xs:string"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:attribute name="arrayType" type="xs:string"/&gt;
      &lt;xs:attribute name="offset" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayAttributes"&gt;
         &lt;xs:attribute ref="tns:arrayType"/&gt;
         &lt;xs:attribute ref="tns:offset"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:attribute name="position" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayMemberAttributes"&gt;
         &lt;xs:attribute ref="tns:position"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:group name="Array"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:element name="Array" type="tns:Array"/&gt;
      &lt;xs:complexType name="Array"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;Array&amp;apos; is a complex type for accessors identified by position
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:group ref="tns:Array" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:arrayAttributes"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Struct" type="tns:Struct"/&gt;
      &lt;xs:group name="Struct"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:complexType name="Struct"&gt;
         &lt;xs:group ref="tns:Struct" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:simpleType name="base64"&gt;
         &lt;xs:restriction base="xs:base64Binary"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:element name="duration" type="tns:duration"/&gt;
      &lt;xs:complexType name="duration"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:duration"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="dateTime" type="tns:dateTime"/&gt;
      &lt;xs:complexType name="dateTime"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:dateTime"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NOTATION" type="tns:NOTATION"/&gt;
      &lt;xs:complexType name="NOTATION"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="time" type="tns:time"/&gt;
      &lt;xs:complexType name="time"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:time"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="date" type="tns:date"/&gt;
      &lt;xs:complexType name="date"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:date"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYearMonth" type="tns:gYearMonth"/&gt;
      &lt;xs:complexType name="gYearMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYearMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYear" type="tns:gYear"/&gt;
      &lt;xs:complexType name="gYear"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYear"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonthDay" type="tns:gMonthDay"/&gt;
      &lt;xs:complexType name="gMonthDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonthDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gDay" type="tns:gDay"/&gt;
      &lt;xs:complexType name="gDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonth" type="tns:gMonth"/&gt;
      &lt;xs:complexType name="gMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="boolean" type="tns:boolean"/&gt;
      &lt;xs:complexType name="boolean"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:boolean"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="base64Binary" type="tns:base64Binary"/&gt;
      &lt;xs:complexType name="base64Binary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:base64Binary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="hexBinary" type="tns:hexBinary"/&gt;
      &lt;xs:complexType name="hexBinary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:hexBinary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="float" type="tns:float"/&gt;
      &lt;xs:complexType name="float"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:float"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="double" type="tns:double"/&gt;
      &lt;xs:complexType name="double"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:double"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyURI" type="tns:anyURI"/&gt;
      &lt;xs:complexType name="anyURI"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:anyURI"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="QName" type="tns:QName"/&gt;
      &lt;xs:complexType name="QName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="string" type="tns:string"/&gt;
      &lt;xs:complexType name="string"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:string"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="normalizedString" type="tns:normalizedString"/&gt;
      &lt;xs:complexType name="normalizedString"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:normalizedString"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="token" type="tns:token"/&gt;
      &lt;xs:complexType name="token"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:token"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="language" type="tns:language"/&gt;
      &lt;xs:complexType name="language"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:language"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Name" type="tns:Name"/&gt;
      &lt;xs:complexType name="Name"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:Name"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKEN" type="tns:NMTOKEN"/&gt;
      &lt;xs:complexType name="NMTOKEN"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKEN"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NCName" type="tns:NCName"/&gt;
      &lt;xs:complexType name="NCName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NCName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKENS" type="tns:NMTOKENS"/&gt;
      &lt;xs:complexType name="NMTOKENS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKENS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ID" type="tns:ID"/&gt;
      &lt;xs:complexType name="ID"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ID"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREF" type="tns:IDREF"/&gt;
      &lt;xs:complexType name="IDREF"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREF"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITY" type="tns:ENTITY"/&gt;
      &lt;xs:complexType name="ENTITY"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITY"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREFS" type="tns:IDREFS"/&gt;
      &lt;xs:complexType name="IDREFS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREFS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITIES" type="tns:ENTITIES"/&gt;
      &lt;xs:complexType name="ENTITIES"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITIES"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="decimal" type="tns:decimal"/&gt;
      &lt;xs:complexType name="decimal"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:decimal"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="integer" type="tns:integer"/&gt;
      &lt;xs:complexType name="integer"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:integer"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonPositiveInteger" type="tns:nonPositiveInteger"/&gt;
      &lt;xs:complexType name="nonPositiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonPositiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="negativeInteger" type="tns:negativeInteger"/&gt;
      &lt;xs:complexType name="negativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:negativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="long" type="tns:long"/&gt;
      &lt;xs:complexType name="long"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:long"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="int" type="tns:int"/&gt;
      &lt;xs:complexType name="int"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:int"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="short" type="tns:short"/&gt;
      &lt;xs:complexType name="short"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:short"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="byte" type="tns:byte"/&gt;
      &lt;xs:complexType name="byte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:byte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonNegativeInteger" type="tns:nonNegativeInteger"/&gt;
      &lt;xs:complexType name="nonNegativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonNegativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedLong" type="tns:unsignedLong"/&gt;
      &lt;xs:complexType name="unsignedLong"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedLong"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedInt" type="tns:unsignedInt"/&gt;
      &lt;xs:complexType name="unsignedInt"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedInt"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedShort" type="tns:unsignedShort"/&gt;
      &lt;xs:complexType name="unsignedShort"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedShort"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedByte" type="tns:unsignedByte"/&gt;
      &lt;xs:complexType name="unsignedByte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedByte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="positiveInteger" type="tns:positiveInteger"/&gt;
      &lt;xs:complexType name="positiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:positiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyType"/&gt;
   &lt;/xs:schema&gt;
(model)
   &lt;Attribute:0x41732d0 name="root" /&gt;
   &lt;AttributeGroup:0x4173730 name="commonAttributes"&gt;
      &lt;Attribute:0x4173410 name="id" type="xs:ID" /&gt;@
      &lt;Attribute:0x4173e50 name="href" type="xs:anyURI" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Simple:0x4173910 name="arrayCoordinate" /&gt;
   &lt;Attribute:0x4173a10 name="arrayType" type="xs:string" /&gt;
   &lt;Attribute:0x4173b10 name="offset" type="tns:arrayCoordinate" /&gt;
   &lt;AttributeGroup:0x3e30510 name="arrayAttributes"&gt;
      &lt;Attribute:0x3e30290 ref="tns:arrayType" /&gt;@
      &lt;Attribute:0x3e30810 ref="tns:offset" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Attribute:0x3e305d0 name="position" type="tns:arrayCoordinate" /&gt;
   &lt;AttributeGroup:0x3e30b90 name="arrayMemberAttributes"&gt;
      &lt;Attribute:0x3e30870 ref="tns:position" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Group:0x3e30d50 name="Array"&gt;
      &lt;Sequence:0x3e300d0&gt;
         &lt;Any:0x3e30a50 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Element:0x3e30cf0 name="Array" type="tns:Array" /&gt;
   &lt;Complex:0x3e30950 name="Array" /&gt;
   &lt;Element:0x3e30f70 name="Struct" type="tns:Struct" /&gt;
   &lt;Group:0x4153570 name="Struct"&gt;
      &lt;Sequence:0x4153430&gt;
         &lt;Any:0x4153710 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Complex:0x4153150 name="Struct" /&gt;
   &lt;Simple:0x4153a70 name="base64" /&gt;
   &lt;Element:0x3e64030 name="duration" type="tns:duration" /&gt;
   &lt;Complex:0x3e649d0 name="duration" /&gt;
   &lt;Element:0x3e64150 name="dateTime" type="tns:dateTime" /&gt;
   &lt;Complex:0x3e64590 name="dateTime" /&gt;
   &lt;Element:0x3e64550 name="NOTATION" type="tns:NOTATION" /&gt;
   &lt;Complex:0x3e644b0 name="NOTATION" /&gt;
   &lt;Element:0x3e64510 name="time" type="tns:time" /&gt;
   &lt;Complex:0x3e646d0 name="time" /&gt;
   &lt;Element:0x3e39110 name="date" type="tns:date" /&gt;
   &lt;Complex:0x3e39750 name="date" /&gt;
   &lt;Element:0x3e39930 name="gYearMonth" type="tns:gYearMonth" /&gt;
   &lt;Complex:0x3e39c10 name="gYearMonth" /&gt;
   &lt;Element:0x3e39a30 name="gYear" type="tns:gYear" /&gt;
   &lt;Complex:0x3e4cf90 name="gYear" /&gt;
   &lt;Element:0x3e4c2b0 name="gMonthDay" type="tns:gMonthDay" /&gt;
   &lt;Complex:0x3e4cb90 name="gMonthDay" /&gt;
   &lt;Element:0x3e4c870 name="gDay" type="tns:gDay" /&gt;
   &lt;Complex:0x416fef0 name="gDay" /&gt;
   &lt;Element:0x416f550 name="gMonth" type="tns:gMonth" /&gt;
   &lt;Complex:0x416f870 name="gMonth" /&gt;
   &lt;Element:0x416f150 name="boolean" type="tns:boolean" /&gt;
   &lt;Complex:0x416ff10 name="boolean" /&gt;
   &lt;Element:0x4182550 name="base64Binary" type="tns:base64Binary" /&gt;
   &lt;Complex:0x4182a50 name="base64Binary" /&gt;
   &lt;Element:0x4182cb0 name="hexBinary" type="tns:hexBinary" /&gt;
   &lt;Complex:0x4182f90 name="hexBinary" /&gt;
   &lt;Element:0x4182df0 name="float" type="tns:float" /&gt;
   &lt;Complex:0x415a850 name="float" /&gt;
   &lt;Element:0x415abf0 name="double" type="tns:double" /&gt;
   &lt;Complex:0x415af50 name="double" /&gt;
   &lt;Element:0x415ac10 name="anyURI" type="tns:anyURI" /&gt;
   &lt;Complex:0x4199750 name="anyURI" /&gt;
   &lt;Element:0x4199a30 name="QName" type="tns:QName" /&gt;
   &lt;Complex:0x4199e10 name="QName" /&gt;
   &lt;Element:0x4199ff0 name="string" type="tns:string" /&gt;
   &lt;Complex:0x41a1550 name="string" /&gt;
   &lt;Element:0x41a1670 name="normalizedString" type="tns:normalizedString" /&gt;
   &lt;Complex:0x41a16f0 name="normalizedString" /&gt;
   &lt;Element:0x41a1730 name="token" type="tns:token" /&gt;
   &lt;Complex:0x41a1790 name="token" /&gt;
   &lt;Element:0x41a17d0 name="language" type="tns:language" /&gt;
   &lt;Complex:0x41a1830 name="language" /&gt;
   &lt;Element:0x41a1870 name="Name" type="tns:Name" /&gt;
   &lt;Complex:0x41a18d0 name="Name" /&gt;
   &lt;Element:0x41a1910 name="NMTOKEN" type="tns:NMTOKEN" /&gt;
   &lt;Complex:0x41a1970 name="NMTOKEN" /&gt;
   &lt;Element:0x41a19b0 name="NCName" type="tns:NCName" /&gt;
   &lt;Complex:0x41a1a10 name="NCName" /&gt;
   &lt;Element:0x41a1a50 name="NMTOKENS" type="tns:NMTOKENS" /&gt;
   &lt;Complex:0x41a1ab0 name="NMTOKENS" /&gt;
   &lt;Element:0x41a1af0 name="ID" type="tns:ID" /&gt;
   &lt;Complex:0x41a1b50 name="ID" /&gt;
   &lt;Element:0x41a1b90 name="IDREF" type="tns:IDREF" /&gt;
   &lt;Complex:0x41a1bf0 name="IDREF" /&gt;
   &lt;Element:0x41a1c30 name="ENTITY" type="tns:ENTITY" /&gt;
   &lt;Complex:0x41a1c90 name="ENTITY" /&gt;
   &lt;Element:0x41a1cd0 name="IDREFS" type="tns:IDREFS" /&gt;
   &lt;Complex:0x41a1d30 name="IDREFS" /&gt;
   &lt;Element:0x41a1d70 name="ENTITIES" type="tns:ENTITIES" /&gt;
   &lt;Complex:0x41a1dd0 name="ENTITIES" /&gt;
   &lt;Element:0x41a1e10 name="decimal" type="tns:decimal" /&gt;
   &lt;Complex:0x41a1e70 name="decimal" /&gt;
   &lt;Element:0x41a1eb0 name="integer" type="tns:integer" /&gt;
   &lt;Complex:0x41a1f10 name="integer" /&gt;
   &lt;Element:0x41a1f50 name="nonPositiveInteger" type="tns:nonPositiveInteger" /&gt;
   &lt;Complex:0x41a1fb0 name="nonPositiveInteger" /&gt;
   &lt;Element:0x41a1ff0 name="negativeInteger" type="tns:negativeInteger" /&gt;
   &lt;Complex:0x41a1fd0 name="negativeInteger" /&gt;
   &lt;Element:0x41be0b0 name="long" type="tns:long" /&gt;
   &lt;Complex:0x41be110 name="long" /&gt;
   &lt;Element:0x41be150 name="int" type="tns:int" /&gt;
   &lt;Complex:0x41be1b0 name="int" /&gt;
   &lt;Element:0x41be1f0 name="short" type="tns:short" /&gt;
   &lt;Complex:0x41be250 name="short" /&gt;
   &lt;Element:0x41be290 name="byte" type="tns:byte" /&gt;
   &lt;Complex:0x41be2f0 name="byte" /&gt;
   &lt;Element:0x41be330 name="nonNegativeInteger" type="tns:nonNegativeInteger" /&gt;
   &lt;Complex:0x41be390 name="nonNegativeInteger" /&gt;
   &lt;Element:0x41be3d0 name="unsignedLong" type="tns:unsignedLong" /&gt;
   &lt;Complex:0x41be430 name="unsignedLong" /&gt;
   &lt;Element:0x41be470 name="unsignedInt" type="tns:unsignedInt" /&gt;
   &lt;Complex:0x41be4d0 name="unsignedInt" /&gt;
   &lt;Element:0x41be510 name="unsignedShort" type="tns:unsignedShort" /&gt;
   &lt;Complex:0x41be570 name="unsignedShort" /&gt;
   &lt;Element:0x41be5b0 name="unsignedByte" type="tns:unsignedByte" /&gt;
   &lt;Complex:0x41be610 name="unsignedByte" /&gt;
   &lt;Element:0x41be650 name="positiveInteger" type="tns:positiveInteger" /&gt;
   &lt;Complex:0x41be6b0 name="positiveInteger" /&gt;
   &lt;Element:0x41be6f0 name="anyType" type="xs:anyType" /&gt;
</msg>
<msg timestamp="20191112 13:57:37.426" level="DEBUG">Attribute:0x4173410, convert type="xs:ID" to ('ID', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.426" level="DEBUG">Attribute:0x4173e50, convert type="xs:anyURI" to ('anyURI', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.426" level="DEBUG">Restriction:0x4173cb0, convert ref="xs:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.426" level="DEBUG">TypeQuery:0x41be750, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.426" level="DEBUG">Attribute:0x4173a10, convert type="xs:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.426" level="DEBUG">Attribute:0x4173b10, convert type="tns:arrayCoordinate" to ('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.426" level="DEBUG">Attribute:0x3e30290, convert ref="tns:arrayType" to ('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.426" level="DEBUG">('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;Attribute:0x4173a10 name="arrayType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;</msg>
<msg timestamp="20191112 13:57:37.426" level="DEBUG">Attribute:0x3e30810, convert ref="tns:offset" to ('offset', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.426" level="DEBUG">('offset', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;Attribute:0x4173b10 name="offset" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;</msg>
<msg timestamp="20191112 13:57:37.426" level="DEBUG">Attribute:0x3e305d0, convert type="tns:arrayCoordinate" to ('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.426" level="DEBUG">Attribute:0x3e30870, convert ref="tns:position" to ('position', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">('position', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;Attribute:0x3e305d0 name="position" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Element:0x3e30cf0, convert type="tns:Array" to ('Array', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Group:0x4153290, convert ref="tns:Array" to ('Array', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">('Array', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;Group:0x3e30d50 name="Array" /&gt;</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">AttributeGroup:0x4153850, convert ref="tns:arrayAttributes" to ('arrayAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">('arrayAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x3e30510 name="arrayAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">AttributeGroup:0x4153b70, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Element:0x3e30f70, convert type="tns:Struct" to ('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Group:0x4153cd0, convert ref="tns:Struct" to ('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">('Struct', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;Group:0x4153570 name="Struct" /&gt;</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">AttributeGroup:0x4153e10, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Restriction:0x3e64290, convert ref="xs:base64Binary" to ('base64Binary', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">TypeQuery:0x41be850, found builtin (base64Binary)</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Element:0x3e64030, convert type="tns:duration" to ('duration', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Extension:0x3e64190, convert ref="xs:duration" to ('duration', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">TypeQuery:0x41be7d0, found builtin (duration)</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">AttributeGroup:0x3e64170, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Element:0x3e64150, convert type="tns:dateTime" to ('dateTime', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Extension:0x3e640f0, convert ref="xs:dateTime" to ('dateTime', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">TypeQuery:0x41be790, found builtin (dateTime)</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">AttributeGroup:0x3e643f0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Element:0x3e64550, convert type="tns:NOTATION" to ('NOTATION', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Extension:0x3e64130, convert ref="xs:QName" to ('QName', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">TypeQuery:0x41be930, found builtin (QName)</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">AttributeGroup:0x3e39d10, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Element:0x3e64510, convert type="tns:time" to ('time', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Extension:0x3e39290, convert ref="xs:time" to ('time', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">TypeQuery:0x41be9b0, found builtin (time)</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">AttributeGroup:0x3e39510, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Element:0x3e39110, convert type="tns:date" to ('date', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Extension:0x3e39670, convert ref="xs:date" to ('date', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">TypeQuery:0x41be7d0, found builtin (date)</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">AttributeGroup:0x3e39fb0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Element:0x3e39930, convert type="tns:gYearMonth" to ('gYearMonth', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Extension:0x3e4c730, convert ref="xs:gYearMonth" to ('gYearMonth', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">TypeQuery:0x41be9d0, found builtin (gYearMonth)</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">AttributeGroup:0x3e4ce30, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Element:0x3e39a30, convert type="tns:gYear" to ('gYear', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Extension:0x3e4c130, convert ref="xs:gYear" to ('gYear', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">TypeQuery:0x41be970, found builtin (gYear)</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">AttributeGroup:0x3e4c5d0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Element:0x3e4c2b0, convert type="tns:gMonthDay" to ('gMonthDay', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Extension:0x416f6d0, convert ref="xs:gMonthDay" to ('gMonthDay', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">TypeQuery:0x41bea50, found builtin (gMonthDay)</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">AttributeGroup:0x416fcd0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Element:0x3e4c870, convert type="tns:gDay" to ('gDay', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Extension:0x416f9b0, convert ref="xs:gDay" to ('gDay', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">TypeQuery:0x41bea90, found builtin (gDay)</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">AttributeGroup:0x416f3f0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Element:0x416f550, convert type="tns:gMonth" to ('gMonth', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Extension:0x416f050, convert ref="xs:gMonth" to ('gMonth', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">TypeQuery:0x41be910, found builtin (gMonth)</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">AttributeGroup:0x41820f0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Element:0x416f150, convert type="tns:boolean" to ('boolean', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Extension:0x4182410, convert ref="xs:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">TypeQuery:0x41bea30, found builtin (boolean)</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">AttributeGroup:0x4182830, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Element:0x4182550, convert type="tns:base64Binary" to ('base64Binary', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Extension:0x4182b50, convert ref="xs:base64Binary" to ('base64Binary', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">TypeQuery:0x41be970, found builtin (base64Binary)</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">AttributeGroup:0x415a0f0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Element:0x4182cb0, convert type="tns:hexBinary" to ('hexBinary', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Extension:0x415a310, convert ref="xs:hexBinary" to ('hexBinary', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">TypeQuery:0x41beab0, found builtin (hexBinary)</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">AttributeGroup:0x415a6f0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Element:0x4182df0, convert type="tns:float" to ('float', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Extension:0x415a990, convert ref="xs:float" to ('float', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">TypeQuery:0x41be890, found builtin (float)</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">AttributeGroup:0x415add0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Element:0x415abf0, convert type="tns:double" to ('double', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Extension:0x4199110, convert ref="xs:double" to ('double', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">TypeQuery:0x41bea30, found builtin (double)</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">AttributeGroup:0x4199570, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Element:0x415ac10, convert type="tns:anyURI" to ('anyURI', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Extension:0x4199850, convert ref="xs:anyURI" to ('anyURI', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">TypeQuery:0x41beb10, found builtin (anyURI)</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">AttributeGroup:0x4199d10, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Element:0x4199a30, convert type="tns:QName" to ('QName', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Extension:0x41a1110, convert ref="xs:QName" to ('QName', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">TypeQuery:0x41be970, found builtin (QName)</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">AttributeGroup:0x41a13f0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Element:0x4199ff0, convert type="tns:string" to ('string', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Extension:0x41a15d0, convert ref="xs:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">TypeQuery:0x41bead0, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">AttributeGroup:0x41a16d0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Element:0x41a1670, convert type="tns:normalizedString" to ('normalizedString', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Extension:0x41a1710, convert ref="xs:normalizedString" to ('normalizedString', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">TypeQuery:0x41beb90, found builtin (normalizedString)</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">AttributeGroup:0x41a1770, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Element:0x41a1730, convert type="tns:token" to ('token', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Extension:0x41a17b0, convert ref="xs:token" to ('token', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">TypeQuery:0x41bec50, found builtin (token)</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">AttributeGroup:0x41a1810, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Element:0x41a17d0, convert type="tns:language" to ('language', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Extension:0x41a1850, convert ref="xs:language" to ('language', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">TypeQuery:0x41be7d0, found builtin (language)</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">AttributeGroup:0x41a18b0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Element:0x41a1870, convert type="tns:Name" to ('Name', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Extension:0x41a18f0, convert ref="xs:Name" to ('Name', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">TypeQuery:0x41bea70, found builtin (Name)</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">AttributeGroup:0x41a1950, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Element:0x41a1910, convert type="tns:NMTOKEN" to ('NMTOKEN', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Extension:0x41a1990, convert ref="xs:NMTOKEN" to ('NMTOKEN', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">TypeQuery:0x41bec30, found builtin (NMTOKEN)</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">AttributeGroup:0x41a19f0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Element:0x41a19b0, convert type="tns:NCName" to ('NCName', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Extension:0x41a1a30, convert ref="xs:NCName" to ('NCName', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">TypeQuery:0x41becb0, found builtin (NCName)</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">AttributeGroup:0x41a1a90, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Element:0x41a1a50, convert type="tns:NMTOKENS" to ('NMTOKENS', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Extension:0x41a1ad0, convert ref="xs:NMTOKENS" to ('NMTOKENS', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">TypeQuery:0x41bec50, found builtin (NMTOKENS)</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">AttributeGroup:0x41a1b30, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.442" level="DEBUG">Element:0x41a1af0, convert type="tns:ID" to ('ID', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Extension:0x41a1b70, convert ref="xs:ID" to ('ID', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">TypeQuery:0x41bed10, found builtin (ID)</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">AttributeGroup:0x41a1bd0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Element:0x41a1b90, convert type="tns:IDREF" to ('IDREF', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Extension:0x41a1c10, convert ref="xs:IDREF" to ('IDREF', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">TypeQuery:0x41bec70, found builtin (IDREF)</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">AttributeGroup:0x41a1c70, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Element:0x41a1c30, convert type="tns:ENTITY" to ('ENTITY', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Extension:0x41a1cb0, convert ref="xs:ENTITY" to ('ENTITY', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">TypeQuery:0x41becb0, found builtin (ENTITY)</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">AttributeGroup:0x41a1d10, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Element:0x41a1cd0, convert type="tns:IDREFS" to ('IDREFS', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Extension:0x41a1d50, convert ref="xs:IDREFS" to ('IDREFS', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">TypeQuery:0x41bed50, found builtin (IDREFS)</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">AttributeGroup:0x41a1db0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Element:0x41a1d70, convert type="tns:ENTITIES" to ('ENTITIES', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Extension:0x41a1df0, convert ref="xs:ENTITIES" to ('ENTITIES', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">TypeQuery:0x41bead0, found builtin (ENTITIES)</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">AttributeGroup:0x41a1e50, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Element:0x41a1e10, convert type="tns:decimal" to ('decimal', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Extension:0x41a1e90, convert ref="xs:decimal" to ('decimal', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">TypeQuery:0x41bed70, found builtin (decimal)</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">AttributeGroup:0x41a1ef0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Element:0x41a1eb0, convert type="tns:integer" to ('integer', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Extension:0x41a1f30, convert ref="xs:integer" to ('integer', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">TypeQuery:0x41bee90, found builtin (integer)</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">AttributeGroup:0x41a1f90, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Element:0x41a1f50, convert type="tns:nonPositiveInteger" to ('nonPositiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Extension:0x41be030, convert ref="xs:nonPositiveInteger" to ('nonPositiveInteger', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">TypeQuery:0x41bee10, found builtin (nonPositiveInteger)</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">AttributeGroup:0x41be050, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Element:0x41a1ff0, convert type="tns:negativeInteger" to ('negativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Extension:0x41be090, convert ref="xs:negativeInteger" to ('negativeInteger', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">TypeQuery:0x41beef0, found builtin (negativeInteger)</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">AttributeGroup:0x41be0f0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Element:0x41be0b0, convert type="tns:long" to ('long', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Extension:0x41be130, convert ref="xs:long" to ('long', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">TypeQuery:0x41beed0, found builtin (long)</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">AttributeGroup:0x41be190, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Element:0x41be150, convert type="tns:int" to ('int', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Extension:0x41be1d0, convert ref="xs:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">TypeQuery:0x41bee90, found builtin (int)</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">AttributeGroup:0x41be230, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Element:0x41be1f0, convert type="tns:short" to ('short', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Extension:0x41be270, convert ref="xs:short" to ('short', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">TypeQuery:0x41beeb0, found builtin (short)</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">AttributeGroup:0x41be2d0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Element:0x41be290, convert type="tns:byte" to ('byte', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Extension:0x41be310, convert ref="xs:byte" to ('byte', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">TypeQuery:0x41bec10, found builtin (byte)</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">AttributeGroup:0x41be370, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Element:0x41be330, convert type="tns:nonNegativeInteger" to ('nonNegativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Extension:0x41be3b0, convert ref="xs:nonNegativeInteger" to ('nonNegativeInteger', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">TypeQuery:0x41bee50, found builtin (nonNegativeInteger)</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">AttributeGroup:0x41be410, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Element:0x41be3d0, convert type="tns:unsignedLong" to ('unsignedLong', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Extension:0x41be450, convert ref="xs:unsignedLong" to ('unsignedLong', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">TypeQuery:0x41bef70, found builtin (unsignedLong)</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">AttributeGroup:0x41be4b0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Element:0x41be470, convert type="tns:unsignedInt" to ('unsignedInt', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Extension:0x41be4f0, convert ref="xs:unsignedInt" to ('unsignedInt', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">TypeQuery:0x41bee10, found builtin (unsignedInt)</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">AttributeGroup:0x41be550, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Element:0x41be510, convert type="tns:unsignedShort" to ('unsignedShort', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Extension:0x41be590, convert ref="xs:unsignedShort" to ('unsignedShort', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">TypeQuery:0x41bee30, found builtin (unsignedShort)</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">AttributeGroup:0x41be5f0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Element:0x41be5b0, convert type="tns:unsignedByte" to ('unsignedByte', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Extension:0x41be630, convert ref="xs:unsignedByte" to ('unsignedByte', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">TypeQuery:0x41bef30, found builtin (unsignedByte)</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">AttributeGroup:0x41be690, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Element:0x41be650, convert type="tns:positiveInteger" to ('positiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Extension:0x41be6d0, convert ref="xs:positiveInteger" to ('positiveInteger', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">TypeQuery:0x41bef50, found builtin (positiveInteger)</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">AttributeGroup:0x41be730, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">Element:0x41be6f0, convert type="xs:anyType" to ('anyType', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;Attribute:0x3e30290 ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;Attribute:0x4173a10 name="arrayType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;Attribute:0x3e30810 ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;Attribute:0x4173b10 name="offset" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;Attribute:0x3e30870 ref="('position', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;Attribute:0x3e305d0 name="position" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;Group:0x4153290 ref="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;Group:0x3e30d50 name="Array" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x4153850 ref="('arrayAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x3e30510 name="arrayAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x4153b70 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;Group:0x4153cd0 ref="('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;Group:0x4153570 name="Struct" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x4153e10 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x3e64170 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x3e643f0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x3e39d10 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x3e39510 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x3e39fb0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x3e4ce30 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x3e4c5d0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x416fcd0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x416f3f0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41820f0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x4182830 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x415a0f0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x415a6f0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x415add0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x4199570 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x4199d10 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41a13f0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41a16d0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41a1770 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41a1810 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41a18b0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41a1950 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41a19f0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41a1a90 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41a1b30 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41a1bd0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41a1c70 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.457" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41a1d10 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.473" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41a1db0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.473" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41a1e50 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.473" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41a1ef0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.473" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41a1f90 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.473" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41be050 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.473" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41be0f0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.473" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41be190 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.473" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41be230 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.473" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41be2d0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.473" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41be370 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.473" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41be410 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.473" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41be4b0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.473" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41be550 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.473" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41be5f0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.473" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41be690 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.473" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41be730 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4173730 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191112 13:57:37.473" level="DEBUG">dereferenced:
Schema:0x4173130
(raw)
   &lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.xmlsoap.org/soap/encoding/" targetNamespace="http://schemas.xmlsoap.org/soap/encoding/" url="suds://schemas.xmlsoap.org/soap/encoding/"&gt;
      &lt;xs:attribute name="root"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;root&amp;apos; can be used to distinguish serialization roots from other
       elements that are present in a serialization but are not roots of
       a serialized value graph
     &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:simpleType&gt;
            &lt;xs:restriction base="xs:boolean"&gt;
               &lt;xs:pattern value="0|1"/&gt;
            &lt;/xs:restriction&gt;
         &lt;/xs:simpleType&gt;
      &lt;/xs:attribute&gt;
      &lt;xs:attributeGroup name="commonAttributes"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
        Attributes common to all elements that function as accessors or
        represent independent (multi-ref) values.  The href attribute is
        intended to be used in a manner like CONREF.  That is, the element
        content should be empty iff the href attribute appears
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:attribute name="id" type="xs:ID"/&gt;
         &lt;xs:attribute name="href" type="xs:anyURI"/&gt;
         &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:simpleType name="arrayCoordinate"&gt;
         &lt;xs:restriction base="xs:string"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:attribute name="arrayType" type="xs:string"/&gt;
      &lt;xs:attribute name="offset" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayAttributes"&gt;
         &lt;xs:attribute ref="tns:arrayType"/&gt;
         &lt;xs:attribute ref="tns:offset"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:attribute name="position" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayMemberAttributes"&gt;
         &lt;xs:attribute ref="tns:position"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:group name="Array"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:element name="Array" type="tns:Array"/&gt;
      &lt;xs:complexType name="Array"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;Array&amp;apos; is a complex type for accessors identified by position
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:group ref="tns:Array" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:arrayAttributes"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Struct" type="tns:Struct"/&gt;
      &lt;xs:group name="Struct"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:complexType name="Struct"&gt;
         &lt;xs:group ref="tns:Struct" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:simpleType name="base64"&gt;
         &lt;xs:restriction base="xs:base64Binary"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:element name="duration" type="tns:duration"/&gt;
      &lt;xs:complexType name="duration"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:duration"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="dateTime" type="tns:dateTime"/&gt;
      &lt;xs:complexType name="dateTime"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:dateTime"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NOTATION" type="tns:NOTATION"/&gt;
      &lt;xs:complexType name="NOTATION"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="time" type="tns:time"/&gt;
      &lt;xs:complexType name="time"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:time"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="date" type="tns:date"/&gt;
      &lt;xs:complexType name="date"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:date"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYearMonth" type="tns:gYearMonth"/&gt;
      &lt;xs:complexType name="gYearMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYearMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYear" type="tns:gYear"/&gt;
      &lt;xs:complexType name="gYear"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYear"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonthDay" type="tns:gMonthDay"/&gt;
      &lt;xs:complexType name="gMonthDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonthDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gDay" type="tns:gDay"/&gt;
      &lt;xs:complexType name="gDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonth" type="tns:gMonth"/&gt;
      &lt;xs:complexType name="gMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="boolean" type="tns:boolean"/&gt;
      &lt;xs:complexType name="boolean"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:boolean"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="base64Binary" type="tns:base64Binary"/&gt;
      &lt;xs:complexType name="base64Binary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:base64Binary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="hexBinary" type="tns:hexBinary"/&gt;
      &lt;xs:complexType name="hexBinary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:hexBinary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="float" type="tns:float"/&gt;
      &lt;xs:complexType name="float"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:float"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="double" type="tns:double"/&gt;
      &lt;xs:complexType name="double"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:double"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyURI" type="tns:anyURI"/&gt;
      &lt;xs:complexType name="anyURI"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:anyURI"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="QName" type="tns:QName"/&gt;
      &lt;xs:complexType name="QName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="string" type="tns:string"/&gt;
      &lt;xs:complexType name="string"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:string"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="normalizedString" type="tns:normalizedString"/&gt;
      &lt;xs:complexType name="normalizedString"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:normalizedString"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="token" type="tns:token"/&gt;
      &lt;xs:complexType name="token"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:token"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="language" type="tns:language"/&gt;
      &lt;xs:complexType name="language"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:language"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Name" type="tns:Name"/&gt;
      &lt;xs:complexType name="Name"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:Name"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKEN" type="tns:NMTOKEN"/&gt;
      &lt;xs:complexType name="NMTOKEN"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKEN"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NCName" type="tns:NCName"/&gt;
      &lt;xs:complexType name="NCName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NCName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKENS" type="tns:NMTOKENS"/&gt;
      &lt;xs:complexType name="NMTOKENS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKENS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ID" type="tns:ID"/&gt;
      &lt;xs:complexType name="ID"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ID"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREF" type="tns:IDREF"/&gt;
      &lt;xs:complexType name="IDREF"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREF"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITY" type="tns:ENTITY"/&gt;
      &lt;xs:complexType name="ENTITY"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITY"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREFS" type="tns:IDREFS"/&gt;
      &lt;xs:complexType name="IDREFS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREFS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITIES" type="tns:ENTITIES"/&gt;
      &lt;xs:complexType name="ENTITIES"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITIES"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="decimal" type="tns:decimal"/&gt;
      &lt;xs:complexType name="decimal"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:decimal"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="integer" type="tns:integer"/&gt;
      &lt;xs:complexType name="integer"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:integer"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonPositiveInteger" type="tns:nonPositiveInteger"/&gt;
      &lt;xs:complexType name="nonPositiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonPositiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="negativeInteger" type="tns:negativeInteger"/&gt;
      &lt;xs:complexType name="negativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:negativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="long" type="tns:long"/&gt;
      &lt;xs:complexType name="long"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:long"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="int" type="tns:int"/&gt;
      &lt;xs:complexType name="int"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:int"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="short" type="tns:short"/&gt;
      &lt;xs:complexType name="short"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:short"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="byte" type="tns:byte"/&gt;
      &lt;xs:complexType name="byte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:byte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonNegativeInteger" type="tns:nonNegativeInteger"/&gt;
      &lt;xs:complexType name="nonNegativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonNegativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedLong" type="tns:unsignedLong"/&gt;
      &lt;xs:complexType name="unsignedLong"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedLong"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedInt" type="tns:unsignedInt"/&gt;
      &lt;xs:complexType name="unsignedInt"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedInt"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedShort" type="tns:unsignedShort"/&gt;
      &lt;xs:complexType name="unsignedShort"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedShort"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedByte" type="tns:unsignedByte"/&gt;
      &lt;xs:complexType name="unsignedByte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedByte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="positiveInteger" type="tns:positiveInteger"/&gt;
      &lt;xs:complexType name="positiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:positiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyType"/&gt;
   &lt;/xs:schema&gt;
(model)
   &lt;Attribute:0x41732d0 name="root" /&gt;
   &lt;AttributeGroup:0x4173730 name="commonAttributes"&gt;
      &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Simple:0x4173910 name="arrayCoordinate" /&gt;
   &lt;Attribute:0x4173a10 name="arrayType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;Attribute:0x4173b10 name="offset" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;AttributeGroup:0x3e30510 name="arrayAttributes"&gt;
      &lt;Attribute:0x3e30290 name="arrayType" ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;Attribute:0x3e30810 name="offset" ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Attribute:0x3e305d0 name="position" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;AttributeGroup:0x3e30b90 name="arrayMemberAttributes"&gt;
      &lt;Attribute:0x3e30870 name="position" ref="('position', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Group:0x3e30d50 name="Array"&gt;
      &lt;Sequence:0x3e300d0&gt;
         &lt;Any:0x3e30a50 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Element:0x3e30cf0 name="Array" type="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e30950 name="Array"&gt;
      &lt;Group:0x4153290 name="Array" ref="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Sequence:0x3e300d0&gt;
            &lt;Any:0x3e30a50 /&gt;
         &lt;/Sequence&gt;
      &lt;/Group&gt;
      &lt;AttributeGroup:0x4153850 name="arrayAttributes" ref="('arrayAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x3e30290 name="arrayType" ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x3e30810 name="offset" ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
      &lt;/AttributeGroup&gt;
      &lt;AttributeGroup:0x4153b70 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;/AttributeGroup&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e30f70 name="Struct" type="('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Group:0x4153570 name="Struct"&gt;
      &lt;Sequence:0x4153430&gt;
         &lt;Any:0x4153710 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Complex:0x4153150 name="Struct"&gt;
      &lt;Group:0x4153cd0 name="Struct" ref="('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Sequence:0x4153430&gt;
            &lt;Any:0x4153710 /&gt;
         &lt;/Sequence&gt;
      &lt;/Group&gt;
      &lt;AttributeGroup:0x4153e10 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;/AttributeGroup&gt;
   &lt;/Complex&gt;
   &lt;Simple:0x4153a70 name="base64" /&gt;
   &lt;Element:0x3e64030 name="duration" type="('duration', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e649d0 name="duration"&gt;
      &lt;SimpleContent:0x3e64330&gt;
         &lt;Extension:0x3e64190 ref="('duration', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e64170 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e64150 name="dateTime" type="('dateTime', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e64590 name="dateTime"&gt;
      &lt;SimpleContent:0x3e64a10&gt;
         &lt;Extension:0x3e640f0 ref="('dateTime', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e643f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e64550 name="NOTATION" type="('NOTATION', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e644b0 name="NOTATION"&gt;
      &lt;SimpleContent:0x3e643d0&gt;
         &lt;Extension:0x3e64130 ref="('QName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e39d10 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e64510 name="time" type="('time', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e646d0 name="time"&gt;
      &lt;SimpleContent:0x3e39e70&gt;
         &lt;Extension:0x3e39290 ref="('time', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e39510 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e39110 name="date" type="('date', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e39750 name="date"&gt;
      &lt;SimpleContent:0x3e394b0&gt;
         &lt;Extension:0x3e39670 ref="('date', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e39fb0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e39930 name="gYearMonth" type="('gYearMonth', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e39c10 name="gYearMonth"&gt;
      &lt;SimpleContent:0x3e4ca90&gt;
         &lt;Extension:0x3e4c730 ref="('gYearMonth', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e4ce30 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e39a30 name="gYear" type="('gYear', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e4cf90 name="gYear"&gt;
      &lt;SimpleContent:0x3e4ccf0&gt;
         &lt;Extension:0x3e4c130 ref="('gYear', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e4c5d0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e4c2b0 name="gMonthDay" type="('gMonthDay', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e4cb90 name="gMonthDay"&gt;
      &lt;SimpleContent:0x3e4c4d0&gt;
         &lt;Extension:0x416f6d0 ref="('gMonthDay', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x416fcd0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e4c870 name="gDay" type="('gDay', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x416fef0 name="gDay"&gt;
      &lt;SimpleContent:0x416f2b0&gt;
         &lt;Extension:0x416f9b0 ref="('gDay', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x416f3f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x416f550 name="gMonth" type="('gMonth', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x416f870 name="gMonth"&gt;
      &lt;SimpleContent:0x416fbd0&gt;
         &lt;Extension:0x416f050 ref="('gMonth', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41820f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x416f150 name="boolean" type="('boolean', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x416ff10 name="boolean"&gt;
      &lt;SimpleContent:0x4182270&gt;
         &lt;Extension:0x4182410 ref="('boolean', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x4182830 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4182550 name="base64Binary" type="('base64Binary', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4182a50 name="base64Binary"&gt;
      &lt;SimpleContent:0x41826f0&gt;
         &lt;Extension:0x4182b50 ref="('base64Binary', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x415a0f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4182cb0 name="hexBinary" type="('hexBinary', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4182f90 name="hexBinary"&gt;
      &lt;SimpleContent:0x415a410&gt;
         &lt;Extension:0x415a310 ref="('hexBinary', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x415a6f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4182df0 name="float" type="('float', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x415a850 name="float"&gt;
      &lt;SimpleContent:0x415a5f0&gt;
         &lt;Extension:0x415a990 ref="('float', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x415add0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x415abf0 name="double" type="('double', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x415af50 name="double"&gt;
      &lt;SimpleContent:0x4199250&gt;
         &lt;Extension:0x4199110 ref="('double', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x4199570 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x415ac10 name="anyURI" type="('anyURI', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4199750 name="anyURI"&gt;
      &lt;SimpleContent:0x4199470&gt;
         &lt;Extension:0x4199850 ref="('anyURI', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x4199d10 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4199a30 name="QName" type="('QName', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4199e10 name="QName"&gt;
      &lt;SimpleContent:0x4199b30&gt;
         &lt;Extension:0x41a1110 ref="('QName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a13f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4199ff0 name="string" type="('string', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1550 name="string"&gt;
      &lt;SimpleContent:0x41a12f0&gt;
         &lt;Extension:0x41a15d0 ref="('string', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a16d0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1670 name="normalizedString" type="('normalizedString', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a16f0 name="normalizedString"&gt;
      &lt;SimpleContent:0x41a16b0&gt;
         &lt;Extension:0x41a1710 ref="('normalizedString', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1770 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1730 name="token" type="('token', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1790 name="token"&gt;
      &lt;SimpleContent:0x41a1750&gt;
         &lt;Extension:0x41a17b0 ref="('token', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1810 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a17d0 name="language" type="('language', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1830 name="language"&gt;
      &lt;SimpleContent:0x41a17f0&gt;
         &lt;Extension:0x41a1850 ref="('language', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a18b0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1870 name="Name" type="('Name', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a18d0 name="Name"&gt;
      &lt;SimpleContent:0x41a1890&gt;
         &lt;Extension:0x41a18f0 ref="('Name', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1950 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1910 name="NMTOKEN" type="('NMTOKEN', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1970 name="NMTOKEN"&gt;
      &lt;SimpleContent:0x41a1930&gt;
         &lt;Extension:0x41a1990 ref="('NMTOKEN', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a19f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a19b0 name="NCName" type="('NCName', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1a10 name="NCName"&gt;
      &lt;SimpleContent:0x41a19d0&gt;
         &lt;Extension:0x41a1a30 ref="('NCName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1a90 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1a50 name="NMTOKENS" type="('NMTOKENS', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1ab0 name="NMTOKENS"&gt;
      &lt;SimpleContent:0x41a1a70&gt;
         &lt;Extension:0x41a1ad0 ref="('NMTOKENS', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1b30 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1af0 name="ID" type="('ID', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1b50 name="ID"&gt;
      &lt;SimpleContent:0x41a1b10&gt;
         &lt;Extension:0x41a1b70 ref="('ID', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1bd0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1b90 name="IDREF" type="('IDREF', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1bf0 name="IDREF"&gt;
      &lt;SimpleContent:0x41a1bb0&gt;
         &lt;Extension:0x41a1c10 ref="('IDREF', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1c70 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1c30 name="ENTITY" type="('ENTITY', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1c90 name="ENTITY"&gt;
      &lt;SimpleContent:0x41a1c50&gt;
         &lt;Extension:0x41a1cb0 ref="('ENTITY', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1d10 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1cd0 name="IDREFS" type="('IDREFS', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1d30 name="IDREFS"&gt;
      &lt;SimpleContent:0x41a1cf0&gt;
         &lt;Extension:0x41a1d50 ref="('IDREFS', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1db0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1d70 name="ENTITIES" type="('ENTITIES', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1dd0 name="ENTITIES"&gt;
      &lt;SimpleContent:0x41a1d90&gt;
         &lt;Extension:0x41a1df0 ref="('ENTITIES', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1e50 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1e10 name="decimal" type="('decimal', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1e70 name="decimal"&gt;
      &lt;SimpleContent:0x41a1e30&gt;
         &lt;Extension:0x41a1e90 ref="('decimal', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1ef0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1eb0 name="integer" type="('integer', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1f10 name="integer"&gt;
      &lt;SimpleContent:0x41a1ed0&gt;
         &lt;Extension:0x41a1f30 ref="('integer', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1f90 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1f50 name="nonPositiveInteger" type="('nonPositiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1fb0 name="nonPositiveInteger"&gt;
      &lt;SimpleContent:0x41a1f70&gt;
         &lt;Extension:0x41be030 ref="('nonPositiveInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be050 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1ff0 name="negativeInteger" type="('negativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1fd0 name="negativeInteger"&gt;
      &lt;SimpleContent:0x41be070&gt;
         &lt;Extension:0x41be090 ref="('negativeInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be0f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be0b0 name="long" type="('long', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41be110 name="long"&gt;
      &lt;SimpleContent:0x41be0d0&gt;
         &lt;Extension:0x41be130 ref="('long', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be190 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be150 name="int" type="('int', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41be1b0 name="int"&gt;
      &lt;SimpleContent:0x41be170&gt;
         &lt;Extension:0x41be1d0 ref="('int', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be230 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be1f0 name="short" type="('short', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41be250 name="short"&gt;
      &lt;SimpleContent:0x41be210&gt;
         &lt;Extension:0x41be270 ref="('short', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be2d0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be290 name="byte" type="('byte', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41be2f0 name="byte"&gt;
      &lt;SimpleContent:0x41be2b0&gt;
         &lt;Extension:0x41be310 ref="('byte', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be370 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be330 name="nonNegativeInteger" type="('nonNegativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41be390 name="nonNegativeInteger"&gt;
      &lt;SimpleContent:0x41be350&gt;
         &lt;Extension:0x41be3b0 ref="('nonNegativeInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be410 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be3d0 name="unsignedLong" type="('unsignedLong', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41be430 name="unsignedLong"&gt;
      &lt;SimpleContent:0x41be3f0&gt;
         &lt;Extension:0x41be450 ref="('unsignedLong', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be4b0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be470 name="unsignedInt" type="('unsignedInt', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41be4d0 name="unsignedInt"&gt;
      &lt;SimpleContent:0x41be490&gt;
         &lt;Extension:0x41be4f0 ref="('unsignedInt', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be550 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be510 name="unsignedShort" type="('unsignedShort', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41be570 name="unsignedShort"&gt;
      &lt;SimpleContent:0x41be530&gt;
         &lt;Extension:0x41be590 ref="('unsignedShort', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be5f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be5b0 name="unsignedByte" type="('unsignedByte', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41be610 name="unsignedByte"&gt;
      &lt;SimpleContent:0x41be5d0&gt;
         &lt;Extension:0x41be630 ref="('unsignedByte', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be690 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be650 name="positiveInteger" type="('positiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41be6b0 name="positiveInteger"&gt;
      &lt;SimpleContent:0x41be670&gt;
         &lt;Extension:0x41be6d0 ref="('positiveInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be730 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be6f0 name="anyType" type="('anyType', 'http://www.w3.org/2001/XMLSchema')" /&gt;
</msg>
<msg timestamp="20191112 13:57:37.488" level="DEBUG">imported:
Schema:0x4173130
(raw)
   &lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.xmlsoap.org/soap/encoding/" targetNamespace="http://schemas.xmlsoap.org/soap/encoding/" url="suds://schemas.xmlsoap.org/soap/encoding/"&gt;
      &lt;xs:attribute name="root"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;root&amp;apos; can be used to distinguish serialization roots from other
       elements that are present in a serialization but are not roots of
       a serialized value graph
     &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:simpleType&gt;
            &lt;xs:restriction base="xs:boolean"&gt;
               &lt;xs:pattern value="0|1"/&gt;
            &lt;/xs:restriction&gt;
         &lt;/xs:simpleType&gt;
      &lt;/xs:attribute&gt;
      &lt;xs:attributeGroup name="commonAttributes"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
        Attributes common to all elements that function as accessors or
        represent independent (multi-ref) values.  The href attribute is
        intended to be used in a manner like CONREF.  That is, the element
        content should be empty iff the href attribute appears
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:attribute name="id" type="xs:ID"/&gt;
         &lt;xs:attribute name="href" type="xs:anyURI"/&gt;
         &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:simpleType name="arrayCoordinate"&gt;
         &lt;xs:restriction base="xs:string"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:attribute name="arrayType" type="xs:string"/&gt;
      &lt;xs:attribute name="offset" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayAttributes"&gt;
         &lt;xs:attribute ref="tns:arrayType"/&gt;
         &lt;xs:attribute ref="tns:offset"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:attribute name="position" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayMemberAttributes"&gt;
         &lt;xs:attribute ref="tns:position"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:group name="Array"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:element name="Array" type="tns:Array"/&gt;
      &lt;xs:complexType name="Array"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;Array&amp;apos; is a complex type for accessors identified by position
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:group ref="tns:Array" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:arrayAttributes"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Struct" type="tns:Struct"/&gt;
      &lt;xs:group name="Struct"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:complexType name="Struct"&gt;
         &lt;xs:group ref="tns:Struct" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:simpleType name="base64"&gt;
         &lt;xs:restriction base="xs:base64Binary"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:element name="duration" type="tns:duration"/&gt;
      &lt;xs:complexType name="duration"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:duration"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="dateTime" type="tns:dateTime"/&gt;
      &lt;xs:complexType name="dateTime"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:dateTime"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NOTATION" type="tns:NOTATION"/&gt;
      &lt;xs:complexType name="NOTATION"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="time" type="tns:time"/&gt;
      &lt;xs:complexType name="time"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:time"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="date" type="tns:date"/&gt;
      &lt;xs:complexType name="date"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:date"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYearMonth" type="tns:gYearMonth"/&gt;
      &lt;xs:complexType name="gYearMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYearMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYear" type="tns:gYear"/&gt;
      &lt;xs:complexType name="gYear"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYear"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonthDay" type="tns:gMonthDay"/&gt;
      &lt;xs:complexType name="gMonthDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonthDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gDay" type="tns:gDay"/&gt;
      &lt;xs:complexType name="gDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonth" type="tns:gMonth"/&gt;
      &lt;xs:complexType name="gMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="boolean" type="tns:boolean"/&gt;
      &lt;xs:complexType name="boolean"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:boolean"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="base64Binary" type="tns:base64Binary"/&gt;
      &lt;xs:complexType name="base64Binary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:base64Binary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="hexBinary" type="tns:hexBinary"/&gt;
      &lt;xs:complexType name="hexBinary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:hexBinary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="float" type="tns:float"/&gt;
      &lt;xs:complexType name="float"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:float"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="double" type="tns:double"/&gt;
      &lt;xs:complexType name="double"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:double"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyURI" type="tns:anyURI"/&gt;
      &lt;xs:complexType name="anyURI"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:anyURI"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="QName" type="tns:QName"/&gt;
      &lt;xs:complexType name="QName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="string" type="tns:string"/&gt;
      &lt;xs:complexType name="string"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:string"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="normalizedString" type="tns:normalizedString"/&gt;
      &lt;xs:complexType name="normalizedString"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:normalizedString"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="token" type="tns:token"/&gt;
      &lt;xs:complexType name="token"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:token"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="language" type="tns:language"/&gt;
      &lt;xs:complexType name="language"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:language"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Name" type="tns:Name"/&gt;
      &lt;xs:complexType name="Name"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:Name"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKEN" type="tns:NMTOKEN"/&gt;
      &lt;xs:complexType name="NMTOKEN"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKEN"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NCName" type="tns:NCName"/&gt;
      &lt;xs:complexType name="NCName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NCName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKENS" type="tns:NMTOKENS"/&gt;
      &lt;xs:complexType name="NMTOKENS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKENS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ID" type="tns:ID"/&gt;
      &lt;xs:complexType name="ID"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ID"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREF" type="tns:IDREF"/&gt;
      &lt;xs:complexType name="IDREF"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREF"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITY" type="tns:ENTITY"/&gt;
      &lt;xs:complexType name="ENTITY"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITY"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREFS" type="tns:IDREFS"/&gt;
      &lt;xs:complexType name="IDREFS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREFS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITIES" type="tns:ENTITIES"/&gt;
      &lt;xs:complexType name="ENTITIES"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITIES"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="decimal" type="tns:decimal"/&gt;
      &lt;xs:complexType name="decimal"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:decimal"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="integer" type="tns:integer"/&gt;
      &lt;xs:complexType name="integer"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:integer"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonPositiveInteger" type="tns:nonPositiveInteger"/&gt;
      &lt;xs:complexType name="nonPositiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonPositiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="negativeInteger" type="tns:negativeInteger"/&gt;
      &lt;xs:complexType name="negativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:negativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="long" type="tns:long"/&gt;
      &lt;xs:complexType name="long"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:long"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="int" type="tns:int"/&gt;
      &lt;xs:complexType name="int"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:int"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="short" type="tns:short"/&gt;
      &lt;xs:complexType name="short"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:short"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="byte" type="tns:byte"/&gt;
      &lt;xs:complexType name="byte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:byte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonNegativeInteger" type="tns:nonNegativeInteger"/&gt;
      &lt;xs:complexType name="nonNegativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonNegativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedLong" type="tns:unsignedLong"/&gt;
      &lt;xs:complexType name="unsignedLong"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedLong"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedInt" type="tns:unsignedInt"/&gt;
      &lt;xs:complexType name="unsignedInt"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedInt"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedShort" type="tns:unsignedShort"/&gt;
      &lt;xs:complexType name="unsignedShort"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedShort"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedByte" type="tns:unsignedByte"/&gt;
      &lt;xs:complexType name="unsignedByte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedByte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="positiveInteger" type="tns:positiveInteger"/&gt;
      &lt;xs:complexType name="positiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:positiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyType"/&gt;
   &lt;/xs:schema&gt;
(model)
   &lt;Attribute:0x41732d0 name="root" /&gt;
   &lt;AttributeGroup:0x4173730 name="commonAttributes"&gt;
      &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Simple:0x4173910 name="arrayCoordinate" /&gt;
   &lt;Attribute:0x4173a10 name="arrayType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;Attribute:0x4173b10 name="offset" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;AttributeGroup:0x3e30510 name="arrayAttributes"&gt;
      &lt;Attribute:0x3e30290 name="arrayType" ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;Attribute:0x3e30810 name="offset" ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Attribute:0x3e305d0 name="position" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;AttributeGroup:0x3e30b90 name="arrayMemberAttributes"&gt;
      &lt;Attribute:0x3e30870 name="position" ref="('position', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Group:0x3e30d50 name="Array"&gt;
      &lt;Sequence:0x3e300d0&gt;
         &lt;Any:0x3e30a50 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Element:0x3e30cf0 name="Array" type="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e30950 name="Array"&gt;
      &lt;Group:0x4153290 name="Array" ref="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Sequence:0x3e300d0&gt;
            &lt;Any:0x3e30a50 /&gt;
         &lt;/Sequence&gt;
      &lt;/Group&gt;
      &lt;AttributeGroup:0x4153850 name="arrayAttributes" ref="('arrayAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x3e30290 name="arrayType" ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x3e30810 name="offset" ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
      &lt;/AttributeGroup&gt;
      &lt;AttributeGroup:0x4153b70 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;/AttributeGroup&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e30f70 name="Struct" type="('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Group:0x4153570 name="Struct"&gt;
      &lt;Sequence:0x4153430&gt;
         &lt;Any:0x4153710 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Complex:0x4153150 name="Struct"&gt;
      &lt;Group:0x4153cd0 name="Struct" ref="('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Sequence:0x4153430&gt;
            &lt;Any:0x4153710 /&gt;
         &lt;/Sequence&gt;
      &lt;/Group&gt;
      &lt;AttributeGroup:0x4153e10 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;/AttributeGroup&gt;
   &lt;/Complex&gt;
   &lt;Simple:0x4153a70 name="base64" /&gt;
   &lt;Element:0x3e64030 name="duration" type="('duration', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e649d0 name="duration"&gt;
      &lt;SimpleContent:0x3e64330&gt;
         &lt;Extension:0x3e64190 ref="('duration', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e64170 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e64150 name="dateTime" type="('dateTime', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e64590 name="dateTime"&gt;
      &lt;SimpleContent:0x3e64a10&gt;
         &lt;Extension:0x3e640f0 ref="('dateTime', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e643f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e64550 name="NOTATION" type="('NOTATION', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e644b0 name="NOTATION"&gt;
      &lt;SimpleContent:0x3e643d0&gt;
         &lt;Extension:0x3e64130 ref="('QName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e39d10 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e64510 name="time" type="('time', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e646d0 name="time"&gt;
      &lt;SimpleContent:0x3e39e70&gt;
         &lt;Extension:0x3e39290 ref="('time', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e39510 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e39110 name="date" type="('date', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e39750 name="date"&gt;
      &lt;SimpleContent:0x3e394b0&gt;
         &lt;Extension:0x3e39670 ref="('date', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e39fb0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e39930 name="gYearMonth" type="('gYearMonth', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e39c10 name="gYearMonth"&gt;
      &lt;SimpleContent:0x3e4ca90&gt;
         &lt;Extension:0x3e4c730 ref="('gYearMonth', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e4ce30 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e39a30 name="gYear" type="('gYear', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e4cf90 name="gYear"&gt;
      &lt;SimpleContent:0x3e4ccf0&gt;
         &lt;Extension:0x3e4c130 ref="('gYear', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e4c5d0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e4c2b0 name="gMonthDay" type="('gMonthDay', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e4cb90 name="gMonthDay"&gt;
      &lt;SimpleContent:0x3e4c4d0&gt;
         &lt;Extension:0x416f6d0 ref="('gMonthDay', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x416fcd0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e4c870 name="gDay" type="('gDay', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x416fef0 name="gDay"&gt;
      &lt;SimpleContent:0x416f2b0&gt;
         &lt;Extension:0x416f9b0 ref="('gDay', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x416f3f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x416f550 name="gMonth" type="('gMonth', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x416f870 name="gMonth"&gt;
      &lt;SimpleContent:0x416fbd0&gt;
         &lt;Extension:0x416f050 ref="('gMonth', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41820f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x416f150 name="boolean" type="('boolean', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x416ff10 name="boolean"&gt;
      &lt;SimpleContent:0x4182270&gt;
         &lt;Extension:0x4182410 ref="('boolean', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x4182830 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4182550 name="base64Binary" type="('base64Binary', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4182a50 name="base64Binary"&gt;
      &lt;SimpleContent:0x41826f0&gt;
         &lt;Extension:0x4182b50 ref="('base64Binary', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x415a0f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4182cb0 name="hexBinary" type="('hexBinary', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4182f90 name="hexBinary"&gt;
      &lt;SimpleContent:0x415a410&gt;
         &lt;Extension:0x415a310 ref="('hexBinary', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x415a6f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4182df0 name="float" type="('float', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x415a850 name="float"&gt;
      &lt;SimpleContent:0x415a5f0&gt;
         &lt;Extension:0x415a990 ref="('float', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x415add0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x415abf0 name="double" type="('double', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x415af50 name="double"&gt;
      &lt;SimpleContent:0x4199250&gt;
         &lt;Extension:0x4199110 ref="('double', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x4199570 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x415ac10 name="anyURI" type="('anyURI', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4199750 name="anyURI"&gt;
      &lt;SimpleContent:0x4199470&gt;
         &lt;Extension:0x4199850 ref="('anyURI', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x4199d10 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4199a30 name="QName" type="('QName', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4199e10 name="QName"&gt;
      &lt;SimpleContent:0x4199b30&gt;
         &lt;Extension:0x41a1110 ref="('QName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a13f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4199ff0 name="string" type="('string', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1550 name="string"&gt;
      &lt;SimpleContent:0x41a12f0&gt;
         &lt;Extension:0x41a15d0 ref="('string', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a16d0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1670 name="normalizedString" type="('normalizedString', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a16f0 name="normalizedString"&gt;
      &lt;SimpleContent:0x41a16b0&gt;
         &lt;Extension:0x41a1710 ref="('normalizedString', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1770 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1730 name="token" type="('token', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1790 name="token"&gt;
      &lt;SimpleContent:0x41a1750&gt;
         &lt;Extension:0x41a17b0 ref="('token', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1810 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a17d0 name="language" type="('language', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1830 name="language"&gt;
      &lt;SimpleContent:0x41a17f0&gt;
         &lt;Extension:0x41a1850 ref="('language', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a18b0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1870 name="Name" type="('Name', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a18d0 name="Name"&gt;
      &lt;SimpleContent:0x41a1890&gt;
         &lt;Extension:0x41a18f0 ref="('Name', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1950 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1910 name="NMTOKEN" type="('NMTOKEN', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1970 name="NMTOKEN"&gt;
      &lt;SimpleContent:0x41a1930&gt;
         &lt;Extension:0x41a1990 ref="('NMTOKEN', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a19f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a19b0 name="NCName" type="('NCName', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1a10 name="NCName"&gt;
      &lt;SimpleContent:0x41a19d0&gt;
         &lt;Extension:0x41a1a30 ref="('NCName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1a90 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1a50 name="NMTOKENS" type="('NMTOKENS', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1ab0 name="NMTOKENS"&gt;
      &lt;SimpleContent:0x41a1a70&gt;
         &lt;Extension:0x41a1ad0 ref="('NMTOKENS', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1b30 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1af0 name="ID" type="('ID', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1b50 name="ID"&gt;
      &lt;SimpleContent:0x41a1b10&gt;
         &lt;Extension:0x41a1b70 ref="('ID', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1bd0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1b90 name="IDREF" type="('IDREF', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1bf0 name="IDREF"&gt;
      &lt;SimpleContent:0x41a1bb0&gt;
         &lt;Extension:0x41a1c10 ref="('IDREF', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1c70 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1c30 name="ENTITY" type="('ENTITY', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1c90 name="ENTITY"&gt;
      &lt;SimpleContent:0x41a1c50&gt;
         &lt;Extension:0x41a1cb0 ref="('ENTITY', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1d10 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1cd0 name="IDREFS" type="('IDREFS', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1d30 name="IDREFS"&gt;
      &lt;SimpleContent:0x41a1cf0&gt;
         &lt;Extension:0x41a1d50 ref="('IDREFS', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1db0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1d70 name="ENTITIES" type="('ENTITIES', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1dd0 name="ENTITIES"&gt;
      &lt;SimpleContent:0x41a1d90&gt;
         &lt;Extension:0x41a1df0 ref="('ENTITIES', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1e50 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1e10 name="decimal" type="('decimal', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1e70 name="decimal"&gt;
      &lt;SimpleContent:0x41a1e30&gt;
         &lt;Extension:0x41a1e90 ref="('decimal', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1ef0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1eb0 name="integer" type="('integer', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1f10 name="integer"&gt;
      &lt;SimpleContent:0x41a1ed0&gt;
         &lt;Extension:0x41a1f30 ref="('integer', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1f90 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1f50 name="nonPositiveInteger" type="('nonPositiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1fb0 name="nonPositiveInteger"&gt;
      &lt;SimpleContent:0x41a1f70&gt;
         &lt;Extension:0x41be030 ref="('nonPositiveInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be050 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1ff0 name="negativeInteger" type="('negativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1fd0 name="negativeInteger"&gt;
      &lt;SimpleContent:0x41be070&gt;
         &lt;Extension:0x41be090 ref="('negativeInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be0f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be0b0 name="long" type="('long', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41be110 name="long"&gt;
      &lt;SimpleContent:0x41be0d0&gt;
         &lt;Extension:0x41be130 ref="('long', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be190 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be150 name="int" type="('int', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41be1b0 name="int"&gt;
      &lt;SimpleContent:0x41be170&gt;
         &lt;Extension:0x41be1d0 ref="('int', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be230 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be1f0 name="short" type="('short', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41be250 name="short"&gt;
      &lt;SimpleContent:0x41be210&gt;
         &lt;Extension:0x41be270 ref="('short', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be2d0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be290 name="byte" type="('byte', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41be2f0 name="byte"&gt;
      &lt;SimpleContent:0x41be2b0&gt;
         &lt;Extension:0x41be310 ref="('byte', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be370 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be330 name="nonNegativeInteger" type="('nonNegativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41be390 name="nonNegativeInteger"&gt;
      &lt;SimpleContent:0x41be350&gt;
         &lt;Extension:0x41be3b0 ref="('nonNegativeInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be410 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be3d0 name="unsignedLong" type="('unsignedLong', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41be430 name="unsignedLong"&gt;
      &lt;SimpleContent:0x41be3f0&gt;
         &lt;Extension:0x41be450 ref="('unsignedLong', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be4b0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be470 name="unsignedInt" type="('unsignedInt', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41be4d0 name="unsignedInt"&gt;
      &lt;SimpleContent:0x41be490&gt;
         &lt;Extension:0x41be4f0 ref="('unsignedInt', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be550 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be510 name="unsignedShort" type="('unsignedShort', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41be570 name="unsignedShort"&gt;
      &lt;SimpleContent:0x41be530&gt;
         &lt;Extension:0x41be590 ref="('unsignedShort', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be5f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be5b0 name="unsignedByte" type="('unsignedByte', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41be610 name="unsignedByte"&gt;
      &lt;SimpleContent:0x41be5d0&gt;
         &lt;Extension:0x41be630 ref="('unsignedByte', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be690 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be650 name="positiveInteger" type="('positiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41be6b0 name="positiveInteger"&gt;
      &lt;SimpleContent:0x41be670&gt;
         &lt;Extension:0x41be6d0 ref="('positiveInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be730 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be6f0 name="anyType" type="('anyType', 'http://www.w3.org/2001/XMLSchema')" /&gt;
</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">imported:
Schema:0x4173130
(raw)
   &lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.xmlsoap.org/soap/encoding/" targetNamespace="http://schemas.xmlsoap.org/soap/encoding/" url="suds://schemas.xmlsoap.org/soap/encoding/"&gt;
      &lt;xs:attribute name="root"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;root&amp;apos; can be used to distinguish serialization roots from other
       elements that are present in a serialization but are not roots of
       a serialized value graph
     &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:simpleType&gt;
            &lt;xs:restriction base="xs:boolean"&gt;
               &lt;xs:pattern value="0|1"/&gt;
            &lt;/xs:restriction&gt;
         &lt;/xs:simpleType&gt;
      &lt;/xs:attribute&gt;
      &lt;xs:attributeGroup name="commonAttributes"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
        Attributes common to all elements that function as accessors or
        represent independent (multi-ref) values.  The href attribute is
        intended to be used in a manner like CONREF.  That is, the element
        content should be empty iff the href attribute appears
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:attribute name="id" type="xs:ID"/&gt;
         &lt;xs:attribute name="href" type="xs:anyURI"/&gt;
         &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:simpleType name="arrayCoordinate"&gt;
         &lt;xs:restriction base="xs:string"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:attribute name="arrayType" type="xs:string"/&gt;
      &lt;xs:attribute name="offset" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayAttributes"&gt;
         &lt;xs:attribute ref="tns:arrayType"/&gt;
         &lt;xs:attribute ref="tns:offset"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:attribute name="position" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayMemberAttributes"&gt;
         &lt;xs:attribute ref="tns:position"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:group name="Array"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:element name="Array" type="tns:Array"/&gt;
      &lt;xs:complexType name="Array"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;Array&amp;apos; is a complex type for accessors identified by position
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:group ref="tns:Array" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:arrayAttributes"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Struct" type="tns:Struct"/&gt;
      &lt;xs:group name="Struct"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:complexType name="Struct"&gt;
         &lt;xs:group ref="tns:Struct" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:simpleType name="base64"&gt;
         &lt;xs:restriction base="xs:base64Binary"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:element name="duration" type="tns:duration"/&gt;
      &lt;xs:complexType name="duration"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:duration"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="dateTime" type="tns:dateTime"/&gt;
      &lt;xs:complexType name="dateTime"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:dateTime"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NOTATION" type="tns:NOTATION"/&gt;
      &lt;xs:complexType name="NOTATION"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="time" type="tns:time"/&gt;
      &lt;xs:complexType name="time"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:time"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="date" type="tns:date"/&gt;
      &lt;xs:complexType name="date"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:date"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYearMonth" type="tns:gYearMonth"/&gt;
      &lt;xs:complexType name="gYearMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYearMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYear" type="tns:gYear"/&gt;
      &lt;xs:complexType name="gYear"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYear"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonthDay" type="tns:gMonthDay"/&gt;
      &lt;xs:complexType name="gMonthDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonthDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gDay" type="tns:gDay"/&gt;
      &lt;xs:complexType name="gDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonth" type="tns:gMonth"/&gt;
      &lt;xs:complexType name="gMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="boolean" type="tns:boolean"/&gt;
      &lt;xs:complexType name="boolean"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:boolean"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="base64Binary" type="tns:base64Binary"/&gt;
      &lt;xs:complexType name="base64Binary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:base64Binary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="hexBinary" type="tns:hexBinary"/&gt;
      &lt;xs:complexType name="hexBinary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:hexBinary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="float" type="tns:float"/&gt;
      &lt;xs:complexType name="float"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:float"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="double" type="tns:double"/&gt;
      &lt;xs:complexType name="double"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:double"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyURI" type="tns:anyURI"/&gt;
      &lt;xs:complexType name="anyURI"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:anyURI"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="QName" type="tns:QName"/&gt;
      &lt;xs:complexType name="QName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="string" type="tns:string"/&gt;
      &lt;xs:complexType name="string"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:string"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="normalizedString" type="tns:normalizedString"/&gt;
      &lt;xs:complexType name="normalizedString"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:normalizedString"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="token" type="tns:token"/&gt;
      &lt;xs:complexType name="token"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:token"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="language" type="tns:language"/&gt;
      &lt;xs:complexType name="language"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:language"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Name" type="tns:Name"/&gt;
      &lt;xs:complexType name="Name"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:Name"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKEN" type="tns:NMTOKEN"/&gt;
      &lt;xs:complexType name="NMTOKEN"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKEN"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NCName" type="tns:NCName"/&gt;
      &lt;xs:complexType name="NCName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NCName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKENS" type="tns:NMTOKENS"/&gt;
      &lt;xs:complexType name="NMTOKENS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKENS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ID" type="tns:ID"/&gt;
      &lt;xs:complexType name="ID"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ID"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREF" type="tns:IDREF"/&gt;
      &lt;xs:complexType name="IDREF"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREF"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITY" type="tns:ENTITY"/&gt;
      &lt;xs:complexType name="ENTITY"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITY"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREFS" type="tns:IDREFS"/&gt;
      &lt;xs:complexType name="IDREFS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREFS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITIES" type="tns:ENTITIES"/&gt;
      &lt;xs:complexType name="ENTITIES"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITIES"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="decimal" type="tns:decimal"/&gt;
      &lt;xs:complexType name="decimal"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:decimal"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="integer" type="tns:integer"/&gt;
      &lt;xs:complexType name="integer"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:integer"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonPositiveInteger" type="tns:nonPositiveInteger"/&gt;
      &lt;xs:complexType name="nonPositiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonPositiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="negativeInteger" type="tns:negativeInteger"/&gt;
      &lt;xs:complexType name="negativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:negativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="long" type="tns:long"/&gt;
      &lt;xs:complexType name="long"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:long"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="int" type="tns:int"/&gt;
      &lt;xs:complexType name="int"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:int"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="short" type="tns:short"/&gt;
      &lt;xs:complexType name="short"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:short"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="byte" type="tns:byte"/&gt;
      &lt;xs:complexType name="byte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:byte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonNegativeInteger" type="tns:nonNegativeInteger"/&gt;
      &lt;xs:complexType name="nonNegativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonNegativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedLong" type="tns:unsignedLong"/&gt;
      &lt;xs:complexType name="unsignedLong"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedLong"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedInt" type="tns:unsignedInt"/&gt;
      &lt;xs:complexType name="unsignedInt"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedInt"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedShort" type="tns:unsignedShort"/&gt;
      &lt;xs:complexType name="unsignedShort"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedShort"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedByte" type="tns:unsignedByte"/&gt;
      &lt;xs:complexType name="unsignedByte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedByte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="positiveInteger" type="tns:positiveInteger"/&gt;
      &lt;xs:complexType name="positiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:positiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyType"/&gt;
   &lt;/xs:schema&gt;
(model)
   &lt;Attribute:0x41732d0 name="root" /&gt;
   &lt;AttributeGroup:0x4173730 name="commonAttributes"&gt;
      &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Simple:0x4173910 name="arrayCoordinate" /&gt;
   &lt;Attribute:0x4173a10 name="arrayType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;Attribute:0x4173b10 name="offset" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;AttributeGroup:0x3e30510 name="arrayAttributes"&gt;
      &lt;Attribute:0x3e30290 name="arrayType" ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;Attribute:0x3e30810 name="offset" ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Attribute:0x3e305d0 name="position" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;AttributeGroup:0x3e30b90 name="arrayMemberAttributes"&gt;
      &lt;Attribute:0x3e30870 name="position" ref="('position', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Group:0x3e30d50 name="Array"&gt;
      &lt;Sequence:0x3e300d0&gt;
         &lt;Any:0x3e30a50 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Element:0x3e30cf0 name="Array" type="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e30950 name="Array"&gt;
      &lt;Group:0x4153290 name="Array" ref="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Sequence:0x3e300d0&gt;
            &lt;Any:0x3e30a50 /&gt;
         &lt;/Sequence&gt;
      &lt;/Group&gt;
      &lt;AttributeGroup:0x4153850 name="arrayAttributes" ref="('arrayAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x3e30290 name="arrayType" ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x3e30810 name="offset" ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
      &lt;/AttributeGroup&gt;
      &lt;AttributeGroup:0x4153b70 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;/AttributeGroup&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e30f70 name="Struct" type="('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Group:0x4153570 name="Struct"&gt;
      &lt;Sequence:0x4153430&gt;
         &lt;Any:0x4153710 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Complex:0x4153150 name="Struct"&gt;
      &lt;Group:0x4153cd0 name="Struct" ref="('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Sequence:0x4153430&gt;
            &lt;Any:0x4153710 /&gt;
         &lt;/Sequence&gt;
      &lt;/Group&gt;
      &lt;AttributeGroup:0x4153e10 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;/AttributeGroup&gt;
   &lt;/Complex&gt;
   &lt;Simple:0x4153a70 name="base64" /&gt;
   &lt;Element:0x3e64030 name="duration" type="('duration', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e649d0 name="duration"&gt;
      &lt;SimpleContent:0x3e64330&gt;
         &lt;Extension:0x3e64190 ref="('duration', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e64170 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e64150 name="dateTime" type="('dateTime', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e64590 name="dateTime"&gt;
      &lt;SimpleContent:0x3e64a10&gt;
         &lt;Extension:0x3e640f0 ref="('dateTime', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e643f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e64550 name="NOTATION" type="('NOTATION', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e644b0 name="NOTATION"&gt;
      &lt;SimpleContent:0x3e643d0&gt;
         &lt;Extension:0x3e64130 ref="('QName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e39d10 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e64510 name="time" type="('time', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e646d0 name="time"&gt;
      &lt;SimpleContent:0x3e39e70&gt;
         &lt;Extension:0x3e39290 ref="('time', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e39510 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e39110 name="date" type="('date', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e39750 name="date"&gt;
      &lt;SimpleContent:0x3e394b0&gt;
         &lt;Extension:0x3e39670 ref="('date', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e39fb0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e39930 name="gYearMonth" type="('gYearMonth', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e39c10 name="gYearMonth"&gt;
      &lt;SimpleContent:0x3e4ca90&gt;
         &lt;Extension:0x3e4c730 ref="('gYearMonth', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e4ce30 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e39a30 name="gYear" type="('gYear', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e4cf90 name="gYear"&gt;
      &lt;SimpleContent:0x3e4ccf0&gt;
         &lt;Extension:0x3e4c130 ref="('gYear', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e4c5d0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e4c2b0 name="gMonthDay" type="('gMonthDay', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e4cb90 name="gMonthDay"&gt;
      &lt;SimpleContent:0x3e4c4d0&gt;
         &lt;Extension:0x416f6d0 ref="('gMonthDay', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x416fcd0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e4c870 name="gDay" type="('gDay', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x416fef0 name="gDay"&gt;
      &lt;SimpleContent:0x416f2b0&gt;
         &lt;Extension:0x416f9b0 ref="('gDay', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x416f3f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x416f550 name="gMonth" type="('gMonth', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x416f870 name="gMonth"&gt;
      &lt;SimpleContent:0x416fbd0&gt;
         &lt;Extension:0x416f050 ref="('gMonth', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41820f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x416f150 name="boolean" type="('boolean', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x416ff10 name="boolean"&gt;
      &lt;SimpleContent:0x4182270&gt;
         &lt;Extension:0x4182410 ref="('boolean', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x4182830 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4182550 name="base64Binary" type="('base64Binary', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4182a50 name="base64Binary"&gt;
      &lt;SimpleContent:0x41826f0&gt;
         &lt;Extension:0x4182b50 ref="('base64Binary', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x415a0f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4182cb0 name="hexBinary" type="('hexBinary', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4182f90 name="hexBinary"&gt;
      &lt;SimpleContent:0x415a410&gt;
         &lt;Extension:0x415a310 ref="('hexBinary', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x415a6f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4182df0 name="float" type="('float', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x415a850 name="float"&gt;
      &lt;SimpleContent:0x415a5f0&gt;
         &lt;Extension:0x415a990 ref="('float', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x415add0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x415abf0 name="double" type="('double', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x415af50 name="double"&gt;
      &lt;SimpleContent:0x4199250&gt;
         &lt;Extension:0x4199110 ref="('double', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x4199570 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x415ac10 name="anyURI" type="('anyURI', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4199750 name="anyURI"&gt;
      &lt;SimpleContent:0x4199470&gt;
         &lt;Extension:0x4199850 ref="('anyURI', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x4199d10 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4199a30 name="QName" type="('QName', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4199e10 name="QName"&gt;
      &lt;SimpleContent:0x4199b30&gt;
         &lt;Extension:0x41a1110 ref="('QName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a13f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4199ff0 name="string" type="('string', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1550 name="string"&gt;
      &lt;SimpleContent:0x41a12f0&gt;
         &lt;Extension:0x41a15d0 ref="('string', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a16d0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1670 name="normalizedString" type="('normalizedString', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a16f0 name="normalizedString"&gt;
      &lt;SimpleContent:0x41a16b0&gt;
         &lt;Extension:0x41a1710 ref="('normalizedString', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1770 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1730 name="token" type="('token', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1790 name="token"&gt;
      &lt;SimpleContent:0x41a1750&gt;
         &lt;Extension:0x41a17b0 ref="('token', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1810 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a17d0 name="language" type="('language', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1830 name="language"&gt;
      &lt;SimpleContent:0x41a17f0&gt;
         &lt;Extension:0x41a1850 ref="('language', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a18b0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1870 name="Name" type="('Name', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a18d0 name="Name"&gt;
      &lt;SimpleContent:0x41a1890&gt;
         &lt;Extension:0x41a18f0 ref="('Name', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1950 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1910 name="NMTOKEN" type="('NMTOKEN', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1970 name="NMTOKEN"&gt;
      &lt;SimpleContent:0x41a1930&gt;
         &lt;Extension:0x41a1990 ref="('NMTOKEN', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a19f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a19b0 name="NCName" type="('NCName', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1a10 name="NCName"&gt;
      &lt;SimpleContent:0x41a19d0&gt;
         &lt;Extension:0x41a1a30 ref="('NCName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1a90 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1a50 name="NMTOKENS" type="('NMTOKENS', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1ab0 name="NMTOKENS"&gt;
      &lt;SimpleContent:0x41a1a70&gt;
         &lt;Extension:0x41a1ad0 ref="('NMTOKENS', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1b30 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1af0 name="ID" type="('ID', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1b50 name="ID"&gt;
      &lt;SimpleContent:0x41a1b10&gt;
         &lt;Extension:0x41a1b70 ref="('ID', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1bd0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1b90 name="IDREF" type="('IDREF', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1bf0 name="IDREF"&gt;
      &lt;SimpleContent:0x41a1bb0&gt;
         &lt;Extension:0x41a1c10 ref="('IDREF', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1c70 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1c30 name="ENTITY" type="('ENTITY', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1c90 name="ENTITY"&gt;
      &lt;SimpleContent:0x41a1c50&gt;
         &lt;Extension:0x41a1cb0 ref="('ENTITY', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1d10 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1cd0 name="IDREFS" type="('IDREFS', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1d30 name="IDREFS"&gt;
      &lt;SimpleContent:0x41a1cf0&gt;
         &lt;Extension:0x41a1d50 ref="('IDREFS', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1db0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1d70 name="ENTITIES" type="('ENTITIES', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1dd0 name="ENTITIES"&gt;
      &lt;SimpleContent:0x41a1d90&gt;
         &lt;Extension:0x41a1df0 ref="('ENTITIES', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1e50 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1e10 name="decimal" type="('decimal', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1e70 name="decimal"&gt;
      &lt;SimpleContent:0x41a1e30&gt;
         &lt;Extension:0x41a1e90 ref="('decimal', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1ef0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1eb0 name="integer" type="('integer', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1f10 name="integer"&gt;
      &lt;SimpleContent:0x41a1ed0&gt;
         &lt;Extension:0x41a1f30 ref="('integer', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41a1f90 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1f50 name="nonPositiveInteger" type="('nonPositiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1fb0 name="nonPositiveInteger"&gt;
      &lt;SimpleContent:0x41a1f70&gt;
         &lt;Extension:0x41be030 ref="('nonPositiveInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be050 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41a1ff0 name="negativeInteger" type="('negativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41a1fd0 name="negativeInteger"&gt;
      &lt;SimpleContent:0x41be070&gt;
         &lt;Extension:0x41be090 ref="('negativeInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be0f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be0b0 name="long" type="('long', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41be110 name="long"&gt;
      &lt;SimpleContent:0x41be0d0&gt;
         &lt;Extension:0x41be130 ref="('long', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be190 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be150 name="int" type="('int', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41be1b0 name="int"&gt;
      &lt;SimpleContent:0x41be170&gt;
         &lt;Extension:0x41be1d0 ref="('int', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be230 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be1f0 name="short" type="('short', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41be250 name="short"&gt;
      &lt;SimpleContent:0x41be210&gt;
         &lt;Extension:0x41be270 ref="('short', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be2d0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be290 name="byte" type="('byte', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41be2f0 name="byte"&gt;
      &lt;SimpleContent:0x41be2b0&gt;
         &lt;Extension:0x41be310 ref="('byte', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be370 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be330 name="nonNegativeInteger" type="('nonNegativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41be390 name="nonNegativeInteger"&gt;
      &lt;SimpleContent:0x41be350&gt;
         &lt;Extension:0x41be3b0 ref="('nonNegativeInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be410 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be3d0 name="unsignedLong" type="('unsignedLong', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41be430 name="unsignedLong"&gt;
      &lt;SimpleContent:0x41be3f0&gt;
         &lt;Extension:0x41be450 ref="('unsignedLong', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be4b0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be470 name="unsignedInt" type="('unsignedInt', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41be4d0 name="unsignedInt"&gt;
      &lt;SimpleContent:0x41be490&gt;
         &lt;Extension:0x41be4f0 ref="('unsignedInt', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be550 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be510 name="unsignedShort" type="('unsignedShort', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41be570 name="unsignedShort"&gt;
      &lt;SimpleContent:0x41be530&gt;
         &lt;Extension:0x41be590 ref="('unsignedShort', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be5f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be5b0 name="unsignedByte" type="('unsignedByte', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41be610 name="unsignedByte"&gt;
      &lt;SimpleContent:0x41be5d0&gt;
         &lt;Extension:0x41be630 ref="('unsignedByte', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be690 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be650 name="positiveInteger" type="('positiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41be6b0 name="positiveInteger"&gt;
      &lt;SimpleContent:0x41be670&gt;
         &lt;Extension:0x41be6d0 ref="('positiveInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41be730 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x41be6f0 name="anyType" type="('anyType', 'http://www.w3.org/2001/XMLSchema')" /&gt;
</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e43b90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e43b30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e43bd0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e43cd0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e43d50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e43d90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e43df0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e43e10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e43e30, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e43e70, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://tempuri.org/')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e43d70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e43f10, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e43fd0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53050, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53070, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e530b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53110, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e530f0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e531b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e531d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e531f0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53210, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53230, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e532b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e532f0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53370, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53390, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e533b0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e533d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53410, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e533f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e534b0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53510, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53530, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53570, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e535f0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53650, convert type="tns:PrintTask" to ('PrintTask', 'http://tempuri.org/')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53670, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e536b0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e536d0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e536f0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53710, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53750, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53770, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53790, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e537b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e537f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53870, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://tempuri.org/')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53890, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e538b0, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://tempuri.org/')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e538d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53910, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e538f0, convert type="tns:ArrayOfInt" to ('ArrayOfInt', 'http://tempuri.org/')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e539b0, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://tempuri.org/')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e539d0, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://tempuri.org/')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e539f0, convert type="tns:ArrayOfInt" to ('ArrayOfInt', 'http://tempuri.org/')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53a10, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://tempuri.org/')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53a50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53990, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53ad0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53b30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53b50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53b70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53bb0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53c30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53c50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53c70, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53c90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53cd0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53cb0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53d70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53d90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53db0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53dd0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53df0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53ed0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53f50, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53fb0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e53fd0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e64d10, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e64bf0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e64b90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e64a90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e64050, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e64950, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e64910, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e64410, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e64cf0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e64d30, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e64770, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e647f0, convert type="tns:TaskInfo" to ('TaskInfo', 'http://tempuri.org/')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e64870, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e648b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e648f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e64090, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e64a30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e64230, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e64250, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e64350, convert type="tns:PatientInfo" to ('PatientInfo', 'http://tempuri.org/')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e64650, convert type="tns:ArrayOfFilmInfo" to ('ArrayOfFilmInfo', 'http://tempuri.org/')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e641f0, convert type="tns:ArrayOfReportInfo" to ('ArrayOfReportInfo', 'http://tempuri.org/')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e64890, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.504" level="DEBUG">Element:0x3e64df0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.520" level="DEBUG">Element:0x3e64e10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.520" level="DEBUG">Element:0x3e64e30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.520" level="DEBUG">Element:0x3e64dd0, convert type="tns:FilmInfo" to ('FilmInfo', 'http://tempuri.org/')</msg>
<msg timestamp="20191112 13:57:37.520" level="DEBUG">Element:0x3e64e90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.520" level="DEBUG">Element:0x3e64f10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.520" level="DEBUG">Element:0x3e64f30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.520" level="DEBUG">Element:0x3e64f50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.520" level="DEBUG">Element:0x3e64ef0, convert type="tns:ReportInfo" to ('ReportInfo', 'http://tempuri.org/')</msg>
<msg timestamp="20191112 13:57:37.520" level="DEBUG">Element:0x3e64fb0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.520" level="DEBUG">Element:0x3e64c50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.520" level="DEBUG">Element:0x3e642b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.520" level="DEBUG">Element:0x3e64070, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.520" level="DEBUG">Element:0x3e645b0, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.520" level="DEBUG">Element:0x3e64c90, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.520" level="DEBUG">Element:0x3e640d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.520" level="DEBUG">Element:0x3e64450, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 13:57:37.520" level="DEBUG">Element:0x3e643b0, convert type="tns:TaskInfo" to ('TaskInfo', 'http://tempuri.org/')</msg>
<msg timestamp="20191112 13:57:37.520" level="DEBUG">Restriction:0x3e642d0, convert ref="soapenc:Array" to ('Array', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191112 13:57:37.520" level="DEBUG">('Array', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;Complex:0x3e30950 name="Array" /&gt;</msg>
<msg timestamp="20191112 13:57:37.520" level="DEBUG">"&lt;Complex:0x3e30950 name="Array" /&gt;" not found, skipped</msg>
<msg timestamp="20191112 13:57:37.520" level="DEBUG">(http://tempuri.org/AbstractTypes) merging &lt;Restriction:0x3e642d0 ref="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;Complex:0x3e30950 name="Array" /&gt;</msg>
<msg timestamp="20191112 13:57:37.520" level="DEBUG">loaded:

schema collection
   Schema:0x3e43c30
   (raw)
      &lt;s:schema elementFormDefault="qualified" targetNamespace="http://tempuri.org/"&gt;
         &lt;s:element name="SetPrintMode"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetPrintModeResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ArrayOfString"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyReportInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="GetPrintServerStatus"&gt;
            &lt;s:complexType/&gt;
         &lt;/s:element&gt;
         &lt;s:element name="GetPrintServerStatusResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="GetPrintServerStatusResult" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="error_code" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="error_description" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="CreatePrintTask"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id_type" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="CreatePrintTaskResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="CreatePrintTaskResult" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patient_name" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="warning_code" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="warning_description" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="CreatePrintTask2"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id_type" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="CreatePrintTask2Response"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="CreatePrintTask2Result" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patient_name" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="warning_code" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="warning_description" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="extensions" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="Print"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="PrintResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="PrintResult" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="error_code" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="error_description" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="GetPrintTaskStatus"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="GetPrintTaskStatusResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="GetPrintTaskStatusResult" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="task_status" type="tns:PrintTask"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="PrintTask"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PrintTaskId" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="PrintStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="TotalReports" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="TotalImages" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="ReportsLeft" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="ImagesLeft" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="TimeNeeded" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="ErrorCode" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ErrorDesc" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="CentralPrintCombine"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strTerminalID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strIDAccID" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strAccType" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strIDUsID" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strUsType" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="userId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="CentralPrintCombineResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="CentralPrintCombineResult" type="tns:ArrayOfInt"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strPatientName" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strPrintTaskID" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="nWarningCode" type="tns:ArrayOfInt"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strWarningDescription" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strExtensions" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ArrayOfInt"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="unbounded" name="int" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="CentralPrint"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strTerminalID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strIDType" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="userId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="CentralPrintResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="CentralPrintResult" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strPatientName" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strPrintTaskID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="nWarningCode" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strWarningDescription" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strExtensions" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="AddQCLog"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QCUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QCLevel" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QCUser" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QCEvent" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QCDescription" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="AddQCLogResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="AddQCLogResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="Version"&gt;
            &lt;s:complexType/&gt;
         &lt;/s:element&gt;
         &lt;s:element name="VersionResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="VersionResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="UpdateReportPrinterStatus"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="nPrinterStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="nErrorCode" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strErrorDesc" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="UpdateReportPrinterStatusResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="UpdateReportPrinterStatusResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryExamInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="cardNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="cardType" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryExamInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QueryExamInfoResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetReportPrinted"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportId" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetReportPrintedResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="SetReportPrintedResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetReportUnPrinted"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportId" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetReportUnPrintedResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="SetReportUnPrintedResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryPrintTask"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryPrintTaskResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="PrintTask" type="tns:TaskInfo"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="TaskInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="TerminalID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="FilmCount" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ReportCount" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PrintedFilmCount" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PrintedReportCount" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Patient" type="tns:PatientInfo"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Films" type="tns:ArrayOfFilmInfo"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Reports" type="tns:ArrayOfReportInfo"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:complexType name="PatientInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Name" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Type" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:complexType name="ArrayOfFilmInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="unbounded" name="FilmInfo" nillable="true" type="tns:FilmInfo"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:complexType name="FilmInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Size" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Type" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:complexType name="ArrayOfReportInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="unbounded" name="ReportInfo" nillable="true" type="tns:ReportInfo"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:complexType name="ReportInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyFilmInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyFilmInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="int" type="s:int"/&gt;
         &lt;s:element name="string" nillable="true" type="s:string"/&gt;
         &lt;s:element name="boolean" type="s:boolean"/&gt;
         &lt;s:element name="PrintTask" type="tns:TaskInfo"/&gt;
      &lt;/s:schema&gt;
   (model)
      &lt;Element:0x3e43c70 name="SetPrintMode"&gt;
         &lt;Complex:0x3e43c10&gt;
            &lt;Sequence:0x3e43b10&gt;
               &lt;Element:0x3e43b90 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e43b30 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e43bd0 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e43cb0 name="SetPrintModeResponse"&gt;
         &lt;Complex:0x3e43b50&gt;
            &lt;Sequence:0x3e43930&gt;
               &lt;Element:0x3e43cd0 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e43bb0 name="NotifyReportInfo"&gt;
         &lt;Complex:0x3e43b70&gt;
            &lt;Sequence:0x3e43d30&gt;
               &lt;Element:0x3e43d50 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e43d90 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e43df0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e43e10 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e43e30 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e43e70 name="reportFileName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x3e43cf0 name="ArrayOfString"&gt;
         &lt;Sequence:0x3e43d10&gt;
            &lt;Element:0x3e43d70 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x3e43db0 name="NotifyReportInfoResponse"&gt;
         &lt;Complex:0x3e43eb0&gt;
            &lt;Sequence:0x3e43ed0&gt;
               &lt;Element:0x3e43f10 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e43e50 name="GetPrintServerStatus" /&gt;
      &lt;Element:0x3e43f30 name="GetPrintServerStatusResponse"&gt;
         &lt;Complex:0x3e43f50&gt;
            &lt;Sequence:0x3e43f90&gt;
               &lt;Element:0x3e43fd0 name="GetPrintServerStatusResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e53050 name="error_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e53070 name="error_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e43f70 name="CreatePrintTask"&gt;
         &lt;Complex:0x3e43fb0&gt;
            &lt;Sequence:0x3e53090&gt;
               &lt;Element:0x3e530b0 name="patient_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e53110 name="patient_id_type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e43ff0 name="CreatePrintTaskResponse"&gt;
         &lt;Complex:0x3e53030&gt;
            &lt;Sequence:0x3e530d0&gt;
               &lt;Element:0x3e530f0 name="CreatePrintTaskResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e531b0 name="patient_name" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e531d0 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e531f0 name="warning_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e53210 name="warning_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e43e90 name="CreatePrintTask2"&gt;
         &lt;Complex:0x3e53130&gt;
            &lt;Sequence:0x3e53190&gt;
               &lt;Element:0x3e53230 name="patient_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e532b0 name="patient_id_type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e53150 name="CreatePrintTask2Response"&gt;
         &lt;Complex:0x3e53250&gt;
            &lt;Sequence:0x3e532d0&gt;
               &lt;Element:0x3e532f0 name="CreatePrintTask2Result" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e53370 name="patient_name" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e53390 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e533b0 name="warning_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e533d0 name="warning_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e53410 name="extensions" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e53270 name="Print"&gt;
         &lt;Complex:0x3e53290&gt;
            &lt;Sequence:0x3e53350&gt;
               &lt;Element:0x3e533f0 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e53310 name="PrintResponse"&gt;
         &lt;Complex:0x3e53430&gt;
            &lt;Sequence:0x3e53490&gt;
               &lt;Element:0x3e534b0 name="PrintResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e53510 name="error_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e53530 name="error_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e53450 name="GetPrintTaskStatus"&gt;
         &lt;Complex:0x3e53470&gt;
            &lt;Sequence:0x3e53550&gt;
               &lt;Element:0x3e53570 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e534d0 name="GetPrintTaskStatusResponse"&gt;
         &lt;Complex:0x3e534f0&gt;
            &lt;Sequence:0x3e535d0&gt;
               &lt;Element:0x3e535f0 name="GetPrintTaskStatusResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e53650 name="task_status" type="('PrintTask', 'http://tempuri.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x3e53590 name="PrintTask"&gt;
         &lt;Sequence:0x3e535b0&gt;
            &lt;Element:0x3e53670 name="PrintTaskId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e536b0 name="PrintStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e536d0 name="TotalReports" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e536f0 name="TotalImages" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e53710 name="ReportsLeft" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e53750 name="ImagesLeft" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e53770 name="TimeNeeded" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e53790 name="ErrorCode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e537b0 name="ErrorDesc" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x3e53610 name="CentralPrintCombine"&gt;
         &lt;Complex:0x3e53630&gt;
            &lt;Sequence:0x3e53690&gt;
               &lt;Element:0x3e537f0 name="strTerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e53870 name="strIDAccID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
               &lt;Element:0x3e53890 name="strAccType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e538b0 name="strIDUsID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
               &lt;Element:0x3e538d0 name="strUsType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e53910 name="userId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e53730 name="CentralPrintCombineResponse"&gt;
         &lt;Complex:0x3e537d0&gt;
            &lt;Sequence:0x3e53850&gt;
               &lt;Element:0x3e538f0 name="CentralPrintCombineResult" type="('ArrayOfInt', 'http://tempuri.org/')" /&gt;
               &lt;Element:0x3e539b0 name="strPatientName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
               &lt;Element:0x3e539d0 name="strPrintTaskID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
               &lt;Element:0x3e539f0 name="nWarningCode" type="('ArrayOfInt', 'http://tempuri.org/')" /&gt;
               &lt;Element:0x3e53a10 name="strWarningDescription" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
               &lt;Element:0x3e53a50 name="strExtensions" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x3e53810 name="ArrayOfInt"&gt;
         &lt;Sequence:0x3e53930&gt;
            &lt;Element:0x3e53990 name="int" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x3e53950 name="CentralPrint"&gt;
         &lt;Complex:0x3e53a70&gt;
            &lt;Sequence:0x3e53a30&gt;
               &lt;Element:0x3e53ad0 name="strTerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e53b30 name="strID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e53b50 name="strIDType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e53b70 name="userId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e53a90 name="CentralPrintResponse"&gt;
         &lt;Complex:0x3e53ab0&gt;
            &lt;Sequence:0x3e53b90&gt;
               &lt;Element:0x3e53bb0 name="CentralPrintResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e53c30 name="strPatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e53c50 name="strPrintTaskID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e53c70 name="nWarningCode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e53c90 name="strWarningDescription" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e53cd0 name="strExtensions" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e53af0 name="AddQCLog"&gt;
         &lt;Complex:0x3e53b10&gt;
            &lt;Sequence:0x3e53c10&gt;
               &lt;Element:0x3e53cb0 name="QCUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e53d70 name="QCLevel" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e53d90 name="QCUser" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e53db0 name="QCEvent" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e53dd0 name="QCDescription" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e53bd0 name="AddQCLogResponse"&gt;
         &lt;Complex:0x3e53cf0&gt;
            &lt;Sequence:0x3e53d50&gt;
               &lt;Element:0x3e53df0 name="AddQCLogResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e53d10 name="Version" /&gt;
      &lt;Element:0x3e53e30 name="VersionResponse"&gt;
         &lt;Complex:0x3e53e50&gt;
            &lt;Sequence:0x3e53e90&gt;
               &lt;Element:0x3e53ed0 name="VersionResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e53e70 name="UpdateReportPrinterStatus"&gt;
         &lt;Complex:0x3e53eb0&gt;
            &lt;Sequence:0x3e53f30&gt;
               &lt;Element:0x3e53f50 name="nPrinterStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e53fb0 name="nErrorCode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e53fd0 name="strErrorDesc" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e53ef0 name="UpdateReportPrinterStatusResponse"&gt;
         &lt;Complex:0x3e53f10&gt;
            &lt;Sequence:0x3e53ff0&gt;
               &lt;Element:0x3e64d10 name="UpdateReportPrinterStatusResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e53f70 name="QueryExamInfo"&gt;
         &lt;Complex:0x3e64cb0&gt;
            &lt;Sequence:0x3e64c30&gt;
               &lt;Element:0x3e64bf0 name="cardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e64b90 name="cardType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e53f90 name="QueryExamInfoResponse"&gt;
         &lt;Complex:0x3e641b0&gt;
            &lt;Sequence:0x3e64b10&gt;
               &lt;Element:0x3e64a90 name="QueryExamInfoResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e64bb0 name="SetReportPrinted"&gt;
         &lt;Complex:0x3e64b50&gt;
            &lt;Sequence:0x3e64a50&gt;
               &lt;Element:0x3e64050 name="reportId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e64950 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e64ab0 name="SetReportPrintedResponse"&gt;
         &lt;Complex:0x3e64a70&gt;
            &lt;Sequence:0x3e64930&gt;
               &lt;Element:0x3e64910 name="SetReportPrintedResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e649b0 name="SetReportUnPrinted"&gt;
         &lt;Complex:0x3e64970&gt;
            &lt;Sequence:0x3e64830&gt;
               &lt;Element:0x3e64410 name="reportId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e64cf0 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e64c10 name="SetReportUnPrintedResponse"&gt;
         &lt;Complex:0x3e64990&gt;
            &lt;Sequence:0x3e64790&gt;
               &lt;Element:0x3e64d30 name="SetReportUnPrintedResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e64110 name="QueryPrintTask"&gt;
         &lt;Complex:0x3e649f0&gt;
            &lt;Sequence:0x3e64d90&gt;
               &lt;Element:0x3e64770 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e64d50 name="QueryPrintTaskResponse"&gt;
         &lt;Complex:0x3e64d70&gt;
            &lt;Sequence:0x3e647d0&gt;
               &lt;Element:0x3e647f0 name="PrintTask" type="('TaskInfo', 'http://tempuri.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x3e647b0 name="TaskInfo"&gt;
         &lt;Sequence:0x3e64750&gt;
            &lt;Element:0x3e64870 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e648b0 name="TerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e648f0 name="Status" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e64090 name="FilmCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e64a30 name="ReportCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e64230 name="PrintedFilmCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e64250 name="PrintedReportCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e64350 name="Patient" type="('PatientInfo', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x3e64650 name="Films" type="('ArrayOfFilmInfo', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x3e641f0 name="Reports" type="('ArrayOfReportInfo', 'http://tempuri.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Complex:0x3e64810 name="PatientInfo"&gt;
         &lt;Sequence:0x3e64850&gt;
            &lt;Element:0x3e64890 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e64df0 name="Name" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e64e10 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e64e30 name="Type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Complex:0x3e64670 name="ArrayOfFilmInfo"&gt;
         &lt;Sequence:0x3e64db0&gt;
            &lt;Element:0x3e64dd0 name="FilmInfo" type="('FilmInfo', 'http://tempuri.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Complex:0x3e64e50 name="FilmInfo"&gt;
         &lt;Sequence:0x3e64e70&gt;
            &lt;Element:0x3e64e90 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e64f10 name="Status" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e64f30 name="Size" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e64f50 name="Type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Complex:0x3e64eb0 name="ArrayOfReportInfo"&gt;
         &lt;Sequence:0x3e64ed0&gt;
            &lt;Element:0x3e64ef0 name="ReportInfo" type="('ReportInfo', 'http://tempuri.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Complex:0x3e64f70 name="ReportInfo"&gt;
         &lt;Sequence:0x3e64f90&gt;
            &lt;Element:0x3e64fb0 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e64c50 name="Status" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x3e64fd0 name="NotifyFilmInfo"&gt;
         &lt;Complex:0x3e64ff0&gt;
            &lt;Sequence:0x3e648d0&gt;
               &lt;Element:0x3e642b0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e64070 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e64c70 name="NotifyFilmInfoResponse"&gt;
         &lt;Complex:0x3e642f0&gt;
            &lt;Sequence:0x3e64af0&gt;
               &lt;Element:0x3e645b0 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e64c90 name="int" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;Element:0x3e640d0 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;Element:0x3e64450 name="boolean" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;Element:0x3e643b0 name="PrintTask" type="('TaskInfo', 'http://tempuri.org/')" /&gt;

   Schema:0x3e43c90
   (raw)
      &lt;s:schema targetNamespace="http://tempuri.org/AbstractTypes"&gt;
         &lt;s:import namespace="http://schemas.xmlsoap.org/soap/encoding/"/&gt;
         &lt;s:complexType name="StringArray"&gt;
            &lt;s:complexContent mixed="false"&gt;
               &lt;s:restriction base="soapenc:Array"&gt;
                  &lt;s:sequence&gt;
                     &lt;s:element minOccurs="0" maxOccurs="unbounded" name="String" type="s:string"/&gt;
                  &lt;/s:sequence&gt;
               &lt;/s:restriction&gt;
            &lt;/s:complexContent&gt;
         &lt;/s:complexType&gt;
      &lt;/s:schema&gt;
   (model)
      &lt;Complex:0x3e64210 name="StringArray"&gt;
         &lt;ComplexContent:0x3e64ad0&gt;
            &lt;Restriction:0x3e642d0 ref="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Group:0x4153290 name="Array" ref="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
                  &lt;Sequence:0x3e300d0&gt;
                     &lt;Any:0x3e30a50 /&gt;
                  &lt;/Sequence&gt;
               &lt;/Group&gt;
               &lt;AttributeGroup:0x4153850 name="arrayAttributes" ref="('arrayAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
                  &lt;Attribute:0x3e30290 name="arrayType" ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
                  &lt;Attribute:0x3e30810 name="offset" ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
               &lt;/AttributeGroup&gt;
               &lt;AttributeGroup:0x4153b70 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
                  &lt;Attribute:0x4173410 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
                  &lt;Attribute:0x4173e50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;/AttributeGroup&gt;
            &lt;/Restriction&gt;
         &lt;/ComplexContent&gt;
      &lt;/Complex&gt;
</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">MERGED:
Schema:0x3e43c30
(raw)
   &lt;s:schema elementFormDefault="qualified" targetNamespace="http://tempuri.org/"&gt;
      &lt;s:element name="SetPrintMode"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetPrintModeResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ArrayOfString"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyReportInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="GetPrintServerStatus"&gt;
         &lt;s:complexType/&gt;
      &lt;/s:element&gt;
      &lt;s:element name="GetPrintServerStatusResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="GetPrintServerStatusResult" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="error_code" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="error_description" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="CreatePrintTask"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id_type" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="CreatePrintTaskResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="CreatePrintTaskResult" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patient_name" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="warning_code" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="warning_description" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="CreatePrintTask2"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id_type" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="CreatePrintTask2Response"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="CreatePrintTask2Result" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patient_name" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="warning_code" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="warning_description" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="extensions" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="Print"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="PrintResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="PrintResult" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="error_code" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="error_description" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="GetPrintTaskStatus"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="GetPrintTaskStatusResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="GetPrintTaskStatusResult" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="task_status" type="tns:PrintTask"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="PrintTask"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PrintTaskId" type="s:string"/&gt;
            &lt;s:element minOccurs="1" maxOccurs="1" name="PrintStatus" type="s:int"/&gt;
            &lt;s:element minOccurs="1" maxOccurs="1" name="TotalReports" type="s:int"/&gt;
            &lt;s:element minOccurs="1" maxOccurs="1" name="TotalImages" type="s:int"/&gt;
            &lt;s:element minOccurs="1" maxOccurs="1" name="ReportsLeft" type="s:int"/&gt;
            &lt;s:element minOccurs="1" maxOccurs="1" name="ImagesLeft" type="s:int"/&gt;
            &lt;s:element minOccurs="1" maxOccurs="1" name="TimeNeeded" type="s:int"/&gt;
            &lt;s:element minOccurs="1" maxOccurs="1" name="ErrorCode" type="s:int"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ErrorDesc" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="CentralPrintCombine"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strTerminalID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strIDAccID" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strAccType" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strIDUsID" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strUsType" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="userId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="CentralPrintCombineResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="CentralPrintCombineResult" type="tns:ArrayOfInt"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strPatientName" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strPrintTaskID" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="nWarningCode" type="tns:ArrayOfInt"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strWarningDescription" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strExtensions" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ArrayOfInt"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="unbounded" name="int" type="s:int"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="CentralPrint"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strTerminalID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strIDType" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="userId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="CentralPrintResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="CentralPrintResult" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strPatientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strPrintTaskID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="nWarningCode" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strWarningDescription" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strExtensions" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="AddQCLog"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QCUID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QCLevel" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QCUser" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QCEvent" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QCDescription" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="AddQCLogResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="AddQCLogResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="Version"&gt;
         &lt;s:complexType/&gt;
      &lt;/s:element&gt;
      &lt;s:element name="VersionResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="VersionResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="UpdateReportPrinterStatus"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="nPrinterStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="nErrorCode" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strErrorDesc" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="UpdateReportPrinterStatusResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="UpdateReportPrinterStatusResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryExamInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="cardNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="cardType" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryExamInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QueryExamInfoResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetReportPrinted"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportId" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetReportPrintedResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="SetReportPrintedResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetReportUnPrinted"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportId" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetReportUnPrintedResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="SetReportUnPrintedResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryPrintTask"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryPrintTaskResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PrintTask" type="tns:TaskInfo"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="TaskInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="TerminalID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="FilmCount" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ReportCount" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PrintedFilmCount" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PrintedReportCount" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Patient" type="tns:PatientInfo"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Films" type="tns:ArrayOfFilmInfo"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Reports" type="tns:ArrayOfReportInfo"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:complexType name="PatientInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Name" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Type" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:complexType name="ArrayOfFilmInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="unbounded" name="FilmInfo" nillable="true" type="tns:FilmInfo"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:complexType name="FilmInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Size" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Type" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:complexType name="ArrayOfReportInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="unbounded" name="ReportInfo" nillable="true" type="tns:ReportInfo"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:complexType name="ReportInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyFilmInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyFilmInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="int" type="s:int"/&gt;
      &lt;s:element name="string" nillable="true" type="s:string"/&gt;
      &lt;s:element name="boolean" type="s:boolean"/&gt;
      &lt;s:element name="PrintTask" type="tns:TaskInfo"/&gt;
   &lt;/s:schema&gt;
(model)
   &lt;Element:0x3e43c70 name="SetPrintMode"&gt;
      &lt;Complex:0x3e43c10&gt;
         &lt;Sequence:0x3e43b10&gt;
            &lt;Element:0x3e43b90 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e43b30 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e43bd0 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e43cb0 name="SetPrintModeResponse"&gt;
      &lt;Complex:0x3e43b50&gt;
         &lt;Sequence:0x3e43930&gt;
            &lt;Element:0x3e43cd0 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e43bb0 name="NotifyReportInfo"&gt;
      &lt;Complex:0x3e43b70&gt;
         &lt;Sequence:0x3e43d30&gt;
            &lt;Element:0x3e43d50 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e43d90 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e43df0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e43e10 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e43e30 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e43e70 name="reportFileName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x3e43cf0 name="ArrayOfString"&gt;
      &lt;Sequence:0x3e43d10&gt;
         &lt;Element:0x3e43d70 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e43db0 name="NotifyReportInfoResponse"&gt;
      &lt;Complex:0x3e43eb0&gt;
         &lt;Sequence:0x3e43ed0&gt;
            &lt;Element:0x3e43f10 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e43e50 name="GetPrintServerStatus" /&gt;
   &lt;Element:0x3e43f30 name="GetPrintServerStatusResponse"&gt;
      &lt;Complex:0x3e43f50&gt;
         &lt;Sequence:0x3e43f90&gt;
            &lt;Element:0x3e43fd0 name="GetPrintServerStatusResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e53050 name="error_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e53070 name="error_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e43f70 name="CreatePrintTask"&gt;
      &lt;Complex:0x3e43fb0&gt;
         &lt;Sequence:0x3e53090&gt;
            &lt;Element:0x3e530b0 name="patient_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e53110 name="patient_id_type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e43ff0 name="CreatePrintTaskResponse"&gt;
      &lt;Complex:0x3e53030&gt;
         &lt;Sequence:0x3e530d0&gt;
            &lt;Element:0x3e530f0 name="CreatePrintTaskResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e531b0 name="patient_name" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e531d0 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e531f0 name="warning_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e53210 name="warning_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e43e90 name="CreatePrintTask2"&gt;
      &lt;Complex:0x3e53130&gt;
         &lt;Sequence:0x3e53190&gt;
            &lt;Element:0x3e53230 name="patient_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e532b0 name="patient_id_type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e53150 name="CreatePrintTask2Response"&gt;
      &lt;Complex:0x3e53250&gt;
         &lt;Sequence:0x3e532d0&gt;
            &lt;Element:0x3e532f0 name="CreatePrintTask2Result" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e53370 name="patient_name" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e53390 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e533b0 name="warning_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e533d0 name="warning_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e53410 name="extensions" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e53270 name="Print"&gt;
      &lt;Complex:0x3e53290&gt;
         &lt;Sequence:0x3e53350&gt;
            &lt;Element:0x3e533f0 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e53310 name="PrintResponse"&gt;
      &lt;Complex:0x3e53430&gt;
         &lt;Sequence:0x3e53490&gt;
            &lt;Element:0x3e534b0 name="PrintResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e53510 name="error_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e53530 name="error_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e53450 name="GetPrintTaskStatus"&gt;
      &lt;Complex:0x3e53470&gt;
         &lt;Sequence:0x3e53550&gt;
            &lt;Element:0x3e53570 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e534d0 name="GetPrintTaskStatusResponse"&gt;
      &lt;Complex:0x3e534f0&gt;
         &lt;Sequence:0x3e535d0&gt;
            &lt;Element:0x3e535f0 name="GetPrintTaskStatusResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e53650 name="task_status" type="('PrintTask', 'http://tempuri.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x3e53590 name="PrintTask"&gt;
      &lt;Sequence:0x3e535b0&gt;
         &lt;Element:0x3e53670 name="PrintTaskId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e536b0 name="PrintStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e536d0 name="TotalReports" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e536f0 name="TotalImages" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e53710 name="ReportsLeft" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e53750 name="ImagesLeft" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e53770 name="TimeNeeded" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e53790 name="ErrorCode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e537b0 name="ErrorDesc" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e53610 name="CentralPrintCombine"&gt;
      &lt;Complex:0x3e53630&gt;
         &lt;Sequence:0x3e53690&gt;
            &lt;Element:0x3e537f0 name="strTerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e53870 name="strIDAccID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x3e53890 name="strAccType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e538b0 name="strIDUsID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x3e538d0 name="strUsType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e53910 name="userId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e53730 name="CentralPrintCombineResponse"&gt;
      &lt;Complex:0x3e537d0&gt;
         &lt;Sequence:0x3e53850&gt;
            &lt;Element:0x3e538f0 name="CentralPrintCombineResult" type="('ArrayOfInt', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x3e539b0 name="strPatientName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x3e539d0 name="strPrintTaskID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x3e539f0 name="nWarningCode" type="('ArrayOfInt', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x3e53a10 name="strWarningDescription" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x3e53a50 name="strExtensions" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x3e53810 name="ArrayOfInt"&gt;
      &lt;Sequence:0x3e53930&gt;
         &lt;Element:0x3e53990 name="int" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e53950 name="CentralPrint"&gt;
      &lt;Complex:0x3e53a70&gt;
         &lt;Sequence:0x3e53a30&gt;
            &lt;Element:0x3e53ad0 name="strTerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e53b30 name="strID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e53b50 name="strIDType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e53b70 name="userId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e53a90 name="CentralPrintResponse"&gt;
      &lt;Complex:0x3e53ab0&gt;
         &lt;Sequence:0x3e53b90&gt;
            &lt;Element:0x3e53bb0 name="CentralPrintResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e53c30 name="strPatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e53c50 name="strPrintTaskID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e53c70 name="nWarningCode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e53c90 name="strWarningDescription" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e53cd0 name="strExtensions" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e53af0 name="AddQCLog"&gt;
      &lt;Complex:0x3e53b10&gt;
         &lt;Sequence:0x3e53c10&gt;
            &lt;Element:0x3e53cb0 name="QCUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e53d70 name="QCLevel" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e53d90 name="QCUser" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e53db0 name="QCEvent" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e53dd0 name="QCDescription" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e53bd0 name="AddQCLogResponse"&gt;
      &lt;Complex:0x3e53cf0&gt;
         &lt;Sequence:0x3e53d50&gt;
            &lt;Element:0x3e53df0 name="AddQCLogResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e53d10 name="Version" /&gt;
   &lt;Element:0x3e53e30 name="VersionResponse"&gt;
      &lt;Complex:0x3e53e50&gt;
         &lt;Sequence:0x3e53e90&gt;
            &lt;Element:0x3e53ed0 name="VersionResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e53e70 name="UpdateReportPrinterStatus"&gt;
      &lt;Complex:0x3e53eb0&gt;
         &lt;Sequence:0x3e53f30&gt;
            &lt;Element:0x3e53f50 name="nPrinterStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e53fb0 name="nErrorCode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e53fd0 name="strErrorDesc" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e53ef0 name="UpdateReportPrinterStatusResponse"&gt;
      &lt;Complex:0x3e53f10&gt;
         &lt;Sequence:0x3e53ff0&gt;
            &lt;Element:0x3e64d10 name="UpdateReportPrinterStatusResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e53f70 name="QueryExamInfo"&gt;
      &lt;Complex:0x3e64cb0&gt;
         &lt;Sequence:0x3e64c30&gt;
            &lt;Element:0x3e64bf0 name="cardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e64b90 name="cardType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e53f90 name="QueryExamInfoResponse"&gt;
      &lt;Complex:0x3e641b0&gt;
         &lt;Sequence:0x3e64b10&gt;
            &lt;Element:0x3e64a90 name="QueryExamInfoResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e64bb0 name="SetReportPrinted"&gt;
      &lt;Complex:0x3e64b50&gt;
         &lt;Sequence:0x3e64a50&gt;
            &lt;Element:0x3e64050 name="reportId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e64950 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e64ab0 name="SetReportPrintedResponse"&gt;
      &lt;Complex:0x3e64a70&gt;
         &lt;Sequence:0x3e64930&gt;
            &lt;Element:0x3e64910 name="SetReportPrintedResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e649b0 name="SetReportUnPrinted"&gt;
      &lt;Complex:0x3e64970&gt;
         &lt;Sequence:0x3e64830&gt;
            &lt;Element:0x3e64410 name="reportId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e64cf0 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e64c10 name="SetReportUnPrintedResponse"&gt;
      &lt;Complex:0x3e64990&gt;
         &lt;Sequence:0x3e64790&gt;
            &lt;Element:0x3e64d30 name="SetReportUnPrintedResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e64110 name="QueryPrintTask"&gt;
      &lt;Complex:0x3e649f0&gt;
         &lt;Sequence:0x3e64d90&gt;
            &lt;Element:0x3e64770 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e64d50 name="QueryPrintTaskResponse"&gt;
      &lt;Complex:0x3e64d70&gt;
         &lt;Sequence:0x3e647d0&gt;
            &lt;Element:0x3e647f0 name="PrintTask" type="('TaskInfo', 'http://tempuri.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x3e647b0 name="TaskInfo"&gt;
      &lt;Sequence:0x3e64750&gt;
         &lt;Element:0x3e64870 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e648b0 name="TerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e648f0 name="Status" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e64090 name="FilmCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e64a30 name="ReportCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e64230 name="PrintedFilmCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e64250 name="PrintedReportCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e64350 name="Patient" type="('PatientInfo', 'http://tempuri.org/')" /&gt;
         &lt;Element:0x3e64650 name="Films" type="('ArrayOfFilmInfo', 'http://tempuri.org/')" /&gt;
         &lt;Element:0x3e641f0 name="Reports" type="('ArrayOfReportInfo', 'http://tempuri.org/')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Complex:0x3e64810 name="PatientInfo"&gt;
      &lt;Sequence:0x3e64850&gt;
         &lt;Element:0x3e64890 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e64df0 name="Name" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e64e10 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e64e30 name="Type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Complex:0x3e64670 name="ArrayOfFilmInfo"&gt;
      &lt;Sequence:0x3e64db0&gt;
         &lt;Element:0x3e64dd0 name="FilmInfo" type="('FilmInfo', 'http://tempuri.org/')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Complex:0x3e64e50 name="FilmInfo"&gt;
      &lt;Sequence:0x3e64e70&gt;
         &lt;Element:0x3e64e90 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e64f10 name="Status" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e64f30 name="Size" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e64f50 name="Type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Complex:0x3e64eb0 name="ArrayOfReportInfo"&gt;
      &lt;Sequence:0x3e64ed0&gt;
         &lt;Element:0x3e64ef0 name="ReportInfo" type="('ReportInfo', 'http://tempuri.org/')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Complex:0x3e64f70 name="ReportInfo"&gt;
      &lt;Sequence:0x3e64f90&gt;
         &lt;Element:0x3e64fb0 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e64c50 name="Status" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e64fd0 name="NotifyFilmInfo"&gt;
      &lt;Complex:0x3e64ff0&gt;
         &lt;Sequence:0x3e648d0&gt;
            &lt;Element:0x3e642b0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e64070 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e64c70 name="NotifyFilmInfoResponse"&gt;
      &lt;Complex:0x3e642f0&gt;
         &lt;Sequence:0x3e64af0&gt;
            &lt;Element:0x3e645b0 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e64c90 name="int" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;Element:0x3e640d0 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;Element:0x3e64450 name="boolean" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;Element:0x3e643b0 name="PrintTask" type="('TaskInfo', 'http://tempuri.org/')" /&gt;
</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('SetPrintMode', 'http://tempuri.org/'), found as: &lt;Element:0x3e43c70 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('SetPrintModeResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e43cb0 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('NotifyReportInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3e43bb0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('NotifyReportInfoResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e43db0 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('GetPrintServerStatus', 'http://tempuri.org/'), found as: &lt;Element:0x3e43e50 name="GetPrintServerStatus" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('GetPrintServerStatusResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e43f30 name="GetPrintServerStatusResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('CreatePrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x3e43f70 name="CreatePrintTask" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('CreatePrintTaskResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e43ff0 name="CreatePrintTaskResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('CreatePrintTask2', 'http://tempuri.org/'), found as: &lt;Element:0x3e43e90 name="CreatePrintTask2" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('CreatePrintTask2Response', 'http://tempuri.org/'), found as: &lt;Element:0x3e53150 name="CreatePrintTask2Response" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('Print', 'http://tempuri.org/'), found as: &lt;Element:0x3e53270 name="Print" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('PrintResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e53310 name="PrintResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('GetPrintTaskStatus', 'http://tempuri.org/'), found as: &lt;Element:0x3e53450 name="GetPrintTaskStatus" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('GetPrintTaskStatusResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e534d0 name="GetPrintTaskStatusResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('CentralPrintCombine', 'http://tempuri.org/'), found as: &lt;Element:0x3e53610 name="CentralPrintCombine" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('CentralPrintCombineResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e53730 name="CentralPrintCombineResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('CentralPrint', 'http://tempuri.org/'), found as: &lt;Element:0x3e53950 name="CentralPrint" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('CentralPrintResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e53a90 name="CentralPrintResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('AddQCLog', 'http://tempuri.org/'), found as: &lt;Element:0x3e53af0 name="AddQCLog" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('AddQCLogResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e53bd0 name="AddQCLogResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('Version', 'http://tempuri.org/'), found as: &lt;Element:0x3e53d10 name="Version" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('VersionResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e53e30 name="VersionResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('UpdateReportPrinterStatus', 'http://tempuri.org/'), found as: &lt;Element:0x3e53e70 name="UpdateReportPrinterStatus" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('UpdateReportPrinterStatusResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e53ef0 name="UpdateReportPrinterStatusResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('QueryExamInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3e53f70 name="QueryExamInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('QueryExamInfoResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e53f90 name="QueryExamInfoResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('SetReportPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x3e64bb0 name="SetReportPrinted" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('SetReportPrintedResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e64ab0 name="SetReportPrintedResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('SetReportUnPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x3e649b0 name="SetReportUnPrinted" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('SetReportUnPrintedResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e64c10 name="SetReportUnPrintedResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('QueryPrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x3e64110 name="QueryPrintTask" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('QueryPrintTaskResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e64d50 name="QueryPrintTaskResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('NotifyFilmInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3e64fd0 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('NotifyFilmInfoResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e64c70 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('SetPrintMode', 'http://tempuri.org/'), found as: &lt;Element:0x3e43c70 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('SetPrintModeResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e43cb0 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('NotifyReportInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3e43bb0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('NotifyReportInfoResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e43db0 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('GetPrintServerStatus', 'http://tempuri.org/'), found as: &lt;Element:0x3e43e50 name="GetPrintServerStatus" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('GetPrintServerStatusResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e43f30 name="GetPrintServerStatusResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('CreatePrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x3e43f70 name="CreatePrintTask" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('CreatePrintTaskResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e43ff0 name="CreatePrintTaskResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('CreatePrintTask2', 'http://tempuri.org/'), found as: &lt;Element:0x3e43e90 name="CreatePrintTask2" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('CreatePrintTask2Response', 'http://tempuri.org/'), found as: &lt;Element:0x3e53150 name="CreatePrintTask2Response" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('Print', 'http://tempuri.org/'), found as: &lt;Element:0x3e53270 name="Print" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('PrintResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e53310 name="PrintResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('GetPrintTaskStatus', 'http://tempuri.org/'), found as: &lt;Element:0x3e53450 name="GetPrintTaskStatus" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('GetPrintTaskStatusResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e534d0 name="GetPrintTaskStatusResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('CentralPrintCombine', 'http://tempuri.org/'), found as: &lt;Element:0x3e53610 name="CentralPrintCombine" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('CentralPrintCombineResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e53730 name="CentralPrintCombineResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('CentralPrint', 'http://tempuri.org/'), found as: &lt;Element:0x3e53950 name="CentralPrint" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('CentralPrintResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e53a90 name="CentralPrintResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('AddQCLog', 'http://tempuri.org/'), found as: &lt;Element:0x3e53af0 name="AddQCLog" /&gt;</msg>
<msg timestamp="20191112 13:57:37.535" level="DEBUG">('AddQCLogResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e53bd0 name="AddQCLogResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.551" level="DEBUG">('Version', 'http://tempuri.org/'), found as: &lt;Element:0x3e53d10 name="Version" /&gt;</msg>
<msg timestamp="20191112 13:57:37.551" level="DEBUG">('VersionResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e53e30 name="VersionResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.551" level="DEBUG">('UpdateReportPrinterStatus', 'http://tempuri.org/'), found as: &lt;Element:0x3e53e70 name="UpdateReportPrinterStatus" /&gt;</msg>
<msg timestamp="20191112 13:57:37.551" level="DEBUG">('UpdateReportPrinterStatusResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e53ef0 name="UpdateReportPrinterStatusResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.551" level="DEBUG">('QueryExamInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3e53f70 name="QueryExamInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:37.551" level="DEBUG">('QueryExamInfoResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e53f90 name="QueryExamInfoResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.551" level="DEBUG">('SetReportPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x3e64bb0 name="SetReportPrinted" /&gt;</msg>
<msg timestamp="20191112 13:57:37.551" level="DEBUG">('SetReportPrintedResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e64ab0 name="SetReportPrintedResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.551" level="DEBUG">('SetReportUnPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x3e649b0 name="SetReportUnPrinted" /&gt;</msg>
<msg timestamp="20191112 13:57:37.551" level="DEBUG">('SetReportUnPrintedResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e64c10 name="SetReportUnPrintedResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.551" level="DEBUG">('QueryPrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x3e64110 name="QueryPrintTask" /&gt;</msg>
<msg timestamp="20191112 13:57:37.551" level="DEBUG">('QueryPrintTaskResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e64d50 name="QueryPrintTaskResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.551" level="DEBUG">('NotifyFilmInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3e64fd0 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:37.551" level="DEBUG">('NotifyFilmInfoResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e64c70 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:37.660" level="DEBUG">WSDL at 'http://10.112.20.84/PrintServer/PrintService.asmx?wsdl' loaded:
(Definitions){
   id = "Definitions:0x442bed0"
   options = Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x044364D0&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x03CD8890&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x0442BF50&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x03CD8890&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x04436E30&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
Linked:
Definitions:
	proxy: classes=(&lt;class 'dict'&gt;,), default={}
	timeout: classes=(&lt;class 'int'&gt;, &lt;class 'float'&gt;), default=90
	headers: classes=(&lt;class 'dict'&gt;,), default={}
	username: classes=(&lt;class 'str'&gt;,), default=None
	password: classes=(&lt;class 'str'&gt;,), default=None
Content:
	('proxy', {})
	('timeout', 90)
	('headers', {})
	('username', None)
	('password', None)
Linked:
Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x044364D0&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x03CD8890&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x0442BF50&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x03CD8890&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x04436E30&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
   url = "http://10.112.20.84/PrintServer/PrintService.asmx?wsdl"
   tns[] = 
      "tns",
      "http://tempuri.org/",
   types[] = 
      (Types){
         definitions = (Definitions)...
      },
   schema = "&lt;Schema:0x3e43c30 tns="http://tempuri.org/"/&gt;"
   imports[] = &lt;empty&gt;
   messages = 
      {
         (SetPrintModeSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetPrintModeSoapIn"
               qname = "(SetPrintModeSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('SetPrintMode', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetPrintModeSoapOut"
               qname = "(SetPrintModeSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapIn"
               qname = "(NotifyReportInfoSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('NotifyReportInfo', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapOut"
               qname = "(NotifyReportInfoSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (GetPrintServerStatusSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "GetPrintServerStatusSoapIn"
               qname = "(GetPrintServerStatusSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (GetPrintServerStatusSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "GetPrintServerStatusSoapOut"
               qname = "(GetPrintServerStatusSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CreatePrintTaskSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "CreatePrintTaskSoapIn"
               qname = "(CreatePrintTaskSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CreatePrintTask', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CreatePrintTaskSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "CreatePrintTaskSoapOut"
               qname = "(CreatePrintTaskSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CreatePrintTask2SoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "CreatePrintTask2SoapIn"
               qname = "(CreatePrintTask2SoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CreatePrintTask2', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CreatePrintTask2SoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "CreatePrintTask2SoapOut"
               qname = "(CreatePrintTask2SoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (PrintSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "PrintSoapIn"
               qname = "(PrintSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('Print', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (PrintSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "PrintSoapOut"
               qname = "(PrintSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('PrintResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (GetPrintTaskStatusSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "GetPrintTaskStatusSoapIn"
               qname = "(GetPrintTaskStatusSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (GetPrintTaskStatusSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "GetPrintTaskStatusSoapOut"
               qname = "(GetPrintTaskStatusSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CentralPrintCombineSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "CentralPrintCombineSoapIn"
               qname = "(CentralPrintCombineSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CentralPrintCombine', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CentralPrintCombineSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "CentralPrintCombineSoapOut"
               qname = "(CentralPrintCombineSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CentralPrintSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "CentralPrintSoapIn"
               qname = "(CentralPrintSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CentralPrint', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CentralPrintSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "CentralPrintSoapOut"
               qname = "(CentralPrintSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CentralPrintResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (AddQCLogSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "AddQCLogSoapIn"
               qname = "(AddQCLogSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('AddQCLog', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (AddQCLogSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "AddQCLogSoapOut"
               qname = "(AddQCLogSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('AddQCLogResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (VersionSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "VersionSoapIn"
               qname = "(VersionSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('Version', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (VersionSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "VersionSoapOut"
               qname = "(VersionSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('VersionResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (UpdateReportPrinterStatusSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "UpdateReportPrinterStatusSoapIn"
               qname = "(UpdateReportPrinterStatusSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (UpdateReportPrinterStatusSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "UpdateReportPrinterStatusSoapOut"
               qname = "(UpdateReportPrinterStatusSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryExamInfoSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "QueryExamInfoSoapIn"
               qname = "(QueryExamInfoSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('QueryExamInfo', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryExamInfoSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "QueryExamInfoSoapOut"
               qname = "(QueryExamInfoSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportPrintedSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportPrintedSoapIn"
               qname = "(SetReportPrintedSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('SetReportPrinted', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportPrintedSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportPrintedSoapOut"
               qname = "(SetReportPrintedSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportUnPrintedSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportUnPrintedSoapIn"
               qname = "(SetReportUnPrintedSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportUnPrintedSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportUnPrintedSoapOut"
               qname = "(SetReportUnPrintedSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryPrintTaskSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "QueryPrintTaskSoapIn"
               qname = "(QueryPrintTaskSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('QueryPrintTask', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryPrintTaskSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "QueryPrintTaskSoapOut"
               qname = "(QueryPrintTaskSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapIn"
               qname = "(NotifyFilmInfoSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapOut"
               qname = "(NotifyFilmInfoSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetPrintModeHttpGetIn"
               qname = "(SetPrintModeHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="strAccessionNumber" type="s:string"/&gt;
                     name = "strAccessionNumber"
                     qname[] = 
                        "strAccessionNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="strStudyInstanceUID" type="s:string"/&gt;
                     name = "strStudyInstanceUID"
                     qname[] = 
                        "strStudyInstanceUID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="nMode" type="s:string"/&gt;
                     name = "nMode"
                     qname[] = 
                        "nMode",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (SetPrintModeHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetPrintModeHttpGetOut"
               qname = "(SetPrintModeHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyReportInfoHttpGetIn"
               qname = "(NotifyReportInfoHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="patientName" type="s:string"/&gt;
                     name = "patientName"
                     qname[] = 
                        "patientName",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                     name = "patientID"
                     qname[] = 
                        "patientID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                     name = "accessionNumber"
                     qname[] = 
                        "accessionNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="studyInstanceUID" type="s:string"/&gt;
                     name = "studyInstanceUID"
                     qname[] = 
                        "studyInstanceUID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="reportStatus" type="s:string"/&gt;
                     name = "reportStatus"
                     qname[] = 
                        "reportStatus",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="reportFileName" type="s1:StringArray"/&gt;
                     name = "reportFileName"
                     qname[] = 
                        "reportFileName",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('StringArray', 'http://tempuri.org/AbstractTypes')"
                  },
            }
         (NotifyReportInfoHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyReportInfoHttpGetOut"
               qname = "(NotifyReportInfoHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (AddQCLogHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "AddQCLogHttpGetIn"
               qname = "(AddQCLogHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="QCUID" type="s:string"/&gt;
                     name = "QCUID"
                     qname[] = 
                        "QCUID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCLevel" type="s:string"/&gt;
                     name = "QCLevel"
                     qname[] = 
                        "QCLevel",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCUser" type="s:string"/&gt;
                     name = "QCUser"
                     qname[] = 
                        "QCUser",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCEvent" type="s:string"/&gt;
                     name = "QCEvent"
                     qname[] = 
                        "QCEvent",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCDescription" type="s:string"/&gt;
                     name = "QCDescription"
                     qname[] = 
                        "QCDescription",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (AddQCLogHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "AddQCLogHttpGetOut"
               qname = "(AddQCLogHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (VersionHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "VersionHttpGetIn"
               qname = "(VersionHttpGetIn, http://tempuri.org/)"
               parts[] = &lt;empty&gt;
            }
         (VersionHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "VersionHttpGetOut"
               qname = "(VersionHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('string', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (UpdateReportPrinterStatusHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "UpdateReportPrinterStatusHttpGetIn"
               qname = "(UpdateReportPrinterStatusHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="nPrinterStatus" type="s:string"/&gt;
                     name = "nPrinterStatus"
                     qname[] = 
                        "nPrinterStatus",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="nErrorCode" type="s:string"/&gt;
                     name = "nErrorCode"
                     qname[] = 
                        "nErrorCode",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="strErrorDesc" type="s:string"/&gt;
                     name = "strErrorDesc"
                     qname[] = 
                        "strErrorDesc",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (UpdateReportPrinterStatusHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "UpdateReportPrinterStatusHttpGetOut"
               qname = "(UpdateReportPrinterStatusHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryExamInfoHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "QueryExamInfoHttpGetIn"
               qname = "(QueryExamInfoHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="cardNumber" type="s:string"/&gt;
                     name = "cardNumber"
                     qname[] = 
                        "cardNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="cardType" type="s:string"/&gt;
                     name = "cardType"
                     qname[] = 
                        "cardType",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (QueryExamInfoHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "QueryExamInfoHttpGetOut"
               qname = "(QueryExamInfoHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('string', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportPrintedHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportPrintedHttpGetIn"
               qname = "(SetReportPrintedHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                     name = "reportId"
                     qname[] = 
                        "reportId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                     name = "taskId"
                     qname[] = 
                        "taskId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (SetReportPrintedHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportPrintedHttpGetOut"
               qname = "(SetReportPrintedHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('boolean', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportUnPrintedHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportUnPrintedHttpGetIn"
               qname = "(SetReportUnPrintedHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                     name = "reportId"
                     qname[] = 
                        "reportId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                     name = "taskId"
                     qname[] = 
                        "taskId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (SetReportUnPrintedHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportUnPrintedHttpGetOut"
               qname = "(SetReportUnPrintedHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('boolean', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryPrintTaskHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "QueryPrintTaskHttpGetIn"
               qname = "(QueryPrintTaskHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                     name = "taskId"
                     qname[] = 
                        "taskId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (QueryPrintTaskHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "QueryPrintTaskHttpGetOut"
               qname = "(QueryPrintTaskHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:PrintTask"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('PrintTask', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyFilmInfoHttpGetIn"
               qname = "(NotifyFilmInfoHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                     name = "accessionNumber"
                     qname[] = 
                        "accessionNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                     name = "patientID"
                     qname[] = 
                        "patientID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (NotifyFilmInfoHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyFilmInfoHttpGetOut"
               qname = "(NotifyFilmInfoHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('boolean', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetPrintModeHttpPostIn"
               qname = "(SetPrintModeHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="strAccessionNumber" type="s:string"/&gt;
                     name = "strAccessionNumber"
                     qname[] = 
                        "strAccessionNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="strStudyInstanceUID" type="s:string"/&gt;
                     name = "strStudyInstanceUID"
                     qname[] = 
                        "strStudyInstanceUID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="nMode" type="s:string"/&gt;
                     name = "nMode"
                     qname[] = 
                        "nMode",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (SetPrintModeHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetPrintModeHttpPostOut"
               qname = "(SetPrintModeHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyReportInfoHttpPostIn"
               qname = "(NotifyReportInfoHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="patientName" type="s:string"/&gt;
                     name = "patientName"
                     qname[] = 
                        "patientName",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                     name = "patientID"
                     qname[] = 
                        "patientID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                     name = "accessionNumber"
                     qname[] = 
                        "accessionNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="studyInstanceUID" type="s:string"/&gt;
                     name = "studyInstanceUID"
                     qname[] = 
                        "studyInstanceUID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="reportStatus" type="s:string"/&gt;
                     name = "reportStatus"
                     qname[] = 
                        "reportStatus",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="reportFileName" type="s1:StringArray"/&gt;
                     name = "reportFileName"
                     qname[] = 
                        "reportFileName",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('StringArray', 'http://tempuri.org/AbstractTypes')"
                  },
            }
         (NotifyReportInfoHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyReportInfoHttpPostOut"
               qname = "(NotifyReportInfoHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (AddQCLogHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "AddQCLogHttpPostIn"
               qname = "(AddQCLogHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="QCUID" type="s:string"/&gt;
                     name = "QCUID"
                     qname[] = 
                        "QCUID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCLevel" type="s:string"/&gt;
                     name = "QCLevel"
                     qname[] = 
                        "QCLevel",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCUser" type="s:string"/&gt;
                     name = "QCUser"
                     qname[] = 
                        "QCUser",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCEvent" type="s:string"/&gt;
                     name = "QCEvent"
                     qname[] = 
                        "QCEvent",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCDescription" type="s:string"/&gt;
                     name = "QCDescription"
                     qname[] = 
                        "QCDescription",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (AddQCLogHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "AddQCLogHttpPostOut"
               qname = "(AddQCLogHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (VersionHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "VersionHttpPostIn"
               qname = "(VersionHttpPostIn, http://tempuri.org/)"
               parts[] = &lt;empty&gt;
            }
         (VersionHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "VersionHttpPostOut"
               qname = "(VersionHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('string', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (UpdateReportPrinterStatusHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "UpdateReportPrinterStatusHttpPostIn"
               qname = "(UpdateReportPrinterStatusHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="nPrinterStatus" type="s:string"/&gt;
                     name = "nPrinterStatus"
                     qname[] = 
                        "nPrinterStatus",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="nErrorCode" type="s:string"/&gt;
                     name = "nErrorCode"
                     qname[] = 
                        "nErrorCode",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="strErrorDesc" type="s:string"/&gt;
                     name = "strErrorDesc"
                     qname[] = 
                        "strErrorDesc",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (UpdateReportPrinterStatusHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "UpdateReportPrinterStatusHttpPostOut"
               qname = "(UpdateReportPrinterStatusHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryExamInfoHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "QueryExamInfoHttpPostIn"
               qname = "(QueryExamInfoHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="cardNumber" type="s:string"/&gt;
                     name = "cardNumber"
                     qname[] = 
                        "cardNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="cardType" type="s:string"/&gt;
                     name = "cardType"
                     qname[] = 
                        "cardType",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (QueryExamInfoHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "QueryExamInfoHttpPostOut"
               qname = "(QueryExamInfoHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('string', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportPrintedHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportPrintedHttpPostIn"
               qname = "(SetReportPrintedHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                     name = "reportId"
                     qname[] = 
                        "reportId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                     name = "taskId"
                     qname[] = 
                        "taskId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (SetReportPrintedHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportPrintedHttpPostOut"
               qname = "(SetReportPrintedHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('boolean', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportUnPrintedHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportUnPrintedHttpPostIn"
               qname = "(SetReportUnPrintedHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                     name = "reportId"
                     qname[] = 
                        "reportId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                     name = "taskId"
                     qname[] = 
                        "taskId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (SetReportUnPrintedHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportUnPrintedHttpPostOut"
               qname = "(SetReportUnPrintedHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('boolean', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryPrintTaskHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "QueryPrintTaskHttpPostIn"
               qname = "(QueryPrintTaskHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                     name = "taskId"
                     qname[] = 
                        "taskId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (QueryPrintTaskHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "QueryPrintTaskHttpPostOut"
               qname = "(QueryPrintTaskHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:PrintTask"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('PrintTask', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyFilmInfoHttpPostIn"
               qname = "(NotifyFilmInfoHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                     name = "accessionNumber"
                     qname[] = 
                        "accessionNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                     name = "patientID"
                     qname[] = 
                        "patientID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (NotifyFilmInfoHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyFilmInfoHttpPostOut"
               qname = "(NotifyFilmInfoHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('boolean', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
      }
   port_types = 
      {
         (PrintServiceSoap, http://tempuri.org/, ) = 
            (PortType){
               name = "PrintServiceSoap"
               qname = "(PrintServiceSoap, http://tempuri.org/)"
               operations = 
                  {
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetPrintModeSoapIn"
                                 qname = "(SetPrintModeSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('SetPrintMode', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetPrintModeSoapOut"
                                 qname = "(SetPrintModeSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportInfoSoapIn"
                                 qname = "(NotifyReportInfoSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportInfoSoapOut"
                                 qname = "(NotifyReportInfoSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     GetPrintServerStatus = 
                        (Operation){
                           name = "GetPrintServerStatus"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "GetPrintServerStatusSoapIn"
                                 qname = "(GetPrintServerStatusSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "GetPrintServerStatusSoapOut"
                                 qname = "(GetPrintServerStatusSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     CreatePrintTask = 
                        (Operation){
                           name = "CreatePrintTask"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "CreatePrintTaskSoapIn"
                                 qname = "(CreatePrintTaskSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CreatePrintTask', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "CreatePrintTaskSoapOut"
                                 qname = "(CreatePrintTaskSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     CreatePrintTask2 = 
                        (Operation){
                           name = "CreatePrintTask2"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "CreatePrintTask2SoapIn"
                                 qname = "(CreatePrintTask2SoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "CreatePrintTask2SoapOut"
                                 qname = "(CreatePrintTask2SoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     Print = 
                        (Operation){
                           name = "Print"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "PrintSoapIn"
                                 qname = "(PrintSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('Print', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "PrintSoapOut"
                                 qname = "(PrintSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('PrintResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     GetPrintTaskStatus = 
                        (Operation){
                           name = "GetPrintTaskStatus"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "GetPrintTaskStatusSoapIn"
                                 qname = "(GetPrintTaskStatusSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "GetPrintTaskStatusSoapOut"
                                 qname = "(GetPrintTaskStatusSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     CentralPrintCombine = 
                        (Operation){
                           name = "CentralPrintCombine"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "CentralPrintCombineSoapIn"
                                 qname = "(CentralPrintCombineSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "CentralPrintCombineSoapOut"
                                 qname = "(CentralPrintCombineSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     CentralPrint = 
                        (Operation){
                           name = "CentralPrint"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "CentralPrintSoapIn"
                                 qname = "(CentralPrintSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CentralPrint', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "CentralPrintSoapOut"
                                 qname = "(CentralPrintSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     AddQCLog = 
                        (Operation){
                           name = "AddQCLog"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "AddQCLogSoapIn"
                                 qname = "(AddQCLogSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('AddQCLog', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "AddQCLogSoapOut"
                                 qname = "(AddQCLogSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     Version = 
                        (Operation){
                           name = "Version"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "VersionSoapIn"
                                 qname = "(VersionSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('Version', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "VersionSoapOut"
                                 qname = "(VersionSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('VersionResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     UpdateReportPrinterStatus = 
                        (Operation){
                           name = "UpdateReportPrinterStatus"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "UpdateReportPrinterStatusSoapIn"
                                 qname = "(UpdateReportPrinterStatusSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "UpdateReportPrinterStatusSoapOut"
                                 qname = "(UpdateReportPrinterStatusSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryExamInfo = 
                        (Operation){
                           name = "QueryExamInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "QueryExamInfoSoapIn"
                                 qname = "(QueryExamInfoSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('QueryExamInfo', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryExamInfoSoapOut"
                                 qname = "(QueryExamInfoSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetReportPrinted = 
                        (Operation){
                           name = "SetReportPrinted"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetReportPrintedSoapIn"
                                 qname = "(SetReportPrintedSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('SetReportPrinted', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetReportPrintedSoapOut"
                                 qname = "(SetReportPrintedSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetReportUnPrinted = 
                        (Operation){
                           name = "SetReportUnPrinted"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetReportUnPrintedSoapIn"
                                 qname = "(SetReportUnPrintedSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetReportUnPrintedSoapOut"
                                 qname = "(SetReportUnPrintedSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryPrintTask = 
                        (Operation){
                           name = "QueryPrintTask"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "QueryPrintTaskSoapIn"
                                 qname = "(QueryPrintTaskSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('QueryPrintTask', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryPrintTaskSoapOut"
                                 qname = "(QueryPrintTaskSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "NotifyFilmInfoSoapIn"
                                 qname = "(NotifyFilmInfoSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyFilmInfoSoapOut"
                                 qname = "(NotifyFilmInfoSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                  }
            }
         (PrintServiceHttpGet, http://tempuri.org/, ) = 
            (PortType){
               name = "PrintServiceHttpGet"
               qname = "(PrintServiceHttpGet, http://tempuri.org/)"
               operations = 
                  {
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetPrintModeHttpGetIn"
                                 qname = "(SetPrintModeHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="strAccessionNumber" type="s:string"/&gt;
                                       name = "strAccessionNumber"
                                       qname[] = 
                                          "strAccessionNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="strStudyInstanceUID" type="s:string"/&gt;
                                       name = "strStudyInstanceUID"
                                       qname[] = 
                                          "strStudyInstanceUID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="nMode" type="s:string"/&gt;
                                       name = "nMode"
                                       qname[] = 
                                          "nMode",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetPrintModeHttpGetOut"
                                 qname = "(SetPrintModeHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportInfoHttpGetIn"
                                 qname = "(NotifyReportInfoHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="patientName" type="s:string"/&gt;
                                       name = "patientName"
                                       qname[] = 
                                          "patientName",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                       name = "patientID"
                                       qname[] = 
                                          "patientID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                       name = "accessionNumber"
                                       qname[] = 
                                          "accessionNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="studyInstanceUID" type="s:string"/&gt;
                                       name = "studyInstanceUID"
                                       qname[] = 
                                          "studyInstanceUID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="reportStatus" type="s:string"/&gt;
                                       name = "reportStatus"
                                       qname[] = 
                                          "reportStatus",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="reportFileName" type="s1:StringArray"/&gt;
                                       name = "reportFileName"
                                       qname[] = 
                                          "reportFileName",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('StringArray', 'http://tempuri.org/AbstractTypes')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportInfoHttpGetOut"
                                 qname = "(NotifyReportInfoHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     AddQCLog = 
                        (Operation){
                           name = "AddQCLog"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "AddQCLogHttpGetIn"
                                 qname = "(AddQCLogHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="QCUID" type="s:string"/&gt;
                                       name = "QCUID"
                                       qname[] = 
                                          "QCUID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCLevel" type="s:string"/&gt;
                                       name = "QCLevel"
                                       qname[] = 
                                          "QCLevel",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCUser" type="s:string"/&gt;
                                       name = "QCUser"
                                       qname[] = 
                                          "QCUser",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCEvent" type="s:string"/&gt;
                                       name = "QCEvent"
                                       qname[] = 
                                          "QCEvent",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCDescription" type="s:string"/&gt;
                                       name = "QCDescription"
                                       qname[] = 
                                          "QCDescription",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "AddQCLogHttpGetOut"
                                 qname = "(AddQCLogHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     Version = 
                        (Operation){
                           name = "Version"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "VersionHttpGetIn"
                                 qname = "(VersionHttpGetIn, http://tempuri.org/)"
                                 parts[] = &lt;empty&gt;
                              }
                           output = 
                              (Message){
                                 name = "VersionHttpGetOut"
                                 qname = "(VersionHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('string', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     UpdateReportPrinterStatus = 
                        (Operation){
                           name = "UpdateReportPrinterStatus"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "UpdateReportPrinterStatusHttpGetIn"
                                 qname = "(UpdateReportPrinterStatusHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="nPrinterStatus" type="s:string"/&gt;
                                       name = "nPrinterStatus"
                                       qname[] = 
                                          "nPrinterStatus",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="nErrorCode" type="s:string"/&gt;
                                       name = "nErrorCode"
                                       qname[] = 
                                          "nErrorCode",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="strErrorDesc" type="s:string"/&gt;
                                       name = "strErrorDesc"
                                       qname[] = 
                                          "strErrorDesc",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "UpdateReportPrinterStatusHttpGetOut"
                                 qname = "(UpdateReportPrinterStatusHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryExamInfo = 
                        (Operation){
                           name = "QueryExamInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "QueryExamInfoHttpGetIn"
                                 qname = "(QueryExamInfoHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="cardNumber" type="s:string"/&gt;
                                       name = "cardNumber"
                                       qname[] = 
                                          "cardNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="cardType" type="s:string"/&gt;
                                       name = "cardType"
                                       qname[] = 
                                          "cardType",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryExamInfoHttpGetOut"
                                 qname = "(QueryExamInfoHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('string', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetReportPrinted = 
                        (Operation){
                           name = "SetReportPrinted"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetReportPrintedHttpGetIn"
                                 qname = "(SetReportPrintedHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                       name = "reportId"
                                       qname[] = 
                                          "reportId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                       name = "taskId"
                                       qname[] = 
                                          "taskId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetReportPrintedHttpGetOut"
                                 qname = "(SetReportPrintedHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('boolean', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetReportUnPrinted = 
                        (Operation){
                           name = "SetReportUnPrinted"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetReportUnPrintedHttpGetIn"
                                 qname = "(SetReportUnPrintedHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                       name = "reportId"
                                       qname[] = 
                                          "reportId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                       name = "taskId"
                                       qname[] = 
                                          "taskId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetReportUnPrintedHttpGetOut"
                                 qname = "(SetReportUnPrintedHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('boolean', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryPrintTask = 
                        (Operation){
                           name = "QueryPrintTask"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "QueryPrintTaskHttpGetIn"
                                 qname = "(QueryPrintTaskHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                       name = "taskId"
                                       qname[] = 
                                          "taskId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryPrintTaskHttpGetOut"
                                 qname = "(QueryPrintTaskHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:PrintTask"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('PrintTask', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "NotifyFilmInfoHttpGetIn"
                                 qname = "(NotifyFilmInfoHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                       name = "accessionNumber"
                                       qname[] = 
                                          "accessionNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                       name = "patientID"
                                       qname[] = 
                                          "patientID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyFilmInfoHttpGetOut"
                                 qname = "(NotifyFilmInfoHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('boolean', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                  }
            }
         (PrintServiceHttpPost, http://tempuri.org/, ) = 
            (PortType){
               name = "PrintServiceHttpPost"
               qname = "(PrintServiceHttpPost, http://tempuri.org/)"
               operations = 
                  {
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetPrintModeHttpPostIn"
                                 qname = "(SetPrintModeHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="strAccessionNumber" type="s:string"/&gt;
                                       name = "strAccessionNumber"
                                       qname[] = 
                                          "strAccessionNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="strStudyInstanceUID" type="s:string"/&gt;
                                       name = "strStudyInstanceUID"
                                       qname[] = 
                                          "strStudyInstanceUID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="nMode" type="s:string"/&gt;
                                       name = "nMode"
                                       qname[] = 
                                          "nMode",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetPrintModeHttpPostOut"
                                 qname = "(SetPrintModeHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportInfoHttpPostIn"
                                 qname = "(NotifyReportInfoHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="patientName" type="s:string"/&gt;
                                       name = "patientName"
                                       qname[] = 
                                          "patientName",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                       name = "patientID"
                                       qname[] = 
                                          "patientID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                       name = "accessionNumber"
                                       qname[] = 
                                          "accessionNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="studyInstanceUID" type="s:string"/&gt;
                                       name = "studyInstanceUID"
                                       qname[] = 
                                          "studyInstanceUID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="reportStatus" type="s:string"/&gt;
                                       name = "reportStatus"
                                       qname[] = 
                                          "reportStatus",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="reportFileName" type="s1:StringArray"/&gt;
                                       name = "reportFileName"
                                       qname[] = 
                                          "reportFileName",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('StringArray', 'http://tempuri.org/AbstractTypes')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportInfoHttpPostOut"
                                 qname = "(NotifyReportInfoHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     AddQCLog = 
                        (Operation){
                           name = "AddQCLog"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "AddQCLogHttpPostIn"
                                 qname = "(AddQCLogHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="QCUID" type="s:string"/&gt;
                                       name = "QCUID"
                                       qname[] = 
                                          "QCUID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCLevel" type="s:string"/&gt;
                                       name = "QCLevel"
                                       qname[] = 
                                          "QCLevel",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCUser" type="s:string"/&gt;
                                       name = "QCUser"
                                       qname[] = 
                                          "QCUser",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCEvent" type="s:string"/&gt;
                                       name = "QCEvent"
                                       qname[] = 
                                          "QCEvent",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCDescription" type="s:string"/&gt;
                                       name = "QCDescription"
                                       qname[] = 
                                          "QCDescription",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "AddQCLogHttpPostOut"
                                 qname = "(AddQCLogHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     Version = 
                        (Operation){
                           name = "Version"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "VersionHttpPostIn"
                                 qname = "(VersionHttpPostIn, http://tempuri.org/)"
                                 parts[] = &lt;empty&gt;
                              }
                           output = 
                              (Message){
                                 name = "VersionHttpPostOut"
                                 qname = "(VersionHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('string', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     UpdateReportPrinterStatus = 
                        (Operation){
                           name = "UpdateReportPrinterStatus"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "UpdateReportPrinterStatusHttpPostIn"
                                 qname = "(UpdateReportPrinterStatusHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="nPrinterStatus" type="s:string"/&gt;
                                       name = "nPrinterStatus"
                                       qname[] = 
                                          "nPrinterStatus",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="nErrorCode" type="s:string"/&gt;
                                       name = "nErrorCode"
                                       qname[] = 
                                          "nErrorCode",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="strErrorDesc" type="s:string"/&gt;
                                       name = "strErrorDesc"
                                       qname[] = 
                                          "strErrorDesc",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "UpdateReportPrinterStatusHttpPostOut"
                                 qname = "(UpdateReportPrinterStatusHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryExamInfo = 
                        (Operation){
                           name = "QueryExamInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "QueryExamInfoHttpPostIn"
                                 qname = "(QueryExamInfoHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="cardNumber" type="s:string"/&gt;
                                       name = "cardNumber"
                                       qname[] = 
                                          "cardNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="cardType" type="s:string"/&gt;
                                       name = "cardType"
                                       qname[] = 
                                          "cardType",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryExamInfoHttpPostOut"
                                 qname = "(QueryExamInfoHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('string', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetReportPrinted = 
                        (Operation){
                           name = "SetReportPrinted"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetReportPrintedHttpPostIn"
                                 qname = "(SetReportPrintedHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                       name = "reportId"
                                       qname[] = 
                                          "reportId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                       name = "taskId"
                                       qname[] = 
                                          "taskId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetReportPrintedHttpPostOut"
                                 qname = "(SetReportPrintedHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('boolean', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetReportUnPrinted = 
                        (Operation){
                           name = "SetReportUnPrinted"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetReportUnPrintedHttpPostIn"
                                 qname = "(SetReportUnPrintedHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                       name = "reportId"
                                       qname[] = 
                                          "reportId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                       name = "taskId"
                                       qname[] = 
                                          "taskId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetReportUnPrintedHttpPostOut"
                                 qname = "(SetReportUnPrintedHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('boolean', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryPrintTask = 
                        (Operation){
                           name = "QueryPrintTask"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "QueryPrintTaskHttpPostIn"
                                 qname = "(QueryPrintTaskHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                       name = "taskId"
                                       qname[] = 
                                          "taskId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryPrintTaskHttpPostOut"
                                 qname = "(QueryPrintTaskHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:PrintTask"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('PrintTask', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "NotifyFilmInfoHttpPostIn"
                                 qname = "(NotifyFilmInfoHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                       name = "accessionNumber"
                                       qname[] = 
                                          "accessionNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                       name = "patientID"
                                       qname[] = 
                                          "patientID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyFilmInfoHttpPostOut"
                                 qname = "(NotifyFilmInfoHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('boolean', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                  }
            }
      }
   bindings = 
      {
         (PrintServiceSoap, http://tempuri.org/, ) = 
            (Binding){
               name = "PrintServiceSoap"
               qname = "(PrintServiceSoap, http://tempuri.org/)"
               operations = 
                  {
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintMode', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintServerStatus = 
                        (Operation){
                           name = "GetPrintServerStatus"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintServerStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask = 
                        (Operation){
                           name = "CreatePrintTask"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask2 = 
                        (Operation){
                           name = "CreatePrintTask2"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask2""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Print = 
                        (Operation){
                           name = "Print"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Print""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Print', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('PrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintTaskStatus = 
                        (Operation){
                           name = "GetPrintTaskStatus"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintTaskStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrintCombine = 
                        (Operation){
                           name = "CentralPrintCombine"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrintCombine""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrint = 
                        (Operation){
                           name = "CentralPrint"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrint""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrint', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     AddQCLog = 
                        (Operation){
                           name = "AddQCLog"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/AddQCLog""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLog', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Version = 
                        (Operation){
                           name = "Version"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Version""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Version', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('VersionResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     UpdateReportPrinterStatus = 
                        (Operation){
                           name = "UpdateReportPrinterStatus"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/UpdateReportPrinterStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryExamInfo = 
                        (Operation){
                           name = "QueryExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportPrinted = 
                        (Operation){
                           name = "SetReportPrinted"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportUnPrinted = 
                        (Operation){
                           name = "SetReportUnPrinted"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportUnPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryPrintTask = 
                        (Operation){
                           name = "QueryPrintTask"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryPrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "PrintServiceSoap"
                     qname = "(PrintServiceSoap, http://tempuri.org/)"
                     operations = 
                        {
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetPrintMode', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           GetPrintServerStatus = 
                              (Operation){
                                 name = "GetPrintServerStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "GetPrintServerStatusSoapIn"
                                       qname = "(GetPrintServerStatusSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "GetPrintServerStatusSoapOut"
                                       qname = "(GetPrintServerStatusSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CreatePrintTask = 
                              (Operation){
                                 name = "CreatePrintTask"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CreatePrintTaskSoapIn"
                                       qname = "(CreatePrintTaskSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTask', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CreatePrintTaskSoapOut"
                                       qname = "(CreatePrintTaskSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CreatePrintTask2 = 
                              (Operation){
                                 name = "CreatePrintTask2"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CreatePrintTask2SoapIn"
                                       qname = "(CreatePrintTask2SoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CreatePrintTask2SoapOut"
                                       qname = "(CreatePrintTask2SoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           Print = 
                              (Operation){
                                 name = "Print"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "PrintSoapIn"
                                       qname = "(PrintSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('Print', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "PrintSoapOut"
                                       qname = "(PrintSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('PrintResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           GetPrintTaskStatus = 
                              (Operation){
                                 name = "GetPrintTaskStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "GetPrintTaskStatusSoapIn"
                                       qname = "(GetPrintTaskStatusSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "GetPrintTaskStatusSoapOut"
                                       qname = "(GetPrintTaskStatusSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CentralPrintCombine = 
                              (Operation){
                                 name = "CentralPrintCombine"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CentralPrintCombineSoapIn"
                                       qname = "(CentralPrintCombineSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CentralPrintCombineSoapOut"
                                       qname = "(CentralPrintCombineSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CentralPrint = 
                              (Operation){
                                 name = "CentralPrint"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CentralPrintSoapIn"
                                       qname = "(CentralPrintSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrint', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CentralPrintSoapOut"
                                       qname = "(CentralPrintSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           AddQCLog = 
                              (Operation){
                                 name = "AddQCLog"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "AddQCLogSoapIn"
                                       qname = "(AddQCLogSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('AddQCLog', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "AddQCLogSoapOut"
                                       qname = "(AddQCLogSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           Version = 
                              (Operation){
                                 name = "Version"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "VersionSoapIn"
                                       qname = "(VersionSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('Version', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "VersionSoapOut"
                                       qname = "(VersionSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('VersionResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           UpdateReportPrinterStatus = 
                              (Operation){
                                 name = "UpdateReportPrinterStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusSoapIn"
                                       qname = "(UpdateReportPrinterStatusSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusSoapOut"
                                       qname = "(UpdateReportPrinterStatusSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryExamInfo = 
                              (Operation){
                                 name = "QueryExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryExamInfoSoapIn"
                                       qname = "(QueryExamInfoSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryExamInfo', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryExamInfoSoapOut"
                                       qname = "(QueryExamInfoSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportPrinted = 
                              (Operation){
                                 name = "SetReportPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportPrintedSoapIn"
                                       qname = "(SetReportPrintedSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportPrinted', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportPrintedSoapOut"
                                       qname = "(SetReportPrintedSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportUnPrinted = 
                              (Operation){
                                 name = "SetReportUnPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportUnPrintedSoapIn"
                                       qname = "(SetReportUnPrintedSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportUnPrintedSoapOut"
                                       qname = "(SetReportUnPrintedSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryPrintTask = 
                              (Operation){
                                 name = "QueryPrintTask"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryPrintTaskSoapIn"
                                       qname = "(QueryPrintTaskSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryPrintTask', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryPrintTaskSoapOut"
                                       qname = "(QueryPrintTaskSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
         (PrintServiceSoap12, http://tempuri.org/, ) = 
            (Binding){
               name = "PrintServiceSoap12"
               qname = "(PrintServiceSoap12, http://tempuri.org/)"
               operations = 
                  {
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintMode', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintServerStatus = 
                        (Operation){
                           name = "GetPrintServerStatus"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintServerStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask = 
                        (Operation){
                           name = "CreatePrintTask"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask2 = 
                        (Operation){
                           name = "CreatePrintTask2"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask2""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Print = 
                        (Operation){
                           name = "Print"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Print""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Print', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('PrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintTaskStatus = 
                        (Operation){
                           name = "GetPrintTaskStatus"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintTaskStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrintCombine = 
                        (Operation){
                           name = "CentralPrintCombine"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrintCombine""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrint = 
                        (Operation){
                           name = "CentralPrint"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrint""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrint', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     AddQCLog = 
                        (Operation){
                           name = "AddQCLog"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/AddQCLog""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLog', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Version = 
                        (Operation){
                           name = "Version"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Version""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Version', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('VersionResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     UpdateReportPrinterStatus = 
                        (Operation){
                           name = "UpdateReportPrinterStatus"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/UpdateReportPrinterStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryExamInfo = 
                        (Operation){
                           name = "QueryExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportPrinted = 
                        (Operation){
                           name = "SetReportPrinted"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportUnPrinted = 
                        (Operation){
                           name = "SetReportUnPrinted"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportUnPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryPrintTask = 
                        (Operation){
                           name = "QueryPrintTask"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryPrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "PrintServiceSoap"
                     qname = "(PrintServiceSoap, http://tempuri.org/)"
                     operations = 
                        {
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetPrintMode', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           GetPrintServerStatus = 
                              (Operation){
                                 name = "GetPrintServerStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "GetPrintServerStatusSoapIn"
                                       qname = "(GetPrintServerStatusSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "GetPrintServerStatusSoapOut"
                                       qname = "(GetPrintServerStatusSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CreatePrintTask = 
                              (Operation){
                                 name = "CreatePrintTask"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CreatePrintTaskSoapIn"
                                       qname = "(CreatePrintTaskSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTask', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CreatePrintTaskSoapOut"
                                       qname = "(CreatePrintTaskSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CreatePrintTask2 = 
                              (Operation){
                                 name = "CreatePrintTask2"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CreatePrintTask2SoapIn"
                                       qname = "(CreatePrintTask2SoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CreatePrintTask2SoapOut"
                                       qname = "(CreatePrintTask2SoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           Print = 
                              (Operation){
                                 name = "Print"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "PrintSoapIn"
                                       qname = "(PrintSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('Print', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "PrintSoapOut"
                                       qname = "(PrintSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('PrintResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           GetPrintTaskStatus = 
                              (Operation){
                                 name = "GetPrintTaskStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "GetPrintTaskStatusSoapIn"
                                       qname = "(GetPrintTaskStatusSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "GetPrintTaskStatusSoapOut"
                                       qname = "(GetPrintTaskStatusSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CentralPrintCombine = 
                              (Operation){
                                 name = "CentralPrintCombine"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CentralPrintCombineSoapIn"
                                       qname = "(CentralPrintCombineSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CentralPrintCombineSoapOut"
                                       qname = "(CentralPrintCombineSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CentralPrint = 
                              (Operation){
                                 name = "CentralPrint"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CentralPrintSoapIn"
                                       qname = "(CentralPrintSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrint', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CentralPrintSoapOut"
                                       qname = "(CentralPrintSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           AddQCLog = 
                              (Operation){
                                 name = "AddQCLog"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "AddQCLogSoapIn"
                                       qname = "(AddQCLogSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('AddQCLog', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "AddQCLogSoapOut"
                                       qname = "(AddQCLogSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           Version = 
                              (Operation){
                                 name = "Version"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "VersionSoapIn"
                                       qname = "(VersionSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('Version', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "VersionSoapOut"
                                       qname = "(VersionSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('VersionResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           UpdateReportPrinterStatus = 
                              (Operation){
                                 name = "UpdateReportPrinterStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusSoapIn"
                                       qname = "(UpdateReportPrinterStatusSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusSoapOut"
                                       qname = "(UpdateReportPrinterStatusSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryExamInfo = 
                              (Operation){
                                 name = "QueryExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryExamInfoSoapIn"
                                       qname = "(QueryExamInfoSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryExamInfo', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryExamInfoSoapOut"
                                       qname = "(QueryExamInfoSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportPrinted = 
                              (Operation){
                                 name = "SetReportPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportPrintedSoapIn"
                                       qname = "(SetReportPrintedSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportPrinted', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportPrintedSoapOut"
                                       qname = "(SetReportPrintedSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportUnPrinted = 
                              (Operation){
                                 name = "SetReportUnPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportUnPrintedSoapIn"
                                       qname = "(SetReportUnPrintedSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportUnPrintedSoapOut"
                                       qname = "(SetReportUnPrintedSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryPrintTask = 
                              (Operation){
                                 name = "QueryPrintTask"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryPrintTaskSoapIn"
                                       qname = "(QueryPrintTaskSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryPrintTask', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryPrintTaskSoapOut"
                                       qname = "(QueryPrintTaskSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
         (PrintServiceHttpGet, http://tempuri.org/, ) = 
            (Binding){
               name = "PrintServiceHttpGet"
               qname = "(PrintServiceHttpGet, http://tempuri.org/)"
               operations = &lt;empty&gt;
               type = 
                  (PortType){
                     name = "PrintServiceHttpGet"
                     qname = "(PrintServiceHttpGet, http://tempuri.org/)"
                     operations = 
                        {
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeHttpGetIn"
                                       qname = "(SetPrintModeHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="strAccessionNumber" type="s:string"/&gt;
                                             name = "strAccessionNumber"
                                             qname[] = 
                                                "strAccessionNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="strStudyInstanceUID" type="s:string"/&gt;
                                             name = "strStudyInstanceUID"
                                             qname[] = 
                                                "strStudyInstanceUID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="nMode" type="s:string"/&gt;
                                             name = "nMode"
                                             qname[] = 
                                                "nMode",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeHttpGetOut"
                                       qname = "(SetPrintModeHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoHttpGetIn"
                                       qname = "(NotifyReportInfoHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="patientName" type="s:string"/&gt;
                                             name = "patientName"
                                             qname[] = 
                                                "patientName",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                             name = "patientID"
                                             qname[] = 
                                                "patientID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                             name = "accessionNumber"
                                             qname[] = 
                                                "accessionNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="studyInstanceUID" type="s:string"/&gt;
                                             name = "studyInstanceUID"
                                             qname[] = 
                                                "studyInstanceUID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="reportStatus" type="s:string"/&gt;
                                             name = "reportStatus"
                                             qname[] = 
                                                "reportStatus",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="reportFileName" type="s1:StringArray"/&gt;
                                             name = "reportFileName"
                                             qname[] = 
                                                "reportFileName",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('StringArray', 'http://tempuri.org/AbstractTypes')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoHttpGetOut"
                                       qname = "(NotifyReportInfoHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           AddQCLog = 
                              (Operation){
                                 name = "AddQCLog"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "AddQCLogHttpGetIn"
                                       qname = "(AddQCLogHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="QCUID" type="s:string"/&gt;
                                             name = "QCUID"
                                             qname[] = 
                                                "QCUID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCLevel" type="s:string"/&gt;
                                             name = "QCLevel"
                                             qname[] = 
                                                "QCLevel",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCUser" type="s:string"/&gt;
                                             name = "QCUser"
                                             qname[] = 
                                                "QCUser",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCEvent" type="s:string"/&gt;
                                             name = "QCEvent"
                                             qname[] = 
                                                "QCEvent",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCDescription" type="s:string"/&gt;
                                             name = "QCDescription"
                                             qname[] = 
                                                "QCDescription",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "AddQCLogHttpGetOut"
                                       qname = "(AddQCLogHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           Version = 
                              (Operation){
                                 name = "Version"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "VersionHttpGetIn"
                                       qname = "(VersionHttpGetIn, http://tempuri.org/)"
                                       parts[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Message){
                                       name = "VersionHttpGetOut"
                                       qname = "(VersionHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('string', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           UpdateReportPrinterStatus = 
                              (Operation){
                                 name = "UpdateReportPrinterStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusHttpGetIn"
                                       qname = "(UpdateReportPrinterStatusHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="nPrinterStatus" type="s:string"/&gt;
                                             name = "nPrinterStatus"
                                             qname[] = 
                                                "nPrinterStatus",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="nErrorCode" type="s:string"/&gt;
                                             name = "nErrorCode"
                                             qname[] = 
                                                "nErrorCode",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="strErrorDesc" type="s:string"/&gt;
                                             name = "strErrorDesc"
                                             qname[] = 
                                                "strErrorDesc",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusHttpGetOut"
                                       qname = "(UpdateReportPrinterStatusHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryExamInfo = 
                              (Operation){
                                 name = "QueryExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryExamInfoHttpGetIn"
                                       qname = "(QueryExamInfoHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="cardNumber" type="s:string"/&gt;
                                             name = "cardNumber"
                                             qname[] = 
                                                "cardNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="cardType" type="s:string"/&gt;
                                             name = "cardType"
                                             qname[] = 
                                                "cardType",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryExamInfoHttpGetOut"
                                       qname = "(QueryExamInfoHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('string', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportPrinted = 
                              (Operation){
                                 name = "SetReportPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportPrintedHttpGetIn"
                                       qname = "(SetReportPrintedHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                             name = "reportId"
                                             qname[] = 
                                                "reportId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                             name = "taskId"
                                             qname[] = 
                                                "taskId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportPrintedHttpGetOut"
                                       qname = "(SetReportPrintedHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('boolean', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportUnPrinted = 
                              (Operation){
                                 name = "SetReportUnPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportUnPrintedHttpGetIn"
                                       qname = "(SetReportUnPrintedHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                             name = "reportId"
                                             qname[] = 
                                                "reportId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                             name = "taskId"
                                             qname[] = 
                                                "taskId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportUnPrintedHttpGetOut"
                                       qname = "(SetReportUnPrintedHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('boolean', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryPrintTask = 
                              (Operation){
                                 name = "QueryPrintTask"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryPrintTaskHttpGetIn"
                                       qname = "(QueryPrintTaskHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                             name = "taskId"
                                             qname[] = 
                                                "taskId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryPrintTaskHttpGetOut"
                                       qname = "(QueryPrintTaskHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:PrintTask"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('PrintTask', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoHttpGetIn"
                                       qname = "(NotifyFilmInfoHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                             name = "accessionNumber"
                                             qname[] = 
                                                "accessionNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                             name = "patientID"
                                             qname[] = 
                                                "patientID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoHttpGetOut"
                                       qname = "(NotifyFilmInfoHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('boolean', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = None
            }
         (PrintServiceHttpPost, http://tempuri.org/, ) = 
            (Binding){
               name = "PrintServiceHttpPost"
               qname = "(PrintServiceHttpPost, http://tempuri.org/)"
               operations = &lt;empty&gt;
               type = 
                  (PortType){
                     name = "PrintServiceHttpPost"
                     qname = "(PrintServiceHttpPost, http://tempuri.org/)"
                     operations = 
                        {
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeHttpPostIn"
                                       qname = "(SetPrintModeHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="strAccessionNumber" type="s:string"/&gt;
                                             name = "strAccessionNumber"
                                             qname[] = 
                                                "strAccessionNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="strStudyInstanceUID" type="s:string"/&gt;
                                             name = "strStudyInstanceUID"
                                             qname[] = 
                                                "strStudyInstanceUID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="nMode" type="s:string"/&gt;
                                             name = "nMode"
                                             qname[] = 
                                                "nMode",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeHttpPostOut"
                                       qname = "(SetPrintModeHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoHttpPostIn"
                                       qname = "(NotifyReportInfoHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="patientName" type="s:string"/&gt;
                                             name = "patientName"
                                             qname[] = 
                                                "patientName",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                             name = "patientID"
                                             qname[] = 
                                                "patientID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                             name = "accessionNumber"
                                             qname[] = 
                                                "accessionNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="studyInstanceUID" type="s:string"/&gt;
                                             name = "studyInstanceUID"
                                             qname[] = 
                                                "studyInstanceUID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="reportStatus" type="s:string"/&gt;
                                             name = "reportStatus"
                                             qname[] = 
                                                "reportStatus",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="reportFileName" type="s1:StringArray"/&gt;
                                             name = "reportFileName"
                                             qname[] = 
                                                "reportFileName",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('StringArray', 'http://tempuri.org/AbstractTypes')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoHttpPostOut"
                                       qname = "(NotifyReportInfoHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           AddQCLog = 
                              (Operation){
                                 name = "AddQCLog"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "AddQCLogHttpPostIn"
                                       qname = "(AddQCLogHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="QCUID" type="s:string"/&gt;
                                             name = "QCUID"
                                             qname[] = 
                                                "QCUID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCLevel" type="s:string"/&gt;
                                             name = "QCLevel"
                                             qname[] = 
                                                "QCLevel",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCUser" type="s:string"/&gt;
                                             name = "QCUser"
                                             qname[] = 
                                                "QCUser",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCEvent" type="s:string"/&gt;
                                             name = "QCEvent"
                                             qname[] = 
                                                "QCEvent",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCDescription" type="s:string"/&gt;
                                             name = "QCDescription"
                                             qname[] = 
                                                "QCDescription",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "AddQCLogHttpPostOut"
                                       qname = "(AddQCLogHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           Version = 
                              (Operation){
                                 name = "Version"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "VersionHttpPostIn"
                                       qname = "(VersionHttpPostIn, http://tempuri.org/)"
                                       parts[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Message){
                                       name = "VersionHttpPostOut"
                                       qname = "(VersionHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('string', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           UpdateReportPrinterStatus = 
                              (Operation){
                                 name = "UpdateReportPrinterStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusHttpPostIn"
                                       qname = "(UpdateReportPrinterStatusHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="nPrinterStatus" type="s:string"/&gt;
                                             name = "nPrinterStatus"
                                             qname[] = 
                                                "nPrinterStatus",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="nErrorCode" type="s:string"/&gt;
                                             name = "nErrorCode"
                                             qname[] = 
                                                "nErrorCode",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="strErrorDesc" type="s:string"/&gt;
                                             name = "strErrorDesc"
                                             qname[] = 
                                                "strErrorDesc",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusHttpPostOut"
                                       qname = "(UpdateReportPrinterStatusHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryExamInfo = 
                              (Operation){
                                 name = "QueryExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryExamInfoHttpPostIn"
                                       qname = "(QueryExamInfoHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="cardNumber" type="s:string"/&gt;
                                             name = "cardNumber"
                                             qname[] = 
                                                "cardNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="cardType" type="s:string"/&gt;
                                             name = "cardType"
                                             qname[] = 
                                                "cardType",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryExamInfoHttpPostOut"
                                       qname = "(QueryExamInfoHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('string', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportPrinted = 
                              (Operation){
                                 name = "SetReportPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportPrintedHttpPostIn"
                                       qname = "(SetReportPrintedHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                             name = "reportId"
                                             qname[] = 
                                                "reportId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                             name = "taskId"
                                             qname[] = 
                                                "taskId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportPrintedHttpPostOut"
                                       qname = "(SetReportPrintedHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('boolean', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportUnPrinted = 
                              (Operation){
                                 name = "SetReportUnPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportUnPrintedHttpPostIn"
                                       qname = "(SetReportUnPrintedHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                             name = "reportId"
                                             qname[] = 
                                                "reportId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                             name = "taskId"
                                             qname[] = 
                                                "taskId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportUnPrintedHttpPostOut"
                                       qname = "(SetReportUnPrintedHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('boolean', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryPrintTask = 
                              (Operation){
                                 name = "QueryPrintTask"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryPrintTaskHttpPostIn"
                                       qname = "(QueryPrintTaskHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                             name = "taskId"
                                             qname[] = 
                                                "taskId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryPrintTaskHttpPostOut"
                                       qname = "(QueryPrintTaskHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:PrintTask"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('PrintTask', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoHttpPostIn"
                                       qname = "(NotifyFilmInfoHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                             name = "accessionNumber"
                                             qname[] = 
                                                "accessionNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                             name = "patientID"
                                             qname[] = 
                                                "patientID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoHttpPostOut"
                                       qname = "(NotifyFilmInfoHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('boolean', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = None
            }
      }
   services[] = 
      (Service){
         name = "PrintService"
         qname = "(PrintService, http://tempuri.org/)"
         ports[] = 
            (Port){
               name = "PrintServiceSoap"
               qname = "(PrintServiceSoap, http://tempuri.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "PrintServiceSoap"
                     qname = "(PrintServiceSoap, http://tempuri.org/)"
                     operations = 
                        {
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetPrintMode', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           GetPrintServerStatus = 
                              (Operation){
                                 name = "GetPrintServerStatus"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/GetPrintServerStatus""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CreatePrintTask = 
                              (Operation){
                                 name = "CreatePrintTask"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CreatePrintTask""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CreatePrintTask2 = 
                              (Operation){
                                 name = "CreatePrintTask2"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CreatePrintTask2""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           Print = 
                              (Operation){
                                 name = "Print"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/Print""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('Print', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('PrintResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           GetPrintTaskStatus = 
                              (Operation){
                                 name = "GetPrintTaskStatus"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/GetPrintTaskStatus""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CentralPrintCombine = 
                              (Operation){
                                 name = "CentralPrintCombine"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CentralPrintCombine""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CentralPrint = 
                              (Operation){
                                 name = "CentralPrint"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CentralPrint""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrint', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           AddQCLog = 
                              (Operation){
                                 name = "AddQCLog"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/AddQCLog""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('AddQCLog', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           Version = 
                              (Operation){
                                 name = "Version"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/Version""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('Version', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('VersionResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           UpdateReportPrinterStatus = 
                              (Operation){
                                 name = "UpdateReportPrinterStatus"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/UpdateReportPrinterStatus""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryExamInfo = 
                              (Operation){
                                 name = "QueryExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/QueryExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetReportPrinted = 
                              (Operation){
                                 name = "SetReportPrinted"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/SetReportPrinted""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetReportUnPrinted = 
                              (Operation){
                                 name = "SetReportUnPrinted"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/SetReportUnPrinted""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryPrintTask = 
                              (Operation){
                                 name = "QueryPrintTask"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/QueryPrintTask""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "PrintServiceSoap"
                           qname = "(PrintServiceSoap, http://tempuri.org/)"
                           operations = 
                              {
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintMode', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 GetPrintServerStatus = 
                                    (Operation){
                                       name = "GetPrintServerStatus"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "GetPrintServerStatusSoapIn"
                                             qname = "(GetPrintServerStatusSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "GetPrintServerStatusSoapOut"
                                             qname = "(GetPrintServerStatusSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CreatePrintTask = 
                                    (Operation){
                                       name = "CreatePrintTask"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CreatePrintTaskSoapIn"
                                             qname = "(CreatePrintTaskSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CreatePrintTaskSoapOut"
                                             qname = "(CreatePrintTaskSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CreatePrintTask2 = 
                                    (Operation){
                                       name = "CreatePrintTask2"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CreatePrintTask2SoapIn"
                                             qname = "(CreatePrintTask2SoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CreatePrintTask2SoapOut"
                                             qname = "(CreatePrintTask2SoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 Print = 
                                    (Operation){
                                       name = "Print"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "PrintSoapIn"
                                             qname = "(PrintSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Print', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "PrintSoapOut"
                                             qname = "(PrintSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('PrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 GetPrintTaskStatus = 
                                    (Operation){
                                       name = "GetPrintTaskStatus"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "GetPrintTaskStatusSoapIn"
                                             qname = "(GetPrintTaskStatusSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "GetPrintTaskStatusSoapOut"
                                             qname = "(GetPrintTaskStatusSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CentralPrintCombine = 
                                    (Operation){
                                       name = "CentralPrintCombine"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CentralPrintCombineSoapIn"
                                             qname = "(CentralPrintCombineSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CentralPrintCombineSoapOut"
                                             qname = "(CentralPrintCombineSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CentralPrint = 
                                    (Operation){
                                       name = "CentralPrint"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CentralPrintSoapIn"
                                             qname = "(CentralPrintSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrint', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CentralPrintSoapOut"
                                             qname = "(CentralPrintSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 AddQCLog = 
                                    (Operation){
                                       name = "AddQCLog"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "AddQCLogSoapIn"
                                             qname = "(AddQCLogSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLog', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "AddQCLogSoapOut"
                                             qname = "(AddQCLogSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 Version = 
                                    (Operation){
                                       name = "Version"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "VersionSoapIn"
                                             qname = "(VersionSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Version', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "VersionSoapOut"
                                             qname = "(VersionSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('VersionResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 UpdateReportPrinterStatus = 
                                    (Operation){
                                       name = "UpdateReportPrinterStatus"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "UpdateReportPrinterStatusSoapIn"
                                             qname = "(UpdateReportPrinterStatusSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "UpdateReportPrinterStatusSoapOut"
                                             qname = "(UpdateReportPrinterStatusSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryExamInfo = 
                                    (Operation){
                                       name = "QueryExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "QueryExamInfoSoapIn"
                                             qname = "(QueryExamInfoSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryExamInfoSoapOut"
                                             qname = "(QueryExamInfoSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetReportPrinted = 
                                    (Operation){
                                       name = "SetReportPrinted"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "SetReportPrintedSoapIn"
                                             qname = "(SetReportPrintedSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetReportPrintedSoapOut"
                                             qname = "(SetReportPrintedSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetReportUnPrinted = 
                                    (Operation){
                                       name = "SetReportUnPrinted"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "SetReportUnPrintedSoapIn"
                                             qname = "(SetReportUnPrintedSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetReportUnPrintedSoapOut"
                                             qname = "(SetReportUnPrintedSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryPrintTask = 
                                    (Operation){
                                       name = "QueryPrintTask"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "QueryPrintTaskSoapIn"
                                             qname = "(QueryPrintTaskSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryPrintTaskSoapOut"
                                             qname = "(QueryPrintTaskSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.84/PrintServer/PrintService.asmx"
               methods = 
                  {
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintMode', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintServerStatus = 
                        (Method){
                           name = "GetPrintServerStatus"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintServerStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask = 
                        (Method){
                           name = "CreatePrintTask"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask2 = 
                        (Method){
                           name = "CreatePrintTask2"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask2""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Print = 
                        (Method){
                           name = "Print"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Print""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Print', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('PrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintTaskStatus = 
                        (Method){
                           name = "GetPrintTaskStatus"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintTaskStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrintCombine = 
                        (Method){
                           name = "CentralPrintCombine"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrintCombine""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrint = 
                        (Method){
                           name = "CentralPrint"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrint""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrint', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     AddQCLog = 
                        (Method){
                           name = "AddQCLog"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/AddQCLog""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLog', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Version = 
                        (Method){
                           name = "Version"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Version""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Version', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('VersionResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     UpdateReportPrinterStatus = 
                        (Method){
                           name = "UpdateReportPrinterStatus"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/UpdateReportPrinterStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryExamInfo = 
                        (Method){
                           name = "QueryExamInfo"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportPrinted = 
                        (Method){
                           name = "SetReportPrinted"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportUnPrinted = 
                        (Method){
                           name = "SetReportUnPrinted"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportUnPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryPrintTask = 
                        (Method){
                           name = "QueryPrintTask"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryPrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
            (Port){
               name = "PrintServiceSoap12"
               qname = "(PrintServiceSoap12, http://tempuri.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "PrintServiceSoap12"
                     qname = "(PrintServiceSoap12, http://tempuri.org/)"
                     operations = 
                        {
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetPrintMode', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           GetPrintServerStatus = 
                              (Operation){
                                 name = "GetPrintServerStatus"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/GetPrintServerStatus""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CreatePrintTask = 
                              (Operation){
                                 name = "CreatePrintTask"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CreatePrintTask""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CreatePrintTask2 = 
                              (Operation){
                                 name = "CreatePrintTask2"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CreatePrintTask2""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           Print = 
                              (Operation){
                                 name = "Print"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/Print""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('Print', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('PrintResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           GetPrintTaskStatus = 
                              (Operation){
                                 name = "GetPrintTaskStatus"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/GetPrintTaskStatus""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CentralPrintCombine = 
                              (Operation){
                                 name = "CentralPrintCombine"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CentralPrintCombine""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CentralPrint = 
                              (Operation){
                                 name = "CentralPrint"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CentralPrint""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrint', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           AddQCLog = 
                              (Operation){
                                 name = "AddQCLog"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/AddQCLog""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('AddQCLog', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           Version = 
                              (Operation){
                                 name = "Version"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/Version""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('Version', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('VersionResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           UpdateReportPrinterStatus = 
                              (Operation){
                                 name = "UpdateReportPrinterStatus"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/UpdateReportPrinterStatus""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryExamInfo = 
                              (Operation){
                                 name = "QueryExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/QueryExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetReportPrinted = 
                              (Operation){
                                 name = "SetReportPrinted"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/SetReportPrinted""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetReportUnPrinted = 
                              (Operation){
                                 name = "SetReportUnPrinted"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/SetReportUnPrinted""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryPrintTask = 
                              (Operation){
                                 name = "QueryPrintTask"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/QueryPrintTask""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "PrintServiceSoap"
                           qname = "(PrintServiceSoap, http://tempuri.org/)"
                           operations = 
                              {
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintMode', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 GetPrintServerStatus = 
                                    (Operation){
                                       name = "GetPrintServerStatus"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "GetPrintServerStatusSoapIn"
                                             qname = "(GetPrintServerStatusSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "GetPrintServerStatusSoapOut"
                                             qname = "(GetPrintServerStatusSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CreatePrintTask = 
                                    (Operation){
                                       name = "CreatePrintTask"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CreatePrintTaskSoapIn"
                                             qname = "(CreatePrintTaskSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CreatePrintTaskSoapOut"
                                             qname = "(CreatePrintTaskSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CreatePrintTask2 = 
                                    (Operation){
                                       name = "CreatePrintTask2"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CreatePrintTask2SoapIn"
                                             qname = "(CreatePrintTask2SoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CreatePrintTask2SoapOut"
                                             qname = "(CreatePrintTask2SoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 Print = 
                                    (Operation){
                                       name = "Print"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "PrintSoapIn"
                                             qname = "(PrintSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Print', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "PrintSoapOut"
                                             qname = "(PrintSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('PrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 GetPrintTaskStatus = 
                                    (Operation){
                                       name = "GetPrintTaskStatus"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "GetPrintTaskStatusSoapIn"
                                             qname = "(GetPrintTaskStatusSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "GetPrintTaskStatusSoapOut"
                                             qname = "(GetPrintTaskStatusSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CentralPrintCombine = 
                                    (Operation){
                                       name = "CentralPrintCombine"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CentralPrintCombineSoapIn"
                                             qname = "(CentralPrintCombineSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CentralPrintCombineSoapOut"
                                             qname = "(CentralPrintCombineSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CentralPrint = 
                                    (Operation){
                                       name = "CentralPrint"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CentralPrintSoapIn"
                                             qname = "(CentralPrintSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrint', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CentralPrintSoapOut"
                                             qname = "(CentralPrintSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 AddQCLog = 
                                    (Operation){
                                       name = "AddQCLog"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "AddQCLogSoapIn"
                                             qname = "(AddQCLogSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLog', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "AddQCLogSoapOut"
                                             qname = "(AddQCLogSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 Version = 
                                    (Operation){
                                       name = "Version"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "VersionSoapIn"
                                             qname = "(VersionSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Version', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "VersionSoapOut"
                                             qname = "(VersionSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('VersionResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 UpdateReportPrinterStatus = 
                                    (Operation){
                                       name = "UpdateReportPrinterStatus"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "UpdateReportPrinterStatusSoapIn"
                                             qname = "(UpdateReportPrinterStatusSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "UpdateReportPrinterStatusSoapOut"
                                             qname = "(UpdateReportPrinterStatusSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryExamInfo = 
                                    (Operation){
                                       name = "QueryExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "QueryExamInfoSoapIn"
                                             qname = "(QueryExamInfoSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryExamInfoSoapOut"
                                             qname = "(QueryExamInfoSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetReportPrinted = 
                                    (Operation){
                                       name = "SetReportPrinted"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "SetReportPrintedSoapIn"
                                             qname = "(SetReportPrintedSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetReportPrintedSoapOut"
                                             qname = "(SetReportPrintedSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetReportUnPrinted = 
                                    (Operation){
                                       name = "SetReportUnPrinted"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "SetReportUnPrintedSoapIn"
                                             qname = "(SetReportUnPrintedSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetReportUnPrintedSoapOut"
                                             qname = "(SetReportUnPrintedSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryPrintTask = 
                                    (Operation){
                                       name = "QueryPrintTask"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "QueryPrintTaskSoapIn"
                                             qname = "(QueryPrintTaskSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryPrintTaskSoapOut"
                                             qname = "(QueryPrintTaskSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.84/PrintServer/PrintService.asmx"
               methods = 
                  {
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintMode', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintServerStatus = 
                        (Method){
                           name = "GetPrintServerStatus"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintServerStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask = 
                        (Method){
                           name = "CreatePrintTask"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask2 = 
                        (Method){
                           name = "CreatePrintTask2"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask2""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Print = 
                        (Method){
                           name = "Print"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Print""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Print', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('PrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintTaskStatus = 
                        (Method){
                           name = "GetPrintTaskStatus"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintTaskStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrintCombine = 
                        (Method){
                           name = "CentralPrintCombine"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrintCombine""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrint = 
                        (Method){
                           name = "CentralPrint"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrint""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrint', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     AddQCLog = 
                        (Method){
                           name = "AddQCLog"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/AddQCLog""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLog', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Version = 
                        (Method){
                           name = "Version"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Version""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Version', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('VersionResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     UpdateReportPrinterStatus = 
                        (Method){
                           name = "UpdateReportPrinterStatus"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/UpdateReportPrinterStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryExamInfo = 
                        (Method){
                           name = "QueryExamInfo"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportPrinted = 
                        (Method){
                           name = "SetReportPrinted"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportUnPrinted = 
                        (Method){
                           name = "SetReportUnPrinted"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportUnPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryPrintTask = 
                        (Method){
                           name = "QueryPrintTask"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryPrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E43C50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
      },
 }</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('SetPrintMode', 'http://tempuri.org/'), found as: &lt;Element:0x3e43c70 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'SetPrintMode' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('NotifyReportInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3e43bb0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'NotifyReportInfo' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('GetPrintServerStatus', 'http://tempuri.org/'), found as: &lt;Element:0x3e43e50 name="GetPrintServerStatus" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'GetPrintServerStatus' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('CreatePrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x3e43f70 name="CreatePrintTask" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'CreatePrintTask' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('CreatePrintTask2', 'http://tempuri.org/'), found as: &lt;Element:0x3e43e90 name="CreatePrintTask2" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'CreatePrintTask2' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('Print', 'http://tempuri.org/'), found as: &lt;Element:0x3e53270 name="Print" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'Print' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('GetPrintTaskStatus', 'http://tempuri.org/'), found as: &lt;Element:0x3e53450 name="GetPrintTaskStatus" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'GetPrintTaskStatus' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('CentralPrintCombine', 'http://tempuri.org/'), found as: &lt;Element:0x3e53610 name="CentralPrintCombine" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'CentralPrintCombine' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('CentralPrint', 'http://tempuri.org/'), found as: &lt;Element:0x3e53950 name="CentralPrint" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'CentralPrint' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('AddQCLog', 'http://tempuri.org/'), found as: &lt;Element:0x3e53af0 name="AddQCLog" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'AddQCLog' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('Version', 'http://tempuri.org/'), found as: &lt;Element:0x3e53d10 name="Version" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'Version' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('UpdateReportPrinterStatus', 'http://tempuri.org/'), found as: &lt;Element:0x3e53e70 name="UpdateReportPrinterStatus" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'UpdateReportPrinterStatus' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('QueryExamInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3e53f70 name="QueryExamInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'QueryExamInfo' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('SetReportPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x3e64bb0 name="SetReportPrinted" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'SetReportPrinted' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('SetReportUnPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x3e649b0 name="SetReportUnPrinted" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'SetReportUnPrinted' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('QueryPrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x3e64110 name="QueryPrintTask" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'QueryPrintTask' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('NotifyFilmInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3e64fd0 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'NotifyFilmInfo' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('SetPrintMode', 'http://tempuri.org/'), found as: &lt;Element:0x3e43c70 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'SetPrintMode' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('NotifyReportInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3e43bb0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'NotifyReportInfo' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('GetPrintServerStatus', 'http://tempuri.org/'), found as: &lt;Element:0x3e43e50 name="GetPrintServerStatus" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'GetPrintServerStatus' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('CreatePrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x3e43f70 name="CreatePrintTask" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'CreatePrintTask' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('CreatePrintTask2', 'http://tempuri.org/'), found as: &lt;Element:0x3e43e90 name="CreatePrintTask2" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'CreatePrintTask2' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('Print', 'http://tempuri.org/'), found as: &lt;Element:0x3e53270 name="Print" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'Print' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('GetPrintTaskStatus', 'http://tempuri.org/'), found as: &lt;Element:0x3e53450 name="GetPrintTaskStatus" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'GetPrintTaskStatus' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('CentralPrintCombine', 'http://tempuri.org/'), found as: &lt;Element:0x3e53610 name="CentralPrintCombine" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'CentralPrintCombine' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('CentralPrint', 'http://tempuri.org/'), found as: &lt;Element:0x3e53950 name="CentralPrint" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'CentralPrint' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('AddQCLog', 'http://tempuri.org/'), found as: &lt;Element:0x3e53af0 name="AddQCLog" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'AddQCLog' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('Version', 'http://tempuri.org/'), found as: &lt;Element:0x3e53d10 name="Version" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'Version' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('UpdateReportPrinterStatus', 'http://tempuri.org/'), found as: &lt;Element:0x3e53e70 name="UpdateReportPrinterStatus" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'UpdateReportPrinterStatus' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('QueryExamInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3e53f70 name="QueryExamInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'QueryExamInfo' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('SetReportPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x3e64bb0 name="SetReportPrinted" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'SetReportPrinted' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('SetReportUnPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x3e649b0 name="SetReportUnPrinted" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'SetReportUnPrinted' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('QueryPrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x3e64110 name="QueryPrintTask" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'QueryPrintTask' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">('NotifyFilmInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3e64fd0 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">method 'NotifyFilmInfo' created: started: 1573538257 (running)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">Element:0x3e53cb0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e53cb0 name="QCUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">TypeQuery:0x41c7d30, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">Element:0x3e53d70, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e53d70 name="QCLevel" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">TypeQuery:0x41c7d30, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">Element:0x3e53d90, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e53d90 name="QCUser" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">TypeQuery:0x41c7d30, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">Element:0x3e53db0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e53db0 name="QCEvent" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">TypeQuery:0x41c7d30, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">Element:0x3e53dd0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e53dd0 name="QCDescription" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">TypeQuery:0x41c7d30, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">Element:0x3e53ad0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41a3ed0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e53ad0 name="strTerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">TypeQuery:0x41a3ed0, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">Element:0x3e53b30, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41a3ed0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e53b30 name="strID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">TypeQuery:0x41a3ed0, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">Element:0x3e53b50, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41a3ed0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e53b50 name="strIDType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">TypeQuery:0x41a3ed0, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.676" level="DEBUG">Element:0x3e53b70, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41a3ed0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e53b70 name="userId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41a3ed0, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e537f0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e537f0 name="strTerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41c7d30, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e53870, resolving: ('ArrayOfString', 'http://tempuri.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "ArrayOfString",
      "http://tempuri.org/",
   history[] = 
      &lt;Element:0x3e53870 name="strIDAccID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">('ArrayOfString', 'http://tempuri.org/'), found as: &lt;Complex:0x3e43cf0 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e53890, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e53890 name="strAccType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41c7d30, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e538b0, resolving: ('ArrayOfString', 'http://tempuri.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "ArrayOfString",
      "http://tempuri.org/",
   history[] = 
      &lt;Element:0x3e538b0 name="strIDUsID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">('ArrayOfString', 'http://tempuri.org/'), found as: &lt;Complex:0x3e43cf0 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e538d0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e538d0 name="strUsType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41c7d30, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e53910, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e53910 name="userId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41c7d30, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e530b0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e530b0 name="patient_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41c7d30, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e53110, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e53110 name="patient_id_type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41c7d30, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e53230, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e53230 name="patient_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41c7d30, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e532b0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e532b0 name="patient_id_type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41c7d30, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e53570, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e53570 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41c7d30, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e642b0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e642b0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41c7d30, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e64070, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e64070 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41c7d30, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e43d50, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e43d50 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41c7d30, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e43d90, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e43d90 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41c7d30, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e43df0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e43df0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41c7d30, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e43e10, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e43e10 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41c7d30, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e43e30, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e43e30 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41c7d30, found builtin (int)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e43e70, resolving: ('ArrayOfString', 'http://tempuri.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "ArrayOfString",
      "http://tempuri.org/",
   history[] = 
      &lt;Element:0x3e43e70 name="reportFileName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">('ArrayOfString', 'http://tempuri.org/'), found as: &lt;Complex:0x3e43cf0 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e533f0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e533f0 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41c7d30, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e64bf0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e64bf0 name="cardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41c7d30, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e64b90, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e64b90 name="cardType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41c7d30, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e64770, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e64770 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41c7d30, found builtin (int)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e43b90, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e43b90 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41c7d30, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e43b30, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e43b30 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41c7d30, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e43bd0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e43bd0 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41c7d30, found builtin (int)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e64050, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e64050 name="reportId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41c7d30, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e64950, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e64950 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41c7d30, found builtin (int)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e64410, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e64410 name="reportId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41c7d30, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e64cf0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e64cf0 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41c7d30, found builtin (int)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e53f50, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e53f50 name="nPrinterStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41c7d30, found builtin (int)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e53fb0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e53fb0 name="nErrorCode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41c7d30, found builtin (int)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e53fd0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41c7d30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e53fd0 name="strErrorDesc" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41c7d30, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">searching schema for (ArrayOfString)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">('ArrayOfString', http://tempuri.org/), found as: &lt;Complex:0x3e43cf0 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">found (ArrayOfString) as (&lt;Complex:0x3e43cf0 name="ArrayOfString" /&gt;)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">Element:0x3e43d70, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x41a3ed0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e43d70 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">TypeQuery:0x41a3ed0, found builtin (string)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">ArrayOfString created: 0 (ms)</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">('NotifyReportInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3e43bb0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">('NotifyReportInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3e43bb0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">processing:
(Content){
   tag = "patientName"
   value = "CN20191112135732144722"
   type = &lt;Element:0x3e43d50 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x497e570 /&gt;
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x0497EF10&gt;
content:
(Content){
   tag = "patientName"
   value = "CN20191112135732144722"
   type = &lt;Element:0x3e43d50 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x497e570 /&gt;
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">starting content:
(Content){
   tag = "patientName"
   value = "CN20191112135732144722"
   type = &lt;Element:0x3e43d50 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x497e570 /&gt;
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x0497EF50&gt;)
&lt;suds.resolver.Frame object at 0x0497EF50&gt;</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">created - node:
&lt;tns:patientName xmlns:tns="http://tempuri.org/"/&gt;</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">ending content:
(Content){
   tag = "patientName"
   value = "CN20191112135732144722"
   type = &lt;Element:0x3e43d50 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x497e570 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x0497EF50&gt;)
</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">processing:
(Content){
   tag = "patientID"
   value = "P20191112135732144722"
   type = &lt;Element:0x3e43d90 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x497e5b0 /&gt;
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x049A9210&gt;
content:
(Content){
   tag = "patientID"
   value = "P20191112135732144722"
   type = &lt;Element:0x3e43d90 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x497e5b0 /&gt;
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">starting content:
(Content){
   tag = "patientID"
   value = "P20191112135732144722"
   type = &lt;Element:0x3e43d90 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x497e5b0 /&gt;
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x049A9250&gt;)
&lt;suds.resolver.Frame object at 0x049A9250&gt;</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">created - node:
&lt;tns:patientID xmlns:tns="http://tempuri.org/"/&gt;</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">ending content:
(Content){
   tag = "patientID"
   value = "P20191112135732144722"
   type = &lt;Element:0x3e43d90 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x497e5b0 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x049A9250&gt;)
</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">processing:
(Content){
   tag = "accessionNumber"
   value = "A20191112135732144722"
   type = &lt;Element:0x3e43df0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x497e5f0 /&gt;
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x049A94F0&gt;
content:
(Content){
   tag = "accessionNumber"
   value = "A20191112135732144722"
   type = &lt;Element:0x3e43df0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x497e5f0 /&gt;
 }</msg>
<msg timestamp="20191112 13:57:37.692" level="DEBUG">starting content:
(Content){
   tag = "accessionNumber"
   value = "A20191112135732144722"
   type = &lt;Element:0x3e43df0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x497e5f0 /&gt;
 }</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x049A9530&gt;)
&lt;suds.resolver.Frame object at 0x049A9530&gt;</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">created - node:
&lt;tns:accessionNumber xmlns:tns="http://tempuri.org/"/&gt;</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">ending content:
(Content){
   tag = "accessionNumber"
   value = "A20191112135732144722"
   type = &lt;Element:0x3e43df0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x497e5f0 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x049A9530&gt;)
</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">processing:
(Content){
   tag = "studyInstanceUID"
   value = "fa5f8344-c2aa-4975-a219-92f92d3b1b41"
   type = &lt;Element:0x3e43e10 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x497e630 /&gt;
 }</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x049A97D0&gt;
content:
(Content){
   tag = "studyInstanceUID"
   value = "fa5f8344-c2aa-4975-a219-92f92d3b1b41"
   type = &lt;Element:0x3e43e10 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x497e630 /&gt;
 }</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">starting content:
(Content){
   tag = "studyInstanceUID"
   value = "fa5f8344-c2aa-4975-a219-92f92d3b1b41"
   type = &lt;Element:0x3e43e10 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x497e630 /&gt;
 }</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x049A9810&gt;)
&lt;suds.resolver.Frame object at 0x049A9810&gt;</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">created - node:
&lt;tns:studyInstanceUID xmlns:tns="http://tempuri.org/"/&gt;</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">ending content:
(Content){
   tag = "studyInstanceUID"
   value = "fa5f8344-c2aa-4975-a219-92f92d3b1b41"
   type = &lt;Element:0x3e43e10 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x497e630 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x049A9810&gt;)
</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">processing:
(Content){
   tag = "reportStatus"
   value = 2
   type = &lt;Element:0x3e43e30 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x497e670 /&gt;
 }</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x049A9AB0&gt;
content:
(Content){
   tag = "reportStatus"
   value = 2
   type = &lt;Element:0x3e43e30 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x497e670 /&gt;
 }</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">starting content:
(Content){
   tag = "reportStatus"
   value = 2
   type = &lt;Element:0x3e43e30 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x497e670 /&gt;
 }</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x049A9AF0&gt;)
&lt;suds.resolver.Frame object at 0x049A9AF0&gt;</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">created - node:
&lt;tns:reportStatus xmlns:tns="http://tempuri.org/"/&gt;</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">ending content:
(Content){
   tag = "reportStatus"
   value = "2"
   type = &lt;Element:0x3e43e30 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x497e670 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x049A9AF0&gt;)
</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">processing:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf",
      }
   type = &lt;Element:0x3e43e70 name="reportFileName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
   real = &lt;Complex:0x3e43cf0 name="ArrayOfString"&gt;
   &lt;Sequence:0x3e43d10&gt;
      &lt;Element:0x3e43d70 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x049A9DD0&gt;
content:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf",
      }
   type = &lt;Element:0x3e43e70 name="reportFileName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
   real = &lt;Complex:0x3e43cf0 name="ArrayOfString"&gt;
   &lt;Sequence:0x3e43d10&gt;
      &lt;Element:0x3e43d70 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">starting content:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf",
      }
   type = &lt;Element:0x3e43e70 name="reportFileName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
   real = &lt;Complex:0x3e43cf0 name="ArrayOfString"&gt;
   &lt;Sequence:0x3e43d10&gt;
      &lt;Element:0x3e43d70 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x049A9E10&gt;)
&lt;suds.resolver.Frame object at 0x049A9E10&gt;</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">created - node:
&lt;tns:reportFileName xmlns:tns="http://tempuri.org/"/&gt;</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">appending parent:
&lt;tns:reportFileName xmlns:tns="http://tempuri.org/"/&gt;
content:
(Content){
   tag = "string"
   value[] = 
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf",
 }</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">starting content:
(Content){
   tag = "string"
   value[] = 
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf",
 }</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">searching parent (&lt;Complex:0x3e43cf0 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x049A9E90&gt;)
&lt;suds.resolver.Frame object at 0x049A9E10&gt;
&lt;suds.resolver.Frame object at 0x049A9E90&gt;</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x049A9E90&gt;)
&lt;suds.resolver.Frame object at 0x049A9E10&gt;</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">appending parent:
&lt;tns:reportFileName xmlns:tns="http://tempuri.org/"/&gt;
content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf"
 }</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">starting content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf"
 }</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">searching parent (&lt;Complex:0x3e43cf0 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x049A9FB0&gt;)
&lt;suds.resolver.Frame object at 0x049A9E10&gt;
&lt;suds.resolver.Frame object at 0x049A9FB0&gt;</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">created - node:
&lt;tns:string xmlns:tns="http://tempuri.org/"/&gt;</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">ending content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf"
   type = &lt;Element:0x3e43d70 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x497e710 /&gt;
   ancestry[] = 
      &lt;Complex:0x3e43cf0 name="ArrayOfString"&gt;
   &lt;Sequence:0x3e43d10&gt;
      &lt;Element:0x3e43d70 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x3e43d10&gt;
   &lt;Element:0x3e43d70 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x049A9FB0&gt;)
&lt;suds.resolver.Frame object at 0x049A9E10&gt;</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x049A9E90&gt;)
&lt;suds.resolver.Frame object at 0x049A9E10&gt;
&lt;suds.resolver.Frame object at 0x049A9E90&gt;</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">ending content:
(Content){
   tag = "string"
   value[] = 
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf",
   type = &lt;Element:0x3e43d70 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x497e710 /&gt;
   ancestry[] = 
      &lt;Complex:0x3e43cf0 name="ArrayOfString"&gt;
   &lt;Sequence:0x3e43d10&gt;
      &lt;Element:0x3e43d70 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x3e43d10&gt;
   &lt;Element:0x3e43d70 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x049A9E90&gt;)
&lt;suds.resolver.Frame object at 0x049A9E10&gt;</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">ending content:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf",
      }
   type = &lt;Element:0x3e43e70 name="reportFileName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
   real = &lt;Complex:0x3e43cf0 name="ArrayOfString"&gt;
   &lt;Sequence:0x3e43d10&gt;
      &lt;Element:0x3e43d70 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x049A9E10&gt;)
</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">message for 'NotifyReportInfo' created: 15 (ms)</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">sending to (http://10.112.20.84/PrintServer/PrintService.asmx)
message:
&lt;suds.sax.document.Document object at 0x0497EA90&gt;</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">headers = {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://tempuri.org/NotifyReportInfo"'}</msg>
<msg timestamp="20191112 13:57:37.707" level="DEBUG">sending:
URL: http://10.112.20.84/PrintServer/PrintService.asmx
HEADERS: {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://tempuri.org/NotifyReportInfo"', 'Content-type': 'text/xml; charset=utf-8', 'Soapaction': b'"http://tempuri.org/NotifyReportInfo"'}
MESSAGE:
b'&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://tempuri.org/" xmlns:ns1="http://schemas.xmlsoap.org/soap/envelope/"&gt;&lt;SOAP-ENV:Header/&gt;&lt;ns1:Body&gt;&lt;ns0:NotifyReportInfo&gt;&lt;ns0:patientName&gt;CN20191112135732144722&lt;/ns0:patientName&gt;&lt;ns0:patientID&gt;P20191112135732144722&lt;/ns0:patientID&gt;&lt;ns0:accessionNumber&gt;A20191112135732144722&lt;/ns0:accessionNumber&gt;&lt;ns0:studyInstanceUID&gt;fa5f8344-c2aa-4975-a219-92f92d3b1b41&lt;/ns0:studyInstanceUID&gt;&lt;ns0:reportStatus&gt;2&lt;/ns0:reportStatus&gt;&lt;ns0:reportFileName&gt;&lt;ns0:string&gt;E:\\PUMA_AUTO_Ref\\Cases\\SmokeTest\\4714\\Report\\Performance1.pdf&lt;/ns0:string&gt;&lt;/ns0:reportFileName&gt;&lt;/ns0:NotifyReportInfo&gt;&lt;/ns1:Body&gt;&lt;/SOAP-ENV:Envelope&gt;'</msg>
<msg timestamp="20191112 13:57:38.020" level="DEBUG">received:
CODE: HTTPStatus.OK
HEADERS: Cache-Control: private, max-age=0
Content-Type: text/xml; charset=utf-8
Server: Microsoft-IIS/7.5
X-AspNet-Version: 4.0.30319
X-Powered-By: ASP.NET
Date: Tue, 12 Nov 2019 05:57:38 GMT
Connection: close
Content-Length: 377


MESSAGE:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;NotifyReportInfoResponse xmlns="http://tempuri.org/"&gt;&lt;NotifyReportInfoResult&gt;0&lt;/NotifyReportInfoResult&gt;&lt;/NotifyReportInfoResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191112 13:57:38.020" level="DEBUG">waited 312 (ms) on server reply</msg>
<msg timestamp="20191112 13:57:38.020" level="DEBUG">HTTP succeeded:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;NotifyReportInfoResponse xmlns="http://tempuri.org/"&gt;&lt;NotifyReportInfoResult&gt;0&lt;/NotifyReportInfoResult&gt;&lt;/NotifyReportInfoResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191112 13:57:38.020" level="DEBUG">b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;NotifyReportInfoResponse xmlns="http://tempuri.org/"&gt;&lt;NotifyReportInfoResult&gt;0&lt;/NotifyReportInfoResult&gt;&lt;/NotifyReportInfoResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'
sax duration: 0 (ms)</msg>
<msg timestamp="20191112 13:57:38.020" level="DEBUG">('NotifyReportInfoResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e43db0 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191112 13:57:38.020" level="DEBUG">Element:0x3e43f10, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x49a9df0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e43f10 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:38.020" level="DEBUG">TypeQuery:0x49a9df0, found builtin (int)</msg>
<msg timestamp="20191112 13:57:38.020" level="DEBUG">reset</msg>
<msg timestamp="20191112 13:57:38.020" level="DEBUG">Element:0x3e43f10, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x499c3f0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e43f10 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 13:57:38.020" level="DEBUG">TypeQuery:0x499c3f0, found builtin (int)</msg>
<msg timestamp="20191112 13:57:38.020" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x0499C130&gt;)
&lt;suds.resolver.Frame object at 0x0499C130&gt;</msg>
<msg timestamp="20191112 13:57:38.020" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x0499C130&gt;)
</msg>
<msg timestamp="20191112 13:57:38.020" level="DEBUG">method 'NotifyReportInfo' invoked: 312 (ms)</msg>
<msg timestamp="20191112 13:57:38.020" level="INFO">Report.report_create_by_printserver_reportinfo: Report Archived successfully!</msg>
<msg timestamp="20191112 13:57:38.020" level="INFO">${Report_archived_Info} = {"result": true, "patient_name": "CN20191112135732144722", "patient_id": "P20191112135732144722", "accessionNumber": "A20191112135732144722", "StudyInstanceUID": "fa5f8344-c2aa-4975-a219-92f92d3b1b41"...</msg>
<status status="PASS" starttime="20191112 13:57:37.332" endtime="20191112 13:57:38.020"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191112 13:57:38.020" level="INFO">${Report_archived_Info_Json} = {'result': True, 'patient_name': 'CN20191112135732144722', 'patient_id': 'P20191112135732144722', 'accessionNumber': 'A20191112135732144722', 'StudyInstanceUID': 'fa5f8344-c2aa-4975-a219-92f92d3b1b41'...</msg>
<status status="PASS" starttime="20191112 13:57:38.020" endtime="20191112 13:57:38.020"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191112 13:57:38.067" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191112 13:57:38.035" endtime="20191112 13:57:38.067"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The web service should return true or return successfully response. Th web service return 0 as true.</arg>
</arguments>
<status status="PASS" starttime="20191112 13:57:38.067" endtime="20191112 13:57:38.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4:\n Description \n 1. Check the WGGC.dbo.AFP_ReportInfo table. \n Expected \n 1. New record can be found in AFP_ReportInfo table for received report, and the ReportStatus value should be 2.</arg>
</arguments>
<msg timestamp="20191112 13:57:38.067" level="INFO">Step 4:
Description 
1. Check the WGGC.dbo.AFP_ReportInfo table. 
Expected 
1. New record can be found in AFP_ReportInfo table for received report, and the ReportStatus value should be 2.</msg>
<status status="PASS" starttime="20191112 13:57:38.067" endtime="20191112 13:57:38.067"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>StudyInstanceUID</arg>
</arguments>
<assign>
<var>${Report_StudyInstanceUID}</var>
</assign>
<msg timestamp="20191112 13:57:38.098" level="INFO">${Report_StudyInstanceUID} = ['fa5f8344-c2aa-4975-a219-92f92d3b1b41']</msg>
<status status="PASS" starttime="20191112 13:57:38.067" endtime="20191112 13:57:38.098"></status>
</kw>
<kw name="Report Check Archive In Reportinfo By UUID" library="PUMA_ReportLibrary">
<doc>Report_check_archive_in_reportinfo_by_UUID</doc>
<arguments>
<arg>${Report_StudyInstanceUID}[0]</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Info}</var>
</assign>
<msg timestamp="20191112 13:57:38.301" level="INFO">Report.Report_check_archive_by_studyUID: The report archived successfully and the ReportStatus value in wggc.dbo.afp_reportinfo is [2]</msg>
<msg timestamp="20191112 13:57:38.301" level="INFO">${Report_Check_ReportInfo_Info_Info} = {"result": true, "ReportStatus": "2"}</msg>
<status status="PASS" starttime="20191112 13:57:38.098" endtime="20191112 13:57:38.301"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Info}</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Json}</var>
</assign>
<msg timestamp="20191112 13:57:38.301" level="INFO">${Report_Check_ReportInfo_Info_Json} = {'result': True, 'ReportStatus': '2'}</msg>
<status status="PASS" starttime="20191112 13:57:38.301" endtime="20191112 13:57:38.301"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Result}</var>
</assign>
<msg timestamp="20191112 13:57:38.332" level="INFO">${Report_Check_ReportInfo_Info_Result} = [True]</msg>
<status status="PASS" starttime="20191112 13:57:38.301" endtime="20191112 13:57:38.332"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>ReportStatus</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_ReportStatus}</var>
</assign>
<msg timestamp="20191112 13:57:38.363" level="INFO">${Report_Check_ReportInfo_Info_ReportStatus} = ['2']</msg>
<status status="PASS" starttime="20191112 13:57:38.332" endtime="20191112 13:57:38.363"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Result}[0]</arg>
<arg>Wggc.dbo.AFP_ReportInfo table have new records of this report</arg>
</arguments>
<status status="PASS" starttime="20191112 13:57:38.363" endtime="20191112 13:57:38.363"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_ReportStatus}[0]</arg>
<arg>2</arg>
<arg>The report status value in table wggc.dbo.afp_reportinfo is 2</arg>
</arguments>
<msg timestamp="20191112 13:57:38.363" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 13:57:38.363" endtime="20191112 13:57:38.363"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191112 13:57:43.379" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191112 13:57:38.379" endtime="20191112 13:57:43.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5: \n Description: \n 1. Check the WGGC.dbo.AFP_PrintMode table. \n Expected: \n 1. Can find a new record in table and value should be correct. \n</arg>
</arguments>
<msg timestamp="20191112 13:57:43.379" level="INFO">Step 5: 
Description: 
1. Check the WGGC.dbo.AFP_PrintMode table. 
Expected: 
1. Can find a new record in table and value should be correct. 
</msg>
<status status="PASS" starttime="20191112 13:57:43.379" endtime="20191112 13:57:43.379"></status>
</kw>
<kw name="Printmode Get Info From Db By Accn" library="PUMA_PrintModeLibrary">
<doc>printmode_get_info_from_db_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${PrintMode_info}</var>
</assign>
<msg timestamp="20191112 13:57:43.379" level="INFO">${PrintMode_info} = {"result": true, "AccessionNumber": "A20191112135732144722", "StudyInstanceUID": "", "PrintMode": 0, "StatusTime": "2019-11-12 13:57:39.963000", "HoldFlag": 1, "PrintWaitTime": "60", "ReportWaitTime":...</msg>
<status status="PASS" starttime="20191112 13:57:43.379" endtime="20191112 13:57:43.379"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintMode_info}</arg>
</arguments>
<assign>
<var>${PrintMode_info_Json}</var>
</assign>
<msg timestamp="20191112 13:57:43.379" level="INFO">${PrintMode_info_Json} = {'result': True, 'AccessionNumber': 'A20191112135732144722', 'StudyInstanceUID': '', 'PrintMode': 0, 'StatusTime': '2019-11-12 13:57:39.963000', 'HoldFlag': 1, 'PrintWaitTime': '60', 'ReportWaitTime':...</msg>
<status status="PASS" starttime="20191112 13:57:43.379" endtime="20191112 13:57:43.379"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${PrintMode_info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${PrintMode_result}</var>
</assign>
<msg timestamp="20191112 13:57:43.426" level="INFO">${PrintMode_result} = [True]</msg>
<status status="PASS" starttime="20191112 13:57:43.379" endtime="20191112 13:57:43.426"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${PrintMode_info_Json}</arg>
<arg>PrintMode</arg>
</arguments>
<assign>
<var>${PrintMode_value}</var>
</assign>
<msg timestamp="20191112 13:57:43.457" level="INFO">${PrintMode_value} = [0]</msg>
<status status="PASS" starttime="20191112 13:57:43.426" endtime="20191112 13:57:43.457"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${PrintMode_result}</arg>
</arguments>
<status status="PASS" starttime="20191112 13:57:43.457" endtime="20191112 13:57:43.457"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${PrintMode_value}[0]</arg>
<arg>0</arg>
<arg>The patient print mode is 0 for "门诊病人"</arg>
</arguments>
<msg timestamp="20191112 13:57:43.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 13:57:43.457" endtime="20191112 13:57:43.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6: \n Description: \n 1. Check the ReportStoredFlag value in T_Integration_ExamInfo table in WGGC database for this report. \n Expected: \n 1. The ReportStoredFlag value should be 9 \n</arg>
</arguments>
<msg timestamp="20191112 13:57:43.473" level="INFO">Step 6: 
Description: 
1. Check the ReportStoredFlag value in T_Integration_ExamInfo table in WGGC database for this report. 
Expected: 
1. The ReportStoredFlag value should be 9 
</msg>
<status status="PASS" starttime="20191112 13:57:43.457" endtime="20191112 13:57:43.473"></status>
</kw>
<kw name="Report Check ReportStoredFlag In T Integration ExamInfo" library="PUMA_ReportLibrary">
<doc>report_check_ReportStoredFlag_in_T_Integration_ExamInfo</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlag_info}</var>
</assign>
<msg timestamp="20191112 13:57:43.473" level="INFO">Report.report_check_ReportStoredFlag_in_T_Integration_ExamInfo: Get the ReportStoredFlag of patient [P20191112135732144722, A20191112135732144722] correct and value is 9</msg>
<msg timestamp="20191112 13:57:43.473" level="INFO">${Report_ReportStoreFlag_info} = {"result": true, "ReportStoredFlag": 9}</msg>
<status status="PASS" starttime="20191112 13:57:43.473" endtime="20191112 13:57:43.473"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info}</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlag_info_json}</var>
</assign>
<msg timestamp="20191112 13:57:43.473" level="INFO">${Report_ReportStoreFlag_info_json} = {'result': True, 'ReportStoredFlag': 9}</msg>
<status status="PASS" starttime="20191112 13:57:43.473" endtime="20191112 13:57:43.473"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info_json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlage_info_result}</var>
</assign>
<msg timestamp="20191112 13:57:43.520" level="INFO">${Report_ReportStoreFlage_info_result} = [True]</msg>
<status status="PASS" starttime="20191112 13:57:43.473" endtime="20191112 13:57:43.520"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info_json}</arg>
<arg>ReportStoredFlag</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlage_value}</var>
</assign>
<msg timestamp="20191112 13:57:43.551" level="INFO">${Report_ReportStoreFlage_value} = [9]</msg>
<status status="PASS" starttime="20191112 13:57:43.520" endtime="20191112 13:57:43.551"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_ReportStoreFlage_info_result}[0]</arg>
</arguments>
<status status="PASS" starttime="20191112 13:57:43.551" endtime="20191112 13:57:43.551"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Report_ReportStoreFlage_value}[0]</arg>
<arg>9</arg>
<arg>The ReportStoredFlag value should be 9 in T_integration_examInfo table</arg>
</arguments>
<msg timestamp="20191112 13:57:43.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 13:57:43.551" endtime="20191112 13:57:43.551"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191112 13:57:32.145" endtime="20191112 13:57:43.551" critical="yes"></status>
</test>
<test id="s1-t5" name="SmokeTest_005_Core_4715_03.01.01 Report receive from Virtual Print success.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1\n Description:\n1. Create a patient with an exam in RIS or local table in PS.\nExpected:\n 1. The patient with an exam can create successfully.</arg>
</arguments>
<msg timestamp="20191112 13:57:43.551" level="INFO">Step 1
Description:
1. Create a patient with an exam in RIS or local table in PS.
Expected:
1. The patient with an exam can create successfully.</msg>
<status status="PASS" starttime="20191112 13:57:43.551" endtime="20191112 13:57:43.551"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191112 13:57:43.551" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 13:57:43.567" level="DEBUG">http://10.112.20.84:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191112 13:57:43.567" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-12 13:57:43.550986", "UpdateDT": "2019-11-12 13:57:43.550986", "PatientID": "P20191112135743550986", "AccessionNumber": "A20191112135743550986", "StudyInstanceUID": "UID20191112135743550986", "NameCN": "CN20191112135743550986", "NameEN": "EN20191112135743550986", "Gender": "F", "Birthday": "1986-11-20", "Modality": "NM", "ModalityName": "MR", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-12 13:57:43.550986", "RegisterDT": "2019-11-12 13:57:43.550986", "ExamDT": "2019-11-12 13:57:43.550986", "ReportDT": "2019-11-12 13:57:43.550986", "SubmitDT": "2019-11-12 13:57:43.550986", "ApproveDT": "2019-11-12 13:57:43.550986", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191112135743550986", "ExamBodyPart": "Hand", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191112 13:57:43.567" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-12 13:57:43.550986", "UpdateDT": "2019-11-12 13:57:43.550986", "PatientID": "P20191112135743550986", "AccessionNumber": "A20191112135743550986", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191112 13:57:43.551" endtime="20191112 13:57:43.567"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191112 13:57:43.567" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-12 13:57:43.550986', 'UpdateDT': '2019-11-12 13:57:43.550986', 'PatientID': 'P20191112135743550986', 'AccessionNumber': 'A20191112135743550986', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191112 13:57:43.567" endtime="20191112 13:57:43.567"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191112 13:57:43.613" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191112 13:57:43.567" endtime="20191112 13:57:43.613"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]</arg>
<arg>Patient create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 13:57:43.613" endtime="20191112 13:57:43.613"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191112 13:57:43.645" level="INFO">${patientID} = ['P20191112135743550986']</msg>
<status status="PASS" starttime="20191112 13:57:43.613" endtime="20191112 13:57:43.645"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${AccessionNumber}</var>
</assign>
<msg timestamp="20191112 13:57:43.692" level="INFO">${AccessionNumber} = ['A20191112135743550986']</msg>
<status status="PASS" starttime="20191112 13:57:43.645" endtime="20191112 13:57:43.692"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>NameCN</arg>
</arguments>
<assign>
<var>${PatientName}</var>
</assign>
<msg timestamp="20191112 13:57:43.723" level="INFO">${PatientName} = ['CN20191112135743550986']</msg>
<status status="PASS" starttime="20191112 13:57:43.692" endtime="20191112 13:57:43.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2: \n Description \n 1. Configure the report OCR service in PS. \n 2. Make sure it can identify the patient report in step1. \n Expected:\n The operation can execute successfully.</arg>
</arguments>
<msg timestamp="20191112 13:57:43.738" level="INFO">Step 2: 
Description 
1. Configure the report OCR service in PS. 
2. Make sure it can identify the patient report in step1. 
Expected:
The operation can execute successfully.</msg>
<status status="PASS" starttime="20191112 13:57:43.738" endtime="20191112 13:57:43.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3: \n Description \n 1. Prepare a report of patient which create in step1. \n 2. Print the report to PS by virtul printing. \n Expected: \n 1. The report can print to PS successfully. \n</arg>
</arguments>
<msg timestamp="20191112 13:57:43.738" level="INFO">Step 3: 
Description 
1. Prepare a report of patient which create in step1. 
2. Print the report to PS by virtul printing. 
Expected: 
1. The report can print to PS successfully. 
</msg>
<status status="PASS" starttime="20191112 13:57:43.738" endtime="20191112 13:57:43.738"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191112 13:57:48.738" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191112 13:57:43.738" endtime="20191112 13:57:48.738"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191112 13:57:58.801" level="INFO">PUMA_ReportLibrary._archive_check: Report achived successfully.
Report achived successfully. {"Status": true, "server": "10.112.20.84", "patient_id": "P20191112135743550986", "accession_number": "A20191112135743550986", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "powershell_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.84/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191112 13:57:58.801" level="INFO">${Report_archived_Info} = {"Status": true, "server": "10.112.20.84", "patient_id": "P20191112135743550986", "accession_number": "A20191112135743550986", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191112 13:57:48.738" endtime="20191112 13:57:58.801"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191112 13:57:58.801" level="INFO">${Report_archived_Info_Json} = {'Status': True, 'server': '10.112.20.84', 'patient_id': 'P20191112135743550986', 'accession_number': 'A20191112135743550986', 'report_file': 'D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191112 13:57:58.801" endtime="20191112 13:57:58.801"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191112 13:57:58.832" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191112 13:57:58.801" endtime="20191112 13:57:58.832"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 13:57:58.832" endtime="20191112 13:57:58.832"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20191112 13:58:08.832" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20191112 13:57:58.832" endtime="20191112 13:58:08.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4 \n \ Description \n 1. Check the WGGC.dbo.AFP_ReportInfo table. \n Expected: \n 1. New record can be found in AFP_ReportInfo table for received report, and the ReportStatus value should be 2. \n</arg>
</arguments>
<msg timestamp="20191112 13:58:08.832" level="INFO">Step 4 
 Description 
1. Check the WGGC.dbo.AFP_ReportInfo table. 
Expected: 
1. New record can be found in AFP_ReportInfo table for received report, and the ReportStatus value should be 2. 
</msg>
<status status="PASS" starttime="20191112 13:58:08.832" endtime="20191112 13:58:08.832"></status>
</kw>
<kw name="Report Get Info From Afp Reportinfo" library="PUMA_ReportLibrary">
<doc>report_get_info_from_afp_reportinfo</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Info}</var>
</assign>
<msg timestamp="20191112 13:58:08.832" level="INFO">['StudyInstanceUID', 'ReportStatus', 'StatusTime', 'AccessionNumber', 'FileName', 'PatientID', 'PatientName', 'PrintTime', 'PrintStatus', 'DeleteStatus', 'PrintCount', 'Gender', 'ExamName', 'PatientType', 'ModalityName', 'ExamDateTime', 'ReferringDepartment', 'VerifyDateTime', 'ModalityType', 'ForwardDestination', 'ForwardDateTime', 'BodyPart', 'AAccessionNumber', 'AStudyInstanceUID', 'CreatedTime', 'DepartmentID', 'PageCount', 'TerminalID', 'SyncToECS', 'CopiesCount', 'PdfPassword']
{'result': True, 'StudyInstanceUID': ('c9698aa62a3a4b2d83bdbd8a2a2118e3',), 'ReportStatus': (2,), 'StatusTime': ('2019-11-12 13:57:59.637000',), 'AccessionNumber': ('A20191112135743550986',), 'FileName': ('E:\\Report\\Archive\\20191112\\A20191112135743550986_135759_bdd72b0a61ff43e98c6b552c46763a8b.pdf',), 'PatientID': ('P20191112135743550986                                           ',), 'PatientName': ('CN20191112135743550986',), 'PrintTime': (None,), 'PrintStatus': (0,), 'DeleteStatus': (0,), 'PrintCount': (0,), 'Gender': ('F',), 'ExamName': ('Exam20191112135743550986',), 'PatientType': ('2',), 'ModalityName': ('MR',), 'ExamDateTime': ('2019-11-12 13:57:43.550986',), 'ReferringDepartment': ('',), 'VerifyDateTime': ('2019-11-12 13:57:59',), 'ModalityType': ('NM',), 'ForwardDestination': (None,), 'ForwardDateTime': (None,), 'BodyPart': ('',), 'AAccessionNumber': (None,), 'AStudyInstanceUID': (None,), 'CreatedTime': ('2019-11-12 13:57:59.637000',), 'DepartmentID': (1,), 'PageCount': (1,), 'TerminalID': (None,), 'SyncToECS': (0,), 'CopiesCount': (1,), 'PdfPassword': (None,)}</msg>
<msg timestamp="20191112 13:58:08.832" level="INFO">${Report_Check_ReportInfo_Info_Info} = {"result": true, "StudyInstanceUID": ["c9698aa62a3a4b2d83bdbd8a2a2118e3"], "ReportStatus": [2], "StatusTime": ["2019-11-12 13:57:59.637000"], "AccessionNumber": ["A20191112135743550986"], "FileName": ...</msg>
<status status="PASS" starttime="20191112 13:58:08.832" endtime="20191112 13:58:08.832"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Info}</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Json}</var>
</assign>
<msg timestamp="20191112 13:58:08.832" level="INFO">${Report_Check_ReportInfo_Info_Json} = {'result': True, 'StudyInstanceUID': ['c9698aa62a3a4b2d83bdbd8a2a2118e3'], 'ReportStatus': [2], 'StatusTime': ['2019-11-12 13:57:59.637000'], 'AccessionNumber': ['A20191112135743550986'], 'FileName': ...</msg>
<status status="PASS" starttime="20191112 13:58:08.832" endtime="20191112 13:58:08.832"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Result}</var>
</assign>
<msg timestamp="20191112 13:58:08.864" level="INFO">${Report_Check_ReportInfo_Info_Result} = [True]</msg>
<status status="PASS" starttime="20191112 13:58:08.832" endtime="20191112 13:58:08.864"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>ReportStatus</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_ReportStatus}</var>
</assign>
<msg timestamp="20191112 13:58:08.910" level="INFO">${Report_Check_ReportInfo_Info_ReportStatus} = [[2]]</msg>
<status status="PASS" starttime="20191112 13:58:08.864" endtime="20191112 13:58:08.910"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>FileName</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_ReportPath}</var>
</assign>
<msg timestamp="20191112 13:58:08.942" level="INFO">${Report_Check_ReportInfo_Info_ReportPath} = [['E:\\Report\\Archive\\20191112\\A20191112135743550986_135759_bdd72b0a61ff43e98c6b552c46763a8b.pdf']]</msg>
<status status="PASS" starttime="20191112 13:58:08.910" endtime="20191112 13:58:08.942"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Result}[0]</arg>
<arg>Wggc.dbo.AFP_ReportInfo table have new records of this report</arg>
</arguments>
<status status="PASS" starttime="20191112 13:58:08.942" endtime="20191112 13:58:08.942"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_ReportStatus}[0][0]</arg>
<arg>2</arg>
<arg>The report status value in table wggc.dbo.afp_reportinfo is 2</arg>
</arguments>
<msg timestamp="20191112 13:58:08.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 13:58:08.942" endtime="20191112 13:58:08.942"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191112 13:58:13.942" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191112 13:58:08.942" endtime="20191112 13:58:13.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5: \n Description:\n 1. Check the WGGC.dbo.AFP_ReportInfo table. \n Expected: \n 1. New record can be found in AFP_ReportInfo table for received report, and the printstatus value should be 0. \n</arg>
</arguments>
<msg timestamp="20191112 13:58:13.942" level="INFO">Step 5: 
Description:
1. Check the WGGC.dbo.AFP_ReportInfo table. 
Expected: 
1. New record can be found in AFP_ReportInfo table for received report, and the printstatus value should be 0. 
</msg>
<status status="PASS" starttime="20191112 13:58:13.942" endtime="20191112 13:58:13.942"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>PrintStatus</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_PrintStatus}</var>
</assign>
<msg timestamp="20191112 13:58:13.973" level="INFO">${Report_Check_ReportInfo_Info_PrintStatus} = [[0]]</msg>
<status status="PASS" starttime="20191112 13:58:13.942" endtime="20191112 13:58:13.973"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Result}[0]</arg>
<arg>Wggc.dbo.AFP_ReportInfo table have new records of this report</arg>
</arguments>
<status status="PASS" starttime="20191112 13:58:13.973" endtime="20191112 13:58:13.973"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_PrintStatus}[0][0]</arg>
<arg>0</arg>
<arg>The report printstatus value is 0</arg>
</arguments>
<msg timestamp="20191112 13:58:13.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 13:58:13.973" endtime="20191112 13:58:13.973"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191112 13:58:18.973" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191112 13:58:13.973" endtime="20191112 13:58:18.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6 \n Description: \n 1. Check the WGGC.dbo.AFP_PrintMode table \n Expected:\n 1. Can find a new record in this table and value should be correct. \n</arg>
</arguments>
<msg timestamp="20191112 13:58:18.973" level="INFO">Step 6 
Description: 
1. Check the WGGC.dbo.AFP_PrintMode table 
Expected:
1. Can find a new record in this table and value should be correct. 
</msg>
<status status="PASS" starttime="20191112 13:58:18.973" endtime="20191112 13:58:18.973"></status>
</kw>
<kw name="Printmode Get Info From Db By Accn" library="PUMA_PrintModeLibrary">
<doc>printmode_get_info_from_db_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${PrintMode_info}</var>
</assign>
<msg timestamp="20191112 13:58:18.973" level="INFO">${PrintMode_info} = {"result": true, "AccessionNumber": "A20191112135743550986", "StudyInstanceUID": "", "PrintMode": 0, "StatusTime": "2019-11-12 13:58:00.153000", "HoldFlag": 1, "PrintWaitTime": "60", "ReportWaitTime":...</msg>
<status status="PASS" starttime="20191112 13:58:18.973" endtime="20191112 13:58:18.973"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintMode_info}</arg>
</arguments>
<assign>
<var>${PrintMode_info_Json}</var>
</assign>
<msg timestamp="20191112 13:58:18.973" level="INFO">${PrintMode_info_Json} = {'result': True, 'AccessionNumber': 'A20191112135743550986', 'StudyInstanceUID': '', 'PrintMode': 0, 'StatusTime': '2019-11-12 13:58:00.153000', 'HoldFlag': 1, 'PrintWaitTime': '60', 'ReportWaitTime':...</msg>
<status status="PASS" starttime="20191112 13:58:18.973" endtime="20191112 13:58:18.973"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${PrintMode_info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${PrintMode_result}</var>
</assign>
<msg timestamp="20191112 13:58:19.004" level="INFO">${PrintMode_result} = [True]</msg>
<status status="PASS" starttime="20191112 13:58:18.973" endtime="20191112 13:58:19.004"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${PrintMode_info_Json}</arg>
<arg>PrintMode</arg>
</arguments>
<assign>
<var>${PrintMode_value}</var>
</assign>
<msg timestamp="20191112 13:58:19.051" level="INFO">${PrintMode_value} = [0]</msg>
<status status="PASS" starttime="20191112 13:58:19.004" endtime="20191112 13:58:19.051"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${PrintMode_result}</arg>
</arguments>
<status status="PASS" starttime="20191112 13:58:19.051" endtime="20191112 13:58:19.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${PrintMode_value}[0]</arg>
<arg>0</arg>
<arg>The patient print mode is 0 for "门诊病人"</arg>
</arguments>
<msg timestamp="20191112 13:58:19.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 13:58:19.051" endtime="20191112 13:58:19.051"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191112 13:58:24.051" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191112 13:58:19.051" endtime="20191112 13:58:24.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 7 \n Description: \n 1. Check the ReportStoredFlag value in T_Integration_ExamInfo table in WGGC database for this report. \n Expected: \n 1. The ReportStoredFlag value should be 9 \n</arg>
</arguments>
<msg timestamp="20191112 13:58:24.051" level="INFO">Step 7 
Description: 
1. Check the ReportStoredFlag value in T_Integration_ExamInfo table in WGGC database for this report. 
Expected: 
1. The ReportStoredFlag value should be 9 
</msg>
<status status="PASS" starttime="20191112 13:58:24.051" endtime="20191112 13:58:24.051"></status>
</kw>
<kw name="Report Check ReportStoredFlag In T Integration ExamInfo" library="PUMA_ReportLibrary">
<doc>report_check_ReportStoredFlag_in_T_Integration_ExamInfo</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlag_info}</var>
</assign>
<msg timestamp="20191112 13:58:24.051" level="INFO">Report.report_check_ReportStoredFlag_in_T_Integration_ExamInfo: Get the ReportStoredFlag of patient [P20191112135743550986, A20191112135743550986] correct and value is 9</msg>
<msg timestamp="20191112 13:58:24.051" level="INFO">${Report_ReportStoreFlag_info} = {"result": true, "ReportStoredFlag": 9}</msg>
<status status="PASS" starttime="20191112 13:58:24.051" endtime="20191112 13:58:24.051"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info}</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlag_info_json}</var>
</assign>
<msg timestamp="20191112 13:58:24.051" level="INFO">${Report_ReportStoreFlag_info_json} = {'result': True, 'ReportStoredFlag': 9}</msg>
<status status="PASS" starttime="20191112 13:58:24.051" endtime="20191112 13:58:24.051"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info_json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlage_info_result}</var>
</assign>
<msg timestamp="20191112 13:58:24.082" level="INFO">${Report_ReportStoreFlage_info_result} = [True]</msg>
<status status="PASS" starttime="20191112 13:58:24.051" endtime="20191112 13:58:24.082"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info_json}</arg>
<arg>ReportStoredFlag</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlage_value}</var>
</assign>
<msg timestamp="20191112 13:58:24.129" level="INFO">${Report_ReportStoreFlage_value} = [9]</msg>
<status status="PASS" starttime="20191112 13:58:24.082" endtime="20191112 13:58:24.129"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_ReportStoreFlage_info_result}[0]</arg>
</arguments>
<status status="PASS" starttime="20191112 13:58:24.129" endtime="20191112 13:58:24.129"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Report_ReportStoreFlage_value}[0]</arg>
<arg>9</arg>
<arg>The ReportStoredFlag value should be 9 in T_integration_examInfo table</arg>
</arguments>
<msg timestamp="20191112 13:58:24.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 13:58:24.129" endtime="20191112 13:58:24.129"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191112 13:58:29.129" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191112 13:58:24.129" endtime="20191112 13:58:29.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 8: \n Description: \n 1. Check the records in WGGC.dbo.AFP_ExamInfo table in WGGC database for this report. \n Expected: \n1. The Report can find in the table. \n</arg>
</arguments>
<msg timestamp="20191112 13:58:29.129" level="INFO">Step 8: 
Description: 
1. Check the records in WGGC.dbo.AFP_ExamInfo table in WGGC database for this report. 
Expected: 
1. The Report can find in the table. 
</msg>
<status status="PASS" starttime="20191112 13:58:29.129" endtime="20191112 13:58:29.129"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_exam_info}</var>
</assign>
<msg timestamp="20191112 13:58:29.129" level="INFO">${Report_exam_info} = {"Result": true, "AccessionNumber": "A20191112135743550986", "FilmPrintStatus": -1, "FilmPrintTime": null, "HoldFlag": 1, "ImageCount": 0, "Modalities": "NM", "ExamName": null, "BodyPart": null, "Pati...</msg>
<status status="PASS" starttime="20191112 13:58:29.129" endtime="20191112 13:58:29.129"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_exam_info}</arg>
</arguments>
<assign>
<var>${Report_exam_info_Json}</var>
</assign>
<msg timestamp="20191112 13:58:29.129" level="INFO">${Report_exam_info_Json} = {'Result': True, 'AccessionNumber': 'A20191112135743550986', 'FilmPrintStatus': -1, 'FilmPrintTime': None, 'HoldFlag': 1, 'ImageCount': 0, 'Modalities': 'NM', 'ExamName': None, 'BodyPart': None, 'Pati...</msg>
<status status="PASS" starttime="20191112 13:58:29.129" endtime="20191112 13:58:29.129"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_exam_info_Json}</arg>
<arg>Result</arg>
</arguments>
<assign>
<var>${Report_exam_info_Result}</var>
</assign>
<msg timestamp="20191112 13:58:29.160" level="INFO">${Report_exam_info_Result} = [True]</msg>
<status status="PASS" starttime="20191112 13:58:29.129" endtime="20191112 13:58:29.160"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_exam_info_Result}[0]</arg>
<arg>The report can find in the wggc.dbo.afp_ExamInfo table.</arg>
</arguments>
<status status="PASS" starttime="20191112 13:58:29.160" endtime="20191112 13:58:29.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 9 \n Description \n 1. Check the report in archived folder. (default is E:\\Report\\Archive.) \n Expected: \n 1.The file should exist in the folder \n</arg>
</arguments>
<msg timestamp="20191112 13:58:29.160" level="INFO">Step 9 
Description 
1. Check the report in archived folder. (default is E:\Report\Archive.) 
Expected: 
1.The file should exist in the folder 
</msg>
<status status="PASS" starttime="20191112 13:58:29.160" endtime="20191112 13:58:29.160"></status>
</kw>
<kw name="Report Check File Exist By Path Remote" library="PUMA_ReportLibrary">
<doc>report_check_file_exist_by_path_remote</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_ReportPath}[0][0]</arg>
</arguments>
<assign>
<var>${Report_File_Pathc_Check_Result}</var>
</assign>
<msg timestamp="20191112 13:58:30.832" level="INFO">E:\Report\Archive\20191112\A20191112135743550986_135759_bdd72b0a61ff43e98c6b552c46763a8b.pdf
Report.report_check_file_exist_by_path_remote: The file is exsit in the PS system [E:\Report\Archive\20191112\A20191112135743550986_135759_bdd72b0a61ff43e98c6b552c46763a8b.pdf].</msg>
<msg timestamp="20191112 13:58:30.832" level="INFO">${Report_File_Pathc_Check_Result} = True</msg>
<status status="PASS" starttime="20191112 13:58:29.160" endtime="20191112 13:58:30.832"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_File_Pathc_Check_Result}</arg>
<arg>The file exist in the folder.</arg>
</arguments>
<status status="PASS" starttime="20191112 13:58:30.832" endtime="20191112 13:58:30.832"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191112 13:57:43.551" endtime="20191112 13:58:30.832" critical="yes"></status>
</test>
<test id="s1-t6" name="SmokeTest_006_Core_4176_03.01.02 Report receive from Virtual Print failure.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1\n Description:\n1. Create a patient with an exam in RIS or local table in PS.\nExpected:\n 1. The patient with an exam can create successfully.</arg>
</arguments>
<msg timestamp="20191112 13:58:30.832" level="INFO">Step 1
Description:
1. Create a patient with an exam in RIS or local table in PS.
Expected:
1. The patient with an exam can create successfully.</msg>
<status status="PASS" starttime="20191112 13:58:30.832" endtime="20191112 13:58:30.832"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191112 13:58:30.832" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 13:58:30.989" level="DEBUG">http://10.112.20.84:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191112 13:58:30.989" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-12 13:58:30.832298", "UpdateDT": "2019-11-12 13:58:30.832298", "PatientID": "P20191112135830832298", "AccessionNumber": "A20191112135830832298", "StudyInstanceUID": "UID20191112135830832298", "NameCN": "CN20191112135830832298", "NameEN": "EN20191112135830832298", "Gender": "M", "Birthday": "1972-11-23", "Modality": "US", "ModalityName": "OT", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-12 13:58:30.832298", "RegisterDT": "2019-11-12 13:58:30.832298", "ExamDT": "2019-11-12 13:58:30.832298", "ReportDT": "2019-11-12 13:58:30.832298", "SubmitDT": "2019-11-12 13:58:30.832298", "ApproveDT": "2019-11-12 13:58:30.832298", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191112135830832298", "ExamBodyPart": "Hand", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191112 13:58:30.989" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-12 13:58:30.832298", "UpdateDT": "2019-11-12 13:58:30.832298", "PatientID": "P20191112135830832298", "AccessionNumber": "A20191112135830832298", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191112 13:58:30.832" endtime="20191112 13:58:30.989"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191112 13:58:30.989" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-12 13:58:30.832298', 'UpdateDT': '2019-11-12 13:58:30.832298', 'PatientID': 'P20191112135830832298', 'AccessionNumber': 'A20191112135830832298', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191112 13:58:30.989" endtime="20191112 13:58:30.989"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191112 13:58:31.035" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191112 13:58:30.989" endtime="20191112 13:58:31.035"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]</arg>
<arg>Patient create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 13:58:31.035" endtime="20191112 13:58:31.035"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191112 13:58:31.098" level="INFO">${patientID} = ['P20191112135830832298']</msg>
<status status="PASS" starttime="20191112 13:58:31.035" endtime="20191112 13:58:31.098"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${AccessionNumber}</var>
</assign>
<msg timestamp="20191112 13:58:31.129" level="INFO">${AccessionNumber} = ['A20191112135830832298']</msg>
<status status="PASS" starttime="20191112 13:58:31.098" endtime="20191112 13:58:31.129"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>NameCN</arg>
</arguments>
<assign>
<var>${PatientName}</var>
</assign>
<msg timestamp="20191112 13:58:31.160" level="INFO">${PatientName} = ['CN20191112135830832298']</msg>
<status status="PASS" starttime="20191112 13:58:31.129" endtime="20191112 13:58:31.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2: \n Description \n 1. Configure the report OCR service in PS. \n 2. Make sure it can identify the patient report in step1. \n 3. Delete the patient information of step1. \n Expected:\n The operation can execute successfully.</arg>
</arguments>
<msg timestamp="20191112 13:58:31.160" level="INFO">Step 2: 
Description 
1. Configure the report OCR service in PS. 
2. Make sure it can identify the patient report in step1. 
3. Delete the patient information of step1. 
Expected:
The operation can execute successfully.</msg>
<status status="PASS" starttime="20191112 13:58:31.160" endtime="20191112 13:58:31.160"></status>
</kw>
<kw name="Patient Delete By Pid Accn" library="PUMA_PatientLibrary">
<doc>patient delete by pid accn</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Patient_Delete_Result}</var>
</assign>
<msg timestamp="20191112 13:58:31.192" level="INFO">Patient.patient_delete_by_pid_accn: [1] records will deleted.</msg>
<msg timestamp="20191112 13:58:31.192" level="INFO">${Patient_Delete_Result} = True</msg>
<status status="PASS" starttime="20191112 13:58:31.160" endtime="20191112 13:58:31.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3: \n Description \n 1. Prepare a report of patient which create in step1. \n 2. Print the report to PS by virtul printing. \n Expected: \n 1. The report can print to PS successfully. \n</arg>
</arguments>
<msg timestamp="20191112 13:58:31.192" level="INFO">Step 3: 
Description 
1. Prepare a report of patient which create in step1. 
2. Print the report to PS by virtul printing. 
Expected: 
1. The report can print to PS successfully. 
</msg>
<status status="PASS" starttime="20191112 13:58:31.192" endtime="20191112 13:58:31.192"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191112 13:58:36.192" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191112 13:58:31.192" endtime="20191112 13:58:36.192"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191112 14:00:36.395" level="INFO">Report archived failed.
Report achived failed. {"Status": false, "server": "10.112.20.84", "patient_id": "P20191112135830832298", "accession_number": "A20191112135830832298", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "powershell_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.84/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191112 14:00:36.395" level="INFO">${Report_archived_Info} = {"Status": false, "server": "10.112.20.84", "patient_id": "P20191112135830832298", "accession_number": "A20191112135830832298", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\...</msg>
<status status="PASS" starttime="20191112 13:58:36.192" endtime="20191112 14:00:36.395"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191112 14:00:36.395" level="INFO">${Report_archived_Info_Json} = {'Status': False, 'server': '10.112.20.84', 'patient_id': 'P20191112135830832298', 'accession_number': 'A20191112135830832298', 'report_file': 'D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\...</msg>
<status status="PASS" starttime="20191112 14:00:36.395" endtime="20191112 14:00:36.395"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191112 14:00:36.426" level="INFO">${Report_archived_result} = [False]</msg>
<status status="PASS" starttime="20191112 14:00:36.395" endtime="20191112 14:00:36.426"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == False</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:00:36.426" endtime="20191112 14:00:36.426"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20191112 14:00:46.426" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20191112 14:00:36.426" endtime="20191112 14:00:46.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4 \n \ Description \n 1. Check the WGGC.dbo.AFP_ReportInfo table. \n Expected: \n 1. New record can be found in AFP_ReportInfo table for received report, and the ReportStatus value should be -1. \n</arg>
</arguments>
<msg timestamp="20191112 14:00:46.426" level="INFO">Step 4 
 Description 
1. Check the WGGC.dbo.AFP_ReportInfo table. 
Expected: 
1. New record can be found in AFP_ReportInfo table for received report, and the ReportStatus value should be -1. 
</msg>
<status status="PASS" starttime="20191112 14:00:46.426" endtime="20191112 14:00:46.426"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Reportinfo By Pid" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with patientid from table wggc.dbp.afp_reportinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${patientID}[0]</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Info}</var>
</assign>
<msg timestamp="20191112 14:00:46.426" level="INFO">${Report_Check_ReportInfo_Info_Info} = {"Result": true, "StudyInstanceUID": "72a02e88d5824d95aeaefa4b2612a494", "ReportStatus": -1, "StatusTime": "2019-11-12 13:58:39.807000", "AccessionNumber": "TMP111213583980511", "FileName": "E:\\Repor...</msg>
<status status="PASS" starttime="20191112 14:00:46.426" endtime="20191112 14:00:46.426"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Info}</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Json}</var>
</assign>
<msg timestamp="20191112 14:00:46.426" level="INFO">${Report_Check_ReportInfo_Info_Json} = {'Result': True, 'StudyInstanceUID': '72a02e88d5824d95aeaefa4b2612a494', 'ReportStatus': -1, 'StatusTime': '2019-11-12 13:58:39.807000', 'AccessionNumber': 'TMP111213583980511', 'FileName': 'E:\\Repor...</msg>
<status status="PASS" starttime="20191112 14:00:46.426" endtime="20191112 14:00:46.426"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>Result</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Result}</var>
</assign>
<msg timestamp="20191112 14:00:46.457" level="INFO">${Report_Check_ReportInfo_Info_Result} = [True]</msg>
<status status="PASS" starttime="20191112 14:00:46.426" endtime="20191112 14:00:46.457"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>ReportStatus</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_ReportStatus}</var>
</assign>
<msg timestamp="20191112 14:00:46.504" level="INFO">${Report_Check_ReportInfo_Info_ReportStatus} = [-1]</msg>
<status status="PASS" starttime="20191112 14:00:46.457" endtime="20191112 14:00:46.504"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>FileName</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_ReportPath}</var>
</assign>
<msg timestamp="20191112 14:00:46.536" level="INFO">${Report_Check_ReportInfo_Info_ReportPath} = ['E:\\Report\\Archive\\20191112\\20191112135837.pdf']</msg>
<status status="PASS" starttime="20191112 14:00:46.504" endtime="20191112 14:00:46.536"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Result}[0]</arg>
<arg>Wggc.dbo.AFP_ReportInfo table have new records of this report</arg>
</arguments>
<status status="PASS" starttime="20191112 14:00:46.536" endtime="20191112 14:00:46.536"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_ReportStatus}[0]</arg>
<arg>-1</arg>
<arg>The report status value in table wggc.dbo.afp_reportinfo is -1</arg>
</arguments>
<msg timestamp="20191112 14:00:46.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 14:00:46.536" endtime="20191112 14:00:46.536"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191112 14:00:51.536" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191112 14:00:46.536" endtime="20191112 14:00:51.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5: \n Description:\n 1. Check the WGGC.dbo.AFP_ReportInfo table. \n Expected: \n 1. New record can be found in AFP_ReportInfo table for received report, and the printstatus value should be 0. \n</arg>
</arguments>
<msg timestamp="20191112 14:00:51.536" level="INFO">Step 5: 
Description:
1. Check the WGGC.dbo.AFP_ReportInfo table. 
Expected: 
1. New record can be found in AFP_ReportInfo table for received report, and the printstatus value should be 0. 
</msg>
<status status="PASS" starttime="20191112 14:00:51.536" endtime="20191112 14:00:51.536"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>PrintStatus</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_PrintStatus}</var>
</assign>
<msg timestamp="20191112 14:00:51.567" level="INFO">${Report_Check_ReportInfo_Info_PrintStatus} = [0]</msg>
<status status="PASS" starttime="20191112 14:00:51.536" endtime="20191112 14:00:51.567"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Result}[0]</arg>
<arg>Wggc.dbo.AFP_ReportInfo table have new records of this report</arg>
</arguments>
<status status="PASS" starttime="20191112 14:00:51.567" endtime="20191112 14:00:51.567"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_PrintStatus}[0]</arg>
<arg>0</arg>
<arg>The report printstatus value is 0</arg>
</arguments>
<msg timestamp="20191112 14:00:51.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 14:00:51.567" endtime="20191112 14:00:51.567"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191112 14:00:56.567" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191112 14:00:51.567" endtime="20191112 14:00:56.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6 \n Description: \n 1. Check the WGGC.dbo.AFP_PrintMode table \n Expected:\n 1. Cannot find a new record in this table and value should be correct. \n</arg>
</arguments>
<msg timestamp="20191112 14:00:56.567" level="INFO">Step 6 
Description: 
1. Check the WGGC.dbo.AFP_PrintMode table 
Expected:
1. Cannot find a new record in this table and value should be correct. 
</msg>
<status status="PASS" starttime="20191112 14:00:56.567" endtime="20191112 14:00:56.567"></status>
</kw>
<kw name="Printmode Get Info From Db By Accn" library="PUMA_PrintModeLibrary">
<doc>printmode_get_info_from_db_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${PrintMode_info}</var>
</assign>
<msg timestamp="20191112 14:00:56.567" level="INFO">Printmode.printmode_get_info_from_db_by_accn: Data Exception for the exam [A20191112135830832298] in wggc.dbo_afp_printmode table
Printmode.printmode_get_info_from_db_by_accn: There are [0] records in table</msg>
<msg timestamp="20191112 14:00:56.567" level="INFO">${PrintMode_info} = {"result": false}</msg>
<status status="PASS" starttime="20191112 14:00:56.567" endtime="20191112 14:00:56.567"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintMode_info}</arg>
</arguments>
<assign>
<var>${PrintMode_info_Json}</var>
</assign>
<msg timestamp="20191112 14:00:56.567" level="INFO">${PrintMode_info_Json} = {'result': False}</msg>
<status status="PASS" starttime="20191112 14:00:56.567" endtime="20191112 14:00:56.567"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${PrintMode_info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${PrintMode_result}</var>
</assign>
<msg timestamp="20191112 14:00:56.598" level="INFO">${PrintMode_result} = [False]</msg>
<status status="PASS" starttime="20191112 14:00:56.567" endtime="20191112 14:00:56.598"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${PrintMode_info_Json}</arg>
<arg>PrintMode</arg>
</arguments>
<assign>
<var>${PrintMode_value}</var>
</assign>
<msg timestamp="20191112 14:00:56.645" level="INFO">${PrintMode_value} = []</msg>
<status status="PASS" starttime="20191112 14:00:56.598" endtime="20191112 14:00:56.645"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${PrintMode_result}[0] == False</arg>
</arguments>
<status status="PASS" starttime="20191112 14:00:56.645" endtime="20191112 14:00:56.645"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191112 14:01:01.645" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191112 14:00:56.645" endtime="20191112 14:01:01.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 7 \n Description: \n 1. Check the ReportStoredFlag value in T_Integration_ExamInfo table in WGGC database for this report. \n Expected: \n 1. Cannot find records in the table. \n</arg>
</arguments>
<msg timestamp="20191112 14:01:01.645" level="INFO">Step 7 
Description: 
1. Check the ReportStoredFlag value in T_Integration_ExamInfo table in WGGC database for this report. 
Expected: 
1. Cannot find records in the table. 
</msg>
<status status="PASS" starttime="20191112 14:01:01.645" endtime="20191112 14:01:01.645"></status>
</kw>
<kw name="Report Check ReportStoredFlag In T Integration ExamInfo" library="PUMA_ReportLibrary">
<doc>report_check_ReportStoredFlag_in_T_Integration_ExamInfo</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlag_info}</var>
</assign>
<msg timestamp="20191112 14:01:01.645" level="INFO">Report.report_check_ReportStoredFlag_in_T_Integration_ExamInfo: Data Exception for the patient [P20191112135830832298, A20191112135830832298]</msg>
<msg timestamp="20191112 14:01:01.645" level="INFO">${Report_ReportStoreFlag_info} = {"result": false}</msg>
<status status="PASS" starttime="20191112 14:01:01.645" endtime="20191112 14:01:01.645"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info}</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlag_info_json}</var>
</assign>
<msg timestamp="20191112 14:01:01.645" level="INFO">${Report_ReportStoreFlag_info_json} = {'result': False}</msg>
<status status="PASS" starttime="20191112 14:01:01.645" endtime="20191112 14:01:01.645"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info_json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlage_info_result}</var>
</assign>
<msg timestamp="20191112 14:01:01.676" level="INFO">${Report_ReportStoreFlage_info_result} = [False]</msg>
<status status="PASS" starttime="20191112 14:01:01.645" endtime="20191112 14:01:01.676"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_ReportStoreFlage_info_result}[0] == False</arg>
<arg>Cannot find the records in the database.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:01:01.676" endtime="20191112 14:01:01.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 8: \n Description: \n 1. Check the records in WGGC.dbo.AFP_ExamInfo table in WGGC database for this report. \n Expected: \n 1.Cannot find a new record in table. \n</arg>
</arguments>
<msg timestamp="20191112 14:01:01.676" level="INFO">Step 8: 
Description: 
1. Check the records in WGGC.dbo.AFP_ExamInfo table in WGGC database for this report. 
Expected: 
1.Cannot find a new record in table. 
</msg>
<status status="PASS" starttime="20191112 14:01:01.676" endtime="20191112 14:01:01.676"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_exam_info}</var>
</assign>
<msg timestamp="20191112 14:01:01.676" level="INFO">Databaseinfo.DB_get_wggc_dbo_afp_examinfo_by_accn: Data Exception for the exam [A20191112135830832298] in wggc.dbo.AFP_ExamInfo table
Databaseinfo.DB_get_wggc_dbo_afp_examinfo_by_accn: There are [0] records in table</msg>
<msg timestamp="20191112 14:01:01.676" level="INFO">${Report_exam_info} = {"Result": false}</msg>
<status status="PASS" starttime="20191112 14:01:01.676" endtime="20191112 14:01:01.676"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_exam_info}</arg>
</arguments>
<assign>
<var>${Report_exam_info_Json}</var>
</assign>
<msg timestamp="20191112 14:01:01.676" level="INFO">${Report_exam_info_Json} = {'Result': False}</msg>
<status status="PASS" starttime="20191112 14:01:01.676" endtime="20191112 14:01:01.676"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_exam_info_Json}</arg>
<arg>Result</arg>
</arguments>
<assign>
<var>${Report_exam_info_Result}</var>
</assign>
<msg timestamp="20191112 14:01:01.723" level="INFO">${Report_exam_info_Result} = [False]</msg>
<status status="PASS" starttime="20191112 14:01:01.676" endtime="20191112 14:01:01.723"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_exam_info_Result}[0] == False</arg>
<arg>1.Cannot find a new record in table.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:01:01.723" endtime="20191112 14:01:01.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 9 \n Description \n 1. Check the report in archived folder. (default is E:\\Report\\Archive.) \n Expected: \n 1.The file should exist in the folder \n</arg>
</arguments>
<msg timestamp="20191112 14:01:01.723" level="INFO">Step 9 
Description 
1. Check the report in archived folder. (default is E:\Report\Archive.) 
Expected: 
1.The file should exist in the folder 
</msg>
<status status="PASS" starttime="20191112 14:01:01.723" endtime="20191112 14:01:01.723"></status>
</kw>
<kw name="Report Check File Exist By Path Remote" library="PUMA_ReportLibrary">
<doc>report_check_file_exist_by_path_remote</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_ReportPath}[0]</arg>
</arguments>
<assign>
<var>${Report_File_Pathc_Check_Result}</var>
</assign>
<msg timestamp="20191112 14:01:02.473" level="INFO">E:\Report\Archive\20191112\20191112135837.pdf
Report.report_check_file_exist_by_path_remote: The file is exsit in the PS system [E:\Report\Archive\20191112\20191112135837.pdf].</msg>
<msg timestamp="20191112 14:01:02.473" level="INFO">${Report_File_Pathc_Check_Result} = True</msg>
<status status="PASS" starttime="20191112 14:01:01.723" endtime="20191112 14:01:02.473"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_File_Pathc_Check_Result}</arg>
<arg>The file exist in the folder.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:01:02.473" endtime="20191112 14:01:02.473"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191112 13:58:30.832" endtime="20191112 14:01:02.473" critical="yes"></status>
</test>
<test id="s1-t7" name="SmokeTest_007_Core_4178_04.01.01 Terminal K3 Print Workflow with multiple films and multiple reports.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description:\n 1. Configure a K3 terminal on PS. \n 2. Make sure the terminal status is ready to work. \n Expected: \n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191112 14:01:02.473" level="INFO">Step 1 
Description:
1. Configure a K3 terminal on PS. 
2. Make sure the terminal status is ready to work. 
Expected: 
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191112 14:01:02.473" endtime="20191112 14:01:02.473"></status>
</kw>
<kw name="Check Terminal Status" library="PUMA_TerminalLibrary">
<doc>This function is use the API interface to check the terminal status.
The function will enable the terminal status to 'on work' status.</doc>
<arguments>
<arg>K3_Terminal01</arg>
</arguments>
<assign>
<var>${Terminal_status}</var>
</assign>
<msg timestamp="20191112 14:01:02.489" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:01:03.301" level="DEBUG">http://10.112.20.84:80 "GET /EHDPS/status?tid=K3_Terminal01 HTTP/1.1" 200 609</msg>
<msg timestamp="20191112 14:01:03.301" level="INFO">Terminal._check_terminal_status: The terminal status check and result is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"Status":0,"Terminal":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9876,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20231,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}</msg>
<msg timestamp="20191112 14:01:03.301" level="INFO">${Terminal_status} = True</msg>
<status status="PASS" starttime="20191112 14:01:02.473" endtime="20191112 14:01:03.301"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Terminal_status}</arg>
<arg>The termianl status is ready to print</arg>
</arguments>
<status status="PASS" starttime="20191112 14:01:03.301" endtime="20191112 14:01:03.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Create multiple films for patientA/ExamA. \n Expected \n 1. The films can archived successfully. \n</arg>
</arguments>
<msg timestamp="20191112 14:01:03.317" level="INFO">Step 2 
Description: 
1. Create multiple films for patientA/ExamA. 
Expected 
1. The films can archived successfully. 
</msg>
<status status="PASS" starttime="20191112 14:01:03.317" endtime="20191112 14:01:03.317"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191112 14:01:03.317" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:01:03.332" level="DEBUG">http://10.112.20.84:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191112 14:01:03.332" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-12 14:01:03.316869", "UpdateDT": "2019-11-12 14:01:03.316869", "PatientID": "P20191112140103316869", "AccessionNumber": "A20191112140103316869", "StudyInstanceUID": "UID20191112140103316869", "NameCN": "CN20191112140103316869", "NameEN": "EN20191112140103316869", "Gender": "F", "Birthday": "1929-12-04", "Modality": "NM", "ModalityName": "DX", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-12 14:01:03.316869", "RegisterDT": "2019-11-12 14:01:03.316869", "ExamDT": "2019-11-12 14:01:03.316869", "ReportDT": "2019-11-12 14:01:03.316869", "SubmitDT": "2019-11-12 14:01:03.316869", "ApproveDT": "2019-11-12 14:01:03.316869", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191112140103316869", "ExamBodyPart": "Head", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191112 14:01:03.332" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-12 14:01:03.316869", "UpdateDT": "2019-11-12 14:01:03.316869", "PatientID": "P20191112140103316869", "AccessionNumber": "A20191112140103316869", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191112 14:01:03.317" endtime="20191112 14:01:03.332"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191112 14:01:03.332" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-12 14:01:03.316869', 'UpdateDT': '2019-11-12 14:01:03.316869', 'PatientID': 'P20191112140103316869', 'AccessionNumber': 'A20191112140103316869', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191112 14:01:03.332" endtime="20191112 14:01:03.332"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191112 14:01:03.379" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191112 14:01:03.332" endtime="20191112 14:01:03.379"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191112 14:01:03.411" level="INFO">${patientID} = ['P20191112140103316869']</msg>
<status status="PASS" starttime="20191112 14:01:03.379" endtime="20191112 14:01:03.411"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191112 14:01:03.442" level="INFO">${Accessionnumber} = ['A20191112140103316869']</msg>
<status status="PASS" starttime="20191112 14:01:03.411" endtime="20191112 14:01:03.442"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:01:03.442" endtime="20191112 14:01:03.442"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191112 14:01:34.083" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191112140103316869", "AccessionNumber": "A20191112140103316869", "FilmSessionLable": "20191112140103457493", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191112 14:01:34.083" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191112140103316869", "AccessionNumber": "A20191112140103316869", "FilmSessionLable": "20191112140103457493", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191112 14:01:03.442" endtime="20191112 14:01:34.083"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191112 14:01:34.083" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191112140103316869', 'AccessionNumber': 'A20191112140103316869', 'FilmSessionLable': '20191112140103457493', 'DeliveryJob_status': 2, 'WaterMark_Path': 'D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191112 14:01:34.083" endtime="20191112 14:01:34.083"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191112 14:01:34.114" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191112 14:01:34.083" endtime="20191112 14:01:34.114"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:01:34.114" endtime="20191112 14:01:34.114"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191112 14:02:04.989" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191112140103316869", "AccessionNumber": "A20191112140103316869", "FilmSessionLable": "20191112140134113784", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191112 14:02:04.989" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191112140103316869", "AccessionNumber": "A20191112140103316869", "FilmSessionLable": "20191112140134113784", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191112 14:01:34.114" endtime="20191112 14:02:04.989"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191112 14:02:04.989" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191112140103316869', 'AccessionNumber': 'A20191112140103316869', 'FilmSessionLable': '20191112140134113784', 'DeliveryJob_status': 2, 'WaterMark_Path': 'D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191112 14:02:04.989" endtime="20191112 14:02:04.989"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191112 14:02:05.020" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191112 14:02:04.989" endtime="20191112 14:02:05.020"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:02:05.020" endtime="20191112 14:02:05.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3 \n Description:\n 1. Create multiple reports for patientA/ExamA. \n Expected: \n 1. The reports can archived successfully. \n</arg>
</arguments>
<msg timestamp="20191112 14:02:05.020" level="INFO">Step 3 
Description:
1. Create multiple reports for patientA/ExamA. 
Expected: 
1. The reports can archived successfully. 
</msg>
<status status="PASS" starttime="20191112 14:02:05.020" endtime="20191112 14:02:05.020"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191112 14:02:15.036" level="INFO">PUMA_ReportLibrary._archive_check: Report achived successfully.
Report achived successfully. {"Status": true, "server": "10.112.20.84", "patient_id": "P20191112140103316869", "accession_number": "A20191112140103316869", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "powershell_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.84/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191112 14:02:15.036" level="INFO">${Report_archived_Info} = {"Status": true, "server": "10.112.20.84", "patient_id": "P20191112140103316869", "accession_number": "A20191112140103316869", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191112 14:02:05.020" endtime="20191112 14:02:15.036"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191112 14:02:15.036" level="INFO">${Report_archived_Info_Json} = {'Status': True, 'server': '10.112.20.84', 'patient_id': 'P20191112140103316869', 'accession_number': 'A20191112140103316869', 'report_file': 'D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191112 14:02:15.036" endtime="20191112 14:02:15.036"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191112 14:02:15.067" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191112 14:02:15.036" endtime="20191112 14:02:15.067"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:02:15.067" endtime="20191112 14:02:15.067"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191112 14:02:25.083" level="INFO">Select ReportStatus From wggc.dbo.AFP_ReportInfo  WHERE StudyInstanceUID not in ('c3b84ddd95964369ae2959782ae2a23a') AND PatientID = 'P20191112140103316869' AND AccessionNumber = 'A20191112140103316869'
[(2, )]
PUMA_ReportLibrary._archive_check: Report achived successfully.
Report achived successfully. {"Status": true, "server": "10.112.20.84", "patient_id": "P20191112140103316869", "accession_number": "A20191112140103316869", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "powershell_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.84/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191112 14:02:25.083" level="INFO">${Report_archived_Info} = {"Status": true, "server": "10.112.20.84", "patient_id": "P20191112140103316869", "accession_number": "A20191112140103316869", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191112 14:02:15.067" endtime="20191112 14:02:25.083"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191112 14:02:25.083" level="INFO">${Report_archived_Info_Json} = {'Status': True, 'server': '10.112.20.84', 'patient_id': 'P20191112140103316869', 'accession_number': 'A20191112140103316869', 'report_file': 'D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191112 14:02:25.083" endtime="20191112 14:02:25.083"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191112 14:02:25.114" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191112 14:02:25.083" endtime="20191112 14:02:25.114"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:02:25.114" endtime="20191112 14:02:25.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4 \n Description:\n 1. Set the print mode to both for ExamA \n Expected:\n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191112 14:02:25.114" level="INFO">Step 4 
Description:
1. Set the print mode to both for ExamA 
Expected:
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191112 14:02:25.114" endtime="20191112 14:02:25.114"></status>
</kw>
<kw name="Printmode Set By Accn" library="PUMA_PrintModeLibrary">
<doc>printmode_set_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
<arg>both</arg>
</arguments>
<assign>
<var>${Set_Printmode}</var>
</assign>
<msg timestamp="20191112 14:02:25.129" level="DEBUG">reading WSDL at: http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl ...</msg>
<msg timestamp="20191112 14:02:25.129" level="DEBUG">Element:0x4417d90, convert type="tns:ExamInfo" to ('ExamInfo', 'http://carestream.org/')</msg>
<msg timestamp="20191112 14:02:25.129" level="DEBUG">Element:0x4417e30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.129" level="DEBUG">Element:0x4417d70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.129" level="DEBUG">Element:0x4417730, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.129" level="DEBUG">Element:0x4417d10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.129" level="DEBUG">Element:0x4417070, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.129" level="DEBUG">Element:0x4fef890, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.129" level="DEBUG">Element:0x4fef850, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.129" level="DEBUG">Element:0x4fef8d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.129" level="DEBUG">Element:0x4fef8b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.129" level="DEBUG">Element:0x4fef870, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.129" level="DEBUG">Element:0x4fef8f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.129" level="DEBUG">Element:0x4fef910, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.129" level="DEBUG">Element:0x4fef930, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fef950, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fef970, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fef990, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fef9b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fef9d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fef9f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fefa10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fefa30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fefa50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fefa70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fefa90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fefab0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fefad0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fefaf0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fefb10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fefb30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fefb50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fefb70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fefb90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fefbb0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fefbd0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fefbf0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fefc10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fefc30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fefc50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fefc70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fefcd0, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fefd50, convert type="tns:ExamInfo" to ('ExamInfo', 'http://carestream.org/')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fefdb0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fefdd0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fefdf0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fefe50, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4fefed0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4feff50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4feff70, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4feff90, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4feffb0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebefb0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebef30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebeeb0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebee90, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebedb0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebee30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebee50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebee70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebed10, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebecb0, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://carestream.org/')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebecd0, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://carestream.org/')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebee10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebeaf0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebeb70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebec70, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebe9b0, convert type="tns:PatientInfoEx" to ('PatientInfoEx', 'http://carestream.org/')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebea10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebef70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebef90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebea50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebe8f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebe930, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebe950, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebe970, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebeef0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebe910, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebef10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebe850, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebe8d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebe6f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebe730, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebe7b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebe810, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">Element:0x4ebe690, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:02:25.145" level="DEBUG">loaded:

schema collection
   Schema:0x4417930
   (raw)
      &lt;s:schema elementFormDefault="qualified" targetNamespace="http://carestream.org/"&gt;
         &lt;s:element name="NotifyExamInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ExamInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="CreateDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="UpdateDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="AccessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="StudyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="NameCN" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="NameEN" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Modality" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ModalityName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientType" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="VisitID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDepartment" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RegisterDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ReportDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="SubmitDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ApproveDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PDFReportURL" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="StudyStatus" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="OutHospitalNo" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="InHospitalNo" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PhysicalNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamBodyPart" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RefferingDepartment" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional0" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional1" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional2" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional3" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional4" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional5" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional6" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional7" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional8" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional9" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyExamInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportFile"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportPath" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportFileResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportFileResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetPrintMode"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="printWaitTime" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportWaitTime" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetPrintModeResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyFilmInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyFilmInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="tns:ArrayOfString"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ArrayOfString"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyReportInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyExamReservationInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="base64ExamReservation" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyExamReservationInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamReservationInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyPatientInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientInfo" type="tns:PatientInfoEx"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="PatientInfoEx"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="LocalName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Age" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="IdentifyCardNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="MedicalCardNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="SocialSecurityCardNumber" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyPatientInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyPatientInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrl"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlForQrCode"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlForQrCodeResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlForQrCodeResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
      &lt;/s:schema&gt;
   (model)
      &lt;Element:0x44172d0 name="NotifyExamInfo"&gt;
         &lt;Complex:0x4417710&gt;
            &lt;Sequence:0x4417cb0&gt;
               &lt;Element:0x4417d90 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x4417cd0 name="ExamInfo"&gt;
         &lt;Sequence:0x4417e70&gt;
            &lt;Element:0x4417e30 name="CreateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4417d70 name="UpdateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4417730 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4417d10 name="AccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4417070 name="StudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fef890 name="NameCN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fef850 name="NameEN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fef8d0 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fef8b0 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fef870 name="Modality" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fef8f0 name="ModalityName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fef910 name="PatientType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fef930 name="VisitID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fef950 name="RequestID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fef970 name="RequestDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fef990 name="RequestDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fef9b0 name="RegisterDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fef9d0 name="ExamDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fef9f0 name="ReportDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fefa10 name="SubmitDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fefa30 name="ApproveDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fefa50 name="PDFReportURL" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fefa70 name="StudyStatus" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fefa90 name="OutHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fefab0 name="InHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fefad0 name="PhysicalNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fefaf0 name="ExamName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fefb10 name="ExamBodyPart" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fefb30 name="RefferingDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fefb50 name="Optional0" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fefb70 name="Optional1" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fefb90 name="Optional2" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fefbb0 name="Optional3" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fefbd0 name="Optional4" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fefbf0 name="Optional5" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fefc10 name="Optional6" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fefc30 name="Optional7" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fefc50 name="Optional8" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fefc70 name="Optional9" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x4417f90 name="NotifyExamInfoResponse"&gt;
         &lt;Complex:0x4fefc90&gt;
            &lt;Sequence:0x4fef830&gt;
               &lt;Element:0x4fefcd0 name="NotifyExamInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x44172f0 name="NotifyReportFile"&gt;
         &lt;Complex:0x4fefcb0&gt;
            &lt;Sequence:0x4fefd30&gt;
               &lt;Element:0x4fefd50 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
               &lt;Element:0x4fefdb0 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4fefdd0 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4fefdf0 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4fefcf0 name="NotifyReportFileResponse"&gt;
         &lt;Complex:0x4fefd70&gt;
            &lt;Sequence:0x4fefd90&gt;
               &lt;Element:0x4fefe50 name="NotifyReportFileResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4fefe10 name="SetPrintMode"&gt;
         &lt;Complex:0x4fefe30&gt;
            &lt;Sequence:0x4fefeb0&gt;
               &lt;Element:0x4fefed0 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4feff50 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4feff70 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4feff90 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4feffb0 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4fefe70 name="SetPrintModeResponse"&gt;
         &lt;Complex:0x4fefe90&gt;
            &lt;Sequence:0x4feff30&gt;
               &lt;Element:0x4ebefb0 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4fefef0 name="NotifyFilmInfo"&gt;
         &lt;Complex:0x4fefff0&gt;
            &lt;Sequence:0x4ebeff0&gt;
               &lt;Element:0x4ebef30 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4ebeeb0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4feffd0 name="NotifyFilmInfoResponse"&gt;
         &lt;Complex:0x4ebefd0&gt;
            &lt;Sequence:0x4ebef50&gt;
               &lt;Element:0x4ebee90 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4fefd10 name="NotifyReportInfo"&gt;
         &lt;Complex:0x4ebeed0&gt;
            &lt;Sequence:0x4ebed90&gt;
               &lt;Element:0x4ebedb0 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4ebee30 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4ebee50 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4ebee70 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4ebed10 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4ebecb0 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
               &lt;Element:0x4ebecd0 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x4ebed50 name="ArrayOfString"&gt;
         &lt;Sequence:0x4ebed70&gt;
            &lt;Element:0x4ebee10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x4ebedd0 name="NotifyReportInfoResponse"&gt;
         &lt;Complex:0x4ebecf0&gt;
            &lt;Sequence:0x4ebed30&gt;
               &lt;Element:0x4ebeaf0 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4ebeab0 name="NotifyExamReservationInfo"&gt;
         &lt;Complex:0x4ebead0&gt;
            &lt;Sequence:0x4ebeb50&gt;
               &lt;Element:0x4ebeb70 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4ebeb10 name="NotifyExamReservationInfoResponse"&gt;
         &lt;Complex:0x4ebeb30&gt;
            &lt;Sequence:0x4ebec50&gt;
               &lt;Element:0x4ebec70 name="NotifyExamReservationInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4ebeb90 name="NotifyPatientInfo"&gt;
         &lt;Complex:0x4ebec30&gt;
            &lt;Sequence:0x4ebea90&gt;
               &lt;Element:0x4ebe9b0 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x4ebec90 name="PatientInfoEx"&gt;
         &lt;Sequence:0x4ebea70&gt;
            &lt;Element:0x4ebea10 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ebef70 name="PatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ebef90 name="LocalName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ebea50 name="Age" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ebe8f0 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ebe930 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ebe950 name="Address" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ebe970 name="IdentifyCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ebeef0 name="MedicalCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ebe910 name="PhoneNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ebef10 name="SocialSecurityCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x4ebe9d0 name="NotifyPatientInfoResponse"&gt;
         &lt;Complex:0x4ebe9f0&gt;
            &lt;Sequence:0x4ebea30&gt;
               &lt;Element:0x4ebe850 name="NotifyPatientInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4ebe990 name="QueryCloudFilmUrl"&gt;
         &lt;Complex:0x4ebe830&gt;
            &lt;Sequence:0x4ebe8b0&gt;
               &lt;Element:0x4ebe8d0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4ebe6f0 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4ebe870 name="QueryCloudFilmUrlResponse"&gt;
         &lt;Complex:0x4ebe890&gt;
            &lt;Sequence:0x4ebe710&gt;
               &lt;Element:0x4ebe730 name="QueryCloudFilmUrlResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4ebe6b0 name="QueryCloudFilmUrlForQrCode"&gt;
         &lt;Complex:0x4ebe6d0&gt;
            &lt;Sequence:0x4ebe790&gt;
               &lt;Element:0x4ebe7b0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4ebe810 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4ebe750 name="QueryCloudFilmUrlForQrCodeResponse"&gt;
         &lt;Complex:0x4ebe770&gt;
            &lt;Sequence:0x4ebe670&gt;
               &lt;Element:0x4ebe690 name="QueryCloudFilmUrlForQrCodeResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">MERGED:
Schema:0x4417930
(raw)
   &lt;s:schema elementFormDefault="qualified" targetNamespace="http://carestream.org/"&gt;
      &lt;s:element name="NotifyExamInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ExamInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="CreateDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="UpdateDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="AccessionNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="StudyInstanceUID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="NameCN" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="NameEN" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Modality" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ModalityName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientType" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="VisitID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDepartment" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RegisterDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ReportDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="SubmitDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ApproveDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PDFReportURL" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="StudyStatus" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="OutHospitalNo" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="InHospitalNo" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PhysicalNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamBodyPart" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RefferingDepartment" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional0" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional1" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional2" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional3" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional4" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional5" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional6" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional7" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional8" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional9" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyExamInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportFile"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportPath" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportFileResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportFileResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetPrintMode"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="printWaitTime" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportWaitTime" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetPrintModeResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyFilmInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyFilmInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="tns:ArrayOfString"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ArrayOfString"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyReportInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyExamReservationInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="base64ExamReservation" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyExamReservationInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamReservationInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyPatientInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientInfo" type="tns:PatientInfoEx"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="PatientInfoEx"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="LocalName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Age" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="IdentifyCardNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="MedicalCardNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="SocialSecurityCardNumber" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyPatientInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyPatientInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrl"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlForQrCode"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlForQrCodeResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlForQrCodeResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
   &lt;/s:schema&gt;
(model)
   &lt;Element:0x44172d0 name="NotifyExamInfo"&gt;
      &lt;Complex:0x4417710&gt;
         &lt;Sequence:0x4417cb0&gt;
            &lt;Element:0x4417d90 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x4417cd0 name="ExamInfo"&gt;
      &lt;Sequence:0x4417e70&gt;
         &lt;Element:0x4417e30 name="CreateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4417d70 name="UpdateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4417730 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4417d10 name="AccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4417070 name="StudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fef890 name="NameCN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fef850 name="NameEN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fef8d0 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fef8b0 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fef870 name="Modality" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fef8f0 name="ModalityName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fef910 name="PatientType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fef930 name="VisitID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fef950 name="RequestID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fef970 name="RequestDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fef990 name="RequestDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fef9b0 name="RegisterDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fef9d0 name="ExamDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fef9f0 name="ReportDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fefa10 name="SubmitDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fefa30 name="ApproveDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fefa50 name="PDFReportURL" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fefa70 name="StudyStatus" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fefa90 name="OutHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fefab0 name="InHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fefad0 name="PhysicalNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fefaf0 name="ExamName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fefb10 name="ExamBodyPart" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fefb30 name="RefferingDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fefb50 name="Optional0" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fefb70 name="Optional1" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fefb90 name="Optional2" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fefbb0 name="Optional3" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fefbd0 name="Optional4" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fefbf0 name="Optional5" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fefc10 name="Optional6" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fefc30 name="Optional7" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fefc50 name="Optional8" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4fefc70 name="Optional9" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4417f90 name="NotifyExamInfoResponse"&gt;
      &lt;Complex:0x4fefc90&gt;
         &lt;Sequence:0x4fef830&gt;
            &lt;Element:0x4fefcd0 name="NotifyExamInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x44172f0 name="NotifyReportFile"&gt;
      &lt;Complex:0x4fefcb0&gt;
         &lt;Sequence:0x4fefd30&gt;
            &lt;Element:0x4fefd50 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
            &lt;Element:0x4fefdb0 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fefdd0 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4fefdf0 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4fefcf0 name="NotifyReportFileResponse"&gt;
      &lt;Complex:0x4fefd70&gt;
         &lt;Sequence:0x4fefd90&gt;
            &lt;Element:0x4fefe50 name="NotifyReportFileResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4fefe10 name="SetPrintMode"&gt;
      &lt;Complex:0x4fefe30&gt;
         &lt;Sequence:0x4fefeb0&gt;
            &lt;Element:0x4fefed0 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4feff50 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4feff70 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4feff90 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4feffb0 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4fefe70 name="SetPrintModeResponse"&gt;
      &lt;Complex:0x4fefe90&gt;
         &lt;Sequence:0x4feff30&gt;
            &lt;Element:0x4ebefb0 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4fefef0 name="NotifyFilmInfo"&gt;
      &lt;Complex:0x4fefff0&gt;
         &lt;Sequence:0x4ebeff0&gt;
            &lt;Element:0x4ebef30 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ebeeb0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4feffd0 name="NotifyFilmInfoResponse"&gt;
      &lt;Complex:0x4ebefd0&gt;
         &lt;Sequence:0x4ebef50&gt;
            &lt;Element:0x4ebee90 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4fefd10 name="NotifyReportInfo"&gt;
      &lt;Complex:0x4ebeed0&gt;
         &lt;Sequence:0x4ebed90&gt;
            &lt;Element:0x4ebedb0 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ebee30 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ebee50 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ebee70 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ebed10 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ebecb0 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
            &lt;Element:0x4ebecd0 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x4ebed50 name="ArrayOfString"&gt;
      &lt;Sequence:0x4ebed70&gt;
         &lt;Element:0x4ebee10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4ebedd0 name="NotifyReportInfoResponse"&gt;
      &lt;Complex:0x4ebecf0&gt;
         &lt;Sequence:0x4ebed30&gt;
            &lt;Element:0x4ebeaf0 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4ebeab0 name="NotifyExamReservationInfo"&gt;
      &lt;Complex:0x4ebead0&gt;
         &lt;Sequence:0x4ebeb50&gt;
            &lt;Element:0x4ebeb70 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4ebeb10 name="NotifyExamReservationInfoResponse"&gt;
      &lt;Complex:0x4ebeb30&gt;
         &lt;Sequence:0x4ebec50&gt;
            &lt;Element:0x4ebec70 name="NotifyExamReservationInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4ebeb90 name="NotifyPatientInfo"&gt;
      &lt;Complex:0x4ebec30&gt;
         &lt;Sequence:0x4ebea90&gt;
            &lt;Element:0x4ebe9b0 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x4ebec90 name="PatientInfoEx"&gt;
      &lt;Sequence:0x4ebea70&gt;
         &lt;Element:0x4ebea10 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ebef70 name="PatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ebef90 name="LocalName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ebea50 name="Age" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ebe8f0 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ebe930 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ebe950 name="Address" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ebe970 name="IdentifyCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ebeef0 name="MedicalCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ebe910 name="PhoneNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ebef10 name="SocialSecurityCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4ebe9d0 name="NotifyPatientInfoResponse"&gt;
      &lt;Complex:0x4ebe9f0&gt;
         &lt;Sequence:0x4ebea30&gt;
            &lt;Element:0x4ebe850 name="NotifyPatientInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4ebe990 name="QueryCloudFilmUrl"&gt;
      &lt;Complex:0x4ebe830&gt;
         &lt;Sequence:0x4ebe8b0&gt;
            &lt;Element:0x4ebe8d0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ebe6f0 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4ebe870 name="QueryCloudFilmUrlResponse"&gt;
      &lt;Complex:0x4ebe890&gt;
         &lt;Sequence:0x4ebe710&gt;
            &lt;Element:0x4ebe730 name="QueryCloudFilmUrlResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4ebe6b0 name="QueryCloudFilmUrlForQrCode"&gt;
      &lt;Complex:0x4ebe6d0&gt;
         &lt;Sequence:0x4ebe790&gt;
            &lt;Element:0x4ebe7b0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ebe810 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4ebe750 name="QueryCloudFilmUrlForQrCodeResponse"&gt;
      &lt;Complex:0x4ebe770&gt;
         &lt;Sequence:0x4ebe670&gt;
            &lt;Element:0x4ebe690 name="QueryCloudFilmUrlForQrCodeResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x44172d0 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('NotifyExamInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4417f90 name="NotifyExamInfoResponse" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x44172f0 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('NotifyReportFileResponse', 'http://carestream.org/'), found as: &lt;Element:0x4fefcf0 name="NotifyReportFileResponse" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4fefe10 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x4fefe70 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x4fefef0 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('NotifyFilmInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4feffd0 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x4fefd10 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('NotifyReportInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4ebedd0 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x4ebeab0 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('NotifyExamReservationInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4ebeb10 name="NotifyExamReservationInfoResponse" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x4ebeb90 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('NotifyPatientInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4ebe9d0 name="NotifyPatientInfoResponse" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x4ebe990 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('QueryCloudFilmUrlResponse', 'http://carestream.org/'), found as: &lt;Element:0x4ebe870 name="QueryCloudFilmUrlResponse" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x4ebe6b0 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/'), found as: &lt;Element:0x4ebe750 name="QueryCloudFilmUrlForQrCodeResponse" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x44172d0 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('NotifyExamInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4417f90 name="NotifyExamInfoResponse" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x44172f0 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('NotifyReportFileResponse', 'http://carestream.org/'), found as: &lt;Element:0x4fefcf0 name="NotifyReportFileResponse" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4fefe10 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x4fefe70 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x4fefef0 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('NotifyFilmInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4feffd0 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x4fefd10 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('NotifyReportInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4ebedd0 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x4ebeab0 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('NotifyExamReservationInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4ebeb10 name="NotifyExamReservationInfoResponse" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x4ebeb90 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('NotifyPatientInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4ebe9d0 name="NotifyPatientInfoResponse" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x4ebe990 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('QueryCloudFilmUrlResponse', 'http://carestream.org/'), found as: &lt;Element:0x4ebe870 name="QueryCloudFilmUrlResponse" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x4ebe6b0 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191112 14:02:25.161" level="DEBUG">('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/'), found as: &lt;Element:0x4ebe750 name="QueryCloudFilmUrlForQrCodeResponse" /&gt;</msg>
<msg timestamp="20191112 14:02:25.192" level="DEBUG">WSDL at 'http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl' loaded:
(Definitions){
   id = "Definitions:0x4ed2790"
   options = Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x03E5AED0&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x03CD8890&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x04ED2F30&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x03CD8890&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x041C67D0&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
Linked:
Definitions:
	proxy: classes=(&lt;class 'dict'&gt;,), default={}
	timeout: classes=(&lt;class 'int'&gt;, &lt;class 'float'&gt;), default=90
	headers: classes=(&lt;class 'dict'&gt;,), default={}
	username: classes=(&lt;class 'str'&gt;,), default=None
	password: classes=(&lt;class 'str'&gt;,), default=None
Content:
	('proxy', {})
	('timeout', 90)
	('headers', {})
	('username', None)
	('password', None)
Linked:
Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x03E5AED0&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x03CD8890&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x04ED2F30&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x03CD8890&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x041C67D0&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
   url = "http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl"
   tns[] = 
      "tns",
      "http://carestream.org/",
   types[] = 
      (Types){
         definitions = (Definitions)...
      },
   schema = "&lt;Schema:0x4417930 tns="http://carestream.org/"/&gt;"
   imports[] = &lt;empty&gt;
   messages = 
      {
         (NotifyExamInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamInfoSoapIn"
               qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamInfoSoapOut"
               qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportFileSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportFileSoapIn"
               qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportFile', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportFileSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportFileSoapOut"
               qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "SetPrintModeSoapIn"
               qname = "(SetPrintModeSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('SetPrintMode', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "SetPrintModeSoapOut"
               qname = "(SetPrintModeSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('SetPrintModeResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapIn"
               qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyFilmInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapOut"
               qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapIn"
               qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapOut"
               qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamReservationInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamReservationInfoSoapIn"
               qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamReservationInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamReservationInfoSoapOut"
               qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyPatientInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyPatientInfoSoapIn"
               qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyPatientInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyPatientInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyPatientInfoSoapOut"
               qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlSoapIn"
               qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlSoapOut"
               qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlForQrCodeSoapIn"
               qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlForQrCodeSoapOut"
               qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
      }
   port_types = 
      {
         (NotifyServiceSoap, http://carestream.org/, ) = 
            (PortType){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyExamInfoSoapIn"
                                 qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyExamInfoSoapOut"
                                 qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportFileSoapIn"
                                 qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportFile', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportFileSoapOut"
                                 qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "SetPrintModeSoapIn"
                                 qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('SetPrintMode', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetPrintModeSoapOut"
                                 qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyFilmInfoSoapIn"
                                 qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyFilmInfoSoapOut"
                                 qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportInfoSoapIn"
                                 qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportInfoSoapOut"
                                 qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyExamReservationInfoSoapIn"
                                 qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyExamReservationInfoSoapOut"
                                 qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyPatientInfoSoapIn"
                                 qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyPatientInfoSoapOut"
                                 qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "QueryCloudFilmUrlSoapIn"
                                 qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryCloudFilmUrlSoapOut"
                                 qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                 qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                 qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                  }
            }
      }
   bindings = 
      {
         (NotifyServiceSoap, http://carestream.org/, ) = 
            (Binding){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamInfoSoapIn"
                                       qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamInfoSoapOut"
                                       qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportFileSoapIn"
                                       qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFile', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportFileSoapOut"
                                       qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintMode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapIn"
                                       qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapOut"
                                       qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapIn"
                                       qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapOut"
                                       qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapIn"
                                       qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapOut"
                                       qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
         (NotifyServiceSoap12, http://carestream.org/, ) = 
            (Binding){
               name = "NotifyServiceSoap12"
               qname = "(NotifyServiceSoap12, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamInfoSoapIn"
                                       qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamInfoSoapOut"
                                       qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportFileSoapIn"
                                       qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFile', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportFileSoapOut"
                                       qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintMode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapIn"
                                       qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapOut"
                                       qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapIn"
                                       qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapOut"
                                       qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapIn"
                                       qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapOut"
                                       qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
      }
   services[] = 
      (Service){
         name = "NotifyService"
         qname = "(NotifyService, http://carestream.org/)"
         ports[] = 
            (Port){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportFile""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFile', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintMode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamReservationInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyPatientInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrl""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "NotifyServiceSoap"
                           qname = "(NotifyServiceSoap, http://carestream.org/)"
                           operations = 
                              {
                                 NotifyExamInfo = 
                                    (Operation){
                                       name = "NotifyExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamInfoSoapIn"
                                             qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamInfoSoapOut"
                                             qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportFile = 
                                    (Operation){
                                       name = "NotifyReportFile"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportFileSoapIn"
                                             qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportFileSoapOut"
                                             qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyExamReservationInfo = 
                                    (Operation){
                                       name = "NotifyExamReservationInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapIn"
                                             qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapOut"
                                             qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyPatientInfo = 
                                    (Operation){
                                       name = "NotifyPatientInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapIn"
                                             qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapOut"
                                             qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrl = 
                                    (Operation){
                                       name = "QueryCloudFilmUrl"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapIn"
                                             qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapOut"
                                             qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrlForQrCode = 
                                    (Operation){
                                       name = "QueryCloudFilmUrlForQrCode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
               methods = 
                  {
                     NotifyExamInfo = 
                        (Method){
                           name = "NotifyExamInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Method){
                           name = "NotifyReportFile"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Method){
                           name = "NotifyExamReservationInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Method){
                           name = "NotifyPatientInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Method){
                           name = "QueryCloudFilmUrl"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Method){
                           name = "QueryCloudFilmUrlForQrCode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
            (Port){
               name = "NotifyServiceSoap12"
               qname = "(NotifyServiceSoap12, http://carestream.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "NotifyServiceSoap12"
                     qname = "(NotifyServiceSoap12, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportFile""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFile', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintMode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamReservationInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyPatientInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrl""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "NotifyServiceSoap"
                           qname = "(NotifyServiceSoap, http://carestream.org/)"
                           operations = 
                              {
                                 NotifyExamInfo = 
                                    (Operation){
                                       name = "NotifyExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamInfoSoapIn"
                                             qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamInfoSoapOut"
                                             qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportFile = 
                                    (Operation){
                                       name = "NotifyReportFile"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportFileSoapIn"
                                             qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportFileSoapOut"
                                             qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyExamReservationInfo = 
                                    (Operation){
                                       name = "NotifyExamReservationInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapIn"
                                             qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapOut"
                                             qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyPatientInfo = 
                                    (Operation){
                                       name = "NotifyPatientInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapIn"
                                             qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapOut"
                                             qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrl = 
                                    (Operation){
                                       name = "QueryCloudFilmUrl"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapIn"
                                             qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapOut"
                                             qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrlForQrCode = 
                                    (Operation){
                                       name = "QueryCloudFilmUrlForQrCode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
               methods = 
                  {
                     NotifyExamInfo = 
                        (Method){
                           name = "NotifyExamInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Method){
                           name = "NotifyReportFile"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Method){
                           name = "NotifyExamReservationInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Method){
                           name = "NotifyPatientInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Method){
                           name = "QueryCloudFilmUrl"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Method){
                           name = "QueryCloudFilmUrlForQrCode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04417910&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
      },
 }</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x44172d0 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">method 'NotifyExamInfo' created: started: 1573538545 (running)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x44172f0 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">method 'NotifyReportFile' created: started: 1573538545 (running)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4fefe10 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">method 'SetPrintMode' created: started: 1573538545 (running)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x4fefef0 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">method 'NotifyFilmInfo' created: started: 1573538545 (running)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x4fefd10 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">method 'NotifyReportInfo' created: started: 1573538545 (running)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x4ebeab0 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">method 'NotifyExamReservationInfo' created: started: 1573538545 (running)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x4ebeb90 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">method 'NotifyPatientInfo' created: started: 1573538545 (running)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x4ebe990 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">method 'QueryCloudFilmUrl' created: started: 1573538545 (running)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x4ebe6b0 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">method 'QueryCloudFilmUrlForQrCode' created: started: 1573538545 (running)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x44172d0 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">method 'NotifyExamInfo' created: started: 1573538545 (running)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x44172f0 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">method 'NotifyReportFile' created: started: 1573538545 (running)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4fefe10 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">method 'SetPrintMode' created: started: 1573538545 (running)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x4fefef0 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">method 'NotifyFilmInfo' created: started: 1573538545 (running)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x4fefd10 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">method 'NotifyReportInfo' created: started: 1573538545 (running)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x4ebeab0 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">method 'NotifyExamReservationInfo' created: started: 1573538545 (running)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x4ebeb90 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">method 'NotifyPatientInfo' created: started: 1573538545 (running)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x4ebe990 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">method 'QueryCloudFilmUrl' created: started: 1573538545 (running)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x4ebe6b0 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">method 'QueryCloudFilmUrlForQrCode' created: started: 1573538545 (running)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">Element:0x4417d90, resolving: ('ExamInfo', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x4e9d110"
   ref[] = 
      "ExamInfo",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x4417d90 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">('ExamInfo', 'http://carestream.org/'), found as: &lt;Complex:0x4417cd0 name="ExamInfo" /&gt;</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">Element:0x4ebeb70, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4e9d110"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4ebeb70 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">TypeQuery:0x4e9d110, found builtin (string)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">Element:0x4ebef30, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4e9d110"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4ebef30 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">TypeQuery:0x4e9d110, found builtin (string)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">Element:0x4ebeeb0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4e9d110"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4ebeeb0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">TypeQuery:0x4e9d110, found builtin (string)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">Element:0x4ebe9b0, resolving: ('PatientInfoEx', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x4e9d110"
   ref[] = 
      "PatientInfoEx",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x4ebe9b0 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">('PatientInfoEx', 'http://carestream.org/'), found as: &lt;Complex:0x4ebec90 name="PatientInfoEx" /&gt;</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">Element:0x4fefd50, resolving: ('ExamInfo', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x4e9d370"
   ref[] = 
      "ExamInfo",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x4fefd50 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">('ExamInfo', 'http://carestream.org/'), found as: &lt;Complex:0x4417cd0 name="ExamInfo" /&gt;</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">Element:0x4fefdb0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4e9d370"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4fefdb0 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">TypeQuery:0x4e9d370, found builtin (string)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">Element:0x4fefdd0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4e9d370"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4fefdd0 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">TypeQuery:0x4e9d370, found builtin (int)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">Element:0x4fefdf0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4e9d370"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4fefdf0 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">TypeQuery:0x4e9d370, found builtin (string)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">Element:0x4ebedb0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4e9d110"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4ebedb0 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">TypeQuery:0x4e9d110, found builtin (string)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">Element:0x4ebee30, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4e9d110"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4ebee30 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">TypeQuery:0x4e9d110, found builtin (string)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">Element:0x4ebee50, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4e9d110"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4ebee50 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">TypeQuery:0x4e9d110, found builtin (string)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">Element:0x4ebee70, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4e9d110"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4ebee70 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">TypeQuery:0x4e9d110, found builtin (string)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">Element:0x4ebed10, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4e9d110"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4ebed10 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">TypeQuery:0x4e9d110, found builtin (int)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">Element:0x4ebecb0, resolving: ('ArrayOfString', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x4e9d110"
   ref[] = 
      "ArrayOfString",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x4ebecb0 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">('ArrayOfString', 'http://carestream.org/'), found as: &lt;Complex:0x4ebed50 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">Element:0x4ebecd0, resolving: ('ArrayOfString', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x4e9d110"
   ref[] = 
      "ArrayOfString",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x4ebecd0 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">('ArrayOfString', 'http://carestream.org/'), found as: &lt;Complex:0x4ebed50 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">Element:0x4ebe8d0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4e9d110"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4ebe8d0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">TypeQuery:0x4e9d110, found builtin (string)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">Element:0x4ebe6f0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4e9d110"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4ebe6f0 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">TypeQuery:0x4e9d110, found builtin (string)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">Element:0x4ebe7b0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4e9d110"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4ebe7b0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">TypeQuery:0x4e9d110, found builtin (string)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">Element:0x4ebe810, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4e9d110"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4ebe810 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">TypeQuery:0x4e9d110, found builtin (string)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">Element:0x4fefed0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4e9d110"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4fefed0 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">TypeQuery:0x4e9d110, found builtin (string)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">Element:0x4feff50, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4e9d110"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4feff50 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">TypeQuery:0x4e9d110, found builtin (string)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">Element:0x4feff70, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4e9d110"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4feff70 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">TypeQuery:0x4e9d110, found builtin (int)</msg>
<msg timestamp="20191112 14:02:25.208" level="DEBUG">Element:0x4feff90, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4e9d110"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4feff90 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">TypeQuery:0x4e9d110, found builtin (int)</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">Element:0x4feffb0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4e9d110"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4feffb0 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">TypeQuery:0x4e9d110, found builtin (int)</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4fefe10 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4fefe10 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">processing:
(Content){
   tag = "strAccessionNumber"
   value = "A20191112140103316869"
   type = &lt;Element:0x4fefed0 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x3e6aa90 /&gt;
 }</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x03E6AFB0&gt;
content:
(Content){
   tag = "strAccessionNumber"
   value = "A20191112140103316869"
   type = &lt;Element:0x4fefed0 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x3e6aa90 /&gt;
 }</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">starting content:
(Content){
   tag = "strAccessionNumber"
   value = "A20191112140103316869"
   type = &lt;Element:0x4fefed0 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x3e6aa90 /&gt;
 }</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x03E6AFF0&gt;)
&lt;suds.resolver.Frame object at 0x03E6AFF0&gt;</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">created - node:
&lt;tns:strAccessionNumber xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">ending content:
(Content){
   tag = "strAccessionNumber"
   value = "A20191112140103316869"
   type = &lt;Element:0x4fefed0 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x3e6aa90 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x03E6AFF0&gt;)
</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">processing:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x4feff50 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x3e6aad0 /&gt;
 }</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x03E6AD90&gt;
content:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x4feff50 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x3e6aad0 /&gt;
 }</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">starting content:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x4feff50 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x3e6aad0 /&gt;
 }</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x03E6ADD0&gt;)
&lt;suds.resolver.Frame object at 0x03E6ADD0&gt;</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">created - node:
&lt;tns:strStudyInstanceUID xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">ending content:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x4feff50 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x3e6aad0 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x03E6ADD0&gt;)
</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">processing:
(Content){
   tag = "nMode"
   value = "0"
   type = &lt;Element:0x4feff70 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x3e6ab10 /&gt;
 }</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x03E622B0&gt;
content:
(Content){
   tag = "nMode"
   value = "0"
   type = &lt;Element:0x4feff70 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x3e6ab10 /&gt;
 }</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">starting content:
(Content){
   tag = "nMode"
   value = "0"
   type = &lt;Element:0x4feff70 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x3e6ab10 /&gt;
 }</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x03E622F0&gt;)
&lt;suds.resolver.Frame object at 0x03E622F0&gt;</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">created - node:
&lt;tns:nMode xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">ending content:
(Content){
   tag = "nMode"
   value = "0"
   type = &lt;Element:0x4feff70 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x3e6ab10 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x03E622F0&gt;)
</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">processing:
(Content){
   tag = "printWaitTime"
   value = "60"
   type = &lt;Element:0x4feff90 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x3e6ab50 /&gt;
 }</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x03E62590&gt;
content:
(Content){
   tag = "printWaitTime"
   value = "60"
   type = &lt;Element:0x4feff90 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x3e6ab50 /&gt;
 }</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">starting content:
(Content){
   tag = "printWaitTime"
   value = "60"
   type = &lt;Element:0x4feff90 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x3e6ab50 /&gt;
 }</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x03E625D0&gt;)
&lt;suds.resolver.Frame object at 0x03E625D0&gt;</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">created - node:
&lt;tns:printWaitTime xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">ending content:
(Content){
   tag = "printWaitTime"
   value = "60"
   type = &lt;Element:0x4feff90 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x3e6ab50 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x03E625D0&gt;)
</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">processing:
(Content){
   tag = "reportWaitTime"
   value = "10"
   type = &lt;Element:0x4feffb0 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x3e6abd0 /&gt;
 }</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x03E62870&gt;
content:
(Content){
   tag = "reportWaitTime"
   value = "10"
   type = &lt;Element:0x4feffb0 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x3e6abd0 /&gt;
 }</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">starting content:
(Content){
   tag = "reportWaitTime"
   value = "10"
   type = &lt;Element:0x4feffb0 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x3e6abd0 /&gt;
 }</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x03E628B0&gt;)
&lt;suds.resolver.Frame object at 0x03E628B0&gt;</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">created - node:
&lt;tns:reportWaitTime xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">ending content:
(Content){
   tag = "reportWaitTime"
   value = "10"
   type = &lt;Element:0x4feffb0 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x3e6abd0 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x03E628B0&gt;)
</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">message for 'SetPrintMode' created: 0 (ms)</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">sending to (http://10.112.20.84/NotifyServer/NotifyService.asmx)
message:
&lt;suds.sax.document.Document object at 0x03E6A870&gt;</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">headers = {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://carestream.org/SetPrintMode"'}</msg>
<msg timestamp="20191112 14:02:25.223" level="DEBUG">sending:
URL: http://10.112.20.84/NotifyServer/NotifyService.asmx
HEADERS: {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://carestream.org/SetPrintMode"', 'Content-type': 'text/xml; charset=utf-8', 'Soapaction': b'"http://carestream.org/SetPrintMode"'}
MESSAGE:
b'&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://carestream.org/"&gt;&lt;SOAP-ENV:Header/&gt;&lt;ns0:Body&gt;&lt;ns1:SetPrintMode&gt;&lt;ns1:strAccessionNumber&gt;A20191112140103316869&lt;/ns1:strAccessionNumber&gt;&lt;ns1:strStudyInstanceUID&gt;&lt;/ns1:strStudyInstanceUID&gt;&lt;ns1:nMode&gt;0&lt;/ns1:nMode&gt;&lt;ns1:printWaitTime&gt;60&lt;/ns1:printWaitTime&gt;&lt;ns1:reportWaitTime&gt;10&lt;/ns1:reportWaitTime&gt;&lt;/ns1:SetPrintMode&gt;&lt;/ns0:Body&gt;&lt;/SOAP-ENV:Envelope&gt;'</msg>
<msg timestamp="20191112 14:02:25.254" level="DEBUG">received:
CODE: HTTPStatus.OK
HEADERS: Cache-Control: private, max-age=0
Content-Type: text/xml; charset=utf-8
Server: Microsoft-IIS/7.5
X-AspNet-Version: 4.0.30319
X-Powered-By: ASP.NET
Date: Tue, 12 Nov 2019 06:02:25 GMT
Connection: close
Content-Length: 364


MESSAGE:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;SetPrintModeResponse xmlns="http://carestream.org/"&gt;&lt;SetPrintModeResult&gt;0&lt;/SetPrintModeResult&gt;&lt;/SetPrintModeResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191112 14:02:25.254" level="DEBUG">waited 31 (ms) on server reply</msg>
<msg timestamp="20191112 14:02:25.254" level="DEBUG">HTTP succeeded:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;SetPrintModeResponse xmlns="http://carestream.org/"&gt;&lt;SetPrintModeResult&gt;0&lt;/SetPrintModeResult&gt;&lt;/SetPrintModeResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191112 14:02:25.270" level="DEBUG">b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;SetPrintModeResponse xmlns="http://carestream.org/"&gt;&lt;SetPrintModeResult&gt;0&lt;/SetPrintModeResult&gt;&lt;/SetPrintModeResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'
sax duration: 0 (ms)</msg>
<msg timestamp="20191112 14:02:25.270" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x4fefe70 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191112 14:02:25.270" level="DEBUG">Element:0x4ebefb0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x3e6a6d0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4ebefb0 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:02:25.270" level="DEBUG">TypeQuery:0x3e6a6d0, found builtin (int)</msg>
<msg timestamp="20191112 14:02:25.270" level="DEBUG">reset</msg>
<msg timestamp="20191112 14:02:25.270" level="DEBUG">Element:0x4ebefb0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x3e62e70"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4ebefb0 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:02:25.270" level="DEBUG">TypeQuery:0x3e62e70, found builtin (int)</msg>
<msg timestamp="20191112 14:02:25.270" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x03E62B90&gt;)
&lt;suds.resolver.Frame object at 0x03E62B90&gt;</msg>
<msg timestamp="20191112 14:02:25.270" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x03E62B90&gt;)
</msg>
<msg timestamp="20191112 14:02:25.270" level="DEBUG">method 'SetPrintMode' invoked: 46 (ms)</msg>
<msg timestamp="20191112 14:02:25.270" level="INFO">Printmode.printmode_set_by_accn: Find the records in print mode table of exam: A20191112140103316869.
Printmode.printmode_set_by_accn: Set exam print mode to [both] successfully.</msg>
<msg timestamp="20191112 14:02:25.270" level="INFO">${Set_Printmode} = True</msg>
<status status="PASS" starttime="20191112 14:02:25.114" endtime="20191112 14:02:25.270"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Set_Printmode}</arg>
</arguments>
<status status="PASS" starttime="20191112 14:02:25.270" endtime="20191112 14:02:25.270"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20191112 14:02:35.270" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20191112 14:02:25.270" endtime="20191112 14:02:35.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5 \n Description: \n 1. Wait for the holding time of film and report has passed. \n Expected:\n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191112 14:02:35.270" level="INFO">Step 5 
Description: 
1. Wait for the holding time of film and report has passed. 
Expected:
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191112 14:02:35.270" endtime="20191112 14:02:35.270"></status>
</kw>
<kw name="HoldTime Wait Time Arrive By Accn" library="PUMA_HoldTimeLibrary">
<doc>HoldTime_get_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Holdtime_result}</var>
</assign>
<msg timestamp="20191112 14:03:30.284" level="INFO">HoldTime.HoldTime_wait_time_arrive_by_accn: Sleep [55] seconds to make print ready arrived.</msg>
<msg timestamp="20191112 14:03:30.284" level="INFO">${Holdtime_result} = True</msg>
<status status="PASS" starttime="20191112 14:02:35.270" endtime="20191112 14:03:30.284"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Holdtime_result}</arg>
</arguments>
<status status="PASS" starttime="20191112 14:03:30.284" endtime="20191112 14:03:30.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6 \n Description: \n 1.Print the prepared films and reports with accession number on K3 terminal prepared in step1. \n Expected: \n 1. The print task should finish successfully. The status in wggc.dbo.afp_printtask should be 4. \n</arg>
</arguments>
<msg timestamp="20191112 14:03:30.284" level="INFO">Step 6 
Description: 
1.Print the prepared films and reports with accession number on K3 terminal prepared in step1. 
Expected: 
1. The print task should finish successfully. The status in wggc.dbo.afp_printtask should be 4. 
</msg>
<status status="PASS" starttime="20191112 14:03:30.284" endtime="20191112 14:03:30.284"></status>
</kw>
<kw name="Terminal Print With Cardinfo" library="PUMA_TerminalLibrary">
<doc>This function is simulate the terminal print opertaions with API.
You can select the exist termina name and input the cardinfo to print the report, films.
The function will verify the print mode and exam info to print.
It will return bool value.</doc>
<arguments>
<arg>K3_Terminal01</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Termina_Print_Result}</var>
</assign>
<msg timestamp="20191112 14:03:30.284" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:03:30.300" level="DEBUG">http://10.112.20.84:80 "GET /EHDPS/status?tid=K3_Terminal01 HTTP/1.1" 200 609</msg>
<msg timestamp="20191112 14:03:30.300" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:03:30.550" level="DEBUG">http://10.112.20.84:80 "GET /EHDPS/printtask/items?Value=A20191112140103316869&amp;Type=0&amp;tid=K3_Terminal01 HTTP/1.1" 200 1443</msg>
<msg timestamp="20191112 14:03:30.550" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:03:30.675" level="DEBUG">http://10.112.20.84:80 "POST /EHDPS/printtask/create?tid=K3_Terminal01 HTTP/1.1" 200 732</msg>
<msg timestamp="20191112 14:03:30.690" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:03:30.706" level="DEBUG">http://10.112.20.84:80 "POST /EHDPS/printtask/print/2128?tid=K3_Terminal01 HTTP/1.1" 200 729</msg>
<msg timestamp="20191112 14:05:25.722" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:05:25.753" level="DEBUG">http://10.112.20.84:80 "GET /ImageSuite/Web/report/pdfviewer.aspx?id=3ae80811d52a4832b2c50d19465d45d4 HTTP/1.1" 200 284504</msg>
<msg timestamp="20191112 14:05:25.753" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:05:25.784" level="DEBUG">http://10.112.20.84:80 "POST /EHDPS/printtask/report/2128/3ae80811d52a4832b2c50d19465d45d4/1?tid=K3_Terminal01 HTTP/1.1" 200 221</msg>
<msg timestamp="20191112 14:05:35.791" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:05:35.822" level="DEBUG">http://10.112.20.84:80 "GET /ImageSuite/Web/report/pdfviewer.aspx?id=c3b84ddd95964369ae2959782ae2a23a HTTP/1.1" 200 284504</msg>
<msg timestamp="20191112 14:05:35.822" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:05:35.869" level="DEBUG">http://10.112.20.84:80 "POST /EHDPS/printtask/report/2128/c3b84ddd95964369ae2959782ae2a23a/1?tid=K3_Terminal01 HTTP/1.1" 200 221</msg>
<msg timestamp="20191112 14:07:10.871" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:07:10.902" level="DEBUG">http://10.112.20.84:80 "GET /EHDPS/printtask/status/2128?tid=K3_Terminal01 HTTP/1.1" 200 734</msg>
<msg timestamp="20191112 14:07:10.902" level="INFO">Terminal._check_terminal_status: The terminal status check and result is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"Status":0,"Terminal":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9876,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20231,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}
Terminal.printtask_report_getinfo: get the report information by cardiinfo: 
{"Status":0,"Code":"","Message":"您有胶片和报告可打印，请稍等！","OriginalException":null,"Entity":{"PrintState":0,"Message":"","FilmCount":2,"ReportCount":2,"PatientInfo":{"PatientId":"P20191112140103316869","PatientName":"CN20191112140103316869","PatientGender":"F","PatientBirthday":null,"PatientType":"2","PatientAge":null},"FilmStatistics":[{"FilmSize":"14INX17IN","FilmType":"BLUE FILM","FilmCount":2}],"ReportStatistics":[{"ReportID":null,"ReportPath":null,"ReportCount":2,"PageCount":0,"PaperSize":0,"PaperType":0,"ColorType":0}],"ExamItems":[{"AccessionNumber":"A20191112140103316869","ModalityType":"NM","ModalityName":"DX","ExamName":"Exam20191112140103316869","ReferringDepartment":null,"ExamDate":null,"ExamBodyPart":"","Status":"Unprinted","StatusComments":null,"PatientType":null,"FilmInfos":[{"FilmSize":"14INX17IN","FilmType":"BLUE FILM","FilmCount":1},{"FilmSize":"14INX17IN","FilmType":"BLUE FILM","FilmCount":1}],"ReportInfos":[{"ReportID":"3ae80811d52a4832b2c50d19465d45d4","ReportPath":"http://10.112.20.84/ImageSuite/Web/report/pdfviewer.aspx?id=3ae80811d52a4832b2c50d19465d45d4","ReportCount":0,"PageCount":1,"PaperSize":0,"PaperType":0,"ColorType":0},{"ReportID":"c3b84ddd95964369ae2959782ae2a23a","ReportPath":"http://10.112.20.84/ImageSuite/Web/report/pdfviewer.aspx?id=c3b84ddd95964369ae2959782ae2a23a","ReportCount":0,"PageCount":1,"PaperSize":0,"PaperType":0,"ColorType":0}]}],"ExamItemsOfReg":[]}}
Terminal.create_film_printtask: The terminal film print create and response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"2128","Status":-1,"TotalFilmCount":2,"TotalReportCount":2,"PrintedFilmCount":0,"PrintedReportCount":0,"EstimatedTime":0,"TerminalInfo":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9876,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20231,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}
Terminal.create_film_printtask: The taskID is 2128
Terminal.printtask_print: The terminal print task print response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"","Status":0,"TotalFilmCount":0,"TotalReportCount":0,"PrintedFilmCount":0,"PrintedReportCount":0,"EstimatedTime":0,"TerminalInfo":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9876,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20231,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":"2128"}}}
Terminal.printtask_get_estimatetime: The estimate time is 85 of task 2128 

Terminal.printtask_report_download: download the file successfully from: 
http://10.112.20.84/ImageSuite/Web/report/pdfviewer.aspx?id=3ae80811d52a4832b2c50d19465d45d4
Terminal.printtask_report_print: The report 3ae80811d52a4832b2c50d19465d45d4 print response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"2128","Status":1,"TotalFilmCount":2,"TotalReportCount":2,"PrintedFilmCount":2,"PrintedReportCount":0,"EstimatedTime":85,"TerminalInfo":null}}
Terminal.printtask_report_download: download the file successfully from: 
http://10.112.20.84/ImageSuite/Web/report/pdfviewer.aspx?id=c3b84ddd95964369ae2959782ae2a23a
Terminal.printtask_report_print: The report c3b84ddd95964369ae2959782ae2a23a print response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"2128","Status":1,"TotalFilmCount":2,"TotalReportCount":2,"PrintedFilmCount":2,"PrintedReportCount":2,"EstimatedTime":85,"TerminalInfo":null}}
Terminal.printtask_status_check: The terminal print task status check response is:
 {"Status":0,"Code":"","Message":null,"OriginalException":null,"Entity":{"TaskId":"2128","Status":4,"TotalFilmCount":2,"TotalReportCount":2,"PrintedFilmCount":2,"PrintedReportCount":2,"EstimatedTime":85,"TerminalInfo":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9874,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20229,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}
Terminal.terminal_print_with_cardinfo: The task 2128 print successfully, the task status is Printed</msg>
<msg timestamp="20191112 14:07:10.902" level="INFO">${Termina_Print_Result} = True</msg>
<status status="PASS" starttime="20191112 14:03:30.284" endtime="20191112 14:07:10.902"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Termina_Print_Result}</arg>
</arguments>
<status status="PASS" starttime="20191112 14:07:10.902" endtime="20191112 14:07:10.902"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191112 14:01:02.473" endtime="20191112 14:07:10.902" critical="yes"></status>
</test>
<test id="s1-t8" name="SmokeTest_008_Core_4177_04.01.02 Terminal K3 Print Workflow with one film and one report.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description:\n 1. Configure a K3 terminal on PS. \n 2. Make sure the terminal status is ready to work. \n Expected: \n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191112 14:07:10.902" level="INFO">Step 1 
Description:
1. Configure a K3 terminal on PS. 
2. Make sure the terminal status is ready to work. 
Expected: 
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191112 14:07:10.902" endtime="20191112 14:07:10.902"></status>
</kw>
<kw name="Check Terminal Status" library="PUMA_TerminalLibrary">
<doc>This function is use the API interface to check the terminal status.
The function will enable the terminal status to 'on work' status.</doc>
<arguments>
<arg>K3_Terminal01</arg>
</arguments>
<assign>
<var>${Terminal_status}</var>
</assign>
<msg timestamp="20191112 14:07:10.902" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:07:10.917" level="DEBUG">http://10.112.20.84:80 "GET /EHDPS/status?tid=K3_Terminal01 HTTP/1.1" 200 609</msg>
<msg timestamp="20191112 14:07:10.917" level="INFO">Terminal._check_terminal_status: The terminal status check and result is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"Status":0,"Terminal":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9874,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20229,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}</msg>
<msg timestamp="20191112 14:07:10.917" level="INFO">${Terminal_status} = True</msg>
<status status="PASS" starttime="20191112 14:07:10.902" endtime="20191112 14:07:10.917"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Terminal_status}</arg>
<arg>The termianl status is ready to print</arg>
</arguments>
<status status="PASS" starttime="20191112 14:07:10.917" endtime="20191112 14:07:10.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Create one film for patientB/ExamB. \n Expected \n 1. The film can archived successfully. \n</arg>
</arguments>
<msg timestamp="20191112 14:07:10.917" level="INFO">Step 2 
Description: 
1. Create one film for patientB/ExamB. 
Expected 
1. The film can archived successfully. 
</msg>
<status status="PASS" starttime="20191112 14:07:10.917" endtime="20191112 14:07:10.917"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191112 14:07:10.917" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:07:10.949" level="DEBUG">http://10.112.20.84:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191112 14:07:10.949" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-12 14:07:10.917430", "UpdateDT": "2019-11-12 14:07:10.917430", "PatientID": "P20191112140710917430", "AccessionNumber": "A20191112140710917430", "StudyInstanceUID": "UID20191112140710917430", "NameCN": "CN20191112140710917430", "NameEN": "EN20191112140710917430", "Gender": "M", "Birthday": "1927-12-05", "Modality": "CR", "ModalityName": "DR", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-12 14:07:10.917430", "RegisterDT": "2019-11-12 14:07:10.917430", "ExamDT": "2019-11-12 14:07:10.917430", "ReportDT": "2019-11-12 14:07:10.917430", "SubmitDT": "2019-11-12 14:07:10.917430", "ApproveDT": "2019-11-12 14:07:10.917430", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191112140710917430", "ExamBodyPart": "Hand", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191112 14:07:10.949" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-12 14:07:10.917430", "UpdateDT": "2019-11-12 14:07:10.917430", "PatientID": "P20191112140710917430", "AccessionNumber": "A20191112140710917430", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191112 14:07:10.917" endtime="20191112 14:07:10.949"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191112 14:07:10.949" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-12 14:07:10.917430', 'UpdateDT': '2019-11-12 14:07:10.917430', 'PatientID': 'P20191112140710917430', 'AccessionNumber': 'A20191112140710917430', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191112 14:07:10.949" endtime="20191112 14:07:10.949"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191112 14:07:10.980" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191112 14:07:10.949" endtime="20191112 14:07:10.980"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191112 14:07:11.011" level="INFO">${patientID} = ['P20191112140710917430']</msg>
<status status="PASS" starttime="20191112 14:07:10.980" endtime="20191112 14:07:11.011"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191112 14:07:11.058" level="INFO">${Accessionnumber} = ['A20191112140710917430']</msg>
<status status="PASS" starttime="20191112 14:07:11.011" endtime="20191112 14:07:11.058"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:07:11.058" endtime="20191112 14:07:11.058"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191112 14:07:51.792" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191112140710917430", "AccessionNumber": "A20191112140710917430", "FilmSessionLable": "20191112140711058056", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191112 14:07:51.792" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191112140710917430", "AccessionNumber": "A20191112140710917430", "FilmSessionLable": "20191112140711058056", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191112 14:07:11.058" endtime="20191112 14:07:51.792"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191112 14:07:51.792" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191112140710917430', 'AccessionNumber': 'A20191112140710917430', 'FilmSessionLable': '20191112140711058056', 'DeliveryJob_status': 2, 'WaterMark_Path': 'D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191112 14:07:51.792" endtime="20191112 14:07:51.792"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191112 14:07:51.824" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191112 14:07:51.792" endtime="20191112 14:07:51.824"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:07:51.824" endtime="20191112 14:07:51.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3 \n Description:\n 1. Create one report for patientB/ExamB. \n Expected: \n 1. The report can archived successfully. \n</arg>
</arguments>
<msg timestamp="20191112 14:07:51.824" level="INFO">Step 3 
Description:
1. Create one report for patientB/ExamB. 
Expected: 
1. The report can archived successfully. 
</msg>
<status status="PASS" starttime="20191112 14:07:51.824" endtime="20191112 14:07:51.824"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191112 14:08:01.839" level="INFO">PUMA_ReportLibrary._archive_check: Report achived successfully.
Report achived successfully. {"Status": true, "server": "10.112.20.84", "patient_id": "P20191112140710917430", "accession_number": "A20191112140710917430", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "powershell_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.84/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191112 14:08:01.839" level="INFO">${Report_archived_Info} = {"Status": true, "server": "10.112.20.84", "patient_id": "P20191112140710917430", "accession_number": "A20191112140710917430", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191112 14:07:51.824" endtime="20191112 14:08:01.839"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191112 14:08:01.839" level="INFO">${Report_archived_Info_Json} = {'Status': True, 'server': '10.112.20.84', 'patient_id': 'P20191112140710917430', 'accession_number': 'A20191112140710917430', 'report_file': 'D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191112 14:08:01.839" endtime="20191112 14:08:01.839"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191112 14:08:01.871" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191112 14:08:01.839" endtime="20191112 14:08:01.871"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:08:01.871" endtime="20191112 14:08:01.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4 \n Description:\n 1. Set the print mode to both for ExamB \n Expected:\n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191112 14:08:01.871" level="INFO">Step 4 
Description:
1. Set the print mode to both for ExamB 
Expected:
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191112 14:08:01.871" endtime="20191112 14:08:01.871"></status>
</kw>
<kw name="Printmode Set By Accn" library="PUMA_PrintModeLibrary">
<doc>printmode_set_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
<arg>both</arg>
</arguments>
<assign>
<var>${Set_Printmode}</var>
</assign>
<msg timestamp="20191112 14:08:01.871" level="DEBUG">reading WSDL at: http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl ...</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a67330, convert type="tns:ExamInfo" to ('ExamInfo', 'http://carestream.org/')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a67390, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a673d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a673f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a67410, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a67430, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a67470, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a67490, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a674b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a674d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a67450, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a674f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a67510, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a67530, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a67550, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a67570, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a67590, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a675b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a675d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a675f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a67610, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a67630, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a67650, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a67670, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a67690, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a676b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a676d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a676f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a67710, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a67730, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a67750, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a67770, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a67790, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.886" level="DEBUG">Element:0x4a677b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a677d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a677f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a67810, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a67830, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a67850, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a67870, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a678d0, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a67950, convert type="tns:ExamInfo" to ('ExamInfo', 'http://carestream.org/')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a679b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a679d0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a679f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a67a50, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a67ad0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a67b50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a67b70, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a67b90, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a67bb0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a67bd0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a67c70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a67cd0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a67cb0, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a67d70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a67df0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a67e10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a67e30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a67e50, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a67e90, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://carestream.org/')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a67eb0, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://carestream.org/')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a67dd0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a67f30, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a67fb0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a64050, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a640d0, convert type="tns:PatientInfoEx" to ('PatientInfoEx', 'http://carestream.org/')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a64130, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a64170, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a64190, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a641b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a641d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a64210, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a64230, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a64250, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a64270, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a641f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a64290, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a642f0, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a64370, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a643d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a64410, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a64490, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a644f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">Element:0x4a64530, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191112 14:08:01.902" level="DEBUG">loaded:

schema collection
   Schema:0x4a67250
   (raw)
      &lt;s:schema elementFormDefault="qualified" targetNamespace="http://carestream.org/"&gt;
         &lt;s:element name="NotifyExamInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ExamInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="CreateDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="UpdateDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="AccessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="StudyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="NameCN" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="NameEN" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Modality" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ModalityName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientType" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="VisitID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDepartment" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RegisterDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ReportDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="SubmitDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ApproveDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PDFReportURL" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="StudyStatus" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="OutHospitalNo" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="InHospitalNo" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PhysicalNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamBodyPart" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RefferingDepartment" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional0" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional1" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional2" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional3" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional4" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional5" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional6" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional7" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional8" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional9" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyExamInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportFile"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportPath" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportFileResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportFileResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetPrintMode"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="printWaitTime" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportWaitTime" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetPrintModeResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyFilmInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyFilmInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="tns:ArrayOfString"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ArrayOfString"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyReportInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyExamReservationInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="base64ExamReservation" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyExamReservationInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamReservationInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyPatientInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientInfo" type="tns:PatientInfoEx"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="PatientInfoEx"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="LocalName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Age" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="IdentifyCardNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="MedicalCardNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="SocialSecurityCardNumber" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyPatientInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyPatientInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrl"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlForQrCode"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlForQrCodeResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlForQrCodeResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
      &lt;/s:schema&gt;
   (model)
      &lt;Element:0x4a67270 name="NotifyExamInfo"&gt;
         &lt;Complex:0x4a672b0&gt;
            &lt;Sequence:0x4a672f0&gt;
               &lt;Element:0x4a67330 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x4a672d0 name="ExamInfo"&gt;
         &lt;Sequence:0x4a67310&gt;
            &lt;Element:0x4a67390 name="CreateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a673d0 name="UpdateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a673f0 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67410 name="AccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67430 name="StudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67470 name="NameCN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67490 name="NameEN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a674b0 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a674d0 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67450 name="Modality" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a674f0 name="ModalityName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67510 name="PatientType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67530 name="VisitID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67550 name="RequestID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67570 name="RequestDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67590 name="RequestDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a675b0 name="RegisterDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a675d0 name="ExamDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a675f0 name="ReportDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67610 name="SubmitDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67630 name="ApproveDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67650 name="PDFReportURL" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67670 name="StudyStatus" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67690 name="OutHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a676b0 name="InHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a676d0 name="PhysicalNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a676f0 name="ExamName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67710 name="ExamBodyPart" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67730 name="RefferingDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67750 name="Optional0" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67770 name="Optional1" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67790 name="Optional2" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a677b0 name="Optional3" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a677d0 name="Optional4" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a677f0 name="Optional5" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67810 name="Optional6" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67830 name="Optional7" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67850 name="Optional8" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67870 name="Optional9" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x4a67350 name="NotifyExamInfoResponse"&gt;
         &lt;Complex:0x4a67370&gt;
            &lt;Sequence:0x4a673b0&gt;
               &lt;Element:0x4a678d0 name="NotifyExamInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4a67890 name="NotifyReportFile"&gt;
         &lt;Complex:0x4a678b0&gt;
            &lt;Sequence:0x4a67930&gt;
               &lt;Element:0x4a67950 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
               &lt;Element:0x4a679b0 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4a679d0 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4a679f0 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4a678f0 name="NotifyReportFileResponse"&gt;
         &lt;Complex:0x4a67970&gt;
            &lt;Sequence:0x4a67990&gt;
               &lt;Element:0x4a67a50 name="NotifyReportFileResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4a67a10 name="SetPrintMode"&gt;
         &lt;Complex:0x4a67a30&gt;
            &lt;Sequence:0x4a67ab0&gt;
               &lt;Element:0x4a67ad0 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4a67b50 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4a67b70 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4a67b90 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4a67bb0 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4a67a70 name="SetPrintModeResponse"&gt;
         &lt;Complex:0x4a67a90&gt;
            &lt;Sequence:0x4a67b30&gt;
               &lt;Element:0x4a67bd0 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4a67af0 name="NotifyFilmInfo"&gt;
         &lt;Complex:0x4a67bf0&gt;
            &lt;Sequence:0x4a67c50&gt;
               &lt;Element:0x4a67c70 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4a67cd0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4a67c10 name="NotifyFilmInfoResponse"&gt;
         &lt;Complex:0x4a67910&gt;
            &lt;Sequence:0x4a67c90&gt;
               &lt;Element:0x4a67cb0 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4a67c30 name="NotifyReportInfo"&gt;
         &lt;Complex:0x4a67cf0&gt;
            &lt;Sequence:0x4a67d50&gt;
               &lt;Element:0x4a67d70 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4a67df0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4a67e10 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4a67e30 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4a67e50 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4a67e90 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
               &lt;Element:0x4a67eb0 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x4a67d10 name="ArrayOfString"&gt;
         &lt;Sequence:0x4a67d30&gt;
            &lt;Element:0x4a67dd0 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x4a67d90 name="NotifyReportInfoResponse"&gt;
         &lt;Complex:0x4a67ed0&gt;
            &lt;Sequence:0x4a67e70&gt;
               &lt;Element:0x4a67f30 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4a67ef0 name="NotifyExamReservationInfo"&gt;
         &lt;Complex:0x4a67f10&gt;
            &lt;Sequence:0x4a67f90&gt;
               &lt;Element:0x4a67fb0 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4a67f50 name="NotifyExamReservationInfoResponse"&gt;
         &lt;Complex:0x4a67f70&gt;
            &lt;Sequence:0x4a64030&gt;
               &lt;Element:0x4a64050 name="NotifyExamReservationInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4a67fd0 name="NotifyPatientInfo"&gt;
         &lt;Complex:0x4a64070&gt;
            &lt;Sequence:0x4a640b0&gt;
               &lt;Element:0x4a640d0 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x4a67ff0 name="PatientInfoEx"&gt;
         &lt;Sequence:0x4a64090&gt;
            &lt;Element:0x4a64130 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a64170 name="PatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a64190 name="LocalName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a641b0 name="Age" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a641d0 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a64210 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a64230 name="Address" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a64250 name="IdentifyCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a64270 name="MedicalCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a641f0 name="PhoneNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a64290 name="SocialSecurityCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x4a640f0 name="NotifyPatientInfoResponse"&gt;
         &lt;Complex:0x4a64110&gt;
            &lt;Sequence:0x4a64150&gt;
               &lt;Element:0x4a642f0 name="NotifyPatientInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4a642b0 name="QueryCloudFilmUrl"&gt;
         &lt;Complex:0x4a642d0&gt;
            &lt;Sequence:0x4a64350&gt;
               &lt;Element:0x4a64370 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4a643d0 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4a64310 name="QueryCloudFilmUrlResponse"&gt;
         &lt;Complex:0x4a64330&gt;
            &lt;Sequence:0x4a643f0&gt;
               &lt;Element:0x4a64410 name="QueryCloudFilmUrlResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4a64390 name="QueryCloudFilmUrlForQrCode"&gt;
         &lt;Complex:0x4a643b0&gt;
            &lt;Sequence:0x4a64470&gt;
               &lt;Element:0x4a64490 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4a644f0 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4a64430 name="QueryCloudFilmUrlForQrCodeResponse"&gt;
         &lt;Complex:0x4a64450&gt;
            &lt;Sequence:0x4a64510&gt;
               &lt;Element:0x4a64530 name="QueryCloudFilmUrlForQrCodeResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">MERGED:
Schema:0x4a67250
(raw)
   &lt;s:schema elementFormDefault="qualified" targetNamespace="http://carestream.org/"&gt;
      &lt;s:element name="NotifyExamInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ExamInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="CreateDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="UpdateDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="AccessionNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="StudyInstanceUID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="NameCN" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="NameEN" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Modality" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ModalityName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientType" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="VisitID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDepartment" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RegisterDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ReportDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="SubmitDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ApproveDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PDFReportURL" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="StudyStatus" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="OutHospitalNo" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="InHospitalNo" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PhysicalNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamBodyPart" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RefferingDepartment" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional0" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional1" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional2" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional3" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional4" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional5" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional6" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional7" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional8" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional9" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyExamInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportFile"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportPath" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportFileResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportFileResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetPrintMode"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="printWaitTime" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportWaitTime" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetPrintModeResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyFilmInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyFilmInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="tns:ArrayOfString"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ArrayOfString"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyReportInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyExamReservationInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="base64ExamReservation" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyExamReservationInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamReservationInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyPatientInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientInfo" type="tns:PatientInfoEx"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="PatientInfoEx"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="LocalName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Age" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="IdentifyCardNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="MedicalCardNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="SocialSecurityCardNumber" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyPatientInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyPatientInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrl"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlForQrCode"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlForQrCodeResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlForQrCodeResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
   &lt;/s:schema&gt;
(model)
   &lt;Element:0x4a67270 name="NotifyExamInfo"&gt;
      &lt;Complex:0x4a672b0&gt;
         &lt;Sequence:0x4a672f0&gt;
            &lt;Element:0x4a67330 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x4a672d0 name="ExamInfo"&gt;
      &lt;Sequence:0x4a67310&gt;
         &lt;Element:0x4a67390 name="CreateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a673d0 name="UpdateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a673f0 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a67410 name="AccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a67430 name="StudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a67470 name="NameCN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a67490 name="NameEN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a674b0 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a674d0 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a67450 name="Modality" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a674f0 name="ModalityName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a67510 name="PatientType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a67530 name="VisitID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a67550 name="RequestID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a67570 name="RequestDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a67590 name="RequestDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a675b0 name="RegisterDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a675d0 name="ExamDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a675f0 name="ReportDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a67610 name="SubmitDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a67630 name="ApproveDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a67650 name="PDFReportURL" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a67670 name="StudyStatus" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a67690 name="OutHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a676b0 name="InHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a676d0 name="PhysicalNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a676f0 name="ExamName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a67710 name="ExamBodyPart" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a67730 name="RefferingDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a67750 name="Optional0" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a67770 name="Optional1" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a67790 name="Optional2" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a677b0 name="Optional3" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a677d0 name="Optional4" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a677f0 name="Optional5" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a67810 name="Optional6" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a67830 name="Optional7" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a67850 name="Optional8" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a67870 name="Optional9" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4a67350 name="NotifyExamInfoResponse"&gt;
      &lt;Complex:0x4a67370&gt;
         &lt;Sequence:0x4a673b0&gt;
            &lt;Element:0x4a678d0 name="NotifyExamInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4a67890 name="NotifyReportFile"&gt;
      &lt;Complex:0x4a678b0&gt;
         &lt;Sequence:0x4a67930&gt;
            &lt;Element:0x4a67950 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
            &lt;Element:0x4a679b0 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a679d0 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a679f0 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4a678f0 name="NotifyReportFileResponse"&gt;
      &lt;Complex:0x4a67970&gt;
         &lt;Sequence:0x4a67990&gt;
            &lt;Element:0x4a67a50 name="NotifyReportFileResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4a67a10 name="SetPrintMode"&gt;
      &lt;Complex:0x4a67a30&gt;
         &lt;Sequence:0x4a67ab0&gt;
            &lt;Element:0x4a67ad0 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67b50 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67b70 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67b90 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67bb0 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4a67a70 name="SetPrintModeResponse"&gt;
      &lt;Complex:0x4a67a90&gt;
         &lt;Sequence:0x4a67b30&gt;
            &lt;Element:0x4a67bd0 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4a67af0 name="NotifyFilmInfo"&gt;
      &lt;Complex:0x4a67bf0&gt;
         &lt;Sequence:0x4a67c50&gt;
            &lt;Element:0x4a67c70 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67cd0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4a67c10 name="NotifyFilmInfoResponse"&gt;
      &lt;Complex:0x4a67910&gt;
         &lt;Sequence:0x4a67c90&gt;
            &lt;Element:0x4a67cb0 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4a67c30 name="NotifyReportInfo"&gt;
      &lt;Complex:0x4a67cf0&gt;
         &lt;Sequence:0x4a67d50&gt;
            &lt;Element:0x4a67d70 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67df0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67e10 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67e30 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67e50 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a67e90 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
            &lt;Element:0x4a67eb0 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x4a67d10 name="ArrayOfString"&gt;
      &lt;Sequence:0x4a67d30&gt;
         &lt;Element:0x4a67dd0 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4a67d90 name="NotifyReportInfoResponse"&gt;
      &lt;Complex:0x4a67ed0&gt;
         &lt;Sequence:0x4a67e70&gt;
            &lt;Element:0x4a67f30 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4a67ef0 name="NotifyExamReservationInfo"&gt;
      &lt;Complex:0x4a67f10&gt;
         &lt;Sequence:0x4a67f90&gt;
            &lt;Element:0x4a67fb0 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4a67f50 name="NotifyExamReservationInfoResponse"&gt;
      &lt;Complex:0x4a67f70&gt;
         &lt;Sequence:0x4a64030&gt;
            &lt;Element:0x4a64050 name="NotifyExamReservationInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4a67fd0 name="NotifyPatientInfo"&gt;
      &lt;Complex:0x4a64070&gt;
         &lt;Sequence:0x4a640b0&gt;
            &lt;Element:0x4a640d0 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x4a67ff0 name="PatientInfoEx"&gt;
      &lt;Sequence:0x4a64090&gt;
         &lt;Element:0x4a64130 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a64170 name="PatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a64190 name="LocalName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a641b0 name="Age" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a641d0 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a64210 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a64230 name="Address" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a64250 name="IdentifyCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a64270 name="MedicalCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a641f0 name="PhoneNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a64290 name="SocialSecurityCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4a640f0 name="NotifyPatientInfoResponse"&gt;
      &lt;Complex:0x4a64110&gt;
         &lt;Sequence:0x4a64150&gt;
            &lt;Element:0x4a642f0 name="NotifyPatientInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4a642b0 name="QueryCloudFilmUrl"&gt;
      &lt;Complex:0x4a642d0&gt;
         &lt;Sequence:0x4a64350&gt;
            &lt;Element:0x4a64370 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a643d0 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4a64310 name="QueryCloudFilmUrlResponse"&gt;
      &lt;Complex:0x4a64330&gt;
         &lt;Sequence:0x4a643f0&gt;
            &lt;Element:0x4a64410 name="QueryCloudFilmUrlResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4a64390 name="QueryCloudFilmUrlForQrCode"&gt;
      &lt;Complex:0x4a643b0&gt;
         &lt;Sequence:0x4a64470&gt;
            &lt;Element:0x4a64490 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a644f0 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4a64430 name="QueryCloudFilmUrlForQrCodeResponse"&gt;
      &lt;Complex:0x4a64450&gt;
         &lt;Sequence:0x4a64510&gt;
            &lt;Element:0x4a64530 name="QueryCloudFilmUrlForQrCodeResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a67270 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('NotifyExamInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a67350 name="NotifyExamInfoResponse" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x4a67890 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('NotifyReportFileResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a678f0 name="NotifyReportFileResponse" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4a67a10 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a67a70 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a67af0 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('NotifyFilmInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a67c10 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a67c30 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('NotifyReportInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a67d90 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a67ef0 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('NotifyExamReservationInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a67f50 name="NotifyExamReservationInfoResponse" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a67fd0 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('NotifyPatientInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a640f0 name="NotifyPatientInfoResponse" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x4a642b0 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('QueryCloudFilmUrlResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a64310 name="QueryCloudFilmUrlResponse" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x4a64390 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a64430 name="QueryCloudFilmUrlForQrCodeResponse" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a67270 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('NotifyExamInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a67350 name="NotifyExamInfoResponse" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x4a67890 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('NotifyReportFileResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a678f0 name="NotifyReportFileResponse" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4a67a10 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a67a70 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a67af0 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('NotifyFilmInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a67c10 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a67c30 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('NotifyReportInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a67d90 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a67ef0 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('NotifyExamReservationInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a67f50 name="NotifyExamReservationInfoResponse" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a67fd0 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('NotifyPatientInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a640f0 name="NotifyPatientInfoResponse" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x4a642b0 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('QueryCloudFilmUrlResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a64310 name="QueryCloudFilmUrlResponse" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x4a64390 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191112 14:08:01.917" level="DEBUG">('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a64430 name="QueryCloudFilmUrlForQrCodeResponse" /&gt;</msg>
<msg timestamp="20191112 14:08:01.949" level="DEBUG">WSDL at 'http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl' loaded:
(Definitions){
   id = "Definitions:0x498e6b0"
   options = Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x03E62A10&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x03CD8890&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x0498E630&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x03CD8890&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x0498E450&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
Linked:
Definitions:
	proxy: classes=(&lt;class 'dict'&gt;,), default={}
	timeout: classes=(&lt;class 'int'&gt;, &lt;class 'float'&gt;), default=90
	headers: classes=(&lt;class 'dict'&gt;,), default={}
	username: classes=(&lt;class 'str'&gt;,), default=None
	password: classes=(&lt;class 'str'&gt;,), default=None
Content:
	('proxy', {})
	('timeout', 90)
	('headers', {})
	('username', None)
	('password', None)
Linked:
Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x03E62A10&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x03CD8890&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x0498E630&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x03CD8890&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x0498E450&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
   url = "http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl"
   tns[] = 
      "tns",
      "http://carestream.org/",
   types[] = 
      (Types){
         definitions = (Definitions)...
      },
   schema = "&lt;Schema:0x4a67250 tns="http://carestream.org/"/&gt;"
   imports[] = &lt;empty&gt;
   messages = 
      {
         (NotifyExamInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamInfoSoapIn"
               qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamInfoSoapOut"
               qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportFileSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportFileSoapIn"
               qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportFile', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportFileSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportFileSoapOut"
               qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "SetPrintModeSoapIn"
               qname = "(SetPrintModeSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('SetPrintMode', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "SetPrintModeSoapOut"
               qname = "(SetPrintModeSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('SetPrintModeResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapIn"
               qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyFilmInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapOut"
               qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapIn"
               qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapOut"
               qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamReservationInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamReservationInfoSoapIn"
               qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamReservationInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamReservationInfoSoapOut"
               qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyPatientInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyPatientInfoSoapIn"
               qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyPatientInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyPatientInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyPatientInfoSoapOut"
               qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlSoapIn"
               qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlSoapOut"
               qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlForQrCodeSoapIn"
               qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlForQrCodeSoapOut"
               qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
      }
   port_types = 
      {
         (NotifyServiceSoap, http://carestream.org/, ) = 
            (PortType){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyExamInfoSoapIn"
                                 qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyExamInfoSoapOut"
                                 qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportFileSoapIn"
                                 qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportFile', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportFileSoapOut"
                                 qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "SetPrintModeSoapIn"
                                 qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('SetPrintMode', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetPrintModeSoapOut"
                                 qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyFilmInfoSoapIn"
                                 qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyFilmInfoSoapOut"
                                 qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportInfoSoapIn"
                                 qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportInfoSoapOut"
                                 qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyExamReservationInfoSoapIn"
                                 qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyExamReservationInfoSoapOut"
                                 qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyPatientInfoSoapIn"
                                 qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyPatientInfoSoapOut"
                                 qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "QueryCloudFilmUrlSoapIn"
                                 qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryCloudFilmUrlSoapOut"
                                 qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                 qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                 qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                  }
            }
      }
   bindings = 
      {
         (NotifyServiceSoap, http://carestream.org/, ) = 
            (Binding){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamInfoSoapIn"
                                       qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamInfoSoapOut"
                                       qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportFileSoapIn"
                                       qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFile', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportFileSoapOut"
                                       qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintMode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapIn"
                                       qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapOut"
                                       qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapIn"
                                       qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapOut"
                                       qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapIn"
                                       qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapOut"
                                       qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
         (NotifyServiceSoap12, http://carestream.org/, ) = 
            (Binding){
               name = "NotifyServiceSoap12"
               qname = "(NotifyServiceSoap12, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamInfoSoapIn"
                                       qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamInfoSoapOut"
                                       qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportFileSoapIn"
                                       qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFile', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportFileSoapOut"
                                       qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintMode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapIn"
                                       qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapOut"
                                       qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapIn"
                                       qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapOut"
                                       qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapIn"
                                       qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapOut"
                                       qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
      }
   services[] = 
      (Service){
         name = "NotifyService"
         qname = "(NotifyService, http://carestream.org/)"
         ports[] = 
            (Port){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportFile""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFile', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintMode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamReservationInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyPatientInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrl""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "NotifyServiceSoap"
                           qname = "(NotifyServiceSoap, http://carestream.org/)"
                           operations = 
                              {
                                 NotifyExamInfo = 
                                    (Operation){
                                       name = "NotifyExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamInfoSoapIn"
                                             qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamInfoSoapOut"
                                             qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportFile = 
                                    (Operation){
                                       name = "NotifyReportFile"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportFileSoapIn"
                                             qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportFileSoapOut"
                                             qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyExamReservationInfo = 
                                    (Operation){
                                       name = "NotifyExamReservationInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapIn"
                                             qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapOut"
                                             qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyPatientInfo = 
                                    (Operation){
                                       name = "NotifyPatientInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapIn"
                                             qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapOut"
                                             qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrl = 
                                    (Operation){
                                       name = "QueryCloudFilmUrl"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapIn"
                                             qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapOut"
                                             qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrlForQrCode = 
                                    (Operation){
                                       name = "QueryCloudFilmUrlForQrCode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
               methods = 
                  {
                     NotifyExamInfo = 
                        (Method){
                           name = "NotifyExamInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Method){
                           name = "NotifyReportFile"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Method){
                           name = "NotifyExamReservationInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Method){
                           name = "NotifyPatientInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Method){
                           name = "QueryCloudFilmUrl"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Method){
                           name = "QueryCloudFilmUrlForQrCode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
            (Port){
               name = "NotifyServiceSoap12"
               qname = "(NotifyServiceSoap12, http://carestream.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "NotifyServiceSoap12"
                     qname = "(NotifyServiceSoap12, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportFile""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFile', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintMode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamReservationInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyPatientInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrl""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "NotifyServiceSoap"
                           qname = "(NotifyServiceSoap, http://carestream.org/)"
                           operations = 
                              {
                                 NotifyExamInfo = 
                                    (Operation){
                                       name = "NotifyExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamInfoSoapIn"
                                             qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamInfoSoapOut"
                                             qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportFile = 
                                    (Operation){
                                       name = "NotifyReportFile"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportFileSoapIn"
                                             qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportFileSoapOut"
                                             qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyExamReservationInfo = 
                                    (Operation){
                                       name = "NotifyExamReservationInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapIn"
                                             qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapOut"
                                             qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyPatientInfo = 
                                    (Operation){
                                       name = "NotifyPatientInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapIn"
                                             qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapOut"
                                             qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrl = 
                                    (Operation){
                                       name = "QueryCloudFilmUrl"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapIn"
                                             qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapOut"
                                             qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrlForQrCode = 
                                    (Operation){
                                       name = "QueryCloudFilmUrlForQrCode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
               methods = 
                  {
                     NotifyExamInfo = 
                        (Method){
                           name = "NotifyExamInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Method){
                           name = "NotifyReportFile"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Method){
                           name = "NotifyExamReservationInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Method){
                           name = "NotifyPatientInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Method){
                           name = "QueryCloudFilmUrl"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Method){
                           name = "QueryCloudFilmUrlForQrCode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A67290&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
      },
 }</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a67270 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">method 'NotifyExamInfo' created: started: 1573538881 (running)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x4a67890 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">method 'NotifyReportFile' created: started: 1573538881 (running)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4a67a10 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">method 'SetPrintMode' created: started: 1573538881 (running)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a67af0 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">method 'NotifyFilmInfo' created: started: 1573538881 (running)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a67c30 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">method 'NotifyReportInfo' created: started: 1573538881 (running)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a67ef0 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">method 'NotifyExamReservationInfo' created: started: 1573538881 (running)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a67fd0 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">method 'NotifyPatientInfo' created: started: 1573538881 (running)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x4a642b0 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">method 'QueryCloudFilmUrl' created: started: 1573538881 (running)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x4a64390 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">method 'QueryCloudFilmUrlForQrCode' created: started: 1573538881 (running)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a67270 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">method 'NotifyExamInfo' created: started: 1573538881 (running)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x4a67890 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">method 'NotifyReportFile' created: started: 1573538881 (running)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4a67a10 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">method 'SetPrintMode' created: started: 1573538881 (running)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a67af0 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">method 'NotifyFilmInfo' created: started: 1573538881 (running)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a67c30 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">method 'NotifyReportInfo' created: started: 1573538881 (running)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a67ef0 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">method 'NotifyExamReservationInfo' created: started: 1573538881 (running)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a67fd0 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">method 'NotifyPatientInfo' created: started: 1573538881 (running)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x4a642b0 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">method 'QueryCloudFilmUrl' created: started: 1573538881 (running)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x4a64390 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">method 'QueryCloudFilmUrlForQrCode' created: started: 1573538881 (running)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">Element:0x4a67330, resolving: ('ExamInfo', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x4a647d0"
   ref[] = 
      "ExamInfo",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x4a67330 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">('ExamInfo', 'http://carestream.org/'), found as: &lt;Complex:0x4a672d0 name="ExamInfo" /&gt;</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">Element:0x4a67fb0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a647d0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a67fb0 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">TypeQuery:0x4a647d0, found builtin (string)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">Element:0x4a67c70, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a647d0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a67c70 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">TypeQuery:0x4a647d0, found builtin (string)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">Element:0x4a67cd0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a647d0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a67cd0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">TypeQuery:0x4a647d0, found builtin (string)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">Element:0x4a640d0, resolving: ('PatientInfoEx', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x4a647d0"
   ref[] = 
      "PatientInfoEx",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x4a640d0 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">('PatientInfoEx', 'http://carestream.org/'), found as: &lt;Complex:0x4a67ff0 name="PatientInfoEx" /&gt;</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">Element:0x4a67950, resolving: ('ExamInfo', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x4a649d0"
   ref[] = 
      "ExamInfo",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x4a67950 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">('ExamInfo', 'http://carestream.org/'), found as: &lt;Complex:0x4a672d0 name="ExamInfo" /&gt;</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">Element:0x4a679b0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a649d0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a679b0 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">TypeQuery:0x4a649d0, found builtin (string)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">Element:0x4a679d0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a649d0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a679d0 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">TypeQuery:0x4a649d0, found builtin (int)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">Element:0x4a679f0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a649d0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a679f0 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">TypeQuery:0x4a649d0, found builtin (string)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">Element:0x4a67d70, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a647d0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a67d70 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">TypeQuery:0x4a647d0, found builtin (string)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">Element:0x4a67df0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a647d0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a67df0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">TypeQuery:0x4a647d0, found builtin (string)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">Element:0x4a67e10, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a647d0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a67e10 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">TypeQuery:0x4a647d0, found builtin (string)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">Element:0x4a67e30, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a647d0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a67e30 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">TypeQuery:0x4a647d0, found builtin (string)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">Element:0x4a67e50, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a647d0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a67e50 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">TypeQuery:0x4a647d0, found builtin (int)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">Element:0x4a67e90, resolving: ('ArrayOfString', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x4a647d0"
   ref[] = 
      "ArrayOfString",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x4a67e90 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">('ArrayOfString', 'http://carestream.org/'), found as: &lt;Complex:0x4a67d10 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">Element:0x4a67eb0, resolving: ('ArrayOfString', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x4a647d0"
   ref[] = 
      "ArrayOfString",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x4a67eb0 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">('ArrayOfString', 'http://carestream.org/'), found as: &lt;Complex:0x4a67d10 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">Element:0x4a64370, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a647d0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a64370 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">TypeQuery:0x4a647d0, found builtin (string)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">Element:0x4a643d0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a647d0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a643d0 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">TypeQuery:0x4a647d0, found builtin (string)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">Element:0x4a64490, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a647d0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a64490 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">TypeQuery:0x4a647d0, found builtin (string)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">Element:0x4a644f0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a63c10"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a644f0 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">TypeQuery:0x4a63c10, found builtin (string)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">Element:0x4a67ad0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a647d0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a67ad0 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">TypeQuery:0x4a647d0, found builtin (string)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">Element:0x4a67b50, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a63c10"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a67b50 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">TypeQuery:0x4a63c10, found builtin (string)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">Element:0x4a67b70, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a647d0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a67b70 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">TypeQuery:0x4a647d0, found builtin (int)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">Element:0x4a67b90, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a63c10"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a67b90 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">TypeQuery:0x4a63c10, found builtin (int)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">Element:0x4a67bb0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a647d0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a67bb0 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">TypeQuery:0x4a647d0, found builtin (int)</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4a67a10 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191112 14:08:01.964" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4a67a10 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">processing:
(Content){
   tag = "strAccessionNumber"
   value = "A20191112140710917430"
   type = &lt;Element:0x4a67ad0 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4a75110 /&gt;
 }</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x04A75630&gt;
content:
(Content){
   tag = "strAccessionNumber"
   value = "A20191112140710917430"
   type = &lt;Element:0x4a67ad0 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4a75110 /&gt;
 }</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">starting content:
(Content){
   tag = "strAccessionNumber"
   value = "A20191112140710917430"
   type = &lt;Element:0x4a67ad0 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4a75110 /&gt;
 }</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04A75670&gt;)
&lt;suds.resolver.Frame object at 0x04A75670&gt;</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">created - node:
&lt;tns:strAccessionNumber xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">ending content:
(Content){
   tag = "strAccessionNumber"
   value = "A20191112140710917430"
   type = &lt;Element:0x4a67ad0 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4a75110 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04A75670&gt;)
</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">processing:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x4a67b50 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4a75150 /&gt;
 }</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x04A753F0&gt;
content:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x4a67b50 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4a75150 /&gt;
 }</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">starting content:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x4a67b50 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4a75150 /&gt;
 }</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04A75430&gt;)
&lt;suds.resolver.Frame object at 0x04A75430&gt;</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">created - node:
&lt;tns:strStudyInstanceUID xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">ending content:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x4a67b50 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4a75150 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04A75430&gt;)
</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">processing:
(Content){
   tag = "nMode"
   value = "0"
   type = &lt;Element:0x4a67b70 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4a75190 /&gt;
 }</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x04A75910&gt;
content:
(Content){
   tag = "nMode"
   value = "0"
   type = &lt;Element:0x4a67b70 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4a75190 /&gt;
 }</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">starting content:
(Content){
   tag = "nMode"
   value = "0"
   type = &lt;Element:0x4a67b70 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4a75190 /&gt;
 }</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04A75950&gt;)
&lt;suds.resolver.Frame object at 0x04A75950&gt;</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">created - node:
&lt;tns:nMode xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">ending content:
(Content){
   tag = "nMode"
   value = "0"
   type = &lt;Element:0x4a67b70 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4a75190 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04A75950&gt;)
</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">processing:
(Content){
   tag = "printWaitTime"
   value = "60"
   type = &lt;Element:0x4a67b90 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4a751d0 /&gt;
 }</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x04A75BF0&gt;
content:
(Content){
   tag = "printWaitTime"
   value = "60"
   type = &lt;Element:0x4a67b90 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4a751d0 /&gt;
 }</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">starting content:
(Content){
   tag = "printWaitTime"
   value = "60"
   type = &lt;Element:0x4a67b90 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4a751d0 /&gt;
 }</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04A75C30&gt;)
&lt;suds.resolver.Frame object at 0x04A75C30&gt;</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">created - node:
&lt;tns:printWaitTime xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">ending content:
(Content){
   tag = "printWaitTime"
   value = "60"
   type = &lt;Element:0x4a67b90 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4a751d0 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04A75C30&gt;)
</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">processing:
(Content){
   tag = "reportWaitTime"
   value = "10"
   type = &lt;Element:0x4a67bb0 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4a75250 /&gt;
 }</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x04A75ED0&gt;
content:
(Content){
   tag = "reportWaitTime"
   value = "10"
   type = &lt;Element:0x4a67bb0 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4a75250 /&gt;
 }</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">starting content:
(Content){
   tag = "reportWaitTime"
   value = "10"
   type = &lt;Element:0x4a67bb0 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4a75250 /&gt;
 }</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04A75F10&gt;)
&lt;suds.resolver.Frame object at 0x04A75F10&gt;</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">created - node:
&lt;tns:reportWaitTime xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">ending content:
(Content){
   tag = "reportWaitTime"
   value = "10"
   type = &lt;Element:0x4a67bb0 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4a75250 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04A75F10&gt;)
</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">message for 'SetPrintMode' created: 15 (ms)</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">sending to (http://10.112.20.84/NotifyServer/NotifyService.asmx)
message:
&lt;suds.sax.document.Document object at 0x04A644D0&gt;</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">headers = {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://carestream.org/SetPrintMode"'}</msg>
<msg timestamp="20191112 14:08:01.980" level="DEBUG">sending:
URL: http://10.112.20.84/NotifyServer/NotifyService.asmx
HEADERS: {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://carestream.org/SetPrintMode"', 'Content-type': 'text/xml; charset=utf-8', 'Soapaction': b'"http://carestream.org/SetPrintMode"'}
MESSAGE:
b'&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://carestream.org/"&gt;&lt;SOAP-ENV:Header/&gt;&lt;ns0:Body&gt;&lt;ns1:SetPrintMode&gt;&lt;ns1:strAccessionNumber&gt;A20191112140710917430&lt;/ns1:strAccessionNumber&gt;&lt;ns1:strStudyInstanceUID&gt;&lt;/ns1:strStudyInstanceUID&gt;&lt;ns1:nMode&gt;0&lt;/ns1:nMode&gt;&lt;ns1:printWaitTime&gt;60&lt;/ns1:printWaitTime&gt;&lt;ns1:reportWaitTime&gt;10&lt;/ns1:reportWaitTime&gt;&lt;/ns1:SetPrintMode&gt;&lt;/ns0:Body&gt;&lt;/SOAP-ENV:Envelope&gt;'</msg>
<msg timestamp="20191112 14:08:02.042" level="DEBUG">received:
CODE: HTTPStatus.OK
HEADERS: Cache-Control: private, max-age=0
Content-Type: text/xml; charset=utf-8
Server: Microsoft-IIS/7.5
X-AspNet-Version: 4.0.30319
X-Powered-By: ASP.NET
Date: Tue, 12 Nov 2019 06:08:02 GMT
Connection: close
Content-Length: 364


MESSAGE:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;SetPrintModeResponse xmlns="http://carestream.org/"&gt;&lt;SetPrintModeResult&gt;0&lt;/SetPrintModeResult&gt;&lt;/SetPrintModeResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191112 14:08:02.042" level="DEBUG">waited 62 (ms) on server reply</msg>
<msg timestamp="20191112 14:08:02.042" level="DEBUG">HTTP succeeded:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;SetPrintModeResponse xmlns="http://carestream.org/"&gt;&lt;SetPrintModeResult&gt;0&lt;/SetPrintModeResult&gt;&lt;/SetPrintModeResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191112 14:08:02.042" level="DEBUG">b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;SetPrintModeResponse xmlns="http://carestream.org/"&gt;&lt;SetPrintModeResult&gt;0&lt;/SetPrintModeResult&gt;&lt;/SetPrintModeResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'
sax duration: 0 (ms)</msg>
<msg timestamp="20191112 14:08:02.042" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a67a70 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191112 14:08:02.042" level="DEBUG">Element:0x4a67bd0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a750b0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a67bd0 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:08:02.042" level="DEBUG">TypeQuery:0x4a750b0, found builtin (int)</msg>
<msg timestamp="20191112 14:08:02.042" level="DEBUG">reset</msg>
<msg timestamp="20191112 14:08:02.042" level="DEBUG">Element:0x4a67bd0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a584f0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a67bd0 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191112 14:08:02.042" level="DEBUG">TypeQuery:0x4a584f0, found builtin (int)</msg>
<msg timestamp="20191112 14:08:02.042" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04A58050&gt;)
&lt;suds.resolver.Frame object at 0x04A58050&gt;</msg>
<msg timestamp="20191112 14:08:02.042" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04A58050&gt;)
</msg>
<msg timestamp="20191112 14:08:02.042" level="DEBUG">method 'SetPrintMode' invoked: 62 (ms)</msg>
<msg timestamp="20191112 14:08:02.042" level="INFO">Printmode.printmode_set_by_accn: Find the records in print mode table of exam: A20191112140710917430.
Printmode.printmode_set_by_accn: Set exam print mode to [both] successfully.</msg>
<msg timestamp="20191112 14:08:02.042" level="INFO">${Set_Printmode} = True</msg>
<status status="PASS" starttime="20191112 14:08:01.871" endtime="20191112 14:08:02.042"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Set_Printmode}</arg>
</arguments>
<status status="PASS" starttime="20191112 14:08:02.042" endtime="20191112 14:08:02.042"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20191112 14:08:12.043" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20191112 14:08:02.042" endtime="20191112 14:08:12.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5 \n Description: \n 1. Wait for the holding time of film and report has passed. \n Expected:\n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191112 14:08:12.043" level="INFO">Step 5 
Description: 
1. Wait for the holding time of film and report has passed. 
Expected:
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191112 14:08:12.043" endtime="20191112 14:08:12.043"></status>
</kw>
<kw name="HoldTime Wait Time Arrive By Accn" library="PUMA_HoldTimeLibrary">
<doc>HoldTime_get_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Holdtime_result}</var>
</assign>
<msg timestamp="20191112 14:09:05.046" level="INFO">HoldTime.HoldTime_wait_time_arrive_by_accn: Sleep [53] seconds to make print ready arrived.</msg>
<msg timestamp="20191112 14:09:05.046" level="INFO">${Holdtime_result} = True</msg>
<status status="PASS" starttime="20191112 14:08:12.043" endtime="20191112 14:09:05.046"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Holdtime_result}</arg>
</arguments>
<status status="PASS" starttime="20191112 14:09:05.046" endtime="20191112 14:09:05.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6 \n Description: \n 1.Print the prepared films and reports with accession number on K3 terminal prepared in step1. \n Expected: \n 1. The print task should finish successfully. The status in wggc.dbo.afp_printtask should be 4. \n</arg>
</arguments>
<msg timestamp="20191112 14:09:05.046" level="INFO">Step 6 
Description: 
1.Print the prepared films and reports with accession number on K3 terminal prepared in step1. 
Expected: 
1. The print task should finish successfully. The status in wggc.dbo.afp_printtask should be 4. 
</msg>
<status status="PASS" starttime="20191112 14:09:05.046" endtime="20191112 14:09:05.046"></status>
</kw>
<kw name="Terminal Print With Cardinfo" library="PUMA_TerminalLibrary">
<doc>This function is simulate the terminal print opertaions with API.
You can select the exist termina name and input the cardinfo to print the report, films.
The function will verify the print mode and exam info to print.
It will return bool value.</doc>
<arguments>
<arg>K3_Terminal01</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Termina_Print_Result}</var>
</assign>
<msg timestamp="20191112 14:09:05.046" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:09:05.265" level="DEBUG">http://10.112.20.84:80 "GET /EHDPS/status?tid=K3_Terminal01 HTTP/1.1" 200 609</msg>
<msg timestamp="20191112 14:09:05.265" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:09:05.327" level="DEBUG">http://10.112.20.84:80 "GET /EHDPS/printtask/items?Value=A20191112140710917430&amp;Type=0&amp;tid=K3_Terminal01 HTTP/1.1" 200 1153</msg>
<msg timestamp="20191112 14:09:05.343" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:09:05.374" level="DEBUG">http://10.112.20.84:80 "POST /EHDPS/printtask/create?tid=K3_Terminal01 HTTP/1.1" 200 732</msg>
<msg timestamp="20191112 14:09:05.390" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:09:05.405" level="DEBUG">http://10.112.20.84:80 "POST /EHDPS/printtask/print/2129?tid=K3_Terminal01 HTTP/1.1" 200 729</msg>
<msg timestamp="20191112 14:10:38.421" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:10:38.452" level="DEBUG">http://10.112.20.84:80 "GET /ImageSuite/Web/report/pdfviewer.aspx?id=3ae80811d52a4832b2c50d19465d45d4 HTTP/1.1" 200 284504</msg>
<msg timestamp="20191112 14:10:38.452" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:10:38.468" level="DEBUG">http://10.112.20.84:80 "POST /EHDPS/printtask/report/2129/3ae80811d52a4832b2c50d19465d45d4/1?tid=K3_Terminal01 HTTP/1.1" 200 221</msg>
<msg timestamp="20191112 14:10:48.468" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:10:48.499" level="DEBUG">http://10.112.20.84:80 "GET /ImageSuite/Web/report/pdfviewer.aspx?id=c3b84ddd95964369ae2959782ae2a23a HTTP/1.1" 200 284504</msg>
<msg timestamp="20191112 14:10:48.499" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:10:48.530" level="DEBUG">http://10.112.20.84:80 "POST /EHDPS/printtask/report/2129/c3b84ddd95964369ae2959782ae2a23a/1?tid=K3_Terminal01 HTTP/1.1" 200 221</msg>
<msg timestamp="20191112 14:10:58.530" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:10:58.562" level="DEBUG">http://10.112.20.84:80 "GET /ImageSuite/Web/report/pdfviewer.aspx?id=f6df9c37456d4eda97c64c1d17edb8b0 HTTP/1.1" 200 284720</msg>
<msg timestamp="20191112 14:10:58.562" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:10:58.593" level="DEBUG">http://10.112.20.84:80 "POST /EHDPS/printtask/report/2129/f6df9c37456d4eda97c64c1d17edb8b0/1?tid=K3_Terminal01 HTTP/1.1" 200 221</msg>
<msg timestamp="20191112 14:12:11.593" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:12:11.609" level="DEBUG">http://10.112.20.84:80 "GET /EHDPS/printtask/status/2129?tid=K3_Terminal01 HTTP/1.1" 200 734</msg>
<msg timestamp="20191112 14:12:11.609" level="INFO">Terminal._check_terminal_status: The terminal status check and result is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"Status":0,"Terminal":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9874,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20229,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}
Terminal.printtask_report_getinfo: get the report information by cardiinfo: 
{"Status":0,"Code":"","Message":"您有胶片和报告可打印，请稍等！","OriginalException":null,"Entity":{"PrintState":0,"Message":"","FilmCount":1,"ReportCount":1,"PatientInfo":{"PatientId":"P20191112140710917430","PatientName":"CN20191112140710917430","PatientGender":"M","PatientBirthday":null,"PatientType":"2","PatientAge":null},"FilmStatistics":[{"FilmSize":"14INX17IN","FilmType":"BLUE FILM","FilmCount":1}],"ReportStatistics":[{"ReportID":null,"ReportPath":null,"ReportCount":1,"PageCount":0,"PaperSize":0,"PaperType":0,"ColorType":0}],"ExamItems":[{"AccessionNumber":"A20191112140710917430","ModalityType":"CR","ModalityName":"DR","ExamName":"Exam20191112140710917430","ReferringDepartment":null,"ExamDate":null,"ExamBodyPart":"","Status":"Unprinted","StatusComments":null,"PatientType":null,"FilmInfos":[{"FilmSize":"14INX17IN","FilmType":"BLUE FILM","FilmCount":1}],"ReportInfos":[{"ReportID":"f6df9c37456d4eda97c64c1d17edb8b0","ReportPath":"http://10.112.20.84/ImageSuite/Web/report/pdfviewer.aspx?id=f6df9c37456d4eda97c64c1d17edb8b0","ReportCount":0,"PageCount":1,"PaperSize":0,"PaperType":0,"ColorType":0}]}],"ExamItemsOfReg":[]}}
Terminal.create_film_printtask: The terminal film print create and response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"2129","Status":-1,"TotalFilmCount":1,"TotalReportCount":1,"PrintedFilmCount":0,"PrintedReportCount":0,"EstimatedTime":0,"TerminalInfo":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9874,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20229,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}
Terminal.create_film_printtask: The taskID is 2129
Terminal.printtask_print: The terminal print task print response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"","Status":0,"TotalFilmCount":0,"TotalReportCount":0,"PrintedFilmCount":0,"PrintedReportCount":0,"EstimatedTime":0,"TerminalInfo":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9874,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20229,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":"2129"}}}
Terminal.printtask_get_estimatetime: The estimate time is 63 of task 2129 

Terminal.printtask_report_download: download the file successfully from: 
http://10.112.20.84/ImageSuite/Web/report/pdfviewer.aspx?id=3ae80811d52a4832b2c50d19465d45d4
Terminal.printtask_report_print: The report 3ae80811d52a4832b2c50d19465d45d4 print response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"2129","Status":1,"TotalFilmCount":1,"TotalReportCount":1,"PrintedFilmCount":1,"PrintedReportCount":0,"EstimatedTime":63,"TerminalInfo":null}}
Terminal.printtask_report_download: download the file successfully from: 
http://10.112.20.84/ImageSuite/Web/report/pdfviewer.aspx?id=c3b84ddd95964369ae2959782ae2a23a
Terminal.printtask_report_print: The report c3b84ddd95964369ae2959782ae2a23a print response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"2129","Status":1,"TotalFilmCount":1,"TotalReportCount":1,"PrintedFilmCount":1,"PrintedReportCount":0,"EstimatedTime":63,"TerminalInfo":null}}
Terminal.printtask_report_download: download the file successfully from: 
http://10.112.20.84/ImageSuite/Web/report/pdfviewer.aspx?id=f6df9c37456d4eda97c64c1d17edb8b0
Terminal.printtask_report_print: The report f6df9c37456d4eda97c64c1d17edb8b0 print response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"2129","Status":1,"TotalFilmCount":1,"TotalReportCount":1,"PrintedFilmCount":1,"PrintedReportCount":0,"EstimatedTime":63,"TerminalInfo":null}}
Terminal.printtask_status_check: The terminal print task status check response is:
 {"Status":0,"Code":"","Message":null,"OriginalException":null,"Entity":{"TaskId":"2129","Status":4,"TotalFilmCount":1,"TotalReportCount":1,"PrintedFilmCount":1,"PrintedReportCount":1,"EstimatedTime":63,"TerminalInfo":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9873,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20228,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}
Terminal.terminal_print_with_cardinfo: The task 2129 print successfully, the task status is Printed</msg>
<msg timestamp="20191112 14:12:11.609" level="INFO">${Termina_Print_Result} = True</msg>
<status status="PASS" starttime="20191112 14:09:05.046" endtime="20191112 14:12:11.609"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Termina_Print_Result}</arg>
</arguments>
<status status="PASS" starttime="20191112 14:12:11.609" endtime="20191112 14:12:11.609"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191112 14:07:10.902" endtime="20191112 14:12:11.609" critical="yes"></status>
</test>
<test id="s1-t9" name="SmokeTest_009_Core_4187_04.01.03 Terminal K3 Print Workflow with one film.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description:\n 1. Configure a K3 terminal on PS. \n 2. Make sure the terminal status is ready to work. \n Expected: \n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191112 14:12:11.609" level="INFO">Step 1 
Description:
1. Configure a K3 terminal on PS. 
2. Make sure the terminal status is ready to work. 
Expected: 
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191112 14:12:11.609" endtime="20191112 14:12:11.609"></status>
</kw>
<kw name="Check Terminal Status" library="PUMA_TerminalLibrary">
<doc>This function is use the API interface to check the terminal status.
The function will enable the terminal status to 'on work' status.</doc>
<arguments>
<arg>K3_Terminal01</arg>
</arguments>
<assign>
<var>${Terminal_status}</var>
</assign>
<msg timestamp="20191112 14:12:11.609" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:12:11.671" level="DEBUG">http://10.112.20.84:80 "GET /EHDPS/status?tid=K3_Terminal01 HTTP/1.1" 200 609</msg>
<msg timestamp="20191112 14:12:11.671" level="INFO">Terminal._check_terminal_status: The terminal status check and result is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"Status":0,"Terminal":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9873,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20228,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}</msg>
<msg timestamp="20191112 14:12:11.671" level="INFO">${Terminal_status} = True</msg>
<status status="PASS" starttime="20191112 14:12:11.609" endtime="20191112 14:12:11.671"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Terminal_status}</arg>
<arg>The termianl status is ready to print</arg>
</arguments>
<status status="PASS" starttime="20191112 14:12:11.671" endtime="20191112 14:12:11.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Create one film for patientB/ExamB. \n Expected \n 1. The film can archived successfully. \n</arg>
</arguments>
<msg timestamp="20191112 14:12:11.671" level="INFO">Step 2 
Description: 
1. Create one film for patientB/ExamB. 
Expected 
1. The film can archived successfully. 
</msg>
<status status="PASS" starttime="20191112 14:12:11.671" endtime="20191112 14:12:11.671"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191112 14:12:11.671" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:12:11.687" level="DEBUG">http://10.112.20.84:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191112 14:12:11.702" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-12 14:12:11.671201", "UpdateDT": "2019-11-12 14:12:11.671201", "PatientID": "P20191112141211671201", "AccessionNumber": "A20191112141211671201", "StudyInstanceUID": "UID20191112141211671201", "NameCN": "CN20191112141211671201", "NameEN": "EN20191112141211671201", "Gender": "F", "Birthday": "2018-11-12", "Modality": "NM", "ModalityName": "IO", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-12 14:12:11.671201", "RegisterDT": "2019-11-12 14:12:11.671201", "ExamDT": "2019-11-12 14:12:11.671201", "ReportDT": "2019-11-12 14:12:11.671201", "SubmitDT": "2019-11-12 14:12:11.671201", "ApproveDT": "2019-11-12 14:12:11.671201", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191112141211671201", "ExamBodyPart": "Neck", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191112 14:12:11.702" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-12 14:12:11.671201", "UpdateDT": "2019-11-12 14:12:11.671201", "PatientID": "P20191112141211671201", "AccessionNumber": "A20191112141211671201", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191112 14:12:11.671" endtime="20191112 14:12:11.702"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191112 14:12:11.702" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-12 14:12:11.671201', 'UpdateDT': '2019-11-12 14:12:11.671201', 'PatientID': 'P20191112141211671201', 'AccessionNumber': 'A20191112141211671201', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191112 14:12:11.702" endtime="20191112 14:12:11.702"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191112 14:12:11.749" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191112 14:12:11.702" endtime="20191112 14:12:11.749"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191112 14:12:11.796" level="INFO">${patientID} = ['P20191112141211671201']</msg>
<status status="PASS" starttime="20191112 14:12:11.749" endtime="20191112 14:12:11.796"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191112 14:12:11.827" level="INFO">${Accessionnumber} = ['A20191112141211671201']</msg>
<status status="PASS" starttime="20191112 14:12:11.796" endtime="20191112 14:12:11.827"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:12:11.827" endtime="20191112 14:12:11.827"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191112 14:12:42.546" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191112141211671201", "AccessionNumber": "A20191112141211671201", "FilmSessionLable": "20191112141211827451", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191112 14:12:42.546" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191112141211671201", "AccessionNumber": "A20191112141211671201", "FilmSessionLable": "20191112141211827451", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191112 14:12:11.827" endtime="20191112 14:12:42.546"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191112 14:12:42.546" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191112141211671201', 'AccessionNumber': 'A20191112141211671201', 'FilmSessionLable': '20191112141211827451', 'DeliveryJob_status': 2, 'WaterMark_Path': 'D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191112 14:12:42.546" endtime="20191112 14:12:42.546"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191112 14:12:42.593" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191112 14:12:42.546" endtime="20191112 14:12:42.593"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:12:42.593" endtime="20191112 14:12:42.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3 \n Description:\n 1. Set the print mode to Film only for ExamB \n Expected:\n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191112 14:12:42.593" level="INFO">Step 3 
Description:
1. Set the print mode to Film only for ExamB 
Expected:
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191112 14:12:42.593" endtime="20191112 14:12:42.593"></status>
</kw>
<kw name="Printmode Set By Accn" library="PUMA_PrintModeLibrary">
<doc>printmode_set_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
<arg>film</arg>
</arguments>
<assign>
<var>${Set_Printmode}</var>
</assign>
<msg timestamp="20191112 14:12:42.593" level="INFO">Printmode.printmode_set_by_accn: Function execute failed. 
&lt;class 'Exception'&gt;</msg>
<msg timestamp="20191112 14:12:42.593" level="FAIL">Printmode.printmode_set_by_accn: There is 0 record in print mode tableof A20191112141211671201 exam </msg>
<msg timestamp="20191112 14:12:42.593" level="DEBUG">Traceback (most recent call last):
  File "D:\PUMA_AUTO\RF_PUMA\PUMA\Libs\PUMA_PrintModeLibrary\Printmode.py", line 153, in printmode_set_by_accn
    raise Exception(e)</msg>
<status status="FAIL" starttime="20191112 14:12:42.593" endtime="20191112 14:12:42.593"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="FAIL" starttime="20191112 14:12:11.609" endtime="20191112 14:12:42.593" critical="yes">Printmode.printmode_set_by_accn: There is 0 record in print mode tableof A20191112141211671201 exam </status>
</test>
<test id="s1-t10" name="SmokeTest_010_Core_4179_05.01.01 Central Print multi patients with custom terminal">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description:\n 1. Configure a custom terminal on PS. \n 2. Make sure the terminal status is ready to work. \n Expected: \n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191112 14:12:42.593" level="INFO">Step 1 
Description:
1. Configure a custom terminal on PS. 
2. Make sure the terminal status is ready to work. 
Expected: 
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191112 14:12:42.593" endtime="20191112 14:12:42.593"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>5</arg>
</arguments>
<assign>
<var>${exam_count}</var>
</assign>
<msg timestamp="20191112 14:12:42.593" level="INFO">${exam_count} = 5</msg>
<status status="PASS" starttime="20191112 14:12:42.593" endtime="20191112 14:12:42.593"></status>
</kw>
<kw name="Check Terminal Status" library="PUMA_TerminalLibrary">
<doc>This function is use the API interface to check the terminal status.
The function will enable the terminal status to 'on work' status.</doc>
<arguments>
<arg>Customer_Terminal01</arg>
</arguments>
<assign>
<var>${Terminal_status}</var>
</assign>
<msg timestamp="20191112 14:12:42.609" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:12:42.624" level="DEBUG">http://10.112.20.84:80 "GET /EHDPS/status?tid=Customer_Terminal01 HTTP/1.1" 200 621</msg>
<msg timestamp="20191112 14:12:42.624" level="INFO">Terminal._check_terminal_status: The terminal status check and result is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"Status":0,"Terminal":{"TerminalId":"Customer_Terminal01","Status":0,"Type":1,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9873,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20228,"IsPrinting":false,"TerminalId":"Customer_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}</msg>
<msg timestamp="20191112 14:12:42.624" level="INFO">${Terminal_status} = True</msg>
<status status="PASS" starttime="20191112 14:12:42.593" endtime="20191112 14:12:42.624"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Terminal_status}</arg>
<arg>The termianl status is ready to print</arg>
</arguments>
<status status="PASS" starttime="20191112 14:12:42.624" endtime="20191112 14:12:42.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Prepare 5 patients` exam, each has one film and one report. \n Expected: \n 1. The preparation can finish successfully. \n</arg>
</arguments>
<msg timestamp="20191112 14:12:42.624" level="INFO">Step 2 
Description: 
1. Prepare 5 patients` exam, each has one film and one report. 
Expected: 
1. The preparation can finish successfully. 
</msg>
<status status="PASS" starttime="20191112 14:12:42.624" endtime="20191112 14:12:42.624"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${list_Accn}</var>
</assign>
<msg timestamp="20191112 14:12:42.624" level="INFO">${list_Accn} = []</msg>
<status status="PASS" starttime="20191112 14:12:42.624" endtime="20191112 14:12:42.624"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${restinstanceids}</var>
</assign>
<msg timestamp="20191112 14:12:42.624" level="INFO">${restinstanceids} = []</msg>
<status status="PASS" starttime="20191112 14:12:42.624" endtime="20191112 14:12:42.624"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191112 14:12:42.624" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:12:42.640" level="DEBUG">http://10.112.20.84:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191112 14:12:42.640" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-12 14:12:42.624366", "UpdateDT": "2019-11-12 14:12:42.624366", "PatientID": "P20191112141242624366", "AccessionNumber": "A20191112141242624366", "StudyInstanceUID": "UID20191112141242624366", "NameCN": "CN20191112141242624366", "NameEN": "EN20191112141242624366", "Gender": "F", "Birthday": "1955-11-28", "Modality": "DR", "ModalityName": "RF", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-12 14:12:42.624366", "RegisterDT": "2019-11-12 14:12:42.624366", "ExamDT": "2019-11-12 14:12:42.624366", "ReportDT": "2019-11-12 14:12:42.624366", "SubmitDT": "2019-11-12 14:12:42.624366", "ApproveDT": "2019-11-12 14:12:42.624366", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191112141242624366", "ExamBodyPart": "Chest", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191112 14:12:42.640" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-12 14:12:42.624366", "UpdateDT": "2019-11-12 14:12:42.624366", "PatientID": "P20191112141242624366", "AccessionNumber": "A20191112141242624366", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191112 14:12:42.624" endtime="20191112 14:12:42.640"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191112 14:12:42.640" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-12 14:12:42.624366', 'UpdateDT': '2019-11-12 14:12:42.624366', 'PatientID': 'P20191112141242624366', 'AccessionNumber': 'A20191112141242624366', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191112 14:12:42.640" endtime="20191112 14:12:42.640"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191112 14:12:42.671" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191112 14:12:42.640" endtime="20191112 14:12:42.671"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191112 14:12:42.718" level="INFO">${patientID} = ['P20191112141242624366']</msg>
<status status="PASS" starttime="20191112 14:12:42.671" endtime="20191112 14:12:42.718"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191112 14:12:42.749" level="INFO">${Accessionnumber} = ['A20191112141242624366']</msg>
<status status="PASS" starttime="20191112 14:12:42.718" endtime="20191112 14:12:42.749"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:12:42.749" endtime="20191112 14:12:42.749"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191112 14:13:13.640" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191112141242624366", "AccessionNumber": "A20191112141242624366", "FilmSessionLable": "20191112141242749365", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191112 14:13:13.640" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191112141242624366", "AccessionNumber": "A20191112141242624366", "FilmSessionLable": "20191112141242749365", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191112 14:12:42.749" endtime="20191112 14:13:13.640"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191112 14:13:13.640" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191112141242624366', 'AccessionNumber': 'A20191112141242624366', 'FilmSessionLable': '20191112141242749365', 'DeliveryJob_status': 2, 'WaterMark_Path': 'D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191112 14:13:13.640" endtime="20191112 14:13:13.640"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191112 14:13:13.671" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191112 14:13:13.640" endtime="20191112 14:13:13.671"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:13:13.671" endtime="20191112 14:13:13.671"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191112 14:13:23.687" level="INFO">PUMA_ReportLibrary._archive_check: Report achived successfully.
Report achived successfully. {"Status": true, "server": "10.112.20.84", "patient_id": "P20191112141242624366", "accession_number": "A20191112141242624366", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "powershell_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.84/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191112 14:13:23.687" level="INFO">${Report_archived_Info} = {"Status": true, "server": "10.112.20.84", "patient_id": "P20191112141242624366", "accession_number": "A20191112141242624366", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191112 14:13:13.671" endtime="20191112 14:13:23.687"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191112 14:13:23.687" level="INFO">${Report_archived_Info_Json} = {'Status': True, 'server': '10.112.20.84', 'patient_id': 'P20191112141242624366', 'accession_number': 'A20191112141242624366', 'report_file': 'D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191112 14:13:23.687" endtime="20191112 14:13:23.687"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191112 14:13:23.718" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191112 14:13:23.687" endtime="20191112 14:13:23.718"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:13:23.718" endtime="20191112 14:13:23.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<msg timestamp="20191112 14:13:23.718" level="INFO">A20191112141242624366</msg>
<status status="PASS" starttime="20191112 14:13:23.718" endtime="20191112 14:13:23.718"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<status status="PASS" starttime="20191112 14:13:23.718" endtime="20191112 14:13:23.718"></status>
</kw>
<status status="PASS" starttime="20191112 14:12:42.624" endtime="20191112 14:13:23.718"></status>
</kw>
<kw name="${count} = 1" type="foritem">
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191112 14:13:23.734" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:13:23.765" level="DEBUG">http://10.112.20.84:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191112 14:13:23.765" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-12 14:13:23.718168", "UpdateDT": "2019-11-12 14:13:23.718168", "PatientID": "P20191112141323718168", "AccessionNumber": "A20191112141323718168", "StudyInstanceUID": "UID20191112141323718168", "NameCN": "CN20191112141323718168", "NameEN": "EN20191112141323718168", "Gender": "F", "Birthday": "1962-11-26", "Modality": "MG", "ModalityName": "DX", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-12 14:13:23.718168", "RegisterDT": "2019-11-12 14:13:23.718168", "ExamDT": "2019-11-12 14:13:23.718168", "ReportDT": "2019-11-12 14:13:23.718168", "SubmitDT": "2019-11-12 14:13:23.718168", "ApproveDT": "2019-11-12 14:13:23.718168", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191112141323718168", "ExamBodyPart": "Head", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191112 14:13:23.765" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-12 14:13:23.718168", "UpdateDT": "2019-11-12 14:13:23.718168", "PatientID": "P20191112141323718168", "AccessionNumber": "A20191112141323718168", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191112 14:13:23.718" endtime="20191112 14:13:23.765"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191112 14:13:23.765" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-12 14:13:23.718168', 'UpdateDT': '2019-11-12 14:13:23.718168', 'PatientID': 'P20191112141323718168', 'AccessionNumber': 'A20191112141323718168', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191112 14:13:23.765" endtime="20191112 14:13:23.765"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191112 14:13:23.812" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191112 14:13:23.765" endtime="20191112 14:13:23.812"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191112 14:13:23.843" level="INFO">${patientID} = ['P20191112141323718168']</msg>
<status status="PASS" starttime="20191112 14:13:23.812" endtime="20191112 14:13:23.843"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191112 14:13:23.921" level="INFO">${Accessionnumber} = ['A20191112141323718168']</msg>
<status status="PASS" starttime="20191112 14:13:23.843" endtime="20191112 14:13:23.921"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:13:23.921" endtime="20191112 14:13:23.921"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191112 14:13:54.749" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191112141323718168", "AccessionNumber": "A20191112141323718168", "FilmSessionLable": "20191112141323921293", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191112 14:13:54.749" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191112141323718168", "AccessionNumber": "A20191112141323718168", "FilmSessionLable": "20191112141323921293", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191112 14:13:23.921" endtime="20191112 14:13:54.749"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191112 14:13:54.749" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191112141323718168', 'AccessionNumber': 'A20191112141323718168', 'FilmSessionLable': '20191112141323921293', 'DeliveryJob_status': 2, 'WaterMark_Path': 'D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191112 14:13:54.749" endtime="20191112 14:13:54.749"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191112 14:13:54.781" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191112 14:13:54.749" endtime="20191112 14:13:54.781"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:13:54.781" endtime="20191112 14:13:54.781"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191112 14:14:04.796" level="INFO">PUMA_ReportLibrary._archive_check: Report achived successfully.
Report achived successfully. {"Status": true, "server": "10.112.20.84", "patient_id": "P20191112141323718168", "accession_number": "A20191112141323718168", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "powershell_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.84/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191112 14:14:04.796" level="INFO">${Report_archived_Info} = {"Status": true, "server": "10.112.20.84", "patient_id": "P20191112141323718168", "accession_number": "A20191112141323718168", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191112 14:13:54.781" endtime="20191112 14:14:04.796"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191112 14:14:04.796" level="INFO">${Report_archived_Info_Json} = {'Status': True, 'server': '10.112.20.84', 'patient_id': 'P20191112141323718168', 'accession_number': 'A20191112141323718168', 'report_file': 'D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191112 14:14:04.796" endtime="20191112 14:14:04.796"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191112 14:14:04.831" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191112 14:14:04.796" endtime="20191112 14:14:04.831"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:14:04.831" endtime="20191112 14:14:04.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<msg timestamp="20191112 14:14:04.831" level="INFO">A20191112141323718168</msg>
<status status="PASS" starttime="20191112 14:14:04.831" endtime="20191112 14:14:04.831"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<status status="PASS" starttime="20191112 14:14:04.831" endtime="20191112 14:14:04.831"></status>
</kw>
<status status="PASS" starttime="20191112 14:13:23.718" endtime="20191112 14:14:04.831"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191112 14:14:04.831" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:14:04.843" level="DEBUG">http://10.112.20.84:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191112 14:14:04.843" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-12 14:14:04.831347", "UpdateDT": "2019-11-12 14:14:04.831347", "PatientID": "P20191112141404831347", "AccessionNumber": "A20191112141404831347", "StudyInstanceUID": "UID20191112141404831347", "NameCN": "CN20191112141404831347", "NameEN": "EN20191112141404831347", "Gender": "M", "Birthday": "1979-11-22", "Modality": "MG", "ModalityName": "US", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-12 14:14:04.831347", "RegisterDT": "2019-11-12 14:14:04.831347", "ExamDT": "2019-11-12 14:14:04.831347", "ReportDT": "2019-11-12 14:14:04.831347", "SubmitDT": "2019-11-12 14:14:04.831347", "ApproveDT": "2019-11-12 14:14:04.831347", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191112141404831347", "ExamBodyPart": "Neck", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191112 14:14:04.843" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-12 14:14:04.831347", "UpdateDT": "2019-11-12 14:14:04.831347", "PatientID": "P20191112141404831347", "AccessionNumber": "A20191112141404831347", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191112 14:14:04.831" endtime="20191112 14:14:04.843"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191112 14:14:04.843" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-12 14:14:04.831347', 'UpdateDT': '2019-11-12 14:14:04.831347', 'PatientID': 'P20191112141404831347', 'AccessionNumber': 'A20191112141404831347', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191112 14:14:04.843" endtime="20191112 14:14:04.843"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191112 14:14:04.890" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191112 14:14:04.843" endtime="20191112 14:14:04.890"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191112 14:14:04.921" level="INFO">${patientID} = ['P20191112141404831347']</msg>
<status status="PASS" starttime="20191112 14:14:04.890" endtime="20191112 14:14:04.921"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191112 14:14:04.968" level="INFO">${Accessionnumber} = ['A20191112141404831347']</msg>
<status status="PASS" starttime="20191112 14:14:04.921" endtime="20191112 14:14:04.968"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:14:04.968" endtime="20191112 14:14:04.968"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191112 14:14:35.609" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191112141404831347", "AccessionNumber": "A20191112141404831347", "FilmSessionLable": "20191112141404968222", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191112 14:14:35.609" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191112141404831347", "AccessionNumber": "A20191112141404831347", "FilmSessionLable": "20191112141404968222", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191112 14:14:04.968" endtime="20191112 14:14:35.609"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191112 14:14:35.609" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191112141404831347', 'AccessionNumber': 'A20191112141404831347', 'FilmSessionLable': '20191112141404968222', 'DeliveryJob_status': 2, 'WaterMark_Path': 'D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191112 14:14:35.609" endtime="20191112 14:14:35.609"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191112 14:14:35.640" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191112 14:14:35.609" endtime="20191112 14:14:35.640"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:14:35.640" endtime="20191112 14:14:35.640"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191112 14:14:45.656" level="INFO">PUMA_ReportLibrary._archive_check: Report achived successfully.
Report achived successfully. {"Status": true, "server": "10.112.20.84", "patient_id": "P20191112141404831347", "accession_number": "A20191112141404831347", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "powershell_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.84/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191112 14:14:45.656" level="INFO">${Report_archived_Info} = {"Status": true, "server": "10.112.20.84", "patient_id": "P20191112141404831347", "accession_number": "A20191112141404831347", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191112 14:14:35.640" endtime="20191112 14:14:45.656"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191112 14:14:45.656" level="INFO">${Report_archived_Info_Json} = {'Status': True, 'server': '10.112.20.84', 'patient_id': 'P20191112141404831347', 'accession_number': 'A20191112141404831347', 'report_file': 'D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191112 14:14:45.656" endtime="20191112 14:14:45.656"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191112 14:14:45.687" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191112 14:14:45.656" endtime="20191112 14:14:45.687"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:14:45.687" endtime="20191112 14:14:45.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<msg timestamp="20191112 14:14:45.687" level="INFO">A20191112141404831347</msg>
<status status="PASS" starttime="20191112 14:14:45.687" endtime="20191112 14:14:45.687"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<status status="PASS" starttime="20191112 14:14:45.687" endtime="20191112 14:14:45.687"></status>
</kw>
<status status="PASS" starttime="20191112 14:14:04.831" endtime="20191112 14:14:45.687"></status>
</kw>
<kw name="${count} = 3" type="foritem">
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191112 14:14:45.687" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:14:45.703" level="DEBUG">http://10.112.20.84:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191112 14:14:45.703" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-12 14:14:45.687024", "UpdateDT": "2019-11-12 14:14:45.687024", "PatientID": "P20191112141445687024", "AccessionNumber": "A20191112141445687024", "StudyInstanceUID": "UID20191112141445687024", "NameCN": "CN20191112141445687024", "NameEN": "EN20191112141445687024", "Gender": "F", "Birthday": "1990-11-19", "Modality": "IO", "ModalityName": "OT", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-12 14:14:45.687024", "RegisterDT": "2019-11-12 14:14:45.687024", "ExamDT": "2019-11-12 14:14:45.687024", "ReportDT": "2019-11-12 14:14:45.687024", "SubmitDT": "2019-11-12 14:14:45.687024", "ApproveDT": "2019-11-12 14:14:45.687024", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191112141445687024", "ExamBodyPart": "Head", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191112 14:14:45.703" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-12 14:14:45.687024", "UpdateDT": "2019-11-12 14:14:45.687024", "PatientID": "P20191112141445687024", "AccessionNumber": "A20191112141445687024", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191112 14:14:45.687" endtime="20191112 14:14:45.703"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191112 14:14:45.703" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-12 14:14:45.687024', 'UpdateDT': '2019-11-12 14:14:45.687024', 'PatientID': 'P20191112141445687024', 'AccessionNumber': 'A20191112141445687024', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191112 14:14:45.703" endtime="20191112 14:14:45.703"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191112 14:14:45.750" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191112 14:14:45.703" endtime="20191112 14:14:45.750"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191112 14:14:45.781" level="INFO">${patientID} = ['P20191112141445687024']</msg>
<status status="PASS" starttime="20191112 14:14:45.750" endtime="20191112 14:14:45.781"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191112 14:14:45.859" level="INFO">${Accessionnumber} = ['A20191112141445687024']</msg>
<status status="PASS" starttime="20191112 14:14:45.781" endtime="20191112 14:14:45.859"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:14:45.859" endtime="20191112 14:14:45.859"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191112 14:15:16.515" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191112141445687024", "AccessionNumber": "A20191112141445687024", "FilmSessionLable": "20191112141445858904", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191112 14:15:16.515" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191112141445687024", "AccessionNumber": "A20191112141445687024", "FilmSessionLable": "20191112141445858904", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191112 14:14:45.859" endtime="20191112 14:15:16.515"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191112 14:15:16.515" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191112141445687024', 'AccessionNumber': 'A20191112141445687024', 'FilmSessionLable': '20191112141445858904', 'DeliveryJob_status': 2, 'WaterMark_Path': 'D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191112 14:15:16.515" endtime="20191112 14:15:16.515"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191112 14:15:16.546" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191112 14:15:16.515" endtime="20191112 14:15:16.546"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:15:16.546" endtime="20191112 14:15:16.546"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191112 14:15:26.562" level="INFO">PUMA_ReportLibrary._archive_check: Report achived successfully.
Report achived successfully. {"Status": true, "server": "10.112.20.84", "patient_id": "P20191112141445687024", "accession_number": "A20191112141445687024", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "powershell_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.84/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191112 14:15:26.562" level="INFO">${Report_archived_Info} = {"Status": true, "server": "10.112.20.84", "patient_id": "P20191112141445687024", "accession_number": "A20191112141445687024", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191112 14:15:16.546" endtime="20191112 14:15:26.562"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191112 14:15:26.562" level="INFO">${Report_archived_Info_Json} = {'Status': True, 'server': '10.112.20.84', 'patient_id': 'P20191112141445687024', 'accession_number': 'A20191112141445687024', 'report_file': 'D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191112 14:15:26.562" endtime="20191112 14:15:26.562"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191112 14:15:26.593" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191112 14:15:26.562" endtime="20191112 14:15:26.593"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:15:26.593" endtime="20191112 14:15:26.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<msg timestamp="20191112 14:15:26.593" level="INFO">A20191112141445687024</msg>
<status status="PASS" starttime="20191112 14:15:26.593" endtime="20191112 14:15:26.593"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<status status="PASS" starttime="20191112 14:15:26.593" endtime="20191112 14:15:26.593"></status>
</kw>
<status status="PASS" starttime="20191112 14:14:45.687" endtime="20191112 14:15:26.593"></status>
</kw>
<kw name="${count} = 4" type="foritem">
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191112 14:15:26.593" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:15:26.609" level="DEBUG">http://10.112.20.84:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191112 14:15:26.625" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-12 14:15:26.593328", "UpdateDT": "2019-11-12 14:15:26.593328", "PatientID": "P20191112141526593328", "AccessionNumber": "A20191112141526593328", "StudyInstanceUID": "UID20191112141526593328", "NameCN": "CN20191112141526593328", "NameEN": "EN20191112141526593328", "Gender": "M", "Birthday": "1953-11-28", "Modality": "NM", "ModalityName": "OT", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-12 14:15:26.593328", "RegisterDT": "2019-11-12 14:15:26.593328", "ExamDT": "2019-11-12 14:15:26.593328", "ReportDT": "2019-11-12 14:15:26.593328", "SubmitDT": "2019-11-12 14:15:26.593328", "ApproveDT": "2019-11-12 14:15:26.593328", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191112141526593328", "ExamBodyPart": "Lung", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191112 14:15:26.625" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-12 14:15:26.593328", "UpdateDT": "2019-11-12 14:15:26.593328", "PatientID": "P20191112141526593328", "AccessionNumber": "A20191112141526593328", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191112 14:15:26.593" endtime="20191112 14:15:26.625"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191112 14:15:26.625" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-12 14:15:26.593328', 'UpdateDT': '2019-11-12 14:15:26.593328', 'PatientID': 'P20191112141526593328', 'AccessionNumber': 'A20191112141526593328', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191112 14:15:26.625" endtime="20191112 14:15:26.625"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191112 14:15:26.671" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191112 14:15:26.625" endtime="20191112 14:15:26.671"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191112 14:15:26.703" level="INFO">${patientID} = ['P20191112141526593328']</msg>
<status status="PASS" starttime="20191112 14:15:26.671" endtime="20191112 14:15:26.703"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191112 14:15:26.750" level="INFO">${Accessionnumber} = ['A20191112141526593328']</msg>
<status status="PASS" starttime="20191112 14:15:26.703" endtime="20191112 14:15:26.750"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:15:26.750" endtime="20191112 14:15:26.750"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191112 14:15:57.421" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191112141526593328", "AccessionNumber": "A20191112141526593328", "FilmSessionLable": "20191112141526749578", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191112 14:15:57.421" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191112141526593328", "AccessionNumber": "A20191112141526593328", "FilmSessionLable": "20191112141526749578", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191112 14:15:26.750" endtime="20191112 14:15:57.421"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191112 14:15:57.421" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191112141526593328', 'AccessionNumber': 'A20191112141526593328', 'FilmSessionLable': '20191112141526749578', 'DeliveryJob_status': 2, 'WaterMark_Path': 'D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191112 14:15:57.421" endtime="20191112 14:15:57.421"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191112 14:15:57.468" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191112 14:15:57.421" endtime="20191112 14:15:57.468"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:15:57.468" endtime="20191112 14:15:57.468"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191112 14:16:07.484" level="INFO">PUMA_ReportLibrary._archive_check: Report achived successfully.
Report achived successfully. {"Status": true, "server": "10.112.20.84", "patient_id": "P20191112141526593328", "accession_number": "A20191112141526593328", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "powershell_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.84/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191112 14:16:07.484" level="INFO">${Report_archived_Info} = {"Status": true, "server": "10.112.20.84", "patient_id": "P20191112141526593328", "accession_number": "A20191112141526593328", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191112 14:15:57.468" endtime="20191112 14:16:07.484"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191112 14:16:07.484" level="INFO">${Report_archived_Info_Json} = {'Status': True, 'server': '10.112.20.84', 'patient_id': 'P20191112141526593328', 'accession_number': 'A20191112141526593328', 'report_file': 'D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191112 14:16:07.484" endtime="20191112 14:16:07.484"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191112 14:16:07.515" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191112 14:16:07.484" endtime="20191112 14:16:07.515"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:16:07.515" endtime="20191112 14:16:07.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<msg timestamp="20191112 14:16:07.515" level="INFO">A20191112141526593328</msg>
<status status="PASS" starttime="20191112 14:16:07.515" endtime="20191112 14:16:07.515"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<status status="PASS" starttime="20191112 14:16:07.515" endtime="20191112 14:16:07.515"></status>
</kw>
<status status="PASS" starttime="20191112 14:15:26.593" endtime="20191112 14:16:07.515"></status>
</kw>
<status status="PASS" starttime="20191112 14:12:42.624" endtime="20191112 14:16:07.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${list_Accn}</arg>
</arguments>
<msg timestamp="20191112 14:16:07.515" level="INFO">['A20191112141242624366', 'A20191112141323718168', 'A20191112141404831347', 'A20191112141445687024', 'A20191112141526593328']</msg>
<status status="PASS" starttime="20191112 14:16:07.515" endtime="20191112 14:16:07.515"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${Report_Print_DateTime_old}</var>
</assign>
<msg timestamp="20191112 14:16:07.531" level="INFO">${Report_Print_DateTime_old} = []</msg>
<status status="PASS" starttime="20191112 14:16:07.515" endtime="20191112 14:16:07.531"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${Film_Print_DateTime_old}</var>
</assign>
<msg timestamp="20191112 14:16:07.531" level="INFO">${Film_Print_DateTime_old} = []</msg>
<status status="PASS" starttime="20191112 14:16:07.531" endtime="20191112 14:16:07.531"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191112 14:16:07.531" level="INFO">${ACCN} = A20191112141242624366</msg>
<status status="PASS" starttime="20191112 14:16:07.531" endtime="20191112 14:16:07.531"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:16:07.531" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191112141242624366", "FilmPrintStatus": 0, "FilmPrintTime": null, "HoldFlag": 1, "ImageCount": 1, "Modalities": "DR", "ExamName": "Exam20191112141242624366", "B...</msg>
<status status="PASS" starttime="20191112 14:16:07.531" endtime="20191112 14:16:07.531"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:16:07.531" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191112141242624366', 'FilmPrintStatus': 0, 'FilmPrintTime': None, 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'DR', 'ExamName': 'Exam20191112141242624366', 'B...</msg>
<status status="PASS" starttime="20191112 14:16:07.531" endtime="20191112 14:16:07.531"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrintTime}</var>
</assign>
<msg timestamp="20191112 14:16:07.562" level="INFO">${FilmPrintTime} = [None]</msg>
<status status="PASS" starttime="20191112 14:16:07.531" endtime="20191112 14:16:07.562"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrintTime}</var>
</assign>
<msg timestamp="20191112 14:16:07.609" level="INFO">${ReportPrintTime} = [None]</msg>
<status status="PASS" starttime="20191112 14:16:07.562" endtime="20191112 14:16:07.609"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${FilmPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191112 14:16:07.609" endtime="20191112 14:16:07.609"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${ReportPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191112 14:16:07.609" endtime="20191112 14:16:07.609"></status>
</kw>
<status status="PASS" starttime="20191112 14:16:07.531" endtime="20191112 14:16:07.609"></status>
</kw>
<kw name="${count} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191112 14:16:07.609" level="INFO">${ACCN} = A20191112141323718168</msg>
<status status="PASS" starttime="20191112 14:16:07.609" endtime="20191112 14:16:07.609"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:16:07.609" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191112141323718168", "FilmPrintStatus": 0, "FilmPrintTime": null, "HoldFlag": 1, "ImageCount": 1, "Modalities": "MG", "ExamName": "Exam20191112141323718168", "B...</msg>
<status status="PASS" starttime="20191112 14:16:07.609" endtime="20191112 14:16:07.609"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:16:07.609" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191112141323718168', 'FilmPrintStatus': 0, 'FilmPrintTime': None, 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'MG', 'ExamName': 'Exam20191112141323718168', 'B...</msg>
<status status="PASS" starttime="20191112 14:16:07.609" endtime="20191112 14:16:07.609"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrintTime}</var>
</assign>
<msg timestamp="20191112 14:16:07.656" level="INFO">${FilmPrintTime} = [None]</msg>
<status status="PASS" starttime="20191112 14:16:07.609" endtime="20191112 14:16:07.656"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrintTime}</var>
</assign>
<msg timestamp="20191112 14:16:07.687" level="INFO">${ReportPrintTime} = [None]</msg>
<status status="PASS" starttime="20191112 14:16:07.656" endtime="20191112 14:16:07.687"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${FilmPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191112 14:16:07.687" endtime="20191112 14:16:07.687"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${ReportPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191112 14:16:07.687" endtime="20191112 14:16:07.687"></status>
</kw>
<status status="PASS" starttime="20191112 14:16:07.609" endtime="20191112 14:16:07.687"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191112 14:16:07.687" level="INFO">${ACCN} = A20191112141404831347</msg>
<status status="PASS" starttime="20191112 14:16:07.687" endtime="20191112 14:16:07.687"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:16:07.687" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191112141404831347", "FilmPrintStatus": 0, "FilmPrintTime": null, "HoldFlag": 1, "ImageCount": 1, "Modalities": "MG", "ExamName": "Exam20191112141404831347", "B...</msg>
<status status="PASS" starttime="20191112 14:16:07.687" endtime="20191112 14:16:07.687"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:16:07.687" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191112141404831347', 'FilmPrintStatus': 0, 'FilmPrintTime': None, 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'MG', 'ExamName': 'Exam20191112141404831347', 'B...</msg>
<status status="PASS" starttime="20191112 14:16:07.687" endtime="20191112 14:16:07.687"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrintTime}</var>
</assign>
<msg timestamp="20191112 14:16:07.734" level="INFO">${FilmPrintTime} = [None]</msg>
<status status="PASS" starttime="20191112 14:16:07.687" endtime="20191112 14:16:07.734"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrintTime}</var>
</assign>
<msg timestamp="20191112 14:16:07.765" level="INFO">${ReportPrintTime} = [None]</msg>
<status status="PASS" starttime="20191112 14:16:07.734" endtime="20191112 14:16:07.765"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${FilmPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191112 14:16:07.765" endtime="20191112 14:16:07.765"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${ReportPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191112 14:16:07.765" endtime="20191112 14:16:07.765"></status>
</kw>
<status status="PASS" starttime="20191112 14:16:07.687" endtime="20191112 14:16:07.765"></status>
</kw>
<kw name="${count} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191112 14:16:07.765" level="INFO">${ACCN} = A20191112141445687024</msg>
<status status="PASS" starttime="20191112 14:16:07.765" endtime="20191112 14:16:07.765"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:16:07.765" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191112141445687024", "FilmPrintStatus": 0, "FilmPrintTime": null, "HoldFlag": 1, "ImageCount": 1, "Modalities": "IO", "ExamName": "Exam20191112141445687024", "B...</msg>
<status status="PASS" starttime="20191112 14:16:07.765" endtime="20191112 14:16:07.765"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:16:07.765" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191112141445687024', 'FilmPrintStatus': 0, 'FilmPrintTime': None, 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'IO', 'ExamName': 'Exam20191112141445687024', 'B...</msg>
<status status="PASS" starttime="20191112 14:16:07.765" endtime="20191112 14:16:07.765"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrintTime}</var>
</assign>
<msg timestamp="20191112 14:16:07.812" level="INFO">${FilmPrintTime} = [None]</msg>
<status status="PASS" starttime="20191112 14:16:07.765" endtime="20191112 14:16:07.812"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrintTime}</var>
</assign>
<msg timestamp="20191112 14:16:07.859" level="INFO">${ReportPrintTime} = [None]</msg>
<status status="PASS" starttime="20191112 14:16:07.812" endtime="20191112 14:16:07.859"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${FilmPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191112 14:16:07.859" endtime="20191112 14:16:07.859"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${ReportPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191112 14:16:07.859" endtime="20191112 14:16:07.859"></status>
</kw>
<status status="PASS" starttime="20191112 14:16:07.765" endtime="20191112 14:16:07.859"></status>
</kw>
<kw name="${count} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191112 14:16:07.859" level="INFO">${ACCN} = A20191112141526593328</msg>
<status status="PASS" starttime="20191112 14:16:07.859" endtime="20191112 14:16:07.859"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:16:07.859" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191112141526593328", "FilmPrintStatus": 0, "FilmPrintTime": null, "HoldFlag": 1, "ImageCount": 1, "Modalities": "NM", "ExamName": "Exam20191112141526593328", "B...</msg>
<status status="PASS" starttime="20191112 14:16:07.859" endtime="20191112 14:16:07.859"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:16:07.859" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191112141526593328', 'FilmPrintStatus': 0, 'FilmPrintTime': None, 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'NM', 'ExamName': 'Exam20191112141526593328', 'B...</msg>
<status status="PASS" starttime="20191112 14:16:07.859" endtime="20191112 14:16:07.859"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrintTime}</var>
</assign>
<msg timestamp="20191112 14:16:07.906" level="INFO">${FilmPrintTime} = [None]</msg>
<status status="PASS" starttime="20191112 14:16:07.859" endtime="20191112 14:16:07.906"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrintTime}</var>
</assign>
<msg timestamp="20191112 14:16:07.937" level="INFO">${ReportPrintTime} = [None]</msg>
<status status="PASS" starttime="20191112 14:16:07.906" endtime="20191112 14:16:07.937"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${FilmPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191112 14:16:07.937" endtime="20191112 14:16:07.937"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${ReportPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191112 14:16:07.937" endtime="20191112 14:16:07.937"></status>
</kw>
<status status="PASS" starttime="20191112 14:16:07.859" endtime="20191112 14:16:07.937"></status>
</kw>
<status status="PASS" starttime="20191112 14:16:07.531" endtime="20191112 14:16:07.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
</arguments>
<msg timestamp="20191112 14:16:07.937" level="INFO">[None, None, None, None, None]</msg>
<status status="PASS" starttime="20191112 14:16:07.937" endtime="20191112 14:16:07.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
</arguments>
<msg timestamp="20191112 14:16:07.937" level="INFO">[None, None, None, None, None]</msg>
<status status="PASS" starttime="20191112 14:16:07.937" endtime="20191112 14:16:07.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3 \n Description: \n1. Use the API to simulate the central print operation: \ \ Print the exams created in step2 with the terminal which created in step1. \n Excepted:\n 1. The API should return the successful response. \n</arg>
</arguments>
<msg timestamp="20191112 14:16:07.937" level="INFO">Step 3 
Description: 
1. Use the API to simulate the central print operation:   Print the exams created in step2 with the terminal which created in step1. 
Excepted:
1. The API should return the successful response. 
</msg>
<status status="PASS" starttime="20191112 14:16:07.937" endtime="20191112 14:16:07.937"></status>
</kw>
<kw name="Platform Login User Pwd" library="PUMA_PlatformLibrary">
<doc>platform_login_user_pwd</doc>
<arguments>
<arg>admin</arg>
<arg>123456</arg>
</arguments>
<assign>
<var>${login_result}</var>
</assign>
<msg timestamp="20191112 14:16:07.953" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:16:13.328" level="DEBUG">http://10.112.20.84:80 "GET /Platform/ HTTP/1.1" 200 8522</msg>
<msg timestamp="20191112 14:16:13.328" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:16:13.781" level="DEBUG">http://10.112.20.84:80 "POST /Platform//account/login HTTP/1.1" 200 78</msg>
<msg timestamp="20191112 14:16:13.781" level="INFO">Platform.platform_login_user_pwd: The user login in successfully. [admin, 123456]</msg>
<msg timestamp="20191112 14:16:13.781" level="INFO">${login_result} = True</msg>
<status status="PASS" starttime="20191112 14:16:07.937" endtime="20191112 14:16:13.781"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${login_result}</arg>
</arguments>
<status status="PASS" starttime="20191112 14:16:13.781" endtime="20191112 14:16:13.781"></status>
</kw>
<kw name="Platform Worklist Central Print" library="PUMA_PlatformLibrary">
<doc>Platform_worklist_central_print</doc>
<arguments>
<arg>Customer_Terminal01</arg>
<arg>admin</arg>
<arg>${list_Accn}</arg>
<arg>${restinstanceids}</arg>
</arguments>
<assign>
<var>${centralprint_result}</var>
</assign>
<msg timestamp="20191112 14:16:13.781" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:16:15.625" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/centralPrint HTTP/1.1" 200 671</msg>
<msg timestamp="20191112 14:16:15.625" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:16:15.734" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printEstimateTime/ HTTP/1.1" 200 3</msg>
<msg timestamp="20191112 14:16:20.734" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:16:20.750" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:16:20.750" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:16:20.797" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191112 14:16:25.797" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:16:25.797" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:16:25.797" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:16:25.812" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191112 14:16:30.812" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:16:30.812" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:16:30.812" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:16:30.828" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191112 14:16:35.828" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:16:35.828" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:16:35.828" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:16:35.843" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191112 14:16:40.843" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:16:40.843" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:16:40.843" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:16:40.859" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191112 14:16:45.859" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:16:45.859" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:16:45.859" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:16:45.875" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191112 14:16:50.875" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:16:50.875" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:16:50.875" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:16:50.890" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191112 14:16:55.890" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:16:55.890" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:16:55.890" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:16:55.906" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191112 14:17:00.906" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:17:00.906" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:17:00.906" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:17:00.922" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191112 14:17:05.922" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:17:05.922" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:17:05.922" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:17:05.937" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191112 14:17:10.937" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:17:10.937" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:17:10.937" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:17:10.953" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191112 14:17:15.953" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:17:15.953" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:17:15.953" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:17:15.968" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191112 14:17:20.968" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:17:20.968" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:17:20.968" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:17:20.984" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191112 14:17:25.984" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:17:25.984" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:17:25.984" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:17:26.000" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191112 14:17:31.000" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:17:31.000" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:17:31.000" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:17:31.015" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191112 14:17:36.015" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:17:36.015" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:17:36.015" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:17:36.031" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191112 14:17:41.031" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:17:41.031" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:17:41.031" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:17:41.047" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:17:46.047" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:17:46.047" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:17:46.047" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:17:46.062" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:17:51.062" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:17:51.062" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:17:51.062" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:17:51.094" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:17:56.094" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:17:56.094" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:17:56.094" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:17:56.109" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:18:01.109" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:18:01.109" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:18:01.109" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:18:01.125" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:18:06.125" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:18:06.125" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:18:06.125" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:18:06.140" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:18:11.140" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:18:11.140" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:18:11.140" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:18:11.156" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:18:16.156" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:18:16.156" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:18:16.156" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:18:16.172" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:18:21.172" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:18:21.172" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:18:21.172" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:18:21.187" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:18:26.187" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:18:26.187" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:18:26.187" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:18:26.203" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:18:31.203" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:18:31.203" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:18:31.203" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:18:31.406" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:18:36.406" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:18:36.406" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:18:36.406" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:18:36.422" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:18:41.422" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:18:41.422" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:18:41.422" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:18:41.437" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:18:46.437" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:18:46.437" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:18:46.437" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:18:46.453" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:18:51.453" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:18:51.453" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:18:51.453" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:18:51.469" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:18:56.469" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:18:56.469" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:18:56.469" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:18:56.484" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:19:01.484" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:19:01.484" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:19:01.484" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:19:01.500" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:19:06.500" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:19:06.500" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:19:06.500" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:19:06.515" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:19:11.515" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:19:11.515" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:19:11.515" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:19:11.531" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:19:16.531" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:19:16.531" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:19:16.531" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:19:16.547" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:19:21.547" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:19:21.547" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:19:21.547" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:19:21.562" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:19:26.562" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:19:26.562" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:19:26.562" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:19:26.578" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:19:31.578" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:19:31.578" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:19:31.578" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:19:31.594" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:19:36.594" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:19:36.594" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:19:36.594" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:19:36.609" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:19:41.609" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:19:41.609" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:19:41.609" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:19:41.625" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:19:46.625" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:19:46.625" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:19:46.625" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:19:46.641" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:19:51.641" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:19:51.641" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:19:51.641" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:19:51.656" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:19:56.656" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:19:56.656" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:19:56.656" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:19:56.672" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:20:01.672" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:20:01.672" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:20:01.672" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:20:01.687" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:20:06.687" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:20:06.687" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:20:06.687" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:20:06.703" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:20:11.703" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:20:11.703" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:20:11.703" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:20:11.719" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:20:16.734" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:20:16.734" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:20:16.734" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:20:16.750" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:20:21.750" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:20:21.750" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:20:21.750" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:20:21.766" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:20:26.766" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:20:26.766" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:20:26.781" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:20:26.781" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:20:31.781" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:20:31.781" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:20:31.781" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:20:31.797" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:20:36.797" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:20:36.797" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:20:36.797" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:20:36.812" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:20:41.812" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:20:41.812" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:20:41.812" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:20:41.828" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:20:46.828" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:20:46.828" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:20:46.828" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:20:46.844" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:20:51.844" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:20:51.844" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:20:51.844" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:20:51.859" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191112 14:20:56.859" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:20:56.859" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:20:56.859" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:20:56.875" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191112 14:20:56.875" level="INFO">Platform.Platform_worklist_central_print_get_tasks: All exams can central print.
350
105
Platform.Platform_worklist_central_print: Print successfully:
{'printedTime': 350, 'isFinishPrint': True, 'failedTasks': 0}</msg>
<msg timestamp="20191112 14:20:56.875" level="INFO">${centralprint_result} = (True, [{'returnValue': 0, 'patientName': 'CN20191112141242624366', 'printTaskID': '2130', 'warningCode': 0, 'warningDescription': '', 'extensions': ''}, {'returnValue': 0, 'patientName': 'CN201911121...</msg>
<status status="PASS" starttime="20191112 14:16:13.781" endtime="20191112 14:20:56.875"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${centralprint_result}[0] == True</arg>
</arguments>
<status status="PASS" starttime="20191112 14:20:56.875" endtime="20191112 14:20:56.875"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${centralprint_result}[1]</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${taksinfo}</var>
</assign>
<msg timestamp="20191112 14:20:56.875" level="INFO">${taksinfo} = {'returnValue': 0, 'patientName': 'CN20191112141242624366', 'printTaskID': '2130', 'warningCode': 0, 'warningDescription': '', 'extensions': ''}</msg>
<status status="PASS" starttime="20191112 14:20:56.875" endtime="20191112 14:20:56.875"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${taksinfo}</arg>
<arg>printTaskID</arg>
</arguments>
<assign>
<var>${printtask_sn}</var>
</assign>
<msg timestamp="20191112 14:20:56.875" level="INFO">${printtask_sn} = 2130</msg>
<status status="PASS" starttime="20191112 14:20:56.875" endtime="20191112 14:20:56.875"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Printtask By Sn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with SN from table wggc.dbp.afp_printtask in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${printtask_sn}</arg>
</arguments>
<assign>
<var>${PrintTask_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:20:56.875" level="INFO">${PrintTask_DB_Value} = {"Result": true, "SN": 2130, "PatientID": "P20191112141242624366", "TerminalID": "Customer_Terminal01", "Status": 4, "ImageCount": 1, "ReportCount": 1, "EstimateTime": 63, "ErrorCode": 0, "ErrorDesc":...</msg>
<status status="PASS" starttime="20191112 14:20:56.875" endtime="20191112 14:20:56.875"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintTask_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:20:56.875" level="INFO">${json} = {'Result': True, 'SN': 2130, 'PatientID': 'P20191112141242624366', 'TerminalID': 'Customer_Terminal01', 'Status': 4, 'ImageCount': 1, 'ReportCount': 1, 'EstimateTime': 63, 'ErrorCode': 0, 'ErrorDesc':...</msg>
<status status="PASS" starttime="20191112 14:20:56.875" endtime="20191112 14:20:56.875"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Printtask_status}</var>
</assign>
<msg timestamp="20191112 14:20:56.922" level="INFO">${Printtask_status} = [4]</msg>
<status status="PASS" starttime="20191112 14:20:56.875" endtime="20191112 14:20:56.922"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191112 14:20:56.953" level="INFO">${Patient_id} = ['P20191112141242624366']</msg>
<status status="PASS" starttime="20191112 14:20:56.922" endtime="20191112 14:20:56.953"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Printtask_status}[0]</arg>
<arg>4</arg>
<arg>The Print task status in DB is 4</arg>
</arguments>
<msg timestamp="20191112 14:20:56.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 14:20:56.953" endtime="20191112 14:20:56.953"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:56.875" endtime="20191112 14:20:56.953"></status>
</kw>
<kw name="${count} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${centralprint_result}[1]</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${taksinfo}</var>
</assign>
<msg timestamp="20191112 14:20:56.953" level="INFO">${taksinfo} = {'returnValue': 0, 'patientName': 'CN20191112141323718168', 'printTaskID': '2131', 'warningCode': 0, 'warningDescription': '', 'extensions': ''}</msg>
<status status="PASS" starttime="20191112 14:20:56.953" endtime="20191112 14:20:56.953"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${taksinfo}</arg>
<arg>printTaskID</arg>
</arguments>
<assign>
<var>${printtask_sn}</var>
</assign>
<msg timestamp="20191112 14:20:56.953" level="INFO">${printtask_sn} = 2131</msg>
<status status="PASS" starttime="20191112 14:20:56.953" endtime="20191112 14:20:56.953"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Printtask By Sn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with SN from table wggc.dbp.afp_printtask in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${printtask_sn}</arg>
</arguments>
<assign>
<var>${PrintTask_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:20:56.953" level="INFO">${PrintTask_DB_Value} = {"Result": true, "SN": 2131, "PatientID": "P20191112141323718168", "TerminalID": "Customer_Terminal01", "Status": 4, "ImageCount": 1, "ReportCount": 1, "EstimateTime": 63, "ErrorCode": 0, "ErrorDesc":...</msg>
<status status="PASS" starttime="20191112 14:20:56.953" endtime="20191112 14:20:56.953"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintTask_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:20:56.953" level="INFO">${json} = {'Result': True, 'SN': 2131, 'PatientID': 'P20191112141323718168', 'TerminalID': 'Customer_Terminal01', 'Status': 4, 'ImageCount': 1, 'ReportCount': 1, 'EstimateTime': 63, 'ErrorCode': 0, 'ErrorDesc':...</msg>
<status status="PASS" starttime="20191112 14:20:56.953" endtime="20191112 14:20:56.953"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Printtask_status}</var>
</assign>
<msg timestamp="20191112 14:20:57.000" level="INFO">${Printtask_status} = [4]</msg>
<status status="PASS" starttime="20191112 14:20:56.953" endtime="20191112 14:20:57.000"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191112 14:20:57.031" level="INFO">${Patient_id} = ['P20191112141323718168']</msg>
<status status="PASS" starttime="20191112 14:20:57.000" endtime="20191112 14:20:57.031"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Printtask_status}[0]</arg>
<arg>4</arg>
<arg>The Print task status in DB is 4</arg>
</arguments>
<msg timestamp="20191112 14:20:57.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 14:20:57.031" endtime="20191112 14:20:57.031"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:56.953" endtime="20191112 14:20:57.031"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${centralprint_result}[1]</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${taksinfo}</var>
</assign>
<msg timestamp="20191112 14:20:57.031" level="INFO">${taksinfo} = {'returnValue': 0, 'patientName': 'CN20191112141404831347', 'printTaskID': '2132', 'warningCode': 0, 'warningDescription': '', 'extensions': ''}</msg>
<status status="PASS" starttime="20191112 14:20:57.031" endtime="20191112 14:20:57.031"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${taksinfo}</arg>
<arg>printTaskID</arg>
</arguments>
<assign>
<var>${printtask_sn}</var>
</assign>
<msg timestamp="20191112 14:20:57.031" level="INFO">${printtask_sn} = 2132</msg>
<status status="PASS" starttime="20191112 14:20:57.031" endtime="20191112 14:20:57.031"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Printtask By Sn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with SN from table wggc.dbp.afp_printtask in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${printtask_sn}</arg>
</arguments>
<assign>
<var>${PrintTask_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:20:57.031" level="INFO">${PrintTask_DB_Value} = {"Result": true, "SN": 2132, "PatientID": "P20191112141404831347", "TerminalID": "Customer_Terminal01", "Status": 4, "ImageCount": 1, "ReportCount": 1, "EstimateTime": 63, "ErrorCode": 0, "ErrorDesc":...</msg>
<status status="PASS" starttime="20191112 14:20:57.031" endtime="20191112 14:20:57.031"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintTask_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:20:57.047" level="INFO">${json} = {'Result': True, 'SN': 2132, 'PatientID': 'P20191112141404831347', 'TerminalID': 'Customer_Terminal01', 'Status': 4, 'ImageCount': 1, 'ReportCount': 1, 'EstimateTime': 63, 'ErrorCode': 0, 'ErrorDesc':...</msg>
<status status="PASS" starttime="20191112 14:20:57.031" endtime="20191112 14:20:57.047"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Printtask_status}</var>
</assign>
<msg timestamp="20191112 14:20:57.078" level="INFO">${Printtask_status} = [4]</msg>
<status status="PASS" starttime="20191112 14:20:57.047" endtime="20191112 14:20:57.078"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191112 14:20:57.109" level="INFO">${Patient_id} = ['P20191112141404831347']</msg>
<status status="PASS" starttime="20191112 14:20:57.078" endtime="20191112 14:20:57.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Printtask_status}[0]</arg>
<arg>4</arg>
<arg>The Print task status in DB is 4</arg>
</arguments>
<msg timestamp="20191112 14:20:57.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 14:20:57.109" endtime="20191112 14:20:57.109"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:57.031" endtime="20191112 14:20:57.109"></status>
</kw>
<kw name="${count} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${centralprint_result}[1]</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${taksinfo}</var>
</assign>
<msg timestamp="20191112 14:20:57.109" level="INFO">${taksinfo} = {'returnValue': 0, 'patientName': 'CN20191112141445687024', 'printTaskID': '2133', 'warningCode': 0, 'warningDescription': '', 'extensions': ''}</msg>
<status status="PASS" starttime="20191112 14:20:57.109" endtime="20191112 14:20:57.109"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${taksinfo}</arg>
<arg>printTaskID</arg>
</arguments>
<assign>
<var>${printtask_sn}</var>
</assign>
<msg timestamp="20191112 14:20:57.109" level="INFO">${printtask_sn} = 2133</msg>
<status status="PASS" starttime="20191112 14:20:57.109" endtime="20191112 14:20:57.109"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Printtask By Sn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with SN from table wggc.dbp.afp_printtask in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${printtask_sn}</arg>
</arguments>
<assign>
<var>${PrintTask_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:20:57.125" level="INFO">${PrintTask_DB_Value} = {"Result": true, "SN": 2133, "PatientID": "P20191112141445687024", "TerminalID": "Customer_Terminal01", "Status": 4, "ImageCount": 1, "ReportCount": 1, "EstimateTime": 63, "ErrorCode": 0, "ErrorDesc":...</msg>
<status status="PASS" starttime="20191112 14:20:57.109" endtime="20191112 14:20:57.125"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintTask_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:20:57.125" level="INFO">${json} = {'Result': True, 'SN': 2133, 'PatientID': 'P20191112141445687024', 'TerminalID': 'Customer_Terminal01', 'Status': 4, 'ImageCount': 1, 'ReportCount': 1, 'EstimateTime': 63, 'ErrorCode': 0, 'ErrorDesc':...</msg>
<status status="PASS" starttime="20191112 14:20:57.125" endtime="20191112 14:20:57.125"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Printtask_status}</var>
</assign>
<msg timestamp="20191112 14:20:57.156" level="INFO">${Printtask_status} = [4]</msg>
<status status="PASS" starttime="20191112 14:20:57.125" endtime="20191112 14:20:57.156"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191112 14:20:57.188" level="INFO">${Patient_id} = ['P20191112141445687024']</msg>
<status status="PASS" starttime="20191112 14:20:57.156" endtime="20191112 14:20:57.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Printtask_status}[0]</arg>
<arg>4</arg>
<arg>The Print task status in DB is 4</arg>
</arguments>
<msg timestamp="20191112 14:20:57.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 14:20:57.188" endtime="20191112 14:20:57.188"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:57.109" endtime="20191112 14:20:57.188"></status>
</kw>
<kw name="${count} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${centralprint_result}[1]</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${taksinfo}</var>
</assign>
<msg timestamp="20191112 14:20:57.188" level="INFO">${taksinfo} = {'returnValue': 0, 'patientName': 'CN20191112141526593328', 'printTaskID': '2134', 'warningCode': 0, 'warningDescription': '', 'extensions': ''}</msg>
<status status="PASS" starttime="20191112 14:20:57.188" endtime="20191112 14:20:57.188"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${taksinfo}</arg>
<arg>printTaskID</arg>
</arguments>
<assign>
<var>${printtask_sn}</var>
</assign>
<msg timestamp="20191112 14:20:57.203" level="INFO">${printtask_sn} = 2134</msg>
<status status="PASS" starttime="20191112 14:20:57.203" endtime="20191112 14:20:57.203"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Printtask By Sn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with SN from table wggc.dbp.afp_printtask in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${printtask_sn}</arg>
</arguments>
<assign>
<var>${PrintTask_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:20:57.203" level="INFO">${PrintTask_DB_Value} = {"Result": true, "SN": 2134, "PatientID": "P20191112141526593328", "TerminalID": "Customer_Terminal01", "Status": 4, "ImageCount": 1, "ReportCount": 1, "EstimateTime": 63, "ErrorCode": 0, "ErrorDesc":...</msg>
<status status="PASS" starttime="20191112 14:20:57.203" endtime="20191112 14:20:57.203"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintTask_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:20:57.203" level="INFO">${json} = {'Result': True, 'SN': 2134, 'PatientID': 'P20191112141526593328', 'TerminalID': 'Customer_Terminal01', 'Status': 4, 'ImageCount': 1, 'ReportCount': 1, 'EstimateTime': 63, 'ErrorCode': 0, 'ErrorDesc':...</msg>
<status status="PASS" starttime="20191112 14:20:57.203" endtime="20191112 14:20:57.203"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Printtask_status}</var>
</assign>
<msg timestamp="20191112 14:20:57.234" level="INFO">${Printtask_status} = [4]</msg>
<status status="PASS" starttime="20191112 14:20:57.203" endtime="20191112 14:20:57.234"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191112 14:20:57.281" level="INFO">${Patient_id} = ['P20191112141526593328']</msg>
<status status="PASS" starttime="20191112 14:20:57.234" endtime="20191112 14:20:57.281"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Printtask_status}[0]</arg>
<arg>4</arg>
<arg>The Print task status in DB is 4</arg>
</arguments>
<msg timestamp="20191112 14:20:57.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 14:20:57.281" endtime="20191112 14:20:57.281"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:57.188" endtime="20191112 14:20:57.281"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:56.875" endtime="20191112 14:20:57.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4 \n Description: \n 1. Check the print task status in the wggc.dbo.afp_printtask table. \n Expected: \n 1. All print tasks should be successful and status should be 4. \n</arg>
</arguments>
<msg timestamp="20191112 14:20:57.281" level="INFO">Step 4 
Description: 
1. Check the print task status in the wggc.dbo.afp_printtask table. 
Expected: 
1. All print tasks should be successful and status should be 4. 
</msg>
<status status="PASS" starttime="20191112 14:20:57.281" endtime="20191112 14:20:57.281"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191112 14:20:57.281" level="INFO">${ACCN} = A20191112141242624366</msg>
<status status="PASS" starttime="20191112 14:20:57.281" endtime="20191112 14:20:57.281"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:20:57.281" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191112141242624366", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-12 14:17:10.077000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "DR", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:57.281" endtime="20191112 14:20:57.281"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:20:57.281" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191112141242624366', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-12 14:17:10.077000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'DR', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:57.281" endtime="20191112 14:20:57.281"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintStatus</arg>
</arguments>
<assign>
<var>${Filmprint_Status}</var>
</assign>
<msg timestamp="20191112 14:20:57.313" level="INFO">${Filmprint_Status} = [1]</msg>
<status status="PASS" starttime="20191112 14:20:57.281" endtime="20191112 14:20:57.313"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191112 14:20:57.359" level="INFO">${Patient_id} = ['P20191112141242624366']</msg>
<status status="PASS" starttime="20191112 14:20:57.313" endtime="20191112 14:20:57.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Filmprint_Status}[0]</arg>
<arg>1</arg>
<arg>The filmp rint status in DB is 1</arg>
</arguments>
<msg timestamp="20191112 14:20:57.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 14:20:57.359" endtime="20191112 14:20:57.359"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:57.281" endtime="20191112 14:20:57.359"></status>
</kw>
<kw name="${count} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191112 14:20:57.359" level="INFO">${ACCN} = A20191112141323718168</msg>
<status status="PASS" starttime="20191112 14:20:57.359" endtime="20191112 14:20:57.359"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:20:57.359" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191112141323718168", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-12 14:18:06.523000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "MG", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:57.359" endtime="20191112 14:20:57.359"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:20:57.359" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191112141323718168', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-12 14:18:06.523000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'MG', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:57.359" endtime="20191112 14:20:57.359"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintStatus</arg>
</arguments>
<assign>
<var>${Filmprint_Status}</var>
</assign>
<msg timestamp="20191112 14:20:57.391" level="INFO">${Filmprint_Status} = [1]</msg>
<status status="PASS" starttime="20191112 14:20:57.359" endtime="20191112 14:20:57.391"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191112 14:20:57.438" level="INFO">${Patient_id} = ['P20191112141323718168']</msg>
<status status="PASS" starttime="20191112 14:20:57.391" endtime="20191112 14:20:57.438"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Filmprint_Status}[0]</arg>
<arg>1</arg>
<arg>The filmp rint status in DB is 1</arg>
</arguments>
<msg timestamp="20191112 14:20:57.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 14:20:57.438" endtime="20191112 14:20:57.438"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:57.359" endtime="20191112 14:20:57.438"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191112 14:20:57.438" level="INFO">${ACCN} = A20191112141404831347</msg>
<status status="PASS" starttime="20191112 14:20:57.438" endtime="20191112 14:20:57.438"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:20:57.438" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191112141404831347", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-12 14:19:01.700000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "MG", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:57.438" endtime="20191112 14:20:57.438"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:20:57.438" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191112141404831347', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-12 14:19:01.700000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'MG', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:57.438" endtime="20191112 14:20:57.438"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintStatus</arg>
</arguments>
<assign>
<var>${Filmprint_Status}</var>
</assign>
<msg timestamp="20191112 14:20:57.469" level="INFO">${Filmprint_Status} = [1]</msg>
<status status="PASS" starttime="20191112 14:20:57.438" endtime="20191112 14:20:57.469"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191112 14:20:57.516" level="INFO">${Patient_id} = ['P20191112141404831347']</msg>
<status status="PASS" starttime="20191112 14:20:57.469" endtime="20191112 14:20:57.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Filmprint_Status}[0]</arg>
<arg>1</arg>
<arg>The filmp rint status in DB is 1</arg>
</arguments>
<msg timestamp="20191112 14:20:57.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 14:20:57.516" endtime="20191112 14:20:57.516"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:57.438" endtime="20191112 14:20:57.516"></status>
</kw>
<kw name="${count} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191112 14:20:57.516" level="INFO">${ACCN} = A20191112141445687024</msg>
<status status="PASS" starttime="20191112 14:20:57.516" endtime="20191112 14:20:57.516"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:20:57.516" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191112141445687024", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-12 14:19:58.603000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "IO", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:57.516" endtime="20191112 14:20:57.516"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:20:57.516" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191112141445687024', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-12 14:19:58.603000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'IO', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:57.516" endtime="20191112 14:20:57.516"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintStatus</arg>
</arguments>
<assign>
<var>${Filmprint_Status}</var>
</assign>
<msg timestamp="20191112 14:20:57.563" level="INFO">${Filmprint_Status} = [1]</msg>
<status status="PASS" starttime="20191112 14:20:57.516" endtime="20191112 14:20:57.563"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191112 14:20:57.594" level="INFO">${Patient_id} = ['P20191112141445687024']</msg>
<status status="PASS" starttime="20191112 14:20:57.563" endtime="20191112 14:20:57.594"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Filmprint_Status}[0]</arg>
<arg>1</arg>
<arg>The filmp rint status in DB is 1</arg>
</arguments>
<msg timestamp="20191112 14:20:57.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 14:20:57.594" endtime="20191112 14:20:57.594"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:57.516" endtime="20191112 14:20:57.594"></status>
</kw>
<kw name="${count} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191112 14:20:57.594" level="INFO">${ACCN} = A20191112141526593328</msg>
<status status="PASS" starttime="20191112 14:20:57.594" endtime="20191112 14:20:57.594"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:20:57.594" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191112141526593328", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-12 14:20:53.913000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "NM", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:57.594" endtime="20191112 14:20:57.594"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:20:57.594" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191112141526593328', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-12 14:20:53.913000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'NM', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:57.594" endtime="20191112 14:20:57.594"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintStatus</arg>
</arguments>
<assign>
<var>${Filmprint_Status}</var>
</assign>
<msg timestamp="20191112 14:20:57.641" level="INFO">${Filmprint_Status} = [1]</msg>
<status status="PASS" starttime="20191112 14:20:57.594" endtime="20191112 14:20:57.641"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191112 14:20:57.672" level="INFO">${Patient_id} = ['P20191112141526593328']</msg>
<status status="PASS" starttime="20191112 14:20:57.641" endtime="20191112 14:20:57.672"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Filmprint_Status}[0]</arg>
<arg>1</arg>
<arg>The filmp rint status in DB is 1</arg>
</arguments>
<msg timestamp="20191112 14:20:57.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 14:20:57.672" endtime="20191112 14:20:57.672"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:57.594" endtime="20191112 14:20:57.672"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:57.281" endtime="20191112 14:20:57.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5 \n Description: \n 1. Check the FilmPrintStatus of these patients in WGGC.dbo.afp_ExamInfo table. \n Expected: \n 1. The status should be printed.</arg>
</arguments>
<msg timestamp="20191112 14:20:57.672" level="INFO">Step 5 
Description: 
1. Check the FilmPrintStatus of these patients in WGGC.dbo.afp_ExamInfo table. 
Expected: 
1. The status should be printed.</msg>
<status status="PASS" starttime="20191112 14:20:57.672" endtime="20191112 14:20:57.672"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191112 14:20:57.672" level="INFO">${ACCN} = A20191112141242624366</msg>
<status status="PASS" starttime="20191112 14:20:57.672" endtime="20191112 14:20:57.672"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:20:57.672" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191112141242624366", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-12 14:17:10.077000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "DR", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:57.672" endtime="20191112 14:20:57.672"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:20:57.672" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191112141242624366', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-12 14:17:10.077000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'DR', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:57.672" endtime="20191112 14:20:57.672"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintStatus</arg>
</arguments>
<assign>
<var>${ReportPrint_Status}</var>
</assign>
<msg timestamp="20191112 14:20:57.719" level="INFO">${ReportPrint_Status} = [1]</msg>
<status status="PASS" starttime="20191112 14:20:57.672" endtime="20191112 14:20:57.719"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191112 14:20:57.766" level="INFO">${Patient_id} = ['P20191112141242624366']</msg>
<status status="PASS" starttime="20191112 14:20:57.719" endtime="20191112 14:20:57.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${ReportPrint_Status}[0]</arg>
<arg>1</arg>
<arg>The Report print status in DB is 1</arg>
</arguments>
<msg timestamp="20191112 14:20:57.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 14:20:57.766" endtime="20191112 14:20:57.766"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:57.672" endtime="20191112 14:20:57.766"></status>
</kw>
<kw name="${count} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191112 14:20:57.766" level="INFO">${ACCN} = A20191112141323718168</msg>
<status status="PASS" starttime="20191112 14:20:57.766" endtime="20191112 14:20:57.766"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:20:57.766" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191112141323718168", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-12 14:18:06.523000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "MG", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:57.766" endtime="20191112 14:20:57.766"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:20:57.766" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191112141323718168', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-12 14:18:06.523000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'MG', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:57.766" endtime="20191112 14:20:57.766"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintStatus</arg>
</arguments>
<assign>
<var>${ReportPrint_Status}</var>
</assign>
<msg timestamp="20191112 14:20:57.797" level="INFO">${ReportPrint_Status} = [1]</msg>
<status status="PASS" starttime="20191112 14:20:57.766" endtime="20191112 14:20:57.797"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191112 14:20:57.844" level="INFO">${Patient_id} = ['P20191112141323718168']</msg>
<status status="PASS" starttime="20191112 14:20:57.797" endtime="20191112 14:20:57.844"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${ReportPrint_Status}[0]</arg>
<arg>1</arg>
<arg>The Report print status in DB is 1</arg>
</arguments>
<msg timestamp="20191112 14:20:57.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 14:20:57.844" endtime="20191112 14:20:57.844"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:57.766" endtime="20191112 14:20:57.844"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191112 14:20:57.844" level="INFO">${ACCN} = A20191112141404831347</msg>
<status status="PASS" starttime="20191112 14:20:57.844" endtime="20191112 14:20:57.844"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:20:57.844" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191112141404831347", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-12 14:19:01.700000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "MG", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:57.844" endtime="20191112 14:20:57.844"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:20:57.844" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191112141404831347', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-12 14:19:01.700000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'MG', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:57.844" endtime="20191112 14:20:57.844"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintStatus</arg>
</arguments>
<assign>
<var>${ReportPrint_Status}</var>
</assign>
<msg timestamp="20191112 14:20:57.891" level="INFO">${ReportPrint_Status} = [1]</msg>
<status status="PASS" starttime="20191112 14:20:57.844" endtime="20191112 14:20:57.891"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191112 14:20:57.922" level="INFO">${Patient_id} = ['P20191112141404831347']</msg>
<status status="PASS" starttime="20191112 14:20:57.891" endtime="20191112 14:20:57.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${ReportPrint_Status}[0]</arg>
<arg>1</arg>
<arg>The Report print status in DB is 1</arg>
</arguments>
<msg timestamp="20191112 14:20:57.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 14:20:57.922" endtime="20191112 14:20:57.922"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:57.844" endtime="20191112 14:20:57.922"></status>
</kw>
<kw name="${count} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191112 14:20:57.922" level="INFO">${ACCN} = A20191112141445687024</msg>
<status status="PASS" starttime="20191112 14:20:57.922" endtime="20191112 14:20:57.922"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:20:57.922" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191112141445687024", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-12 14:19:58.603000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "IO", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:57.922" endtime="20191112 14:20:57.922"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:20:57.922" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191112141445687024', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-12 14:19:58.603000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'IO', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:57.922" endtime="20191112 14:20:57.922"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintStatus</arg>
</arguments>
<assign>
<var>${ReportPrint_Status}</var>
</assign>
<msg timestamp="20191112 14:20:57.969" level="INFO">${ReportPrint_Status} = [1]</msg>
<status status="PASS" starttime="20191112 14:20:57.922" endtime="20191112 14:20:57.969"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191112 14:20:58.000" level="INFO">${Patient_id} = ['P20191112141445687024']</msg>
<status status="PASS" starttime="20191112 14:20:57.969" endtime="20191112 14:20:58.000"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${ReportPrint_Status}[0]</arg>
<arg>1</arg>
<arg>The Report print status in DB is 1</arg>
</arguments>
<msg timestamp="20191112 14:20:58.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 14:20:58.000" endtime="20191112 14:20:58.000"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:57.922" endtime="20191112 14:20:58.000"></status>
</kw>
<kw name="${count} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191112 14:20:58.000" level="INFO">${ACCN} = A20191112141526593328</msg>
<status status="PASS" starttime="20191112 14:20:58.000" endtime="20191112 14:20:58.000"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:20:58.000" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191112141526593328", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-12 14:20:53.913000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "NM", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:58.000" endtime="20191112 14:20:58.000"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:20:58.000" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191112141526593328', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-12 14:20:53.913000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'NM', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:58.000" endtime="20191112 14:20:58.000"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintStatus</arg>
</arguments>
<assign>
<var>${ReportPrint_Status}</var>
</assign>
<msg timestamp="20191112 14:20:58.063" level="INFO">${ReportPrint_Status} = [1]</msg>
<status status="PASS" starttime="20191112 14:20:58.000" endtime="20191112 14:20:58.063"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191112 14:20:58.109" level="INFO">${Patient_id} = ['P20191112141526593328']</msg>
<status status="PASS" starttime="20191112 14:20:58.063" endtime="20191112 14:20:58.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${ReportPrint_Status}[0]</arg>
<arg>1</arg>
<arg>The Report print status in DB is 1</arg>
</arguments>
<msg timestamp="20191112 14:20:58.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 14:20:58.109" endtime="20191112 14:20:58.109"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:58.000" endtime="20191112 14:20:58.109"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:57.672" endtime="20191112 14:20:58.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6 \n Description: \n 1. Check the ReportPrintStatus of these patients \ in WGGC.dbo.afp_ExamInfo table. \n Expected: \n The status should be printed. \n</arg>
</arguments>
<msg timestamp="20191112 14:20:58.109" level="INFO">Step 6 
Description: 
1. Check the ReportPrintStatus of these patients  in WGGC.dbo.afp_ExamInfo table. 
Expected: 
The status should be printed. 
</msg>
<status status="PASS" starttime="20191112 14:20:58.109" endtime="20191112 14:20:58.109"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Report_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191112 14:20:58.109" level="INFO">${Report_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191112 14:20:58.109" endtime="20191112 14:20:58.109"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191112 14:20:58.109" level="INFO">${ACCN} = A20191112141242624366</msg>
<status status="PASS" starttime="20191112 14:20:58.109" endtime="20191112 14:20:58.109"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:20:58.109" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191112141242624366", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-12 14:17:10.077000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "DR", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:58.109" endtime="20191112 14:20:58.109"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:20:58.109" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191112141242624366', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-12 14:17:10.077000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'DR', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:58.109" endtime="20191112 14:20:58.109"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrint_DateTime}</var>
</assign>
<msg timestamp="20191112 14:20:58.188" level="INFO">${ReportPrint_DateTime} = ['2019-11-12 14:17:10.090000']</msg>
<status status="PASS" starttime="20191112 14:20:58.109" endtime="20191112 14:20:58.188"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Report_Print_DateTime_orignal}</arg>
<arg>${ReportPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191112 14:20:58.188" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-11-12 14:17:10.090000]</msg>
<msg timestamp="20191112 14:20:58.188" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191112 14:20:58.188" endtime="20191112 14:20:58.188"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The report print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191112 14:20:58.188" endtime="20191112 14:20:58.188"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:58.109" endtime="20191112 14:20:58.188"></status>
</kw>
<kw name="${count} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Report_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191112 14:20:58.188" level="INFO">${Report_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191112 14:20:58.188" endtime="20191112 14:20:58.188"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191112 14:20:58.188" level="INFO">${ACCN} = A20191112141323718168</msg>
<status status="PASS" starttime="20191112 14:20:58.188" endtime="20191112 14:20:58.188"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:20:58.203" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191112141323718168", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-12 14:18:06.523000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "MG", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:58.188" endtime="20191112 14:20:58.203"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:20:58.203" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191112141323718168', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-12 14:18:06.523000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'MG', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:58.203" endtime="20191112 14:20:58.203"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrint_DateTime}</var>
</assign>
<msg timestamp="20191112 14:20:58.234" level="INFO">${ReportPrint_DateTime} = ['2019-11-12 14:18:06.533000']</msg>
<status status="PASS" starttime="20191112 14:20:58.203" endtime="20191112 14:20:58.234"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Report_Print_DateTime_orignal}</arg>
<arg>${ReportPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191112 14:20:58.234" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-11-12 14:18:06.533000]</msg>
<msg timestamp="20191112 14:20:58.234" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191112 14:20:58.234" endtime="20191112 14:20:58.234"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The report print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191112 14:20:58.234" endtime="20191112 14:20:58.234"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:58.188" endtime="20191112 14:20:58.234"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Report_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191112 14:20:58.234" level="INFO">${Report_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191112 14:20:58.234" endtime="20191112 14:20:58.234"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191112 14:20:58.234" level="INFO">${ACCN} = A20191112141404831347</msg>
<status status="PASS" starttime="20191112 14:20:58.234" endtime="20191112 14:20:58.234"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:20:58.234" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191112141404831347", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-12 14:19:01.700000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "MG", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:58.234" endtime="20191112 14:20:58.234"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:20:58.234" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191112141404831347', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-12 14:19:01.700000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'MG', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:58.234" endtime="20191112 14:20:58.234"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrint_DateTime}</var>
</assign>
<msg timestamp="20191112 14:20:58.281" level="INFO">${ReportPrint_DateTime} = ['2019-11-12 14:19:01.710000']</msg>
<status status="PASS" starttime="20191112 14:20:58.234" endtime="20191112 14:20:58.281"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Report_Print_DateTime_orignal}</arg>
<arg>${ReportPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191112 14:20:58.281" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-11-12 14:19:01.710000]</msg>
<msg timestamp="20191112 14:20:58.281" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191112 14:20:58.281" endtime="20191112 14:20:58.281"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The report print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191112 14:20:58.281" endtime="20191112 14:20:58.281"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:58.234" endtime="20191112 14:20:58.281"></status>
</kw>
<kw name="${count} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Report_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191112 14:20:58.281" level="INFO">${Report_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191112 14:20:58.281" endtime="20191112 14:20:58.281"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191112 14:20:58.281" level="INFO">${ACCN} = A20191112141445687024</msg>
<status status="PASS" starttime="20191112 14:20:58.281" endtime="20191112 14:20:58.281"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:20:58.281" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191112141445687024", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-12 14:19:58.603000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "IO", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:58.281" endtime="20191112 14:20:58.281"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:20:58.281" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191112141445687024', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-12 14:19:58.603000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'IO', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:58.281" endtime="20191112 14:20:58.281"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrint_DateTime}</var>
</assign>
<msg timestamp="20191112 14:20:58.328" level="INFO">${ReportPrint_DateTime} = ['2019-11-12 14:19:58.613000']</msg>
<status status="PASS" starttime="20191112 14:20:58.281" endtime="20191112 14:20:58.328"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Report_Print_DateTime_orignal}</arg>
<arg>${ReportPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191112 14:20:58.328" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-11-12 14:19:58.613000]</msg>
<msg timestamp="20191112 14:20:58.328" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191112 14:20:58.328" endtime="20191112 14:20:58.328"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The report print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191112 14:20:58.328" endtime="20191112 14:20:58.328"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:58.281" endtime="20191112 14:20:58.328"></status>
</kw>
<kw name="${count} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Report_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191112 14:20:58.328" level="INFO">${Report_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191112 14:20:58.328" endtime="20191112 14:20:58.328"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191112 14:20:58.328" level="INFO">${ACCN} = A20191112141526593328</msg>
<status status="PASS" starttime="20191112 14:20:58.328" endtime="20191112 14:20:58.328"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:20:58.328" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191112141526593328", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-12 14:20:53.913000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "NM", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:58.328" endtime="20191112 14:20:58.328"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:20:58.328" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191112141526593328', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-12 14:20:53.913000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'NM', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:58.328" endtime="20191112 14:20:58.328"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrint_DateTime}</var>
</assign>
<msg timestamp="20191112 14:20:58.375" level="INFO">${ReportPrint_DateTime} = ['2019-11-12 14:20:53.920000']</msg>
<status status="PASS" starttime="20191112 14:20:58.328" endtime="20191112 14:20:58.375"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Report_Print_DateTime_orignal}</arg>
<arg>${ReportPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191112 14:20:58.375" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-11-12 14:20:53.920000]</msg>
<msg timestamp="20191112 14:20:58.375" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191112 14:20:58.375" endtime="20191112 14:20:58.375"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The report print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191112 14:20:58.375" endtime="20191112 14:20:58.375"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:58.328" endtime="20191112 14:20:58.375"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:58.109" endtime="20191112 14:20:58.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 7 \n Description: \n 1. Check the report print date and time in the exam table of patients. \n Expected: \n 1. The values should be updated. \ \n</arg>
</arguments>
<msg timestamp="20191112 14:20:58.375" level="INFO">Step 7 
Description: 
1. Check the report print date and time in the exam table of patients. 
Expected: 
1. The values should be updated.  
</msg>
<status status="PASS" starttime="20191112 14:20:58.375" endtime="20191112 14:20:58.375"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Film_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191112 14:20:58.375" level="INFO">${Film_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191112 14:20:58.375" endtime="20191112 14:20:58.375"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191112 14:20:58.375" level="INFO">${ACCN} = A20191112141242624366</msg>
<status status="PASS" starttime="20191112 14:20:58.375" endtime="20191112 14:20:58.375"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:20:58.375" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191112141242624366", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-12 14:17:10.077000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "DR", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:58.375" endtime="20191112 14:20:58.375"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:20:58.375" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191112141242624366', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-12 14:17:10.077000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'DR', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:58.375" endtime="20191112 14:20:58.375"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrint_DateTime}</var>
</assign>
<msg timestamp="20191112 14:20:58.422" level="INFO">${FilmPrint_DateTime} = ['2019-11-12 14:17:10.077000']</msg>
<status status="PASS" starttime="20191112 14:20:58.375" endtime="20191112 14:20:58.422"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Film_Print_DateTime_orignal}</arg>
<arg>${FilmPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191112 14:20:58.422" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-11-12 14:17:10.077000]</msg>
<msg timestamp="20191112 14:20:58.422" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191112 14:20:58.422" endtime="20191112 14:20:58.422"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The film print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191112 14:20:58.422" endtime="20191112 14:20:58.422"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:58.375" endtime="20191112 14:20:58.422"></status>
</kw>
<kw name="${count} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Film_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191112 14:20:58.422" level="INFO">${Film_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191112 14:20:58.422" endtime="20191112 14:20:58.422"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191112 14:20:58.422" level="INFO">${ACCN} = A20191112141323718168</msg>
<status status="PASS" starttime="20191112 14:20:58.422" endtime="20191112 14:20:58.422"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:20:58.422" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191112141323718168", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-12 14:18:06.523000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "MG", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:58.422" endtime="20191112 14:20:58.422"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:20:58.422" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191112141323718168', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-12 14:18:06.523000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'MG', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:58.422" endtime="20191112 14:20:58.422"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrint_DateTime}</var>
</assign>
<msg timestamp="20191112 14:20:58.469" level="INFO">${FilmPrint_DateTime} = ['2019-11-12 14:18:06.523000']</msg>
<status status="PASS" starttime="20191112 14:20:58.422" endtime="20191112 14:20:58.469"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Film_Print_DateTime_orignal}</arg>
<arg>${FilmPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191112 14:20:58.469" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-11-12 14:18:06.523000]</msg>
<msg timestamp="20191112 14:20:58.469" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191112 14:20:58.469" endtime="20191112 14:20:58.469"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The film print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191112 14:20:58.469" endtime="20191112 14:20:58.469"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:58.422" endtime="20191112 14:20:58.469"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Film_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191112 14:20:58.469" level="INFO">${Film_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191112 14:20:58.469" endtime="20191112 14:20:58.469"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191112 14:20:58.469" level="INFO">${ACCN} = A20191112141404831347</msg>
<status status="PASS" starttime="20191112 14:20:58.469" endtime="20191112 14:20:58.469"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:20:58.469" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191112141404831347", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-12 14:19:01.700000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "MG", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:58.469" endtime="20191112 14:20:58.469"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:20:58.469" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191112141404831347', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-12 14:19:01.700000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'MG', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:58.469" endtime="20191112 14:20:58.469"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrint_DateTime}</var>
</assign>
<msg timestamp="20191112 14:20:58.500" level="INFO">${FilmPrint_DateTime} = ['2019-11-12 14:19:01.700000']</msg>
<status status="PASS" starttime="20191112 14:20:58.469" endtime="20191112 14:20:58.500"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Film_Print_DateTime_orignal}</arg>
<arg>${FilmPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191112 14:20:58.500" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-11-12 14:19:01.700000]</msg>
<msg timestamp="20191112 14:20:58.500" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191112 14:20:58.500" endtime="20191112 14:20:58.500"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The film print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191112 14:20:58.500" endtime="20191112 14:20:58.500"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:58.469" endtime="20191112 14:20:58.500"></status>
</kw>
<kw name="${count} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Film_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191112 14:20:58.500" level="INFO">${Film_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191112 14:20:58.500" endtime="20191112 14:20:58.500"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191112 14:20:58.500" level="INFO">${ACCN} = A20191112141445687024</msg>
<status status="PASS" starttime="20191112 14:20:58.500" endtime="20191112 14:20:58.500"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:20:58.516" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191112141445687024", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-12 14:19:58.603000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "IO", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:58.500" endtime="20191112 14:20:58.516"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:20:58.516" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191112141445687024', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-12 14:19:58.603000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'IO', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:58.516" endtime="20191112 14:20:58.516"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrint_DateTime}</var>
</assign>
<msg timestamp="20191112 14:20:58.547" level="INFO">${FilmPrint_DateTime} = ['2019-11-12 14:19:58.603000']</msg>
<status status="PASS" starttime="20191112 14:20:58.516" endtime="20191112 14:20:58.547"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Film_Print_DateTime_orignal}</arg>
<arg>${FilmPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191112 14:20:58.547" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-11-12 14:19:58.603000]</msg>
<msg timestamp="20191112 14:20:58.547" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191112 14:20:58.547" endtime="20191112 14:20:58.547"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The film print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191112 14:20:58.547" endtime="20191112 14:20:58.547"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:58.500" endtime="20191112 14:20:58.547"></status>
</kw>
<kw name="${count} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Film_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191112 14:20:58.547" level="INFO">${Film_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191112 14:20:58.547" endtime="20191112 14:20:58.547"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191112 14:20:58.547" level="INFO">${ACCN} = A20191112141526593328</msg>
<status status="PASS" starttime="20191112 14:20:58.547" endtime="20191112 14:20:58.547"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:20:58.547" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191112141526593328", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-12 14:20:53.913000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "NM", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:58.547" endtime="20191112 14:20:58.547"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:20:58.547" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191112141526593328', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-12 14:20:53.913000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'NM', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191112 14:20:58.547" endtime="20191112 14:20:58.547"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrint_DateTime}</var>
</assign>
<msg timestamp="20191112 14:20:58.594" level="INFO">${FilmPrint_DateTime} = ['2019-11-12 14:20:53.913000']</msg>
<status status="PASS" starttime="20191112 14:20:58.547" endtime="20191112 14:20:58.594"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Film_Print_DateTime_orignal}</arg>
<arg>${FilmPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191112 14:20:58.594" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-11-12 14:20:53.913000]</msg>
<msg timestamp="20191112 14:20:58.594" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191112 14:20:58.594" endtime="20191112 14:20:58.594"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The film print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191112 14:20:58.594" endtime="20191112 14:20:58.594"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:58.547" endtime="20191112 14:20:58.594"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:58.375" endtime="20191112 14:20:58.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 8 \n Description: \n 1. Check the Film print date and time in the exam table of patients. \n Expected: \n 1. The values should be updated. \ \n</arg>
</arguments>
<msg timestamp="20191112 14:20:58.594" level="INFO">Step 8 
Description: 
1. Check the Film print date and time in the exam table of patients. 
Expected: 
1. The values should be updated.  
</msg>
<status status="PASS" starttime="20191112 14:20:58.594" endtime="20191112 14:20:58.594"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191112 14:12:42.593" endtime="20191112 14:20:58.594" critical="yes"></status>
</test>
<test id="s1-t11" name="SmokeTest_011_Core_4180_06.01.01 Central Print multi patients with standard terminal">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description:\n 1. Configure a custom terminal on PS. \n 2. Make sure the terminal status is ready to work. \n Expected: \n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191112 14:20:58.594" level="INFO">Step 1 
Description:
1. Configure a custom terminal on PS. 
2. Make sure the terminal status is ready to work. 
Expected: 
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191112 14:20:58.594" endtime="20191112 14:20:58.594"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${exam_count}</var>
</assign>
<msg timestamp="20191112 14:20:58.594" level="INFO">${exam_count} = 1</msg>
<status status="PASS" starttime="20191112 14:20:58.594" endtime="20191112 14:20:58.594"></status>
</kw>
<kw name="Check Terminal Status" library="PUMA_TerminalLibrary">
<doc>This function is use the API interface to check the terminal status.
The function will enable the terminal status to 'on work' status.</doc>
<arguments>
<arg>K3_Terminal01</arg>
</arguments>
<assign>
<var>${Terminal_status}</var>
</assign>
<msg timestamp="20191112 14:20:58.609" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:20:58.625" level="DEBUG">http://10.112.20.84:80 "GET /EHDPS/status?tid=K3_Terminal01 HTTP/1.1" 200 609</msg>
<msg timestamp="20191112 14:20:58.625" level="INFO">Terminal._check_terminal_status: The terminal status check and result is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"Status":0,"Terminal":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9868,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20223,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}</msg>
<msg timestamp="20191112 14:20:58.625" level="INFO">${Terminal_status} = True</msg>
<status status="PASS" starttime="20191112 14:20:58.594" endtime="20191112 14:20:58.625"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Terminal_status}</arg>
<arg>The termianl status is ready to print</arg>
</arguments>
<status status="PASS" starttime="20191112 14:20:58.625" endtime="20191112 14:20:58.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Prepare 5 patients` exam, each has one film and one report. \n Expected: \n 1. The preparation can finish successfully. \n</arg>
</arguments>
<msg timestamp="20191112 14:20:58.625" level="INFO">Step 2 
Description: 
1. Prepare 5 patients` exam, each has one film and one report. 
Expected: 
1. The preparation can finish successfully. 
</msg>
<status status="PASS" starttime="20191112 14:20:58.625" endtime="20191112 14:20:58.625"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${list_Accn}</var>
</assign>
<msg timestamp="20191112 14:20:58.625" level="INFO">${list_Accn} = []</msg>
<status status="PASS" starttime="20191112 14:20:58.625" endtime="20191112 14:20:58.625"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${restinstanceids}</var>
</assign>
<msg timestamp="20191112 14:20:58.625" level="INFO">${restinstanceids} = []</msg>
<status status="PASS" starttime="20191112 14:20:58.625" endtime="20191112 14:20:58.625"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191112 14:20:58.625" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:20:58.656" level="DEBUG">http://10.112.20.84:80 "POST /NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191112 14:20:58.656" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-12 14:20:58.625005", "UpdateDT": "2019-11-12 14:20:58.625005", "PatientID": "P20191112142058625005", "AccessionNumber": "A20191112142058625005", "StudyInstanceUID": "UID20191112142058625005", "NameCN": "CN20191112142058625005", "NameEN": "EN20191112142058625005", "Gender": "F", "Birthday": "1933-12-03", "Modality": "DR", "ModalityName": "RF", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-12 14:20:58.625005", "RegisterDT": "2019-11-12 14:20:58.625005", "ExamDT": "2019-11-12 14:20:58.625005", "ReportDT": "2019-11-12 14:20:58.625005", "SubmitDT": "2019-11-12 14:20:58.625005", "ApproveDT": "2019-11-12 14:20:58.625005", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191112142058625005", "ExamBodyPart": "Hand", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191112 14:20:58.656" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-12 14:20:58.625005", "UpdateDT": "2019-11-12 14:20:58.625005", "PatientID": "P20191112142058625005", "AccessionNumber": "A20191112142058625005", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191112 14:20:58.625" endtime="20191112 14:20:58.656"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191112 14:20:58.656" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-12 14:20:58.625005', 'UpdateDT': '2019-11-12 14:20:58.625005', 'PatientID': 'P20191112142058625005', 'AccessionNumber': 'A20191112142058625005', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191112 14:20:58.656" endtime="20191112 14:20:58.656"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191112 14:20:58.688" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191112 14:20:58.656" endtime="20191112 14:20:58.688"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191112 14:20:58.734" level="INFO">${patientID} = ['P20191112142058625005']</msg>
<status status="PASS" starttime="20191112 14:20:58.688" endtime="20191112 14:20:58.734"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191112 14:20:58.766" level="INFO">${Accessionnumber} = ['A20191112142058625005']</msg>
<status status="PASS" starttime="20191112 14:20:58.734" endtime="20191112 14:20:58.766"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:20:58.766" endtime="20191112 14:20:58.766"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191112 14:21:29.438" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191112142058625005", "AccessionNumber": "A20191112142058625005", "FilmSessionLable": "20191112142058765628", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191112 14:21:29.438" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191112142058625005", "AccessionNumber": "A20191112142058625005", "FilmSessionLable": "20191112142058765628", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191112 14:20:58.766" endtime="20191112 14:21:29.438"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191112 14:21:29.438" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191112142058625005', 'AccessionNumber': 'A20191112142058625005', 'FilmSessionLable': '20191112142058765628', 'DeliveryJob_status': 2, 'WaterMark_Path': 'D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191112 14:21:29.438" endtime="20191112 14:21:29.438"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191112 14:21:29.469" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191112 14:21:29.438" endtime="20191112 14:21:29.469"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:21:29.469" endtime="20191112 14:21:29.469"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191112 14:21:39.484" level="INFO">PUMA_ReportLibrary._archive_check: Report achived successfully.
Report achived successfully. {"Status": true, "server": "10.112.20.84", "patient_id": "P20191112142058625005", "accession_number": "A20191112142058625005", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "powershell_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.84/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191112 14:21:39.484" level="INFO">${Report_archived_Info} = {"Status": true, "server": "10.112.20.84", "patient_id": "P20191112142058625005", "accession_number": "A20191112142058625005", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191112 14:21:29.469" endtime="20191112 14:21:39.484"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191112 14:21:39.484" level="INFO">${Report_archived_Info_Json} = {'Status': True, 'server': '10.112.20.84', 'patient_id': 'P20191112142058625005', 'accession_number': 'A20191112142058625005', 'report_file': 'D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191112 14:21:39.484" endtime="20191112 14:21:39.484"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191112 14:21:39.516" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191112 14:21:39.484" endtime="20191112 14:21:39.516"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:21:39.516" endtime="20191112 14:21:39.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<msg timestamp="20191112 14:21:39.516" level="INFO">A20191112142058625005</msg>
<status status="PASS" starttime="20191112 14:21:39.516" endtime="20191112 14:21:39.516"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<status status="PASS" starttime="20191112 14:21:39.516" endtime="20191112 14:21:39.516"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:58.625" endtime="20191112 14:21:39.516"></status>
</kw>
<status status="PASS" starttime="20191112 14:20:58.625" endtime="20191112 14:21:39.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${list_Accn}</arg>
</arguments>
<msg timestamp="20191112 14:21:39.516" level="INFO">['A20191112142058625005']</msg>
<status status="PASS" starttime="20191112 14:21:39.516" endtime="20191112 14:21:39.516"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${Report_Print_DateTime_old}</var>
</assign>
<msg timestamp="20191112 14:21:39.516" level="INFO">${Report_Print_DateTime_old} = []</msg>
<status status="PASS" starttime="20191112 14:21:39.516" endtime="20191112 14:21:39.516"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${Film_Print_DateTime_old}</var>
</assign>
<msg timestamp="20191112 14:21:39.516" level="INFO">${Film_Print_DateTime_old} = []</msg>
<status status="PASS" starttime="20191112 14:21:39.516" endtime="20191112 14:21:39.516"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191112 14:21:39.516" level="INFO">${ACCN} = A20191112142058625005</msg>
<status status="PASS" starttime="20191112 14:21:39.516" endtime="20191112 14:21:39.516"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:21:39.516" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191112142058625005", "FilmPrintStatus": 0, "FilmPrintTime": null, "HoldFlag": 1, "ImageCount": 1, "Modalities": "DR", "ExamName": "Exam20191112142058625005", "B...</msg>
<status status="PASS" starttime="20191112 14:21:39.516" endtime="20191112 14:21:39.516"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:21:39.516" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191112142058625005', 'FilmPrintStatus': 0, 'FilmPrintTime': None, 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'DR', 'ExamName': 'Exam20191112142058625005', 'B...</msg>
<status status="PASS" starttime="20191112 14:21:39.516" endtime="20191112 14:21:39.516"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrintTime}</var>
</assign>
<msg timestamp="20191112 14:21:39.563" level="INFO">${FilmPrintTime} = [None]</msg>
<status status="PASS" starttime="20191112 14:21:39.516" endtime="20191112 14:21:39.563"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrintTime}</var>
</assign>
<msg timestamp="20191112 14:21:39.594" level="INFO">${ReportPrintTime} = [None]</msg>
<status status="PASS" starttime="20191112 14:21:39.563" endtime="20191112 14:21:39.594"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${FilmPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191112 14:21:39.594" endtime="20191112 14:21:39.594"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${ReportPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191112 14:21:39.594" endtime="20191112 14:21:39.594"></status>
</kw>
<status status="PASS" starttime="20191112 14:21:39.516" endtime="20191112 14:21:39.594"></status>
</kw>
<status status="PASS" starttime="20191112 14:21:39.516" endtime="20191112 14:21:39.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
</arguments>
<msg timestamp="20191112 14:21:39.594" level="INFO">[None]</msg>
<status status="PASS" starttime="20191112 14:21:39.594" endtime="20191112 14:21:39.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
</arguments>
<msg timestamp="20191112 14:21:39.594" level="INFO">[None]</msg>
<status status="PASS" starttime="20191112 14:21:39.594" endtime="20191112 14:21:39.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3 \n Description: \n1. Use the API to simulate the central print operation: \ \ Print the exams created in step2 with the terminal which created in step1. \n Excepted:\n 1. The API should return the successful response. \n</arg>
</arguments>
<msg timestamp="20191112 14:21:39.594" level="INFO">Step 3 
Description: 
1. Use the API to simulate the central print operation:   Print the exams created in step2 with the terminal which created in step1. 
Excepted:
1. The API should return the successful response. 
</msg>
<status status="PASS" starttime="20191112 14:21:39.594" endtime="20191112 14:21:39.594"></status>
</kw>
<kw name="Platform Login User Pwd" library="PUMA_PlatformLibrary">
<doc>platform_login_user_pwd</doc>
<arguments>
<arg>admin</arg>
<arg>123456</arg>
</arguments>
<assign>
<var>${login_result}</var>
</assign>
<msg timestamp="20191112 14:21:39.609" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:21:39.609" level="DEBUG">http://10.112.20.84:80 "GET /Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191112 14:21:39.609" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:21:39.641" level="DEBUG">http://10.112.20.84:80 "POST /Platform//account/login HTTP/1.1" 200 78</msg>
<msg timestamp="20191112 14:21:39.641" level="INFO">Platform.platform_login_user_pwd: The user login in successfully. [admin, 123456]</msg>
<msg timestamp="20191112 14:21:39.641" level="INFO">${login_result} = True</msg>
<status status="PASS" starttime="20191112 14:21:39.594" endtime="20191112 14:21:39.641"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${login_result}</arg>
</arguments>
<status status="PASS" starttime="20191112 14:21:39.641" endtime="20191112 14:21:39.641"></status>
</kw>
<kw name="Platform Worklist Central Print" library="PUMA_PlatformLibrary">
<doc>Platform_worklist_central_print</doc>
<arguments>
<arg>Customer_Terminal01</arg>
<arg>admin</arg>
<arg>${list_Accn}</arg>
<arg>${restinstanceids}</arg>
</arguments>
<assign>
<var>${centralprint_result}</var>
</assign>
<msg timestamp="20191112 14:21:39.656" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:21:39.953" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/centralPrint HTTP/1.1" 200 135</msg>
<msg timestamp="20191112 14:21:39.953" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:21:39.969" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printEstimateTime/ HTTP/1.1" 200 2</msg>
<msg timestamp="20191112 14:21:44.969" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:21:44.969" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:21:44.969" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:21:44.984" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191112 14:21:49.984" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:21:49.984" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:21:49.984" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:21:50.000" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191112 14:21:55.000" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:21:55.000" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:21:55.000" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:21:55.016" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191112 14:22:00.016" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:00.016" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:00.016" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:00.031" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191112 14:22:05.031" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:05.031" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:05.031" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:05.047" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191112 14:22:10.047" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:10.047" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:10.047" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:10.063" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191112 14:22:15.063" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:15.063" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:15.063" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:15.141" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191112 14:22:20.141" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:20.141" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:20.141" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:20.156" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191112 14:22:25.156" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:25.156" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:25.156" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:25.172" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191112 14:22:30.188" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:30.188" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:30.188" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:30.203" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191112 14:22:35.203" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.203" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:35.203" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.219" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191112 14:22:35.219" level="INFO">Platform.Platform_worklist_central_print_get_tasks: All exams can central print.
70
21
Platform.Platform_worklist_central_print: Print successfully:
{'printedTime': 70, 'isFinishPrint': True, 'failedTasks': 0}</msg>
<msg timestamp="20191112 14:22:35.219" level="INFO">${centralprint_result} = (True, [{'returnValue': 0, 'patientName': 'CN20191112142058625005', 'printTaskID': '2135', 'warningCode': 0, 'warningDescription': '', 'extensions': ''}])</msg>
<status status="PASS" starttime="20191112 14:21:39.641" endtime="20191112 14:22:35.219"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${centralprint_result}[0] == True</arg>
</arguments>
<status status="PASS" starttime="20191112 14:22:35.219" endtime="20191112 14:22:35.219"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${centralprint_result}[1]</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${taksinfo}</var>
</assign>
<msg timestamp="20191112 14:22:35.219" level="INFO">${taksinfo} = {'returnValue': 0, 'patientName': 'CN20191112142058625005', 'printTaskID': '2135', 'warningCode': 0, 'warningDescription': '', 'extensions': ''}</msg>
<status status="PASS" starttime="20191112 14:22:35.219" endtime="20191112 14:22:35.219"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${taksinfo}</arg>
<arg>printTaskID</arg>
</arguments>
<assign>
<var>${printtask_sn}</var>
</assign>
<msg timestamp="20191112 14:22:35.219" level="INFO">${printtask_sn} = 2135</msg>
<status status="PASS" starttime="20191112 14:22:35.219" endtime="20191112 14:22:35.219"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Printtask By Sn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with SN from table wggc.dbp.afp_printtask in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${printtask_sn}</arg>
</arguments>
<assign>
<var>${PrintTask_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:22:35.219" level="INFO">${PrintTask_DB_Value} = {"Result": true, "SN": 2135, "PatientID": "P20191112142058625005", "TerminalID": "Customer_Terminal01", "Status": 4, "ImageCount": 1, "ReportCount": 1, "EstimateTime": 63, "ErrorCode": 0, "ErrorDesc":...</msg>
<status status="PASS" starttime="20191112 14:22:35.219" endtime="20191112 14:22:35.219"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintTask_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:22:35.219" level="INFO">${json} = {'Result': True, 'SN': 2135, 'PatientID': 'P20191112142058625005', 'TerminalID': 'Customer_Terminal01', 'Status': 4, 'ImageCount': 1, 'ReportCount': 1, 'EstimateTime': 63, 'ErrorCode': 0, 'ErrorDesc':...</msg>
<status status="PASS" starttime="20191112 14:22:35.219" endtime="20191112 14:22:35.219"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Printtask_status}</var>
</assign>
<msg timestamp="20191112 14:22:35.250" level="INFO">${Printtask_status} = [4]</msg>
<status status="PASS" starttime="20191112 14:22:35.219" endtime="20191112 14:22:35.250"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191112 14:22:35.297" level="INFO">${Patient_id} = ['P20191112142058625005']</msg>
<status status="PASS" starttime="20191112 14:22:35.250" endtime="20191112 14:22:35.297"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Printtask_status}[0]</arg>
<arg>4</arg>
<arg>The Print task status in DB is 4</arg>
</arguments>
<msg timestamp="20191112 14:22:35.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 14:22:35.297" endtime="20191112 14:22:35.297"></status>
</kw>
<status status="PASS" starttime="20191112 14:22:35.219" endtime="20191112 14:22:35.297"></status>
</kw>
<status status="PASS" starttime="20191112 14:22:35.219" endtime="20191112 14:22:35.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4 \n Description: \n 1. Check the print task status in the wggc.dbo.afp_printtask table. \n Expected: \n 1. All print tasks should be successful and status should be 4. \n</arg>
</arguments>
<msg timestamp="20191112 14:22:35.297" level="INFO">Step 4 
Description: 
1. Check the print task status in the wggc.dbo.afp_printtask table. 
Expected: 
1. All print tasks should be successful and status should be 4. 
</msg>
<status status="PASS" starttime="20191112 14:22:35.297" endtime="20191112 14:22:35.297"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191112 14:22:35.297" level="INFO">${ACCN} = A20191112142058625005</msg>
<status status="PASS" starttime="20191112 14:22:35.297" endtime="20191112 14:22:35.297"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:22:35.297" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191112142058625005", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-12 14:22:35.790000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "DR", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191112 14:22:35.297" endtime="20191112 14:22:35.297"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:22:35.297" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191112142058625005', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-12 14:22:35.790000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'DR', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191112 14:22:35.297" endtime="20191112 14:22:35.297"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintStatus</arg>
</arguments>
<assign>
<var>${Filmprint_Status}</var>
</assign>
<msg timestamp="20191112 14:22:35.344" level="INFO">${Filmprint_Status} = [1]</msg>
<status status="PASS" starttime="20191112 14:22:35.297" endtime="20191112 14:22:35.344"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191112 14:22:35.375" level="INFO">${Patient_id} = ['P20191112142058625005']</msg>
<status status="PASS" starttime="20191112 14:22:35.344" endtime="20191112 14:22:35.375"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Filmprint_Status}[0]</arg>
<arg>1</arg>
<arg>The filmp rint status in DB is 1</arg>
</arguments>
<msg timestamp="20191112 14:22:35.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 14:22:35.375" endtime="20191112 14:22:35.375"></status>
</kw>
<status status="PASS" starttime="20191112 14:22:35.297" endtime="20191112 14:22:35.375"></status>
</kw>
<status status="PASS" starttime="20191112 14:22:35.297" endtime="20191112 14:22:35.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5 \n Description: \n 1. Check the FilmPrintStatus of these patients in WGGC.dbo.afp_ExamInfo table. \n Expected: \n 1. The status should be printed.</arg>
</arguments>
<msg timestamp="20191112 14:22:35.375" level="INFO">Step 5 
Description: 
1. Check the FilmPrintStatus of these patients in WGGC.dbo.afp_ExamInfo table. 
Expected: 
1. The status should be printed.</msg>
<status status="PASS" starttime="20191112 14:22:35.375" endtime="20191112 14:22:35.375"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191112 14:22:35.375" level="INFO">${ACCN} = A20191112142058625005</msg>
<status status="PASS" starttime="20191112 14:22:35.375" endtime="20191112 14:22:35.375"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:22:35.375" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191112142058625005", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-12 14:22:35.790000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "DR", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191112 14:22:35.375" endtime="20191112 14:22:35.375"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:22:35.375" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191112142058625005', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-12 14:22:35.790000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'DR', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191112 14:22:35.375" endtime="20191112 14:22:35.375"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintStatus</arg>
</arguments>
<assign>
<var>${ReportPrint_Status}</var>
</assign>
<msg timestamp="20191112 14:22:35.422" level="INFO">${ReportPrint_Status} = [1]</msg>
<status status="PASS" starttime="20191112 14:22:35.375" endtime="20191112 14:22:35.422"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191112 14:22:35.453" level="INFO">${Patient_id} = ['P20191112142058625005']</msg>
<status status="PASS" starttime="20191112 14:22:35.422" endtime="20191112 14:22:35.453"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${ReportPrint_Status}[0]</arg>
<arg>1</arg>
<arg>The Report print status in DB is 1</arg>
</arguments>
<msg timestamp="20191112 14:22:35.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 14:22:35.453" endtime="20191112 14:22:35.453"></status>
</kw>
<status status="PASS" starttime="20191112 14:22:35.375" endtime="20191112 14:22:35.453"></status>
</kw>
<status status="PASS" starttime="20191112 14:22:35.375" endtime="20191112 14:22:35.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6 \n Description: \n 1. Check the ReportPrintStatus of these patients \ in WGGC.dbo.afp_ExamInfo table. \n Expected: \n The status should be printed. \n</arg>
</arguments>
<msg timestamp="20191112 14:22:35.453" level="INFO">Step 6 
Description: 
1. Check the ReportPrintStatus of these patients  in WGGC.dbo.afp_ExamInfo table. 
Expected: 
The status should be printed. 
</msg>
<status status="PASS" starttime="20191112 14:22:35.453" endtime="20191112 14:22:35.453"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Report_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191112 14:22:35.453" level="INFO">${Report_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191112 14:22:35.453" endtime="20191112 14:22:35.453"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191112 14:22:35.453" level="INFO">${ACCN} = A20191112142058625005</msg>
<status status="PASS" starttime="20191112 14:22:35.453" endtime="20191112 14:22:35.453"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:22:35.453" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191112142058625005", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-12 14:22:35.790000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "DR", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191112 14:22:35.453" endtime="20191112 14:22:35.453"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:22:35.453" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191112142058625005', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-12 14:22:35.790000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'DR', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191112 14:22:35.453" endtime="20191112 14:22:35.453"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrint_DateTime}</var>
</assign>
<msg timestamp="20191112 14:22:35.500" level="INFO">${ReportPrint_DateTime} = ['2019-11-12 14:22:35.803000']</msg>
<status status="PASS" starttime="20191112 14:22:35.453" endtime="20191112 14:22:35.500"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Report_Print_DateTime_orignal}</arg>
<arg>${ReportPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191112 14:22:35.500" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-11-12 14:22:35.803000]</msg>
<msg timestamp="20191112 14:22:35.500" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191112 14:22:35.500" endtime="20191112 14:22:35.500"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The report print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191112 14:22:35.500" endtime="20191112 14:22:35.500"></status>
</kw>
<status status="PASS" starttime="20191112 14:22:35.453" endtime="20191112 14:22:35.500"></status>
</kw>
<status status="PASS" starttime="20191112 14:22:35.453" endtime="20191112 14:22:35.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 7 \n Description: \n 1. Check the report print date and time in the exam table of patients. \n Expected: \n 1. The values should be updated. \ \n</arg>
</arguments>
<msg timestamp="20191112 14:22:35.500" level="INFO">Step 7 
Description: 
1. Check the report print date and time in the exam table of patients. 
Expected: 
1. The values should be updated.  
</msg>
<status status="PASS" starttime="20191112 14:22:35.500" endtime="20191112 14:22:35.500"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Film_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191112 14:22:35.500" level="INFO">${Film_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191112 14:22:35.500" endtime="20191112 14:22:35.500"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191112 14:22:35.500" level="INFO">${ACCN} = A20191112142058625005</msg>
<status status="PASS" starttime="20191112 14:22:35.500" endtime="20191112 14:22:35.500"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191112 14:22:35.500" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191112142058625005", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-12 14:22:35.790000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "DR", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191112 14:22:35.500" endtime="20191112 14:22:35.500"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191112 14:22:35.500" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191112142058625005', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-12 14:22:35.790000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'DR', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191112 14:22:35.500" endtime="20191112 14:22:35.500"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrint_DateTime}</var>
</assign>
<msg timestamp="20191112 14:22:35.547" level="INFO">${FilmPrint_DateTime} = ['2019-11-12 14:22:35.790000']</msg>
<status status="PASS" starttime="20191112 14:22:35.500" endtime="20191112 14:22:35.547"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Film_Print_DateTime_orignal}</arg>
<arg>${FilmPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191112 14:22:35.547" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-11-12 14:22:35.790000]</msg>
<msg timestamp="20191112 14:22:35.547" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191112 14:22:35.547" endtime="20191112 14:22:35.547"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The film print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191112 14:22:35.547" endtime="20191112 14:22:35.547"></status>
</kw>
<status status="PASS" starttime="20191112 14:22:35.500" endtime="20191112 14:22:35.547"></status>
</kw>
<status status="PASS" starttime="20191112 14:22:35.500" endtime="20191112 14:22:35.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 8 \n Description: \n 1. Check the Film print date and time in the exam table of patients. \n Expected: \n 1. The values should be updated. \ \n</arg>
</arguments>
<msg timestamp="20191112 14:22:35.547" level="INFO">Step 8 
Description: 
1. Check the Film print date and time in the exam table of patients. 
Expected: 
1. The values should be updated.  
</msg>
<status status="PASS" starttime="20191112 14:22:35.547" endtime="20191112 14:22:35.547"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191112 14:20:58.594" endtime="20191112 14:22:35.547" critical="yes"></status>
</test>
<test id="s1-t12" name="SmokeTest_0012_Core_4181_07.01.01 Worklist workflow fuzzy query by patientid">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description \n 1. Prepare some patients /exams in PS system. \n Expected: \n 1. The preparation can finish successfully. \n</arg>
</arguments>
<msg timestamp="20191112 14:22:35.547" level="INFO">Step 1 
Description 
1. Prepare some patients /exams in PS system. 
Expected: 
1. The preparation can finish successfully. 
</msg>
<status status="PASS" starttime="20191112 14:22:35.547" endtime="20191112 14:22:35.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Use the fuzzy query API to simalute the fuzzy query operation with patient id. \n Expected: \n The records count and information should be correct. \n</arg>
</arguments>
<msg timestamp="20191112 14:22:35.547" level="INFO">Step 2 
Description: 
1. Use the fuzzy query API to simalute the fuzzy query operation with patient id. 
Expected: 
The records count and information should be correct. 
</msg>
<status status="PASS" starttime="20191112 14:22:35.547" endtime="20191112 14:22:35.547"></status>
</kw>
<kw name="Platform Login User Pwd" library="PUMA_PlatformLibrary">
<doc>platform_login_user_pwd</doc>
<arguments>
<arg>admin</arg>
<arg>123456</arg>
</arguments>
<assign>
<var>${login_result}</var>
</assign>
<msg timestamp="20191112 14:22:35.547" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.547" level="DEBUG">http://10.112.20.84:80 "GET /Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191112 14:22:35.563" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.578" level="DEBUG">http://10.112.20.84:80 "POST /Platform//account/login HTTP/1.1" 200 78</msg>
<msg timestamp="20191112 14:22:35.578" level="INFO">Platform.platform_login_user_pwd: The user login in successfully. [admin, 123456]</msg>
<msg timestamp="20191112 14:22:35.578" level="INFO">${login_result} = True</msg>
<status status="PASS" starttime="20191112 14:22:35.547" endtime="20191112 14:22:35.578"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${login_result}</arg>
</arguments>
<status status="PASS" starttime="20191112 14:22:35.578" endtime="20191112 14:22:35.578"></status>
</kw>
<kw name="Platform Worklist Fuzzy Query By PatientID" library="PUMA_PlatformLibrary">
<doc>platform_worklist_fuzzy_query_by_patientID</doc>
<arguments>
<arg>20</arg>
</arguments>
<assign>
<var>${Query_result}</var>
</assign>
<msg timestamp="20191112 14:22:35.578" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.578" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:35.594" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.688" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11859</msg>
<msg timestamp="20191112 14:22:35.688" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.703" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:35.703" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.703" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11859</msg>
<msg timestamp="20191112 14:22:35.719" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.719" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:35.719" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.735" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11537</msg>
<msg timestamp="20191112 14:22:35.735" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.735" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:35.750" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.750" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11157</msg>
<msg timestamp="20191112 14:22:35.750" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.766" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:35.766" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.766" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11121</msg>
<msg timestamp="20191112 14:22:35.781" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.781" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:35.781" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.797" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11893</msg>
<msg timestamp="20191112 14:22:35.797" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.797" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:35.797" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.828" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11617</msg>
<msg timestamp="20191112 14:22:35.828" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.828" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:35.828" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.844" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11804</msg>
<msg timestamp="20191112 14:22:35.844" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.860" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:35.860" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.860" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11484</msg>
<msg timestamp="20191112 14:22:35.875" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.875" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:35.875" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.891" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11358</msg>
<msg timestamp="20191112 14:22:35.891" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.891" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:35.891" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.906" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11671</msg>
<msg timestamp="20191112 14:22:35.906" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.922" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:35.922" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.922" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12127</msg>
<msg timestamp="20191112 14:22:35.938" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.938" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:35.938" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.953" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12246</msg>
<msg timestamp="20191112 14:22:35.953" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.953" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:35.953" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.969" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11767</msg>
<msg timestamp="20191112 14:22:35.969" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.985" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:35.985" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:35.985" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11713</msg>
<msg timestamp="20191112 14:22:36.000" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.000" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.000" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.016" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11654</msg>
<msg timestamp="20191112 14:22:36.016" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.016" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.031" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.031" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11437</msg>
<msg timestamp="20191112 14:22:36.047" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.047" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.047" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.063" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11418</msg>
<msg timestamp="20191112 14:22:36.063" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.063" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.078" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.094" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11123</msg>
<msg timestamp="20191112 14:22:36.094" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.094" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.094" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.110" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10658</msg>
<msg timestamp="20191112 14:22:36.110" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.125" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.125" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.141" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10598</msg>
<msg timestamp="20191112 14:22:36.141" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.141" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.141" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.156" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10625</msg>
<msg timestamp="20191112 14:22:36.156" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.172" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.172" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.172" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10598</msg>
<msg timestamp="20191112 14:22:36.188" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.188" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.188" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.203" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10839</msg>
<msg timestamp="20191112 14:22:36.203" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.219" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.219" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.235" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12119</msg>
<msg timestamp="20191112 14:22:36.235" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.235" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.235" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.250" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:36.250" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.266" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.266" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.281" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:36.281" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.281" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.297" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.297" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:36.313" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.313" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.313" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.328" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:36.328" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.344" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.344" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.360" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:36.360" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.360" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.375" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.375" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:36.391" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.391" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.391" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.406" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:36.406" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.422" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.422" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.438" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:36.438" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.438" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.438" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.453" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:36.469" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.469" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.469" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.485" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:36.485" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.500" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.500" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.516" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:36.516" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.516" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.516" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.531" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:36.547" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.547" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.547" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.563" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12514</msg>
<msg timestamp="20191112 14:22:36.563" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.578" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.578" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.594" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12518</msg>
<msg timestamp="20191112 14:22:36.594" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.594" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.594" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.610" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 6295</msg>
<msg timestamp="20191112 14:22:36.656" level="INFO">{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
Platform.platform_worklist_fuzzy_query_by_patientID: There are [770] rows data queried out.
Platform.platform_worklist_fuzzy_query_by_patientID: The query data is correct!</msg>
<msg timestamp="20191112 14:22:36.656" level="INFO">${Query_result} = True</msg>
<status status="PASS" starttime="20191112 14:22:35.578" endtime="20191112 14:22:36.656"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Query_result}</arg>
<arg>The query result is correct.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:22:36.656" endtime="20191112 14:22:36.656"></status>
</kw>
<kw name="Platform Logout" library="PUMA_PlatformLibrary">
<doc>platform_logout_user_pwd</doc>
<assign>
<var>${logoff_status}</var>
</assign>
<msg timestamp="20191112 14:22:36.656" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.672" level="DEBUG">http://10.112.20.84:80 "GET /Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191112 14:22:36.672" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.672" level="DEBUG">http://10.112.20.84:80 "GET /Platform//account/logOff HTTP/1.1" 302 127</msg>
<msg timestamp="20191112 14:22:36.672" level="DEBUG">http://10.112.20.84:80 "GET /Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191112 14:22:36.672" level="INFO">Platform.platform_logout: Logoff successfully.</msg>
<msg timestamp="20191112 14:22:36.672" level="INFO">${logoff_status} = True</msg>
<status status="PASS" starttime="20191112 14:22:36.656" endtime="20191112 14:22:36.672"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${logoff_status}</arg>
</arguments>
<status status="PASS" starttime="20191112 14:22:36.672" endtime="20191112 14:22:36.688"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191112 14:22:35.547" endtime="20191112 14:22:36.688" critical="yes"></status>
</test>
<test id="s1-t13" name="SmokeTest_0013_Core_4182_07.01.02 Worklist workflow fuzzy query by accession number.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description \n 1. Prepare some patients /exams in PS system. \n Expected: \n 1. The preparation can finish successfully. \n</arg>
</arguments>
<msg timestamp="20191112 14:22:36.688" level="INFO">Step 1 
Description 
1. Prepare some patients /exams in PS system. 
Expected: 
1. The preparation can finish successfully. 
</msg>
<status status="PASS" starttime="20191112 14:22:36.688" endtime="20191112 14:22:36.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Use the fuzzy query API to simalute the fuzzy query operation with patient`s accession number. \n Expected: \n The records count and information should be correct. \n</arg>
</arguments>
<msg timestamp="20191112 14:22:36.688" level="INFO">Step 2 
Description: 
1. Use the fuzzy query API to simalute the fuzzy query operation with patient`s accession number. 
Expected: 
The records count and information should be correct. 
</msg>
<status status="PASS" starttime="20191112 14:22:36.688" endtime="20191112 14:22:36.688"></status>
</kw>
<kw name="Platform Login User Pwd" library="PUMA_PlatformLibrary">
<doc>platform_login_user_pwd</doc>
<arguments>
<arg>admin</arg>
<arg>123456</arg>
</arguments>
<assign>
<var>${login_result}</var>
</assign>
<msg timestamp="20191112 14:22:36.688" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.688" level="DEBUG">http://10.112.20.84:80 "GET /Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191112 14:22:36.688" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.703" level="DEBUG">http://10.112.20.84:80 "POST /Platform//account/login HTTP/1.1" 200 78</msg>
<msg timestamp="20191112 14:22:36.703" level="INFO">Platform.platform_login_user_pwd: The user login in successfully. [admin, 123456]</msg>
<msg timestamp="20191112 14:22:36.703" level="INFO">${login_result} = True</msg>
<status status="PASS" starttime="20191112 14:22:36.688" endtime="20191112 14:22:36.703"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${login_result}</arg>
</arguments>
<status status="PASS" starttime="20191112 14:22:36.703" endtime="20191112 14:22:36.703"></status>
</kw>
<kw name="Platform Worklist Fuzzy Query By Accn" library="PUMA_PlatformLibrary">
<doc>platform_worklist_fuzzy_query_by_accn</doc>
<arguments>
<arg>20</arg>
</arguments>
<assign>
<var>${Query_result_accn}</var>
</assign>
<msg timestamp="20191112 14:22:36.719" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.719" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.719" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.735" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11859</msg>
<msg timestamp="20191112 14:22:36.735" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.735" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.735" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.750" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11859</msg>
<msg timestamp="20191112 14:22:36.750" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.766" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.766" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.766" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11537</msg>
<msg timestamp="20191112 14:22:36.766" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.781" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.781" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.781" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11157</msg>
<msg timestamp="20191112 14:22:36.797" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.797" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.797" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.813" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11121</msg>
<msg timestamp="20191112 14:22:36.813" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.813" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.813" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.828" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11893</msg>
<msg timestamp="20191112 14:22:36.828" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.828" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.844" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.844" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11617</msg>
<msg timestamp="20191112 14:22:36.844" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.860" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.860" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.860" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11804</msg>
<msg timestamp="20191112 14:22:36.875" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.875" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.875" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.891" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11484</msg>
<msg timestamp="20191112 14:22:36.891" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.891" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.891" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.906" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11358</msg>
<msg timestamp="20191112 14:22:36.906" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.922" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.922" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.922" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11671</msg>
<msg timestamp="20191112 14:22:36.938" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.938" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.938" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.953" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12127</msg>
<msg timestamp="20191112 14:22:36.953" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.969" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.969" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.969" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12246</msg>
<msg timestamp="20191112 14:22:36.985" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:36.985" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:36.985" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.000" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11767</msg>
<msg timestamp="20191112 14:22:37.000" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.000" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.016" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.031" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11713</msg>
<msg timestamp="20191112 14:22:37.031" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.031" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.031" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.047" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11654</msg>
<msg timestamp="20191112 14:22:37.047" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.063" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.063" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.063" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11437</msg>
<msg timestamp="20191112 14:22:37.078" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.094" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.094" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.110" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11418</msg>
<msg timestamp="20191112 14:22:37.110" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.110" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.110" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.125" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11123</msg>
<msg timestamp="20191112 14:22:37.125" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.141" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.141" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.156" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10658</msg>
<msg timestamp="20191112 14:22:37.156" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.156" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.156" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.172" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10598</msg>
<msg timestamp="20191112 14:22:37.172" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.188" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.188" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.203" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10625</msg>
<msg timestamp="20191112 14:22:37.203" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.203" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.203" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.219" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10598</msg>
<msg timestamp="20191112 14:22:37.219" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.235" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.235" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.250" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10839</msg>
<msg timestamp="20191112 14:22:37.250" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.266" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.266" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.281" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12119</msg>
<msg timestamp="20191112 14:22:37.281" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.281" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.281" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.313" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:37.313" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.313" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.313" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.328" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:37.344" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.344" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.344" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.360" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:37.360" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.360" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.375" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.375" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:37.391" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.391" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.391" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.406" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:37.406" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.406" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.422" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.422" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:37.438" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.438" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.438" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.453" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:37.453" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.469" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.469" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.485" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:37.485" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.485" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.485" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.500" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:37.516" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.516" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.516" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.531" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:37.531" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.531" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.547" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.563" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:37.563" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.563" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.563" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.578" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:37.578" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.594" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.594" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.610" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12514</msg>
<msg timestamp="20191112 14:22:37.610" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.610" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.625" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.641" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12518</msg>
<msg timestamp="20191112 14:22:37.641" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.641" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.641" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.656" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 7400</msg>
<msg timestamp="20191112 14:22:37.688" level="INFO">{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
Platform.platform_worklist_fuzzy_query_by_accn: There are [772] rows data queried out.
Platform.platform_worklist_fuzzy_query_by_accn: The query data is correct!</msg>
<msg timestamp="20191112 14:22:37.688" level="INFO">${Query_result_accn} = True</msg>
<status status="PASS" starttime="20191112 14:22:36.719" endtime="20191112 14:22:37.688"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Query_result_accn}</arg>
<arg>The query result is correct.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:22:37.688" endtime="20191112 14:22:37.688"></status>
</kw>
<kw name="Platform Logout" library="PUMA_PlatformLibrary">
<doc>platform_logout_user_pwd</doc>
<assign>
<var>${logoff_status}</var>
</assign>
<msg timestamp="20191112 14:22:37.703" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.703" level="DEBUG">http://10.112.20.84:80 "GET /Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191112 14:22:37.703" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.703" level="DEBUG">http://10.112.20.84:80 "GET /Platform//account/logOff HTTP/1.1" 302 127</msg>
<msg timestamp="20191112 14:22:37.703" level="DEBUG">http://10.112.20.84:80 "GET /Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191112 14:22:37.703" level="INFO">Platform.platform_logout: Logoff successfully.</msg>
<msg timestamp="20191112 14:22:37.703" level="INFO">${logoff_status} = True</msg>
<status status="PASS" starttime="20191112 14:22:37.688" endtime="20191112 14:22:37.703"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${logoff_status}</arg>
</arguments>
<status status="PASS" starttime="20191112 14:22:37.719" endtime="20191112 14:22:37.719"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191112 14:22:36.688" endtime="20191112 14:22:37.719" critical="yes"></status>
</test>
<test id="s1-t14" name="SmokeTest_0014_Core_4183_07.01.03 Worklist workflow fuzzy query by patient name.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description \n 1. Prepare some patients /exams in PS system. \n Expected: \n 1. The preparation can finish successfully. \n</arg>
</arguments>
<msg timestamp="20191112 14:22:37.719" level="INFO">Step 1 
Description 
1. Prepare some patients /exams in PS system. 
Expected: 
1. The preparation can finish successfully. 
</msg>
<status status="PASS" starttime="20191112 14:22:37.719" endtime="20191112 14:22:37.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Use the fuzzy query API to simalute the fuzzy query operation with patient`s accession number. \n Expected: \n The records count and information should be correct. \n</arg>
</arguments>
<msg timestamp="20191112 14:22:37.719" level="INFO">Step 2 
Description: 
1. Use the fuzzy query API to simalute the fuzzy query operation with patient`s accession number. 
Expected: 
The records count and information should be correct. 
</msg>
<status status="PASS" starttime="20191112 14:22:37.719" endtime="20191112 14:22:37.719"></status>
</kw>
<kw name="Platform Login User Pwd" library="PUMA_PlatformLibrary">
<doc>platform_login_user_pwd</doc>
<arguments>
<arg>admin</arg>
<arg>123456</arg>
</arguments>
<assign>
<var>${login_result}</var>
</assign>
<msg timestamp="20191112 14:22:37.719" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.719" level="DEBUG">http://10.112.20.84:80 "GET /Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191112 14:22:37.719" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.735" level="DEBUG">http://10.112.20.84:80 "POST /Platform//account/login HTTP/1.1" 200 78</msg>
<msg timestamp="20191112 14:22:37.735" level="INFO">Platform.platform_login_user_pwd: The user login in successfully. [admin, 123456]</msg>
<msg timestamp="20191112 14:22:37.750" level="INFO">${login_result} = True</msg>
<status status="PASS" starttime="20191112 14:22:37.719" endtime="20191112 14:22:37.750"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${login_result}</arg>
</arguments>
<status status="PASS" starttime="20191112 14:22:37.750" endtime="20191112 14:22:37.750"></status>
</kw>
<kw name="Platform Worklist Fuzzy Query By Patientname" library="PUMA_PlatformLibrary">
<doc>platform_worklist_fuzzy_query_by_patientname</doc>
<arguments>
<arg>20</arg>
</arguments>
<assign>
<var>${Query_result}</var>
</assign>
<msg timestamp="20191112 14:22:37.750" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.750" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.750" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.797" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11859</msg>
<msg timestamp="20191112 14:22:37.797" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.813" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.813" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.813" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11859</msg>
<msg timestamp="20191112 14:22:37.813" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.828" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.828" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.828" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11537</msg>
<msg timestamp="20191112 14:22:37.844" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.844" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.844" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.860" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11157</msg>
<msg timestamp="20191112 14:22:37.860" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.860" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.860" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.875" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11121</msg>
<msg timestamp="20191112 14:22:37.875" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.875" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.891" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.891" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11893</msg>
<msg timestamp="20191112 14:22:37.891" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.906" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.906" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.922" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11617</msg>
<msg timestamp="20191112 14:22:37.922" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.922" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.922" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.938" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11804</msg>
<msg timestamp="20191112 14:22:37.938" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.938" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.953" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.953" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11484</msg>
<msg timestamp="20191112 14:22:37.953" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.969" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.969" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.985" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11358</msg>
<msg timestamp="20191112 14:22:37.985" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:37.985" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:37.985" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.000" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11671</msg>
<msg timestamp="20191112 14:22:38.016" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.016" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.016" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.031" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12127</msg>
<msg timestamp="20191112 14:22:38.031" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.031" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.031" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.047" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12246</msg>
<msg timestamp="20191112 14:22:38.063" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.063" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.063" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.078" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11767</msg>
<msg timestamp="20191112 14:22:38.078" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.094" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.094" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.110" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11713</msg>
<msg timestamp="20191112 14:22:38.110" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.125" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.125" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.125" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11654</msg>
<msg timestamp="20191112 14:22:38.141" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.141" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.141" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.156" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11437</msg>
<msg timestamp="20191112 14:22:38.156" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.156" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.172" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.172" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11418</msg>
<msg timestamp="20191112 14:22:38.188" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.188" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.188" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.203" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11123</msg>
<msg timestamp="20191112 14:22:38.203" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.203" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.203" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.219" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10658</msg>
<msg timestamp="20191112 14:22:38.235" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.235" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.235" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.250" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10598</msg>
<msg timestamp="20191112 14:22:38.250" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.250" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.266" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.266" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10625</msg>
<msg timestamp="20191112 14:22:38.281" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.281" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.281" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.297" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10598</msg>
<msg timestamp="20191112 14:22:38.297" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.297" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.313" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.313" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10839</msg>
<msg timestamp="20191112 14:22:38.328" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.328" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.328" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.344" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12119</msg>
<msg timestamp="20191112 14:22:38.344" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.360" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.360" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.375" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:38.375" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.375" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.375" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.391" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:38.391" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.406" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.406" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.422" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:38.422" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.422" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.422" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.438" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:38.438" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.453" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.453" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.469" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:38.469" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.469" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.469" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.485" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:38.500" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.500" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.500" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.516" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:38.516" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.531" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.531" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.547" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:38.547" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.547" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.547" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.563" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:38.578" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.578" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.578" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.594" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:38.594" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.610" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.610" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.625" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:38.625" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.625" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.625" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.641" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191112 14:22:38.656" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.656" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.656" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.672" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12514</msg>
<msg timestamp="20191112 14:22:38.672" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.688" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.688" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.703" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12518</msg>
<msg timestamp="20191112 14:22:38.703" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.703" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.703" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.719" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 6295</msg>
<msg timestamp="20191112 14:22:38.766" level="INFO">{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
Platform.platform_worklist_fuzzy_query_by_patientname: There are [770] rows data queried out.
Platform.platform_worklist_fuzzy_query_by_patientname: The query data is correct!</msg>
<msg timestamp="20191112 14:22:38.766" level="INFO">${Query_result} = True</msg>
<status status="PASS" starttime="20191112 14:22:37.750" endtime="20191112 14:22:38.766"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Query_result}</arg>
<arg>The query result is correct.</arg>
</arguments>
<status status="PASS" starttime="20191112 14:22:38.766" endtime="20191112 14:22:38.766"></status>
</kw>
<kw name="Platform Logout" library="PUMA_PlatformLibrary">
<doc>platform_logout_user_pwd</doc>
<assign>
<var>${logoff_status}</var>
</assign>
<msg timestamp="20191112 14:22:38.766" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.781" level="DEBUG">http://10.112.20.84:80 "GET /Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191112 14:22:38.781" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.781" level="DEBUG">http://10.112.20.84:80 "GET /Platform//account/logOff HTTP/1.1" 302 127</msg>
<msg timestamp="20191112 14:22:38.781" level="DEBUG">http://10.112.20.84:80 "GET /Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191112 14:22:38.781" level="INFO">Platform.platform_logout: Logoff successfully.</msg>
<msg timestamp="20191112 14:22:38.781" level="INFO">${logoff_status} = True</msg>
<status status="PASS" starttime="20191112 14:22:38.766" endtime="20191112 14:22:38.781"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${logoff_status}</arg>
</arguments>
<status status="PASS" starttime="20191112 14:22:38.781" endtime="20191112 14:22:38.781"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191112 14:22:37.719" endtime="20191112 14:22:38.781" critical="yes"></status>
</test>
<test id="s1-t15" name="SmokeTest_0015_Core_4184_07.01.04 Worklist workflow create a short cut with condition of patient type.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description: \n 1. Prepare some patients/exams in PS system. \n Expected: \n 1. The preparation can finish successfully. \n</arg>
</arguments>
<msg timestamp="20191112 14:22:38.781" level="INFO">Step 1 
Description: 
1. Prepare some patients/exams in PS system. 
Expected: 
1. The preparation can finish successfully. 
</msg>
<status status="PASS" starttime="20191112 14:22:38.781" endtime="20191112 14:22:38.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description:\n 1.Clear the query condition with API in worklist. \n Expected Result:\n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191112 14:22:38.781" level="INFO">Step 2 
Description:
1.Clear the query condition with API in worklist. 
Expected Result:
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191112 14:22:38.781" endtime="20191112 14:22:38.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3 \n Description: \n 1. Use the query API to query all records of one patient type. \n Expected:\n 1. The query result should be correct. \n</arg>
</arguments>
<msg timestamp="20191112 14:22:38.781" level="INFO">Step 3 
Description: 
1. Use the query API to query all records of one patient type. 
Expected:
1. The query result should be correct. 
</msg>
<status status="PASS" starttime="20191112 14:22:38.781" endtime="20191112 14:22:38.781"></status>
</kw>
<kw name="Platform Login User Pwd" library="PUMA_PlatformLibrary">
<doc>platform_login_user_pwd</doc>
<arguments>
<arg>admin</arg>
<arg>123456</arg>
</arguments>
<assign>
<var>${login_result}</var>
</assign>
<msg timestamp="20191112 14:22:38.797" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.797" level="DEBUG">http://10.112.20.84:80 "GET /Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191112 14:22:38.797" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.813" level="DEBUG">http://10.112.20.84:80 "POST /Platform//account/login HTTP/1.1" 200 78</msg>
<msg timestamp="20191112 14:22:38.813" level="INFO">Platform.platform_login_user_pwd: The user login in successfully. [admin, 123456]</msg>
<msg timestamp="20191112 14:22:38.813" level="INFO">${login_result} = True</msg>
<status status="PASS" starttime="20191112 14:22:38.797" endtime="20191112 14:22:38.813"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${login_result}</arg>
</arguments>
<status status="PASS" starttime="20191112 14:22:38.813" endtime="20191112 14:22:38.813"></status>
</kw>
<kw name="Platform Worklist Fuzzy Query By Patienttype" library="PUMA_PlatformLibrary">
<doc>platform_worklist_fuzzy_query_by_patienttype</doc>
<arguments>
<arg>门诊病人,住院病人</arg>
</arguments>
<assign>
<var>${Query_result}</var>
</assign>
<msg timestamp="20191112 14:22:38.828" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.828" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.828" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.860" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11859</msg>
<msg timestamp="20191112 14:22:38.875" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.875" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.875" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.891" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11859</msg>
<msg timestamp="20191112 14:22:38.891" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.891" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.891" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.906" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11537</msg>
<msg timestamp="20191112 14:22:38.906" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.906" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.922" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.922" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11157</msg>
<msg timestamp="20191112 14:22:38.922" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.938" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.938" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.938" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11121</msg>
<msg timestamp="20191112 14:22:38.953" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.953" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.953" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.953" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11893</msg>
<msg timestamp="20191112 14:22:38.969" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.969" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.969" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.985" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11617</msg>
<msg timestamp="20191112 14:22:38.985" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:38.985" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:38.985" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.000" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11804</msg>
<msg timestamp="20191112 14:22:39.000" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.016" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:39.016" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.016" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11484</msg>
<msg timestamp="20191112 14:22:39.031" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.031" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:39.031" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.031" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11358</msg>
<msg timestamp="20191112 14:22:39.047" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.047" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:39.047" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.063" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11671</msg>
<msg timestamp="20191112 14:22:39.063" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.063" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:39.063" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.094" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12127</msg>
<msg timestamp="20191112 14:22:39.094" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.094" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:39.094" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.110" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12246</msg>
<msg timestamp="20191112 14:22:39.110" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.110" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:39.125" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.125" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11767</msg>
<msg timestamp="20191112 14:22:39.125" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.141" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:39.141" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.141" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11713</msg>
<msg timestamp="20191112 14:22:39.156" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.156" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:39.156" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.172" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11654</msg>
<msg timestamp="20191112 14:22:39.172" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.172" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:39.188" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.188" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11437</msg>
<msg timestamp="20191112 14:22:39.188" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.203" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:39.203" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.219" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11418</msg>
<msg timestamp="20191112 14:22:39.219" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.219" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:39.219" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.235" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11123</msg>
<msg timestamp="20191112 14:22:39.235" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.250" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:39.250" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.266" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10658</msg>
<msg timestamp="20191112 14:22:39.281" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.281" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:39.281" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.297" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10598</msg>
<msg timestamp="20191112 14:22:39.297" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.297" level="DEBUG">http://10.112.20.84:80 "GET /Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191112 14:22:39.297" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.313" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 9884</msg>
<msg timestamp="20191112 14:22:39.344" level="INFO">2,1
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
Platform.platform_worklist_fuzzy_query_by_patienttype: There are [419] rows data queried out.
Platform.platform_worklist_fuzzy_query_by_patienttype: The query data is correct!</msg>
<msg timestamp="20191112 14:22:39.344" level="INFO">${Query_result} = {"Result": true, "worklist_data": [{"accessionNumber": "A20191112142058625005", "patientID": "P20191112142058625005", "patientName": "CN20191112142058625005", "studyDate": "2019-11-12", "studyTime": "...</msg>
<status status="PASS" starttime="20191112 14:22:38.813" endtime="20191112 14:22:39.344"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Query_result}</arg>
</arguments>
<assign>
<var>${Json_result}</var>
</assign>
<msg timestamp="20191112 14:22:39.375" level="INFO">${Json_result} = {'Result': True, 'worklist_data': [{'accessionNumber': 'A20191112142058625005', 'patientID': 'P20191112142058625005', 'patientName': 'CN20191112142058625005', 'studyDate': '2019-11-12', 'studyTime': '...</msg>
<status status="PASS" starttime="20191112 14:22:39.344" endtime="20191112 14:22:39.375"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Json_result}</arg>
<arg>Result</arg>
</arguments>
<assign>
<var>${Result}</var>
</assign>
<msg timestamp="20191112 14:22:39.406" level="INFO">${Result} = [True]</msg>
<status status="PASS" starttime="20191112 14:22:39.375" endtime="20191112 14:22:39.406"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Result}[0]</arg>
</arguments>
<status status="PASS" starttime="20191112 14:22:39.406" endtime="20191112 14:22:39.406"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Json_result}</arg>
<arg>worklist_data</arg>
</arguments>
<assign>
<var>${query_data}</var>
</assign>
<msg timestamp="20191112 14:22:39.453" level="INFO">${query_data} = [[{'accessionNumber': 'A20191112142058625005', 'patientID': 'P20191112142058625005', 'patientName': 'CN20191112142058625005', 'studyDate': '2019-11-12', 'studyTime': '14:21:28', 'patientSex': 'F', 'pa...</msg>
<status status="PASS" starttime="20191112 14:22:39.406" endtime="20191112 14:22:39.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${query_data}</arg>
</arguments>
<msg timestamp="20191112 14:22:39.453" level="INFO">[[{'accessionNumber': 'A20191112142058625005', 'patientID': 'P20191112142058625005', 'patientName': 'CN20191112142058625005', 'studyDate': '2019-11-12', 'studyTime': '14:21:28', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112142058625005', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-12 14:22:35.790', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-12 14:22:35.803', 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112141526593328', 'patientID': 'P20191112141526593328', 'patientName': 'CN20191112141526593328', 'studyDate': '2019-11-12', 'studyTime': '14:15:53', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112141526593328', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-12 14:20:53.913', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-12 14:20:53.920', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112141445687024', 'patientID': 'P20191112141445687024', 'patientName': 'CN20191112141445687024', 'studyDate': '2019-11-12', 'studyTime': '14:15:13', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112141445687024', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-12 14:19:58.603', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-12 14:19:58.613', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112141404831347', 'patientID': 'P20191112141404831347', 'patientName': 'CN20191112141404831347', 'studyDate': '2019-11-12', 'studyTime': '14:14:33', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112141404831347', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-12 14:19:01.700', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-12 14:19:01.710', 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112141323718168', 'patientID': 'P20191112141323718168', 'patientName': 'CN20191112141323718168', 'studyDate': '2019-11-12', 'studyTime': '14:13:53', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112141323718168', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-12 14:18:06.523', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-12 14:18:06.533', 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112141242624366', 'patientID': 'P20191112141242624366', 'patientName': 'CN20191112141242624366', 'studyDate': '2019-11-12', 'studyTime': '14:13:13', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112141242624366', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-12 14:17:10.077', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-12 14:17:10.090', 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112141211671201', 'patientID': 'P20191112141211671201', 'patientName': 'CN20191112141211671201', 'studyDate': '2019-11-12', 'studyTime': '14:12:43', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112141211671201', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112140710917430', 'patientID': 'P20191112140710917430', 'patientName': 'CN20191112140710917430', 'studyDate': '2019-11-12', 'studyTime': '14:07:43', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112140710917430', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-12 14:11:00.067', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-12 14:10:59.457', 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112140103316869', 'patientID': 'P20191112140103316869', 'patientName': 'CN20191112140103316869', 'studyDate': '2019-11-12', 'studyTime': '14:01:32', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112140103316869', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-12 14:05:36.870', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-12 14:05:36.730', 'reportCount': 2, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112135743550986', 'patientID': 'P20191112135743550986', 'patientName': 'CN20191112135743550986', 'studyDate': '2019-11-12', 'studyTime': '13:57:59', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112135732144722', 'patientID': 'P20191112135732144722', 'patientName': 'CN20191112135732144722', 'studyDate': '2019-11-12', 'studyTime': '13:57:38', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112135721285336', 'patientID': 'P20191112135721285336', 'patientName': 'CN20191112135721285336', 'studyDate': '2019-11-12', 'studyTime': '13:57:27', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112135649879043', 'patientID': 'P20191112135649879043', 'patientName': 'CN20191112135649879043', 'studyDate': '2019-11-12', 'studyTime': '13:57:18', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112135649879043', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112111052581390', 'patientID': 'P20191112111052581390', 'patientName': 'CN20191112111052581390', 'studyDate': '2019-11-12', 'studyTime': '11:11:22', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112111052581390', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-12 11:12:30.120', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-12 11:12:30.127', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112110526580970', 'patientID': 'P20191112110526580970', 'patientName': 'CN20191112110526580970', 'studyDate': '2019-11-12', 'studyTime': '11:05:57', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112110526580970', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-12 11:10:48.510', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-12 11:10:48.520', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112110445493706', 'patientID': 'P20191112110445493706', 'patientName': 'CN20191112110445493706', 'studyDate': '2019-11-12', 'studyTime': '11:05:17', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112110445493706', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-12 11:09:52.260', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-12 11:09:52.270', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112110354427078', 'patientID': 'P20191112110354427078', 'patientName': 'CN20191112110354427078', 'studyDate': '2019-11-12', 'studyTime': '11:04:26', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112110354427078', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-12 11:08:56.007', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-12 11:08:56.017', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112110313473901', 'patientID': 'P20191112110313473901', 'patientName': 'CN20191112110313473901', 'studyDate': '2019-11-12', 'studyTime': '11:03:41', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112110313473901', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-12 11:07:59.527', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-12 11:07:59.540', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112110232333346', 'patientID': 'P20191112110232333346', 'patientName': 'CN20191112110232333346', 'studyDate': '2019-11-12', 'studyTime': '11:03:01', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112110232333346', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-12 11:07:04.180', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-12 11:07:04.190', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112105818051769', 'patientID': 'P20191112105818051769', 'patientName': 'CN20191112105818051769', 'studyDate': '2019-11-12', 'studyTime': '10:58:46', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191112105818051769', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-12 11:00:29.440', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112105325520143', 'patientID': 'P20191112105325520143', 'patientName': 'CN20191112105325520143', 'studyDate': '2019-11-12', 'studyTime': '10:53:56', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112105325520143', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-12 10:57:06.043', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-12 10:57:05.883', 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112104707004030', 'patientID': 'P20191112104707004030', 'patientName': 'CN20191112104707004030', 'studyDate': '2019-11-12', 'studyTime': '10:47:36', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112104707004030', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-12 10:51:52.080', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-12 10:51:51.370', 'reportCount': 2, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112104348969334', 'patientID': 'P20191112104348969334', 'patientName': 'CN20191112104348969334', 'studyDate': '2019-11-12', 'studyTime': '10:44:00', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112104338009358', 'patientID': 'P20191112104338009358', 'patientName': 'CN20191112104338009358', 'studyDate': '2019-11-12', 'studyTime': '10:43:44', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112104326916276', 'patientID': 'P20191112104326916276', 'patientName': 'CN20191112104326916276', 'studyDate': '2019-11-12', 'studyTime': '10:43:33', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112104255924365', 'patientID': 'P20191112104255924365', 'patientName': 'CN20191112104255924365', 'studyDate': '2019-11-12', 'studyTime': '10:43:26', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112104255924365', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112104032990428', 'patientID': 'P20191112104032990428', 'patientName': 'CN20191112104032990428', 'studyDate': '2019-11-12', 'studyTime': '10:41:06', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112104032990428', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112102902231209', 'patientID': 'P20191112102902231209', 'patientName': 'CN20191112102902231209', 'studyDate': '2019-11-12', 'studyTime': '10:29:31', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112102902231209', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-12 10:30:39.457', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-12 10:30:39.490', 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112102335418287', 'patientID': 'P20191112102335418287', 'patientName': 'CN20191112102335418287', 'studyDate': '2019-11-12', 'studyTime': '10:24:05', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112102335418287', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-12 10:28:58.963', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-12 10:28:58.970', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112102254386988', 'patientID': 'P20191112102254386988', 'patientName': 'CN20191112102254386988', 'studyDate': '2019-11-12', 'studyTime': '10:23:25', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112102254386988', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-12 10:28:03.603', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-12 10:28:03.620', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112102203371294', 'patientID': 'P20191112102203371294', 'patientName': 'CN20191112102203371294', 'studyDate': '2019-11-12', 'studyTime': '10:22:35', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112102203371294', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-12 10:27:08.127', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-12 10:27:08.133', 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112102121777491', 'patientID': 'P20191112102121777491', 'patientName': 'CN20191112102121777491', 'studyDate': '2019-11-12', 'studyTime': '10:21:50', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112102121777491', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-12 10:26:11.760', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-12 10:26:11.773', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112102040449313', 'patientID': 'P20191112102040449313', 'patientName': 'CN20191112102040449313', 'studyDate': '2019-11-12', 'studyTime': '10:21:10', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112102040449313', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-12 10:25:15.300', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-12 10:25:15.310', 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112102009261773', 'patientID': 'P20191112102009261773', 'patientName': 'CN20191112102009261773', 'studyDate': '2019-11-12', 'studyTime': '10:20:40', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112102009261773', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112101517620773', 'patientID': 'P20191112101517620773', 'patientName': 'CN20191112101517620773', 'studyDate': '2019-11-12', 'studyTime': '10:15:45', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112101517620773', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-12 10:18:58.093', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-12 10:18:57.110', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112100909464049', 'patientID': 'P20191112100909464049', 'patientName': 'CN20191112100909464049', 'studyDate': '2019-11-12', 'studyTime': '10:09:40', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112100909464049', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-12 10:13:43.853', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-12 10:13:43.463', 'reportCount': 2, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112100550439366', 'patientID': 'P20191112100550439366', 'patientName': 'CN20191112100550439366', 'studyDate': '2019-11-12', 'studyTime': '10:06:01', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112100539486226', 'patientID': 'P20191112100539486226', 'patientName': 'CN20191112100539486226', 'studyDate': '2019-11-12', 'studyTime': '10:05:45', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112100528517460', 'patientID': 'P20191112100528517460', 'patientName': 'CN20191112100528517460', 'studyDate': '2019-11-12', 'studyTime': '10:05:34', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112100447571841', 'patientID': 'P20191112100447571841', 'patientName': 'CN20191112100447571841', 'studyDate': '2019-11-12', 'studyTime': '10:05:20', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112100447571841', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112095827099076', 'patientID': 'P20191112095827099076', 'patientName': 'CN20191112095827099076', 'studyDate': '2019-11-12', 'studyTime': '09:58:55', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112095827099076', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112095756219892', 'patientID': 'P20191112095756219892', 'patientName': 'CN20191112095756219892', 'studyDate': '2019-11-12', 'studyTime': '09:58:25', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112095756219892', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112095341649765', 'patientID': 'P20191112095341649765', 'patientName': 'CN20191112095341649765', 'studyDate': '2019-11-12', 'studyTime': '09:54:09', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191112095341649765', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-12 09:55:54.260', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112095310484371', 'patientID': 'P20191112095310484371', 'patientName': 'CN20191112095310484371', 'studyDate': '2019-11-12', 'studyTime': '09:53:39', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112095310484371', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112095208349454', 'patientID': 'P20191112095208349454', 'patientName': 'CN20191112095208349454', 'studyDate': '2019-11-12', 'studyTime': '09:52:39', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112095208349454', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112095145916789', 'patientID': 'P20191112095145916789', 'patientName': 'CN20191112095145916789', 'studyDate': '2019-11-12', 'studyTime': '09:51:52', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112095134429895', 'patientID': 'P20191112095134429895', 'patientName': 'CN20191112095134429895', 'studyDate': '2019-11-12', 'studyTime': '09:51:41', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191112095103507327', 'patientID': 'P20191112095103507327', 'patientName': 'CN20191112095103507327', 'studyDate': '2019-11-12', 'studyTime': '09:51:34', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191112095103507327', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111165022360766', 'patientID': 'P20191111165022360766', 'patientName': 'CN20191111165022360766', 'studyDate': '2019-11-11', 'studyTime': '16:50:51', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111165022360766', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111164951485401', 'patientID': 'P20191111164951485401', 'patientName': 'CN20191111164951485401', 'studyDate': '2019-11-11', 'studyTime': '16:50:20', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111164951485401', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111164535870727', 'patientID': 'P20191111164535870727', 'patientName': 'CN20191111164535870727', 'studyDate': '2019-11-11', 'studyTime': '16:46:05', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191111164535870727', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-11 16:47:48.947', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111164505001006', 'patientID': 'P20191111164505001006', 'patientName': 'CN20191111164505001006', 'studyDate': '2019-11-11', 'studyTime': '16:45:35', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111164505001006', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111164403184752', 'patientID': 'P20191111164403184752', 'patientName': 'CN20191111164403184752', 'studyDate': '2019-11-11', 'studyTime': '16:44:30', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111164403184752', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111164340907857', 'patientID': 'P20191111164340907857', 'patientName': 'CN20191111164340907857', 'studyDate': '2019-11-11', 'studyTime': '16:43:47', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111164329587752', 'patientID': 'P20191111164329587752', 'patientName': 'CN20191111164329587752', 'studyDate': '2019-11-11', 'studyTime': '16:43:35', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111164258683681', 'patientID': 'P20191111164258683681', 'patientName': 'CN20191111164258683681', 'studyDate': '2019-11-11', 'studyTime': '16:43:30', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111164258683681', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111162011870011', 'patientID': 'P20191111162011870011', 'patientName': 'CN20191111162011870011', 'studyDate': '2019-11-11', 'studyTime': '16:20:40', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111162011870011', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111161940860846', 'patientID': 'P20191111161940860846', 'patientName': 'CN20191111161940860846', 'studyDate': '2019-11-11', 'studyTime': '16:20:10', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111161940860846', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111161526578985', 'patientID': 'P20191111161526578985', 'patientName': 'CN20191111161526578985', 'studyDate': '2019-11-11', 'studyTime': '16:15:54', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191111161526578985', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-11 16:17:34.907', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111161455526836', 'patientID': 'P20191111161455526836', 'patientName': 'CN20191111161455526836', 'studyDate': '2019-11-11', 'studyTime': '16:15:24', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111161455526836', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111161353918507', 'patientID': 'P20191111161353918507', 'patientName': 'CN20191111161353918507', 'studyDate': '2019-11-11', 'studyTime': '16:14:24', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111161353918507', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111161332498704', 'patientID': 'P20191111161332498704', 'patientName': 'CN20191111161332498704', 'studyDate': '2019-11-11', 'studyTime': '16:13:39', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111161321535907', 'patientID': 'P20191111161321535907', 'patientName': 'CN20191111161321535907', 'studyDate': '2019-11-11', 'studyTime': '16:13:27', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111161250668805', 'patientID': 'P20191111161250668805', 'patientName': 'CN20191111161250668805', 'studyDate': '2019-11-11', 'studyTime': '16:13:19', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111161250668805', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111155831628627', 'patientID': 'P20191111155831628627', 'patientName': 'CN20191111155831628627', 'studyDate': '2019-11-11', 'studyTime': '15:58:59', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111155831628627', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111155800753262', 'patientID': 'P20191111155800753262', 'patientName': 'CN20191111155800753262', 'studyDate': '2019-11-11', 'studyTime': '15:58:29', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111155800753262', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111155345318692', 'patientID': 'P20191111155345318692', 'patientName': 'CN20191111155345318692', 'studyDate': '2019-11-11', 'studyTime': '15:54:14', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191111155345318692', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-11 15:55:55.160', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111155314420138', 'patientID': 'P20191111155314420138', 'patientName': 'CN20191111155314420138', 'studyDate': '2019-11-11', 'studyTime': '15:53:44', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111155314420138', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111155212688556', 'patientID': 'P20191111155212688556', 'patientName': 'CN20191111155212688556', 'studyDate': '2019-11-11', 'studyTime': '15:52:44', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111155212688556', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111155150232788', 'patientID': 'P20191111155150232788', 'patientName': 'CN20191111155150232788', 'studyDate': '2019-11-11', 'studyTime': '15:51:57', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111155139339544', 'patientID': 'P20191111155139339544', 'patientName': 'CN20191111155139339544', 'studyDate': '2019-11-11', 'studyTime': '15:51:45', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111155108288987', 'patientID': 'P20191111155108288987', 'patientName': 'CN20191111155108288987', 'studyDate': '2019-11-11', 'studyTime': '15:51:38', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111155108288987', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111150130053540', 'patientID': 'P20191111150130053540', 'patientName': 'CN20191111150130053540', 'studyDate': '2019-11-11', 'studyTime': '15:01:58', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111150130053540', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111150059148040', 'patientID': 'P20191111150059148040', 'patientName': 'CN20191111150059148040', 'studyDate': '2019-11-11', 'studyTime': '15:01:28', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111150059148040', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111145642315193', 'patientID': 'P20191111145642315193', 'patientName': 'CN20191111145642315193', 'studyDate': '2019-11-11', 'studyTime': '14:57:13', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191111145642315193', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-11 14:58:50.070', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111145611449038', 'patientID': 'P20191111145611449038', 'patientName': 'CN20191111145611449038', 'studyDate': '2019-11-11', 'studyTime': '14:56:38', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111145611449038', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111145509356238', 'patientID': 'P20191111145509356238', 'patientName': 'CN20191111145509356238', 'studyDate': '2019-11-11', 'studyTime': '14:55:38', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111145509356238', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111145446788653', 'patientID': 'P20191111145446788653', 'patientName': 'CN20191111145446788653', 'studyDate': '2019-11-11', 'studyTime': '14:54:53', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111145435425900', 'patientID': 'P20191111145435425900', 'patientName': 'CN20191111145435425900', 'studyDate': '2019-11-11', 'studyTime': '14:54:42', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111135537690576', 'patientID': 'P20191111135537690576', 'patientName': 'CN20191111135537690576', 'studyDate': '2019-11-11', 'studyTime': '13:56:08', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111135537690576', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-11 14:01:04.950', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-11 14:01:04.957', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111135456471774', 'patientID': 'P20191111135456471774', 'patientName': 'CN20191111135456471774', 'studyDate': '2019-11-11', 'studyTime': '13:55:27', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111135456471774', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-11 14:00:09.763', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-11 14:00:09.773', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111135405377956', 'patientID': 'P20191111135405377956', 'patientName': 'CN20191111135405377956', 'studyDate': '2019-11-11', 'studyTime': '13:54:37', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111135405377956', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-11 13:59:13.257', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-11 13:59:13.270', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111135324424780', 'patientID': 'P20191111135324424780', 'patientName': 'CN20191111135324424780', 'studyDate': '2019-11-11', 'studyTime': '13:53:52', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111135324424780', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-11 13:58:16.660', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-11 13:58:16.670', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111135243252852', 'patientID': 'P20191111135243252852', 'patientName': 'CN20191111135243252852', 'studyDate': '2019-11-11', 'studyTime': '13:53:12', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111135243252852', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-11 13:57:21.127', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-11 13:57:21.133', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111134827408773', 'patientID': 'P20191111134827408773', 'patientName': 'CN20191111134827408773', 'studyDate': '2019-11-11', 'studyTime': '13:48:57', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191111134827408773', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-11 13:50:37.627', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111134322918680', 'patientID': 'P20191111134322918680', 'patientName': 'CN20191111134322918680', 'studyDate': '2019-11-11', 'studyTime': '13:43:57', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111134322918680', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-11 13:47:15.923', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-11 13:47:15.257', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111133714688104', 'patientID': 'P20191111133714688104', 'patientName': 'CN20191111133714688104', 'studyDate': '2019-11-11', 'studyTime': '13:37:46', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111133714688104', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-11 13:41:48.043', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-11 13:41:47.967', 'reportCount': 2, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111133355062299', 'patientID': 'P20191111133355062299', 'patientName': 'CN20191111133355062299', 'studyDate': '2019-11-11', 'studyTime': '13:34:10', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111133343765411', 'patientID': 'P20191111133343765411', 'patientName': 'CN20191111133343765411', 'studyDate': '2019-11-11', 'studyTime': '13:33:50', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111133332531022', 'patientID': 'P20191111133332531022', 'patientName': 'CN20191111133332531022', 'studyDate': '2019-11-11', 'studyTime': '13:33:39', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191111133301124731', 'patientID': 'P20191111133301124731', 'patientName': 'CN20191111133301124731', 'studyDate': '2019-11-11', 'studyTime': '13:33:31', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191111133301124731', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191108170204031743', 'patientID': 'P20191108170204031743', 'patientName': 'CN20191108170204031743', 'studyDate': '2019-11-08', 'studyTime': '17:02:41', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191108170204031743', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-08 17:03:54.917', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-08 17:03:54.923', 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191108165631796727', 'patientID': 'P20191108165631796727', 'patientName': 'CN20191108165631796727', 'studyDate': '2019-11-08', 'studyTime': '16:57:06', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191108165631796727', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-08 17:02:05.080', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-08 17:02:05.097', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191108165550827924', 'patientID': 'P20191108165550827924', 'patientName': 'CN20191108165550827924', 'studyDate': '2019-11-08', 'studyTime': '16:56:26', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191108165550827924', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-08 17:01:08.703', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-08 17:01:08.713', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191108165458890358', 'patientID': 'P20191108165458890358', 'patientName': 'CN20191108165458890358', 'studyDate': '2019-11-08', 'studyTime': '16:55:36', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191108165458890358', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-08 17:00:12.140', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-08 17:00:12.153', 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191108165417952800', 'patientID': 'P20191108165417952800', 'patientName': 'CN20191108165417952800', 'studyDate': '2019-11-08', 'studyTime': '16:54:51', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191108165417952800', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-08 16:59:15.320', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-08 16:59:15.333', 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191108165336937127', 'patientID': 'P20191108165336937127', 'patientName': 'CN20191108165336937127', 'studyDate': '2019-11-08', 'studyTime': '16:54:10', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191108165336937127', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-08 16:58:18.767', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-08 16:58:18.777', 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191108164913360857', 'patientID': 'P20191108164913360857', 'patientName': 'CN20191108164913360857', 'studyDate': '2019-11-08', 'studyTime': '16:49:50', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191108164913360857', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-08 16:51:33.890', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191108164417798850', 'patientID': 'P20191108164417798850', 'patientName': 'CN20191108164417798850', 'studyDate': '2019-11-08', 'studyTime': '16:44:50', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191108164417798850', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-08 16:48:05.140', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-08 16:48:04.840', 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191108163756942589', 'patientID': 'P20191108163756942589', 'patientName': 'CN20191108163756942589', 'studyDate': '2019-11-08', 'studyTime': '16:38:35', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191108163756942589', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-08 16:42:48.147', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-08 16:42:47.260', 'reportCount': 2, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191108163435636168', 'patientID': 'P20191108163435636168', 'patientName': 'CN20191108163435636168', 'studyDate': '2019-11-08', 'studyTime': '16:34:50', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191108163423914977', 'patientID': 'P20191108163423914977', 'patientName': 'CN20191108163423914977', 'studyDate': '2019-11-08', 'studyTime': '16:34:34', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191108163412382192', 'patientID': 'P20191108163412382192', 'patientName': 'CN20191108163412382192', 'studyDate': '2019-11-08', 'studyTime': '16:34:22', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191108163341382648', 'patientID': 'P20191108163341382648', 'patientName': 'CN20191108163341382648', 'studyDate': '2019-11-08', 'studyTime': '16:34:15', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191108163341382648', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101162351787504', 'patientID': 'P20191101162351787504', 'patientName': 'CN20191101162351787504', 'studyDate': '2019-11-01', 'studyTime': '16:24:25', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101162351787504', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 16:25:38.260', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 16:25:38.270', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101161809146440', 'patientID': 'P20191101161809146440', 'patientName': 'CN20191101161809146440', 'studyDate': '2019-11-01', 'studyTime': '16:18:40', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101161809146440', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 16:23:45.817', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 16:23:45.823', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101161715740121', 'patientID': 'P20191101161715740121', 'patientName': 'CN20191101161715740121', 'studyDate': '2019-11-01', 'studyTime': '16:17:50', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101161715740121', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 16:22:50.123', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 16:22:50.130', 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101161634755694', 'patientID': 'P20191101161634755694', 'patientName': 'CN20191101161634755694', 'studyDate': '2019-11-01', 'studyTime': '16:17:05', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101161634755694', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 16:21:53.630', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 16:21:53.637', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101161543849379', 'patientID': 'P20191101161543849379', 'patientName': 'CN20191101161543849379', 'studyDate': '2019-11-01', 'studyTime': '16:16:15', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101161543849379', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 16:20:57.937', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 16:20:57.947', 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101161500755574', 'patientID': 'P20191101161500755574', 'patientName': 'CN20191101161500755574', 'studyDate': '2019-11-01', 'studyTime': '16:15:30', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101161500755574', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 16:20:01.727', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 16:20:01.737', 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101161042708365', 'patientID': 'P20191101161042708365', 'patientName': 'CN20191101161042708365', 'studyDate': '2019-11-01', 'studyTime': '16:11:14', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191101161042708365', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 16:12:55.700', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101160542779017', 'patientID': 'P20191101160542779017', 'patientName': 'CN20191101160542779017', 'studyDate': '2019-11-01', 'studyTime': '16:06:14', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101160542779017', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 16:09:30.573', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 16:09:29.540', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101155924028532', 'patientID': 'P20191101155924028532', 'patientName': 'CN20191101155924028532', 'studyDate': '2019-11-01', 'studyTime': '15:59:54', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101155924028532', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 16:04:08.743', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 16:04:07.570', 'reportCount': 2, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101155604153275', 'patientID': 'P20191101155604153275', 'patientName': 'CN20191101155604153275', 'studyDate': '2019-11-01', 'studyTime': '15:56:15', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101155552668885', 'patientID': 'P20191101155552668885', 'patientName': 'CN20191101155552668885', 'studyDate': '2019-11-01', 'studyTime': '15:55:58', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101155541309493', 'patientID': 'P20191101155541309493', 'patientName': 'CN20191101155541309493', 'studyDate': '2019-11-01', 'studyTime': '15:55:46', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101155510090705', 'patientID': 'P20191101155510090705', 'patientName': 'CN20191101155510090705', 'studyDate': '2019-11-01', 'studyTime': '15:55:39', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101155510090705', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101101132925282', 'patientID': 'P20191101101132925282', 'patientName': 'CN20191101101132925282', 'studyDate': '2019-11-01', 'studyTime': '10:12:02', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101101132925282', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 10:13:09.157', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 10:13:09.180', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101100547732952', 'patientID': 'P20191101100547732952', 'patientName': 'CN20191101100547732952', 'studyDate': '2019-11-01', 'studyTime': '10:06:22', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101100547732952', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 10:11:26.807', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 10:11:26.817', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101100456811010', 'patientID': 'P20191101100456811010', 'patientName': 'CN20191101100456811010', 'studyDate': '2019-11-01', 'studyTime': '10:05:27', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101100456811010', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 10:10:31.350', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 10:10:31.357', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101100405592195', 'patientID': 'P20191101100405592195', 'patientName': 'CN20191101100405592195', 'studyDate': '2019-11-01', 'studyTime': '10:04:37', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101100405592195', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 10:09:34.097', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 10:09:34.130', 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101100324404642', 'patientID': 'P20191101100324404642', 'patientName': 'CN20191101100324404642', 'studyDate': '2019-11-01', 'studyTime': '10:03:53', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101100324404642', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 10:08:38.637', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 10:08:38.843', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101100243482717', 'patientID': 'P20191101100243482717', 'patientName': 'CN20191101100243482717', 'studyDate': '2019-11-01', 'studyTime': '10:03:12', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101100243482717', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 10:07:43.227', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 10:07:43.233', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101095827863760', 'patientID': 'P20191101095827863760', 'patientName': 'CN20191101095827863760', 'studyDate': '2019-11-01', 'studyTime': '09:58:57', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191101095827863760', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 10:00:38.963', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101095326957122', 'patientID': 'P20191101095326957122', 'patientName': 'CN20191101095326957122', 'studyDate': '2019-11-01', 'studyTime': '09:54:02', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101095326957122', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 09:57:15.943', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 09:57:14.720', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101094701269124', 'patientID': 'P20191101094701269124', 'patientName': 'CN20191101094701269124', 'studyDate': '2019-11-01', 'studyTime': '09:47:37', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101094701269124', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 09:51:52.390', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 09:51:51.797', 'reportCount': 2, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101094341081377', 'patientID': 'P20191101094341081377', 'patientName': 'CN20191101094341081377', 'studyDate': '2019-11-01', 'studyTime': '09:43:55', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101094329971981', 'patientID': 'P20191101094329971981', 'patientName': 'CN20191101094329971981', 'studyDate': '2019-11-01', 'studyTime': '09:43:35', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101094318471965', 'patientID': 'P20191101094318471965', 'patientName': 'CN20191101094318471965', 'studyDate': '2019-11-01', 'studyTime': '09:43:24', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101094237346913', 'patientID': 'P20191101094237346913', 'patientName': 'CN20191101094237346913', 'studyDate': '2019-11-01', 'studyTime': '09:43:12', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101094237346913', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024172144656599', 'patientID': 'P20191024172144656599', 'patientName': 'CN20191024172144656599', 'studyDate': '2019-10-24', 'studyTime': '17:22:16', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191024172144656599', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-24 17:23:31.100', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-24 17:23:31.107', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024171610593661', 'patientID': 'P20191024171610593661', 'patientName': 'CN20191024171610593661', 'studyDate': '2019-10-24', 'studyTime': '17:16:41', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191024171610593661', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-24 17:21:38.280', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-24 17:21:38.290', 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024171519687345', 'patientID': 'P20191024171519687345', 'patientName': 'CN20191024171519687345', 'studyDate': '2019-10-24', 'studyTime': '17:15:51', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191024171519687345', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-24 17:20:41.837', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-24 17:20:41.847', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024171438736216', 'patientID': 'P20191024171438736216', 'patientName': 'CN20191024171438736216', 'studyDate': '2019-10-24', 'studyTime': '17:15:06', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191024171438736216', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-24 17:19:45.543', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-24 17:19:45.550', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024171347751775', 'patientID': 'P20191024171347751775', 'patientName': 'CN20191024171347751775', 'studyDate': '2019-10-24', 'studyTime': '17:14:21', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191024171347751775', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-24 17:18:49.167', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-24 17:18:49.177', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024171306861098', 'patientID': 'P20191024171306861098', 'patientName': 'CN20191024171306861098', 'studyDate': '2019-10-24', 'studyTime': '17:13:36', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191024171306861098', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-24 17:17:53.500', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-24 17:17:53.507', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024170847688889', 'patientID': 'P20191024170847688889', 'patientName': 'CN20191024170847688889', 'studyDate': '2019-10-24', 'studyTime': '17:09:21', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191024170847688889', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-24 17:11:00.000', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024170342016621', 'patientID': 'P20191024170342016621', 'patientName': 'CN20191024170342016621', 'studyDate': '2019-10-24', 'studyTime': '17:04:15', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191024170342016621', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-24 17:07:35.490', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-24 17:07:34.537', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024165726234887', 'patientID': 'P20191024165726234887', 'patientName': 'CN20191024165726234887', 'studyDate': '2019-10-24', 'studyTime': '16:57:55', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191024165726234887', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-24 17:02:07.097', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-24 17:02:06.750', 'reportCount': 2, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024165406484631', 'patientID': 'P20191024165406484631', 'patientName': 'CN20191024165406484631', 'studyDate': '2019-10-24', 'studyTime': '16:54:20', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024165355140866', 'patientID': 'P20191024165355140866', 'patientName': 'CN20191024165355140866', 'studyDate': '2019-10-24', 'studyTime': '16:54:00', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024165343703351', 'patientID': 'P20191024165343703351', 'patientName': 'CN20191024165343703351', 'studyDate': '2019-10-24', 'studyTime': '16:53:49', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024165302640798', 'patientID': 'P20191024165302640798', 'patientName': 'CN20191024165302640798', 'studyDate': '2019-10-24', 'studyTime': '16:53:35', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191024165302640798', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024164430818581', 'patientID': 'P20191024164430818581', 'patientName': 'CN20191024164430818581', 'studyDate': '2019-10-24', 'studyTime': '16:44:44', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023165935810848', 'patientID': 'P20191023165935810848', 'patientName': 'CN20191023165935810848', 'studyDate': '2019-10-23', 'studyTime': '17:00:09', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023165935810848', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023165732701317', 'patientID': 'P20191023165732701317', 'patientName': 'CN20191023165732701317', 'studyDate': '2019-10-23', 'studyTime': '16:57:44', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023164026767938', 'patientID': 'P20191023164026767938', 'patientName': 'CN20191023164026767938', 'studyDate': '2019-10-23', 'studyTime': '16:41:04', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191023164026767938', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-23 16:42:45.600', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023162507805563', 'patientID': 'P20191023162507805563', 'patientName': 'CN20191023162507805563', 'studyDate': '2019-10-23', 'studyTime': '16:25:39', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191023162507805563', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-23 16:38:06.153', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023160147681617', 'patientID': 'P20191023160147681617', 'patientName': 'CN20191023160147681617', 'studyDate': '2019-10-23', 'studyTime': '16:02:18', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023160147681617', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-23 16:03:33.437', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-23 16:03:33.560', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023155609399931', 'patientID': 'P20191023155609399931', 'patientName': 'CN20191023155609399931', 'studyDate': '2019-10-23', 'studyTime': '15:56:43', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023155609399931', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-23 16:01:40.700', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-23 16:01:40.790', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023155526821751', 'patientID': 'P20191023155526821751', 'patientName': 'CN20191023155526821751', 'studyDate': '2019-10-23', 'studyTime': '15:55:59', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023155526821751', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-23 16:00:44.040', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-23 16:00:44.050', 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023155435696686', 'patientID': 'P20191023155435696686', 'patientName': 'CN20191023155435696686', 'studyDate': '2019-10-23', 'studyTime': '15:55:08', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023155435696686', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-23 15:59:48.637', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-23 15:59:48.647', 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023155344462247', 'patientID': 'P20191023155344462247', 'patientName': 'CN20191023155344462247', 'studyDate': '2019-10-23', 'studyTime': '15:54:18', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023155344462247', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-23 15:58:52.220', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-23 15:58:52.237', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023155303384068', 'patientID': 'P20191023155303384068', 'patientName': 'CN20191023155303384068', 'studyDate': '2019-10-23', 'studyTime': '15:53:33', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023155303384068', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-23 15:57:56.883', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-23 15:57:56.890', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023155122184304', 'patientID': 'P20191023155122184304', 'patientName': 'CN20191023155122184304', 'studyDate': '2019-10-23', 'studyTime': '15:51:53', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191023155122184304', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023154632418307', 'patientID': 'P20191023154632418307', 'patientName': 'CN20191023154632418307', 'studyDate': '2019-10-23', 'studyTime': '15:47:03', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023154632418307', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-23 15:50:09.850', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-23 15:50:08.907', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023154012990789', 'patientID': 'P20191023154012990789', 'patientName': 'CN20191023154012990789', 'studyDate': '2019-10-23', 'studyTime': '15:40:48', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023154012990789', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-23 15:44:57.887', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-23 15:44:57.277', 'reportCount': 2, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023153653928031', 'patientID': 'P20191023153653928031', 'patientName': 'CN20191023153653928031', 'studyDate': '2019-10-23', 'studyTime': '15:37:05', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023153419874119', 'patientID': 'P20191023153419874119', 'patientName': 'CN20191023153419874119', 'studyDate': '2019-10-23', 'studyTime': '15:34:30', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023150553473922', 'patientID': 'P20191023150553473922', 'patientName': 'CN20191023150553473922', 'studyDate': '2019-10-23', 'studyTime': '15:06:27', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023150553473922', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023150522380128', 'patientID': 'P20191023150522380128', 'patientName': 'CN20191023150522380128', 'studyDate': '2019-10-23', 'studyTime': '15:05:52', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023150522380128', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023150338036244', 'patientID': 'P20191023150338036244', 'patientName': 'CN20191023150338036244', 'studyDate': '2019-10-23', 'studyTime': '15:04:12', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191023150338036244', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023150307098708', 'patientID': 'P20191023150307098708', 'patientName': 'CN20191023150307098708', 'studyDate': '2019-10-23', 'studyTime': '15:03:37', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023150307098708', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023150145301725', 'patientID': 'P20191023150145301725', 'patientName': 'CN20191023150145301725', 'studyDate': '2019-10-23', 'studyTime': '15:02:17', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023150145301725', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023150123004822', 'patientID': 'P20191023150123004822', 'patientName': 'CN20191023150123004822', 'studyDate': '2019-10-23', 'studyTime': '15:01:28', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023150111801682', 'patientID': 'P20191023150111801682', 'patientName': 'CN20191023150111801682', 'studyDate': '2019-10-23', 'studyTime': '15:01:17', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023150030754754', 'patientID': 'P20191023150030754754', 'patientName': 'CN20191023150030754754', 'studyDate': '2019-10-23', 'studyTime': '15:01:02', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023150030754754', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191021153247939219', 'patientID': 'P20191021153247939219', 'patientName': 'CN20191021153247939219', 'studyDate': '2019-10-21', 'studyTime': '15:32:53', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191021153206930748', 'patientID': 'P20191021153206930748', 'patientName': 'CN20191021153206930748', 'studyDate': '2019-10-21', 'studyTime': '15:32:40', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191021153206930748', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191018104829102614', 'patientID': 'P20191018104829102614', 'patientName': 'CN20191018104829102614', 'studyDate': '2019-10-18', 'studyTime': '10:48:57', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191018104829102614', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-18 10:50:38.317', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191018104329137638', 'patientID': 'P20191018104329137638', 'patientName': 'CN20191018104329137638', 'studyDate': '2019-10-18', 'studyTime': '10:44:02', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191018104329137638', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-18 10:47:16.810', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-18 10:47:15.797', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191018103711671274', 'patientID': 'P20191018103711671274', 'patientName': 'CN20191018103711671274', 'studyDate': '2019-10-18', 'studyTime': '10:37:42', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191018103711671274', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-18 10:41:54.423', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-18 10:41:53.813', 'reportCount': 2, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191018103351875966', 'patientID': 'P20191018103351875966', 'patientName': 'CN20191018103351875966', 'studyDate': '2019-10-18', 'studyTime': '10:34:02', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191018103340850340', 'patientID': 'P20191018103340850340', 'patientName': 'CN20191018103340850340', 'studyDate': '2019-10-18', 'studyTime': '10:33:46', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191018103329642708', 'patientID': 'P20191018103329642708', 'patientName': 'CN20191018103329642708', 'studyDate': '2019-10-18', 'studyTime': '10:33:35', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191018103258486946', 'patientID': 'P20191018103258486946', 'patientName': 'CN20191018103258486946', 'studyDate': '2019-10-18', 'studyTime': '10:33:26', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191018103258486946', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017165327956325', 'patientID': 'P20191017165327956325', 'patientName': 'CN20191017165327956325', 'studyDate': '2019-10-17', 'studyTime': '16:54:01', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017165327956325', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 16:55:14.050', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 16:55:14.073', 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017164755455888', 'patientID': 'P20191017164755455888', 'patientName': 'CN20191017164755455888', 'studyDate': '2019-10-17', 'studyTime': '16:48:27', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017164755455888', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 16:53:25.553', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 16:53:25.563', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017164704518326', 'patientID': 'P20191017164704518326', 'patientName': 'CN20191017164704518326', 'studyDate': '2019-10-17', 'studyTime': '16:47:36', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017164704518326', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 16:52:30.103', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 16:52:30.110', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017164613565136', 'patientID': 'P20191017164613565136', 'patientName': 'CN20191017164613565136', 'studyDate': '2019-10-17', 'studyTime': '16:46:47', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017164613565136', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 16:51:34.720', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 16:51:34.727', 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017164522596318', 'patientID': 'P20191017164522596318', 'patientName': 'CN20191017164522596318', 'studyDate': '2019-10-17', 'studyTime': '16:45:56', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017164522596318', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 16:50:38.210', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 16:50:38.217', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017164441455642', 'patientID': 'P20191017164441455642', 'patientName': 'CN20191017164441455642', 'studyDate': '2019-10-17', 'studyTime': '16:45:10', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017164441455642', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 16:49:41.830', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 16:49:41.843', 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017164017795155', 'patientID': 'P20191017164017795155', 'patientName': 'CN20191017164017795155', 'studyDate': '2019-10-17', 'studyTime': '16:40:55', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191017164017795155', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 16:42:35.797', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017163516966647', 'patientID': 'P20191017163516966647', 'patientName': 'CN20191017163516966647', 'studyDate': '2019-10-17', 'studyTime': '16:35:55', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017163516966647', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 16:39:05.253', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 16:39:04.503', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017162849957949', 'patientID': 'P20191017162849957949', 'patientName': 'CN20191017162849957949', 'studyDate': '2019-10-17', 'studyTime': '16:29:25', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017162849957949', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 16:33:42.290', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 16:33:41.683', 'reportCount': 2, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017162531070638', 'patientID': 'P20191017162531070638', 'patientName': 'CN20191017162531070638', 'studyDate': '2019-10-17', 'studyTime': '16:25:39', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017162519904097', 'patientID': 'P20191017162519904097', 'patientName': 'CN20191017162519904097', 'studyDate': '2019-10-17', 'studyTime': '16:25:25', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017162508601233', 'patientID': 'P20191017162508601233', 'patientName': 'CN20191017162508601233', 'studyDate': '2019-10-17', 'studyTime': '16:25:14', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017162426999885', 'patientID': 'P20191017162426999885', 'patientName': 'CN20191017162426999885', 'studyDate': '2019-10-17', 'studyTime': '16:25:00', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017162426999885', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017162154398019', 'patientID': 'P20191017162154398019', 'patientName': 'CN20191017162154398019', 'studyDate': '2019-10-17', 'studyTime': '16:22:04', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017162059641921', 'patientID': 'P20191017162059641921', 'patientName': 'CN20191017162059641921', 'studyDate': '2019-10-17', 'studyTime': '16:21:09', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017161940386436', 'patientID': 'P20191017161940386436', 'patientName': 'CN20191017161940386436', 'studyDate': '2019-10-17', 'studyTime': '16:19:48', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017102445600845', 'patientID': 'P20191017102445600845', 'patientName': 'CN20191017102445600845', 'studyDate': '2019-10-17', 'studyTime': '10:25:18', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017102445600845', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 10:26:32.633', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 10:26:32.643', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017100910542843', 'patientID': 'P20191017100910542843', 'patientName': 'CN20191017100910542843', 'studyDate': '2019-10-17', 'studyTime': '10:09:38', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017100910542843', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 10:14:31.523', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 10:14:31.530', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017100829445486', 'patientID': 'P20191017100829445486', 'patientName': 'CN20191017100829445486', 'studyDate': '2019-10-17', 'studyTime': '10:08:57', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017100829445486', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 10:13:34.840', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 10:13:34.963', 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017100748536624', 'patientID': 'P20191017100748536624', 'patientName': 'CN20191017100748536624', 'studyDate': '2019-10-17', 'studyTime': '10:08:17', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017100748536624', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 10:12:38.447', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 10:12:38.453', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017100707360294', 'patientID': 'P20191017100707360294', 'patientName': 'CN20191017100707360294', 'studyDate': '2019-10-17', 'studyTime': '10:07:37', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017100707360294', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 10:11:43.127', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 10:11:43.137', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017100616376425', 'patientID': 'P20191017100616376425', 'patientName': 'CN20191017100616376425', 'studyDate': '2019-10-17', 'studyTime': '10:06:47', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017100616376425', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 10:10:47.683', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 10:10:47.690', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017100302602000', 'patientID': 'P20191017100302602000', 'patientName': 'CN20191017100302602000', 'studyDate': '2019-10-17', 'studyTime': '10:03:32', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017100302602000', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 10:04:38.400', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 10:04:38.410', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017095853570431', 'patientID': 'P20191017095853570431', 'patientName': 'CN20191017095853570431', 'studyDate': '2019-10-17', 'studyTime': '09:59:27', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017095853570431', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 10:00:39.953', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 10:00:39.980', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017095407847062', 'patientID': 'P20191017095407847062', 'patientName': 'CN20191017095407847062', 'studyDate': '2019-10-17', 'studyTime': '09:54:37', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017095407847062', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 09:55:44.310', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 09:55:44.327', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017095113777898', 'patientID': 'P20191017095113777898', 'patientName': 'CN20191017095113777898', 'studyDate': '2019-10-17', 'studyTime': '09:51:47', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017095113777898', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 09:53:00.580', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 09:53:00.587', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017094020804467', 'patientID': 'P20191017094020804467', 'patientName': 'CN20191017094020804467', 'studyDate': '2019-10-17', 'studyTime': '09:40:50', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017094020804467', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017093701763631', 'patientID': 'P20191017093701763631', 'patientName': 'CN20191017093701763631', 'studyDate': '2019-10-17', 'studyTime': '09:37:35', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017093701763631', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191016143409908620', 'patientID': 'P20191016143409908620', 'patientName': 'CN20191016143409908620', 'studyDate': '2019-10-16', 'studyTime': '14:34:40', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191016143409908620', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-16 14:35:46.750', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-16 14:35:46.760', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191016141455027361', 'patientID': 'P20191016141455027361', 'patientName': 'CN20191016141455027361', 'studyDate': '2019-10-16', 'studyTime': '14:15:24', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191016141455027361', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-16 14:16:32.063', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-16 14:16:32.080', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191016141002180666', 'patientID': 'P20191016141002180666', 'patientName': 'CN20191016141002180666', 'studyDate': '2019-10-16', 'studyTime': '14:10:29', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191016141002180666', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-16 14:11:38.430', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-16 14:11:38.440', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191016140735633606', 'patientID': 'P20191016140735633606', 'patientName': 'CN20191016140735633606', 'studyDate': '2019-10-16', 'studyTime': '14:08:04', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191016140735633606', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-16 14:09:11.753', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-16 14:09:11.780', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191016135937736399', 'patientID': 'P20191016135937736399', 'patientName': 'CN20191016135937736399', 'studyDate': '2019-10-16', 'studyTime': '14:00:09', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191016135937736399', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-16 14:01:24.600', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-16 14:01:24.607', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191016135533358820', 'patientID': 'P20191016135533358820', 'patientName': 'CN20191016135533358820', 'studyDate': '2019-10-16', 'studyTime': '13:56:04', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191016135533358820', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-16 13:57:16.713', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-16 13:57:16.757', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014171955400770', 'patientID': 'P20191014171955400770', 'patientName': 'CN20191014171955400770', 'studyDate': '2019-10-14', 'studyTime': '17:20:27', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014171955400770', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 17:25:26.770', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 17:25:26.780', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014171904385073', 'patientID': 'P20191014171904385073', 'patientName': 'CN20191014171904385073', 'studyDate': '2019-10-14', 'studyTime': '17:19:37', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014171904385073', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 17:24:30.693', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 17:24:30.700', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014171823431894', 'patientID': 'P20191014171823431894', 'patientName': 'CN20191014171823431894', 'studyDate': '2019-10-14', 'studyTime': '17:18:52', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014171823431894', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 17:23:34.100', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 17:23:34.120', 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014171742009966', 'patientID': 'P20191014171742009966', 'patientName': 'CN20191014171742009966', 'studyDate': '2019-10-14', 'studyTime': '17:18:12', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014171742009966', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 17:22:38.740', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 17:22:38.750', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014171651103652', 'patientID': 'P20191014171651103652', 'patientName': 'CN20191014171651103652', 'studyDate': '2019-10-14', 'studyTime': '17:17:22', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014171651103652', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 17:21:42.160', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 17:21:42.173', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014164754520904', 'patientID': 'P20191014164754520904', 'patientName': 'CN20191014164754520904', 'studyDate': '2019-10-14', 'studyTime': '16:48:27', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014164754520904', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:50:37.140', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:50:37.147', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014164713239610', 'patientID': 'P20191014164713239610', 'patientName': 'CN20191014164713239610', 'studyDate': '2019-10-14', 'studyTime': '16:47:42', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014164713239610', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:49:40.713', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:49:40.720', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014163853901111', 'patientID': 'P20191014163853901111', 'patientName': 'CN20191014163853901111', 'studyDate': '2019-10-14', 'studyTime': '16:39:22', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014163853901111', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:41:26.883', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:41:26.907', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014163810932310', 'patientID': 'P20191014163810932310', 'patientName': 'CN20191014163810932310', 'studyDate': '2019-10-14', 'studyTime': '16:38:42', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014163810932310', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:40:30.473', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:40:30.480', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014163403478863', 'patientID': 'P20191014163403478863', 'patientName': 'CN20191014163403478863', 'studyDate': '2019-10-14', 'studyTime': '16:34:32', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014163403478863', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:36:36.533', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:36:36.543', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014163322103810', 'patientID': 'P20191014163322103810', 'patientName': 'CN20191014163322103810', 'studyDate': '2019-10-14', 'studyTime': '16:33:52', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014163322103810', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:35:40.107', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:35:40.123', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014162906056606', 'patientID': 'P20191014162906056606', 'patientName': 'CN20191014162906056606', 'studyDate': '2019-10-14', 'studyTime': '16:29:37', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014162906056606', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:31:39.117', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:31:39.123', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014162815103418', 'patientID': 'P20191014162815103418', 'patientName': 'CN20191014162815103418', 'studyDate': '2019-10-14', 'studyTime': '16:28:46', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014162815103418', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:30:42.663', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:30:42.673', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014160847178045', 'patientID': 'P20191014160847178045', 'patientName': 'CN20191014160847178045', 'studyDate': '2019-10-14', 'studyTime': '16:09:16', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014160847178045', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:11:22.113', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:11:22.123', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014160806264874', 'patientID': 'P20191014160806264874', 'patientName': 'CN20191014160806264874', 'studyDate': '2019-10-14', 'studyTime': '16:08:36', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014160806264874', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:10:25.097', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:10:25.113', 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014160333295772', 'patientID': 'P20191014160333295772', 'patientName': 'CN20191014160333295772', 'studyDate': '2019-10-14', 'studyTime': '16:04:06', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014160333295772', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:06:16.107', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:06:16.113', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014160252358221', 'patientID': 'P20191014160252358221', 'patientName': 'CN20191014160252358221', 'studyDate': '2019-10-14', 'studyTime': '16:03:21', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014160252358221', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:05:19.063', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:05:19.087', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014155755708988', 'patientID': 'P20191014155755708988', 'patientName': 'CN20191014155755708988', 'studyDate': '2019-10-14', 'studyTime': '15:58:26', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014155755708988', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:00:28.523', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:00:28.530', 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014155703974544', 'patientID': 'P20191014155703974544', 'patientName': 'CN20191014155703974544', 'studyDate': '2019-10-14', 'studyTime': '15:57:36', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014155703974544', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 15:59:32.090', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 15:59:32.103', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014153601784817', 'patientID': 'P20191014153601784817', 'patientName': 'CN20191014153601784817', 'studyDate': '2019-10-14', 'studyTime': '15:36:31', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014153601784817', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 15:41:28.643', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 15:41:28.650', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014153520737890', 'patientID': 'P20191014153520737890', 'patientName': 'CN20191014153520737890', 'studyDate': '2019-10-14', 'studyTime': '15:35:50', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014153520737890', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 15:40:33.177', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 15:40:33.200', 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014153438003460', 'patientID': 'P20191014153438003460', 'patientName': 'CN20191014153438003460', 'studyDate': '2019-10-14', 'studyTime': '15:35:05', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014153438003460', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 15:39:36.610', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 15:39:36.623', 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014153346940893', 'patientID': 'P20191014153346940893', 'patientName': 'CN20191014153346940893', 'studyDate': '2019-10-14', 'studyTime': '15:34:20', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014153346940893', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 15:38:41.130', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 15:38:41.140', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014153304518966', 'patientID': 'P20191014153304518966', 'patientName': 'CN20191014153304518966', 'studyDate': '2019-10-14', 'studyTime': '15:33:35', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014153304518966', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 15:37:45.643', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 15:37:45.653', 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191011134029101725', 'patientID': 'P20191011134029101725', 'patientName': 'CN20191011134029101725', 'studyDate': '2019-10-11', 'studyTime': '13:41:00', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191011134029101725', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-11 13:46:07.067', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-11 13:46:07.077', 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191011133938195410', 'patientID': 'P20191011133938195410', 'patientName': 'CN20191011133938195410', 'studyDate': '2019-10-11', 'studyTime': '13:40:10', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191011133938195410', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-11 13:45:11.783', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-11 13:45:11.790', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191011133857257857', 'patientID': 'P20191011133857257857', 'patientName': 'CN20191011133857257857', 'studyDate': '2019-10-11', 'studyTime': '13:39:25', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191011133857257857', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-11 13:44:15.090', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-11 13:44:15.097', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191011133816351554', 'patientID': 'P20191011133816351554', 'patientName': 'CN20191011133816351554', 'studyDate': '2019-10-11', 'studyTime': '13:38:45', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191011133816351554', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-11 13:43:18.123', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-11 13:43:18.130', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191011133734632751', 'patientID': 'P20191011133734632751', 'patientName': 'CN20191011133734632751', 'studyDate': '2019-10-11', 'studyTime': '13:38:05', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191011133734632751', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-11 13:42:22.697', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-11 13:42:22.703', 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010160251795173', 'patientID': 'P20191010160251795173', 'patientName': 'CN20191010160251795173', 'studyDate': '2019-10-10', 'studyTime': '16:03:19', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010160251795173', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 16:08:14.330', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 16:08:14.347', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010160210739577', 'patientID': 'P20191010160210739577', 'patientName': 'CN20191010160210739577', 'studyDate': '2019-10-10', 'studyTime': '16:02:39', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010160210739577', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 16:07:17.920', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 16:07:18.003', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010160129822084', 'patientID': 'P20191010160129822084', 'patientName': 'CN20191010160129822084', 'studyDate': '2019-10-10', 'studyTime': '16:01:59', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010160129822084', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 16:06:21.527', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 16:06:21.533', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010160048292734', 'patientID': 'P20191010160048292734', 'patientName': 'CN20191010160048292734', 'studyDate': '2019-10-10', 'studyTime': '16:01:18', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010160048292734', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 16:05:25.110', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 16:05:25.117', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010155956714566', 'patientID': 'P20191010155956714566', 'patientName': 'CN20191010155956714566', 'studyDate': '2019-10-10', 'studyTime': '16:00:28', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010155956714566', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 16:04:28.707', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 16:04:28.717', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010134406669827', 'patientID': 'P20191010134406669827', 'patientName': 'CN20191010134406669827', 'studyDate': '2019-10-10', 'studyTime': '13:44:38', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010134406669827', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 13:49:37.297', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 13:49:37.303', 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010134315763508', 'patientID': 'P20191010134315763508', 'patientName': 'CN20191010134315763508', 'studyDate': '2019-10-10', 'studyTime': '13:43:48', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010134315763508', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 13:48:42.120', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 13:48:42.127', 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010134234794706', 'patientID': 'P20191010134234794706', 'patientName': 'CN20191010134234794706', 'studyDate': '2019-10-10', 'studyTime': '13:43:03', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010134234794706', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 13:47:45.777', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 13:47:45.783', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010134151753476', 'patientID': 'P20191010134151753476', 'patientName': 'CN20191010134151753476', 'studyDate': '2019-10-10', 'studyTime': '13:42:22', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010134151753476', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 13:46:49.283', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 13:46:49.307', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010134108359021', 'patientID': 'P20191010134108359021', 'patientName': 'CN20191010134108359021', 'studyDate': '2019-10-10', 'studyTime': '13:41:37', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010134108359021', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 13:45:52.840', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 13:45:52.850', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010133853865953', 'patientID': 'P20191010133853865953', 'patientName': 'CN20191010133853865953', 'studyDate': '2019-10-10', 'studyTime': '13:39:27', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010133853865953', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 13:40:40.157', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 13:40:40.163', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010112307017746', 'patientID': 'P20191010112307017746', 'patientName': 'CN20191010112307017746', 'studyDate': '2019-10-10', 'studyTime': '11:23:37', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010112307017746', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 11:24:42.577', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 11:24:42.583', 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010112141970762', 'patientID': 'P20191010112141970762', 'patientName': 'CN20191010112141970762', 'studyDate': '2019-10-10', 'studyTime': '11:22:12', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010112141970762', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010112025423789', 'patientID': 'P20191010112025423789', 'patientName': 'CN20191010112025423789', 'studyDate': '2019-10-10', 'studyTime': '11:20:57', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010112025423789', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010111821970507', 'patientID': 'P20191010111821970507', 'patientName': 'CN20191010111821970507', 'studyDate': '2019-10-10', 'studyTime': '11:18:51', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010111821970507', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010111516832642', 'patientID': 'P20191010111516832642', 'patientName': 'CN20191010111516832642', 'studyDate': '2019-10-10', 'studyTime': '11:15:46', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010111516832642', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010110602441302', 'patientID': 'P20191010110602441302', 'patientName': 'CN20191010110602441302', 'studyDate': '2019-10-10', 'studyTime': '11:06:31', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010110602441302', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010110521503752', 'patientID': 'P20191010110521503752', 'patientName': 'CN20191010110521503752', 'studyDate': '2019-10-10', 'studyTime': '11:05:51', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010110521503752', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010110440581826', 'patientID': 'P20191010110440581826', 'patientName': 'CN20191010110440581826', 'studyDate': '2019-10-10', 'studyTime': '11:05:06', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010110440581826', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010110349644258', 'patientID': 'P20191010110349644258', 'patientName': 'CN20191010110349644258', 'studyDate': '2019-10-10', 'studyTime': '11:04:21', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010110349644258', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010110306347327', 'patientID': 'P20191010110306347327', 'patientName': 'CN20191010110306347327', 'studyDate': '2019-10-10', 'studyTime': '11:03:36', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010110306347327', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010110120019073', 'patientID': 'P20191010110120019073', 'patientName': 'CN20191010110120019073', 'studyDate': '2019-10-10', 'studyTime': '11:01:51', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010110120019073', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010110006456471', 'patientID': 'P20191010110006456471', 'patientName': 'CN20191010110006456471', 'studyDate': '2019-10-10', 'studyTime': '11:00:36', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010110006456471', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010104807720577', 'patientID': 'P20191010104807720577', 'patientName': 'CN20191010104807720577', 'studyDate': '2019-10-10', 'studyTime': '10:48:36', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010104807720577', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 10:53:27.833', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 10:53:27.840', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010104724214839', 'patientID': 'P20191010104724214839', 'patientName': 'CN20191010104724214839', 'studyDate': '2019-10-10', 'studyTime': '10:47:56', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010104724214839', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 10:52:31.333', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 10:52:31.343', 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010104642893018', 'patientID': 'P20191010104642893018', 'patientName': 'CN20191010104642893018', 'studyDate': '2019-10-10', 'studyTime': '10:47:11', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010104642893018', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 10:51:36.073', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 10:51:36.080', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010104551982177', 'patientID': 'P20191010104551982177', 'patientName': 'CN20191010104551982177', 'studyDate': '2019-10-10', 'studyTime': '10:46:25', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010104551982177', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 10:50:40.730', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 10:50:40.740', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010104511031472', 'patientID': 'P20191010104511031472', 'patientName': 'CN20191010104511031472', 'studyDate': '2019-10-10', 'studyTime': '10:45:40', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010104511031472', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 10:49:44.143', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 10:49:44.153', 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010104129793670', 'patientID': 'P20191010104129793670', 'patientName': 'CN20191010104129793670', 'studyDate': '2019-10-10', 'studyTime': '10:42:00', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010104129793670', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 10:47:01.347', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 10:47:01.357', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010104038887163', 'patientID': 'P20191010104038887163', 'patientName': 'CN20191010104038887163', 'studyDate': '2019-10-10', 'studyTime': '10:41:10', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010104038887163', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 10:46:04.287', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 10:46:04.297', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010103957896841', 'patientID': 'P20191010103957896841', 'patientName': 'CN20191010103957896841', 'studyDate': '2019-10-10', 'studyTime': '10:40:25', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010103957896841', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 10:45:07.777', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 10:45:07.787', 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010103917012245', 'patientID': 'P20191010103917012245', 'patientName': 'CN20191010103917012245', 'studyDate': '2019-10-10', 'studyTime': '10:39:45', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010103917012245', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 10:44:11.377', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 10:44:11.383', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010103836096929', 'patientID': 'P20191010103836096929', 'patientName': 'CN20191010103836096929', 'studyDate': '2019-10-10', 'studyTime': '10:39:05', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010103836096929', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 10:43:15.840', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 10:43:15.863', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010103549734117', 'patientID': 'P20191010103549734117', 'patientName': 'CN20191010103549734117', 'studyDate': '2019-10-10', 'studyTime': '10:36:20', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010103549734117', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010103458796550', 'patientID': 'P20191010103458796550', 'patientName': 'CN20191010103458796550', 'studyDate': '2019-10-10', 'studyTime': '10:35:30', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010103458796550', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010103417890245', 'patientID': 'P20191010103417890245', 'patientName': 'CN20191010103417890245', 'studyDate': '2019-10-10', 'studyTime': '10:34:45', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010103417890245', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010103337001091', 'patientID': 'P20191010103337001091', 'patientName': 'CN20191010103337001091', 'studyDate': '2019-10-10', 'studyTime': '10:34:05', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010103337001091', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010103253826489', 'patientID': 'P20191010103253826489', 'patientName': 'CN20191010103253826489', 'studyDate': '2019-10-10', 'studyTime': '10:33:25', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010103253826489', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010102237134937', 'patientID': 'P20191010102237134937', 'patientName': 'CN20191010102237134937', 'studyDate': '2019-10-10', 'studyTime': '10:23:10', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010102237134937', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010102146025736', 'patientID': 'P20191010102146025736', 'patientName': 'CN20191010102146025736', 'studyDate': '2019-10-10', 'studyTime': '10:22:19', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010102146025736', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010102104459380', 'patientID': 'P20191010102104459380', 'patientName': 'CN20191010102104459380', 'studyDate': '2019-10-10', 'studyTime': '10:21:34', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010102104459380', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010102021344566', 'patientID': 'P20191010102021344566', 'patientName': 'CN20191010102021344566', 'studyDate': '2019-10-10', 'studyTime': '10:20:49', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010102021344566', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010101929449627', 'patientID': 'P20191010101929449627', 'patientName': 'CN20191010101929449627', 'studyDate': '2019-10-10', 'studyTime': '10:20:04', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010101929449627', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009105501006700', 'patientID': 'P20191009105501006700', 'patientName': 'CN20191009105501006700', 'studyDate': '2019-10-09', 'studyTime': '10:55:33', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009105501006700', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-10-09 22:04:06.090', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-10-09 22:04:06.100', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009105419881609', 'patientID': 'P20191009105419881609', 'patientName': 'CN20191009105419881609', 'studyDate': '2019-10-09', 'studyTime': '10:54:48', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009105419881609', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-10-09 22:05:02.540', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-10-09 22:05:02.560', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009105338959681', 'patientID': 'P20191009105338959681', 'patientName': 'CN20191009105338959681', 'studyDate': '2019-10-09', 'studyTime': '10:54:08', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009105338959681', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009105256256500', 'patientID': 'P20191009105256256500', 'patientName': 'CN20191009105256256500', 'studyDate': '2019-10-09', 'studyTime': '10:53:28', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009105256256500', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009105215071835', 'patientID': 'P20191009105215071835', 'patientName': 'CN20191009105215071835', 'studyDate': '2019-10-09', 'studyTime': '10:52:43', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009105215071835', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009102342161377', 'patientID': 'P20191009102342161377', 'patientName': 'CN20191009102342161377', 'studyDate': '2019-10-09', 'studyTime': '10:24:13', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009102342161377', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-09 23:51:31.633', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-09 23:51:31.650', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009102251101515', 'patientID': 'P20191009102251101515', 'patientName': 'CN20191009102251101515', 'studyDate': '2019-10-09', 'studyTime': '10:23:22', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009102251101515', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-09 23:52:28.093', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-09 23:52:28.100', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009102209898137', 'patientID': 'P20191009102209898137', 'patientName': 'CN20191009102209898137', 'studyDate': '2019-10-09', 'studyTime': '10:22:37', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009102209898137', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-09 23:53:23.553', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-09 23:53:23.560', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009102128913709', 'patientID': 'P20191009102128913709', 'patientName': 'CN20191009102128913709', 'studyDate': '2019-10-09', 'studyTime': '10:21:57', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009102128913709', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-09 23:54:19.070', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-09 23:54:19.080', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009102047694908', 'patientID': 'P20191009102047694908', 'patientName': 'CN20191009102047694908', 'studyDate': '2019-10-09', 'studyTime': '10:21:17', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009102047694908', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-09 23:55:14.503', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-09 23:55:14.513', 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009101320760227', 'patientID': 'P20191009101320760227', 'patientName': 'CN20191009101320760227', 'studyDate': '2019-10-09', 'studyTime': '10:13:52', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009101320760227', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 5, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 5, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927164000570746', 'patientID': 'P20190927164000570746', 'patientName': 'CN20190927164000570746', 'studyDate': '2019-09-27', 'studyTime': '16:40:27', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927164000570746', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-27 17:10:17.513', 'filmDeleteStatus': 0, 'imageCount': 5, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-09-27 17:10:17.540', 'reportCount': 5, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927163417835013', 'patientID': 'P20190927163417835013', 'patientName': 'CN20190927163417835013', 'studyDate': '2019-09-27', 'studyTime': '16:34:47', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927163417835013', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927163336901631', 'patientID': 'P20190927163336901631', 'patientName': 'CN20190927163336901631', 'studyDate': '2019-09-27', 'studyTime': '16:34:07', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927163336901631', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927163245690885', 'patientID': 'P20190927163245690885', 'patientName': 'CN20190927163245690885', 'studyDate': '2019-09-27', 'studyTime': '16:33:17', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927163245690885', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927161636047375', 'patientID': 'P20190927161636047375', 'patientName': 'CN20190927161636047375', 'studyDate': '2019-09-27', 'studyTime': '16:17:07', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927161636047375', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927105826242723', 'patientID': 'P20190927105826242723', 'patientName': 'CN20190927105826242723', 'studyDate': '2019-09-27', 'studyTime': '10:58:56', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190927105826242723', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-27 11:10:39.767', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927105526022866', 'patientID': 'P20190927105526022866', 'patientName': 'CN20190927105526022866', 'studyDate': '2019-09-27', 'studyTime': '10:55:56', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927105526022866', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-27 13:59:33.563', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927105024617800', 'patientID': 'P20190927105024617800', 'patientName': 'CN20190927105024617800', 'studyDate': '2019-09-27', 'studyTime': '10:50:56', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927105024617800', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-27 14:00:31.600', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-09-27 14:00:31.630', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927104417974277', 'patientID': 'P20190927104417974277', 'patientName': 'CN20190927104417974277', 'studyDate': '2019-09-27', 'studyTime': '10:44:46', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927104417974277', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-27 10:48:50.233', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-09-27 10:48:49.417', 'reportCount': 2, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927104058380319', 'patientID': 'P20190927104058380319', 'patientName': 'CN20190927104058380319', 'studyDate': '2019-09-27', 'studyTime': '10:41:08', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927104047302129', 'patientID': 'P20190927104047302129', 'patientName': 'CN20190927104047302129', 'studyDate': '2019-09-27', 'studyTime': '10:40:52', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927104036177118', 'patientID': 'P20190927104036177118', 'patientName': 'CN20190927104036177118', 'studyDate': '2019-09-27', 'studyTime': '10:40:41', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927103954817684', 'patientID': 'P20190927103954817684', 'patientName': 'CN20190927103954817684', 'studyDate': '2019-09-27', 'studyTime': '10:40:26', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927103954817684', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927100029339182', 'patientID': 'P20190927100029339182', 'patientName': 'CN20190927100029339182', 'studyDate': '2019-09-27', 'studyTime': '10:01:01', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190927100029339182', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-27 10:02:42.463', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927095545981047', 'patientID': 'P20190927095545981047', 'patientName': 'CN20190927095545981047', 'studyDate': '2019-09-27', 'studyTime': '09:56:20', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927095545981047', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-27 09:59:17.210', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-09-27 09:59:16.160', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927094614330297', 'patientID': 'P20190927094614330297', 'patientName': 'CN20190927094614330297', 'studyDate': '2019-09-27', 'studyTime': '09:46:45', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927094614330297', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-27 09:49:46.100', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-09-27 09:49:45.417', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927094001810321', 'patientID': 'P20190927094001810321', 'patientName': 'CN20190927094001810321', 'studyDate': '2019-09-27', 'studyTime': '09:40:32', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927094001810321', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-27 09:43:33.247', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-09-27 09:43:32.873', 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927093019331369', 'patientID': 'P20190927093019331369', 'patientName': 'CN20190927093019331369', 'studyDate': '2019-09-27', 'studyTime': '09:30:52', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927093019331369', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927091913211536', 'patientID': 'P20190927091913211536', 'patientName': 'CN20190927091913211536', 'studyDate': '2019-09-27', 'studyTime': '09:19:47', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927091913211536', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927091554875257', 'patientID': 'P20190927091554875257', 'patientName': 'CN20190927091554875257', 'studyDate': '2019-09-27', 'studyTime': '09:16:27', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927091554875257', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927090901982897', 'patientID': 'P20190927090901982897', 'patientName': 'CN20190927090901982897', 'studyDate': '2019-09-27', 'studyTime': '09:09:37', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927090901982897', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926200306711632', 'patientID': 'P20190926200306711632', 'patientName': 'CN20190926200306711632', 'studyDate': '2019-09-26', 'studyTime': '20:03:36', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190926200306711632', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-26 21:40:02.300', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926200116351634', 'patientID': 'P20190926200116351634', 'patientName': 'CN20190926200116351634', 'studyDate': '2019-09-26', 'studyTime': '20:01:46', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926200116351634', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926195833054191', 'patientID': 'P20190926195833054191', 'patientName': 'CN20190926195833054191', 'studyDate': '2019-09-26', 'studyTime': '19:59:06', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926195833054191', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926194344857588', 'patientID': 'P20190926194344857588', 'patientName': 'CN20190926194344857588', 'studyDate': '2019-09-26', 'studyTime': '19:44:16', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190926194344857588', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-26 20:39:26.507', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926194144529307', 'patientID': 'P20190926194144529307', 'patientName': 'CN20190926194144529307', 'studyDate': '2019-09-26', 'studyTime': '19:42:16', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926194144529307', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926193620732015', 'patientID': 'P20190926193620732015', 'patientName': 'CN20190926193620732015', 'studyDate': '2019-09-26', 'studyTime': '19:36:51', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926193620732015', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926193513966305', 'patientID': 'P20190926193513966305', 'patientName': 'CN20190926193513966305', 'studyDate': '2019-09-26', 'studyTime': '19:35:24', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926193502575669', 'patientID': 'P20190926193502575669', 'patientName': 'CN20190926193502575669', 'studyDate': '2019-09-26', 'studyTime': '19:35:08', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926193451419400', 'patientID': 'P20190926193451419400', 'patientName': 'CN20190926193451419400', 'studyDate': '2019-09-26', 'studyTime': '19:34:56', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926193419341232', 'patientID': 'P20190926193419341232', 'patientName': 'CN20190926193419341232', 'studyDate': '2019-09-26', 'studyTime': '19:34:51', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926193419341232', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926190804570999', 'patientID': 'P20190926190804570999', 'patientName': 'CN20190926190804570999', 'studyDate': '2019-09-26', 'studyTime': '19:08:36', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190926190804570999', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-26 19:10:11.917', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926190406106216', 'patientID': 'P20190926190406106216', 'patientName': 'CN20190926190406106216', 'studyDate': '2019-09-26', 'studyTime': '19:04:35', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190926190406106216', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-26 19:06:13.930', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926190259103869', 'patientID': 'P20190926190259103869', 'patientName': 'CN20190926190259103869', 'studyDate': '2019-09-26', 'studyTime': '19:03:30', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926190259103869', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926190130538136', 'patientID': 'P20190926190130538136', 'patientName': 'CN20190926190130538136', 'studyDate': '2019-09-26', 'studyTime': '19:02:00', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926190130538136', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926185749581646', 'patientID': 'P20190926185749581646', 'patientName': 'CN20190926185749581646', 'studyDate': '2019-09-26', 'studyTime': '18:58:20', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926185749581646', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926184922019125', 'patientID': 'P20190926184922019125', 'patientName': 'CN20190926184922019125', 'studyDate': '2019-09-26', 'studyTime': '18:49:55', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190926184922019125', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-26 18:51:37.443', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926181253683850', 'patientID': 'P20190926181253683850', 'patientName': 'CN20190926181253683850', 'studyDate': '2019-09-26', 'studyTime': '18:13:25', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190926181253683850', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-26 18:15:04.660', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926180655059231', 'patientID': 'P20190926180655059231', 'patientName': 'CN20190926180655059231', 'studyDate': '2019-09-26', 'studyTime': '18:07:25', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190926180655059231', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926180317252946', 'patientID': 'P20190926180317252946', 'patientName': 'CN20190926180317252946', 'studyDate': '2019-09-26', 'studyTime': '18:03:50', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190926180317252946', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926175113276968', 'patientID': 'P20190926175113276968', 'patientName': 'CN20190926175113276968', 'studyDate': '2019-09-26', 'studyTime': '17:51:45', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190926175113276968', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926174443673001', 'patientID': 'P20190926174443673001', 'patientName': 'CN20190926174443673001', 'studyDate': '2019-09-26', 'studyTime': '17:45:15', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926174443673001', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926172734307873', 'patientID': 'P20190926172734307873', 'patientName': 'CN20190926172734307873', 'studyDate': '2019-09-26', 'studyTime': '17:28:05', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926172734307873', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-26 17:30:26.560', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-09-26 17:30:25.987', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926170023027884', 'patientID': 'P20190926170023027884', 'patientName': 'CN20190926170023027884', 'studyDate': '2019-09-26', 'studyTime': '17:00:54', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926170023027884', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-26 17:04:42.847', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-09-26 17:04:42.170', 'reportCount': 2, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926165127567516', 'patientID': 'P20190926165127567516', 'patientName': 'CN20190926165127567516', 'studyDate': '2019-09-26', 'studyTime': '16:51:59', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926165127567516', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-26 16:55:42.000', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-09-26 16:55:41.443', 'reportCount': 2, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926162829948320', 'patientID': 'P20190926162829948320', 'patientName': 'CN20190926162829948320', 'studyDate': '2019-09-26', 'studyTime': '16:28:59', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926162829948320', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-26 16:32:36.220', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-09-26 16:32:35.173', 'reportCount': 2, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926162407328680', 'patientID': 'P20190926162407328680', 'patientName': 'CN20190926162407328680', 'studyDate': '2019-09-26', 'studyTime': '16:24:39', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926162407328680', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926161836085793', 'patientID': 'P20190926161836085793', 'patientName': 'CN20190926161836085793', 'studyDate': '2019-09-26', 'studyTime': '16:19:04', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926161836085793', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926161457711201', 'patientID': 'P20190926161457711201', 'patientName': 'CN20190926161457711201', 'studyDate': '2019-09-26', 'studyTime': '16:15:29', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926161457711201', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926161103583182', 'patientID': 'P20190926161103583182', 'patientName': 'CN20190926161103583182', 'studyDate': '2019-09-26', 'studyTime': '16:11:34', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926161103583182', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926160457817657', 'patientID': 'P20190926160457817657', 'patientName': 'CN20190926160457817657', 'studyDate': '2019-09-26', 'studyTime': '16:05:28', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926160457817657', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926155434884612', 'patientID': 'P20190926155434884612', 'patientName': 'CN20190926155434884612', 'studyDate': '2019-09-26', 'studyTime': '15:55:03', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926155434884612', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926154948662730', 'patientID': 'P20190926154948662730', 'patientName': 'CN20190926154948662730', 'studyDate': '2019-09-26', 'studyTime': '15:50:18', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926154948662730', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926152214771679', 'patientID': 'P20190926152214771679', 'patientName': 'CN20190926152214771679', 'studyDate': '2019-09-26', 'studyTime': '15:22:48', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926152214771679', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926152151141858', 'patientID': 'P20190926152151141858', 'patientName': 'CN20190926152151141858', 'studyDate': '2019-09-26', 'studyTime': '15:21:56', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926151527430059', 'patientID': 'P20190926151527430059', 'patientName': 'CN20190926151527430059', 'studyDate': '2019-09-26', 'studyTime': '15:15:35', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190925151339559062', 'patientID': 'P20190925151339559062', 'patientName': 'CN20190925151339559062', 'studyDate': '2019-09-25', 'studyTime': '15:14:12', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190925151339559062', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190925151112100099', 'patientID': 'P20190925151112100099', 'patientName': 'CN20190925151112100099', 'studyDate': '2019-09-25', 'studyTime': '15:11:42', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 3, 'examName': 'Exam20190925151112100099', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190925150604547069', 'patientID': 'P20190925150604547069', 'patientName': 'CN20190925150604547069', 'studyDate': '2019-09-25', 'studyTime': '15:06:37', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 3, 'examName': 'Exam20190925150604547069', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190925144432852059', 'patientID': 'P20190925144432852059', 'patientName': 'CN20190925144432852059', 'studyDate': '2019-09-25', 'studyTime': '14:45:06', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190925144432852059', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190925143718731410', 'patientID': 'P20190925143718731410', 'patientName': 'CN20190925143718731410', 'studyDate': '2019-09-25', 'studyTime': '14:37:51', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190925143718731410', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190925143345549503', 'patientID': 'P20190925143345549503', 'patientName': 'CN20190925143345549503', 'studyDate': '2019-09-25', 'studyTime': '14:34:16', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190925143345549503', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190925142250517879', 'patientID': 'P20190925142250517879', 'patientName': 'CN20190925142250517879', 'studyDate': '2019-09-25', 'studyTime': '14:23:21', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190925142250517879', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190925141608606774', 'patientID': 'P20190925141608606774', 'patientName': 'CN20190925141608606774', 'studyDate': '2019-09-25', 'studyTime': '14:16:40', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190925141608606774', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190924140239208696', 'patientID': 'P20190924140239208696', 'patientName': 'CN20190924140239208696', 'studyDate': '2019-09-24', 'studyTime': '14:03:09', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190924140239208696', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 3, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190924134211922347', 'patientID': 'P20190924134211922347', 'patientName': 'CN20190924134211922347', 'studyDate': '2019-09-24', 'studyTime': '13:42:39', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190924134211922347', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190924134005185090', 'patientID': 'P20190924134005185090', 'patientName': 'CN20190924134005185090', 'studyDate': '2019-09-24', 'studyTime': '13:40:34', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190924134005185090', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190924133636470877', 'patientID': 'P20190924133636470877', 'patientName': 'CN20190924133636470877', 'studyDate': '2019-09-24', 'studyTime': '13:37:21', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190924133636470877', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190920151641764670', 'patientID': 'P20190920151641764670', 'patientName': 'CN20190920151641764670', 'studyDate': '2019-09-20', 'studyTime': '15:16:53', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190920101314045529', 'patientID': 'P20190920101314045529', 'patientName': 'CN20190920101314045529', 'studyDate': '2019-09-20', 'studyTime': '10:13:27', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190920101302844554', 'patientID': 'P20190920101302844554', 'patientName': 'CN20190920101302844554', 'studyDate': '2019-09-20', 'studyTime': '10:13:08', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190920101251464315', 'patientID': 'P20190920101251464315', 'patientName': 'CN20190920101251464315', 'studyDate': '2019-09-20', 'studyTime': '10:12:57', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190920101220423507', 'patientID': 'P20190920101220423507', 'patientName': 'CN20190920101220423507', 'studyDate': '2019-09-20', 'studyTime': '10:12:49', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190920101220423507', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190906212504320861', 'patientID': 'P20190906212504320861', 'patientName': 'CN20190906212504320861', 'studyDate': '2019-09-06', 'studyTime': '21:25:16', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 0, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190906212222660430', 'patientID': 'P20190906212222660430', 'patientName': 'CN20190906212222660430', 'studyDate': '2019-09-06', 'studyTime': '21:22:30', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190906211930483389', 'patientID': 'P20190906211930483389', 'patientName': 'CN20190906211930483389', 'studyDate': '2019-09-06', 'studyTime': '21:19:40', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190906204051801198', 'patientID': 'P20190906204051801198', 'patientName': 'CN20190906204051801198', 'studyDate': '2019-09-06', 'studyTime': '20:40:59', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190906203853570302', 'patientID': 'P20190906203853570302', 'patientName': 'CN20190906203853570302', 'studyDate': '2019-09-06', 'studyTime': '20:39:04', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190906202539364997', 'patientID': 'P20190906202539364997', 'patientName': 'CN20190906202539364997', 'studyDate': '2019-09-06', 'studyTime': '20:25:48', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190906202218239273', 'patientID': 'P20190906202218239273', 'patientName': 'CN20190906202218239273', 'studyDate': '2019-09-06', 'studyTime': '20:22:28', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190905223436021463', 'patientID': 'P20190905223436021463', 'patientName': 'CN20190905223436021463', 'studyDate': '2019-09-05', 'studyTime': '22:34:41', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190905212205513802', 'patientID': 'P20190905212205513802', 'patientName': 'CN20190905212205513802', 'studyDate': '2019-09-05', 'studyTime': '21:22:10', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190905212111738668', 'patientID': 'P20190905212111738668', 'patientName': 'CN20190905212111738668', 'studyDate': '2019-09-05', 'studyTime': '21:21:15', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190905211755776242', 'patientID': 'P20190905211755776242', 'patientName': 'CN20190905211755776242', 'studyDate': '2019-09-05', 'studyTime': '21:18:00', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190905211349106859', 'patientID': 'P20190905211349106859', 'patientName': 'CN20190905211349106859', 'studyDate': '2019-09-05', 'studyTime': '21:13:55', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903172505152418', 'patientID': 'P20190903172505152418', 'patientName': 'CN20190903172505152418', 'studyDate': '2019-09-03', 'studyTime': '17:25:12', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903170227056234', 'patientID': 'P20190903170227056234', 'patientName': 'CN20190903170227056234', 'studyDate': '2019-09-03', 'studyTime': '17:02:31', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903170051099638', 'patientID': 'P20190903170051099638', 'patientName': 'CN20190903170051099638', 'studyDate': '2019-09-03', 'studyTime': '17:00:56', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903165955457397', 'patientID': 'P20190903165955457397', 'patientName': 'CN20190903165955457397', 'studyDate': '2019-09-03', 'studyTime': '17:00:01', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903165901885271', 'patientID': 'P20190903165901885271', 'patientName': 'CN20190903165901885271', 'studyDate': '2019-09-03', 'studyTime': '16:59:06', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903165542153628', 'patientID': 'P20190903165542153628', 'patientName': 'CN20190903165542153628', 'studyDate': '2019-09-03', 'studyTime': '16:55:45', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903165418596754', 'patientID': 'P20190903165418596754', 'patientName': 'CN20190903165418596754', 'studyDate': '2019-09-03', 'studyTime': '16:54:25', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903164954783371', 'patientID': 'P20190903164954783371', 'patientName': 'CN20190903164954783371', 'studyDate': '2019-09-03', 'studyTime': '16:50:00', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903164800887729', 'patientID': 'P20190903164800887729', 'patientName': 'CN20190903164800887729', 'studyDate': '2019-09-03', 'studyTime': '16:48:09', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903153259666283', 'patientID': 'P20190903153259666283', 'patientName': 'CN20190903153259666283', 'studyDate': '2019-09-03', 'studyTime': '15:33:04', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903153139846628', 'patientID': 'P20190903153139846628', 'patientName': 'CN20190903153139846628', 'studyDate': '2019-09-03', 'studyTime': '15:31:50', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903153001170875', 'patientID': 'P20190903153001170875', 'patientName': 'CN20190903153001170875', 'studyDate': '2019-09-03', 'studyTime': '15:30:11', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903152902688466', 'patientID': 'P20190903152902688466', 'patientName': 'CN20190903152902688466', 'studyDate': '2019-09-03', 'studyTime': '15:29:13', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903152102563471', 'patientID': 'P20190903152102563471', 'patientName': 'CN20190903152102563471', 'studyDate': '2019-09-03', 'studyTime': '15:21:12', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903152025122287', 'patientID': 'P20190903152025122287', 'patientName': 'CN20190903152025122287', 'studyDate': '2019-09-03', 'studyTime': '15:20:35', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903151513291106', 'patientID': 'P20190903151513291106', 'patientName': 'CN20190903151513291106', 'studyDate': '2019-09-03', 'studyTime': '15:15:23', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903151421178072', 'patientID': 'P20190903151421178072', 'patientName': 'CN20190903151421178072', 'studyDate': '2019-09-03', 'studyTime': '15:14:31', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903151230111593', 'patientID': 'P20190903151230111593', 'patientName': 'CN20190903151230111593', 'studyDate': '2019-09-03', 'studyTime': '15:12:40', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903104428938966', 'patientID': 'P20190903104428938966', 'patientName': 'CN20190903104428938966', 'studyDate': '2019-09-03', 'studyTime': '10:44:38', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903104253914424', 'patientID': 'P20190903104253914424', 'patientName': 'CN20190903104253914424', 'studyDate': '2019-09-03', 'studyTime': '10:43:03', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903104133545742', 'patientID': 'P20190903104133545742', 'patientName': 'CN20190903104133545742', 'studyDate': '2019-09-03', 'studyTime': '10:41:43', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903103922870119', 'patientID': 'P20190903103922870119', 'patientName': 'CN20190903103922870119', 'studyDate': '2019-09-03', 'studyTime': '10:39:33', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903102755578047', 'patientID': 'P20190903102755578047', 'patientName': 'CN20190903102755578047', 'studyDate': '2019-09-03', 'studyTime': '10:27:55', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903102136190927', 'patientID': 'P20190903102136190927', 'patientName': 'CN20190903102136190927', 'studyDate': '2019-09-03', 'studyTime': '10:21:36', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903101857687685', 'patientID': 'P20190903101857687685', 'patientName': 'CN20190903101857687685', 'studyDate': '2019-09-03', 'studyTime': '10:18:57', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': '0016818', 'patientID': '8017446', 'patientName': 'Meng_Cui_Ping', 'studyDate': '2019-02-25', 'studyTime': '13:32:56', 'patientSex': '男', 'patientType': '1', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'ralfacc001', 'patientID': 'ralf001', 'patientName': 'ralf001new', 'studyDate': '2019-01-25', 'studyTime': '15:05:51', 'patientSex': '男', 'patientType': '1', 'holdFlag': 0, 'printMode': 0, 'examName': '', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'ImageSuite179', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'Az004', 'patientID': 'PID004', 'patientName': '赵六', 'studyDate': '2019-01-25', 'studyTime': '14:16:06', 'patientSex': '男', 'patientType': '1', 'holdFlag': 0, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'E003', 'patientID': 'PID003', 'patientName': '王五', 'studyDate': '2019-01-25', 'studyTime': '13:56:55', 'patientSex': '男', 'patientType': '1', 'holdFlag': 0, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'E001', 'patientID': 'PID001', 'patientName': '张三', 'studyDate': '2019-01-18', 'studyTime': '15:47:11', 'patientSex': '男', 'patientType': '1', 'holdFlag': 0, 'printMode': 0, 'examName': '', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'KMKJD', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'AT015', 'patientID': 'PT015', 'patientName': '周伯通', 'studyDate': '2019-01-15', 'studyTime': '13:07:32', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': '', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-01-15 13:33:07.023', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': '2019-01-15 13:33:05.123', 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'Test', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'AT014', 'patientID': 'PT014', 'patientName': '段玉', 'studyDate': '2019-01-04', 'studyTime': '10:46:01', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': '', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-01-15 09:47:23.803', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': '2019-01-15 13:28:47.160', 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'Test', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'AT013', 'patientID': 'PT013', 'patientName': '穆念慈', 'studyDate': '2019-01-03', 'studyTime': '10:06:48', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-01-03 11:21:21.317', 'filmDeleteStatus': 0, 'imageCount': 8, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': '2019-01-03 11:21:21.040', 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'Test', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'AT012', 'patientID': 'PT012', 'patientName': '杨康', 'studyDate': '2019-01-03', 'studyTime': '09:55:12', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': '', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-01-03 10:58:34.843', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': '2019-01-03 10:58:31.770', 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'Test', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'AT011', 'patientID': 'PT011', 'patientName': '郭靖', 'studyDate': '2018-12-14', 'studyTime': '17:08:37', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2018-12-24 14:15:09.657', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': '2018-12-24 14:15:06.917', 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'Test', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'AT009', 'patientID': 'PT009', 'patientName': '黑熊精', 'studyDate': '2018-11-20', 'studyTime': '09:21:42', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': '', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2018-11-20 11:02:20.957', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': '2018-11-21 14:11:08.760', 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'Test', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'AT005', 'patientID': 'PT005', 'patientName': '沙和尚', 'studyDate': '2018-11-15', 'studyTime': '10:06:48', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 3, 'examName': None, 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2018-12-14 16:00:12.993', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': '2018-12-14 15:59:57.837', 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'Test', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'AT004', 'patientID': 'PT004', 'patientName': '白龙马', 'studyDate': '2018-11-15', 'studyTime': '10:02:36', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 3, 'examName': None, 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2018-11-16 12:21:33.033', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': '2018-11-16 12:24:24.733', 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'Test', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'asdfasdf', 'patientID': 'M0001', 'patientName': 'test1', 'studyDate': '2018-10-30', 'studyTime': '13:55:36', 'patientSex': '男', 'patientType': '1', 'holdFlag': 1, 'printMode': 4, 'examName': None, 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 4, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'AT002', 'patientID': 'PT002', 'patientName': '唐僧', 'studyDate': '2018-08-09', 'studyTime': '16:24:04', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 0, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 3, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': '2018-08-09 16:28:51.707', 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': '', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'AT001', 'patientID': 'PT001', 'patientName': '孙悟空', 'studyDate': '2018-08-09', 'studyTime': '14:17:56', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 0, 'printMode': 3, 'examName': None, 'bodayPart': '', 'filmPrintStatus': 0, 'filmPrintTime': '2019-01-11 13:35:59.797', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': '2018-12-10 16:36:03.217', 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'Test', 'reportInfos': None, 'filmInfos': None}]]</msg>
<status status="PASS" starttime="20191112 14:22:39.453" endtime="20191112 14:22:39.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4 \n Description: \n 1. Use API to add a shortcut with name like 'patienttype'. \n Expected: \n 1. The shortcut should add and save successfully. \n</arg>
</arguments>
<msg timestamp="20191112 14:22:39.453" level="INFO">Step 4 
Description: 
1. Use API to add a shortcut with name like 'patienttype'. 
Expected: 
1. The shortcut should add and save successfully. 
</msg>
<status status="PASS" starttime="20191112 14:22:39.453" endtime="20191112 14:22:39.453"></status>
</kw>
<kw name="Platform Worklist Shotcut Save" library="PUMA_PlatformLibrary">
<doc>Platform_worklist_shotcut_save</doc>
<arguments>
<arg>ralf</arg>
<arg>isFuzzy_bool=True</arg>
<arg>patientType=门诊病人,住院病人</arg>
<arg>UserName=admin</arg>
</arguments>
<assign>
<var>${Save_shortCut_result}</var>
</assign>
<msg timestamp="20191112 14:22:39.469" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.563" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/deleteShortcut HTTP/1.1" 200 33</msg>
<msg timestamp="20191112 14:22:39.563" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.610" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/saveShortcut HTTP/1.1" 200 33</msg>
<msg timestamp="20191112 14:22:39.610" level="INFO">Platform.Platform_worklist_shotcut_save: The shortcut exist, delete as your selected.
Platform.Platform_worklist_shotcut_del_by_name: The shortcut of user is deleted successfully. [ralf, admin], message is [{"isSuccess":true,"message":null}]</msg>
<msg timestamp="20191112 14:22:39.610" level="INFO">${Save_shortCut_result} = {'Result': True, 'shortCutname': 'ralf'}</msg>
<status status="PASS" starttime="20191112 14:22:39.453" endtime="20191112 14:22:39.610"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Save_shortCut_result}[Result] == True</arg>
<arg>The shorcut save successuflly</arg>
</arguments>
<status status="PASS" starttime="20191112 14:22:39.610" endtime="20191112 14:22:39.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5 \n Description：\n 1. Use API to simulate the operations as click the shortcut to query data. \n Expected:\n 1. The data should same with step2.</arg>
</arguments>
<msg timestamp="20191112 14:22:39.610" level="INFO">Step 5 
Description：
1. Use API to simulate the operations as click the shortcut to query data. 
Expected:
1. The data should same with step2.</msg>
<status status="PASS" starttime="20191112 14:22:39.610" endtime="20191112 14:22:39.610"></status>
</kw>
<kw name="Platform Worklist Shotcut Query By Name" library="PUMA_PlatformLibrary">
<doc>Platform_worklist_shotcut_query_by_name</doc>
<arguments>
<arg>admin</arg>
<arg>ralf</arg>
</arguments>
<assign>
<var>${Shortcut_Query_String}</var>
</assign>
<msg timestamp="20191112 14:22:39.610" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.625" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11859</msg>
<msg timestamp="20191112 14:22:39.625" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.625" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11859</msg>
<msg timestamp="20191112 14:22:39.625" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.641" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11537</msg>
<msg timestamp="20191112 14:22:39.641" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.656" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11157</msg>
<msg timestamp="20191112 14:22:39.656" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.656" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11121</msg>
<msg timestamp="20191112 14:22:39.656" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.672" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11893</msg>
<msg timestamp="20191112 14:22:39.672" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.672" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11617</msg>
<msg timestamp="20191112 14:22:39.688" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.688" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11804</msg>
<msg timestamp="20191112 14:22:39.688" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.703" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11484</msg>
<msg timestamp="20191112 14:22:39.703" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.703" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11358</msg>
<msg timestamp="20191112 14:22:39.719" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.719" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11671</msg>
<msg timestamp="20191112 14:22:39.719" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.735" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12127</msg>
<msg timestamp="20191112 14:22:39.735" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.735" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 12246</msg>
<msg timestamp="20191112 14:22:39.750" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.750" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11767</msg>
<msg timestamp="20191112 14:22:39.750" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.766" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11713</msg>
<msg timestamp="20191112 14:22:39.766" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.781" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11654</msg>
<msg timestamp="20191112 14:22:39.781" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.797" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11437</msg>
<msg timestamp="20191112 14:22:39.797" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.797" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11418</msg>
<msg timestamp="20191112 14:22:39.813" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.813" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 11123</msg>
<msg timestamp="20191112 14:22:39.813" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.828" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10658</msg>
<msg timestamp="20191112 14:22:39.828" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.844" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 10598</msg>
<msg timestamp="20191112 14:22:39.844" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.860" level="DEBUG">http://10.112.20.84:80 "POST /webapi/api/worklist/searchWorklist HTTP/1.1" 200 9884</msg>
<msg timestamp="20191112 14:22:39.860" level="INFO">${Shortcut_Query_String} = {"Result": true, "Data": [{"accessionNumber": "A20191112142058625005", "patientID": "P20191112142058625005", "patientName": "CN20191112142058625005", "studyDate": "2019-11-12", "studyTime": "14:21:28"...</msg>
<status status="PASS" starttime="20191112 14:22:39.610" endtime="20191112 14:22:39.860"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Shortcut_Query_String}</arg>
</arguments>
<assign>
<var>${ShortCut_Query_Json}</var>
</assign>
<msg timestamp="20191112 14:22:39.875" level="INFO">${ShortCut_Query_Json} = {'Result': True, 'Data': [{'accessionNumber': 'A20191112142058625005', 'patientID': 'P20191112142058625005', 'patientName': 'CN20191112142058625005', 'studyDate': '2019-11-12', 'studyTime': '14:21:28'...</msg>
<status status="PASS" starttime="20191112 14:22:39.860" endtime="20191112 14:22:39.875"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${ShortCut_Query_Json}</arg>
<arg>Data</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20191112 14:22:39.922" level="INFO">${data} = [[{'accessionNumber': 'A20191112142058625005', 'patientID': 'P20191112142058625005', 'patientName': 'CN20191112142058625005', 'studyDate': '2019-11-12', 'studyTime': '14:21:28', 'patientSex': 'F', 'pa...</msg>
<status status="PASS" starttime="20191112 14:22:39.875" endtime="20191112 14:22:39.922"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${query_data}</arg>
</arguments>
<assign>
<var>${query_data}</var>
</assign>
<msg timestamp="20191112 14:22:39.922" level="DEBUG">Argument types are:
&lt;class 'list'&gt;</msg>
<msg timestamp="20191112 14:22:39.922" level="INFO">${query_data} = [[{'accessionNumber': 'A20191112142058625005', 'patientID': 'P20191112142058625005', 'patientName': 'CN20191112142058625005', 'studyDate': '2019-11-12', 'studyTime': '14:21:28', 'patientSex': 'F', 'pa...</msg>
<status status="PASS" starttime="20191112 14:22:39.922" endtime="20191112 14:22:39.922"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20191112 14:22:39.922" level="DEBUG">Argument types are:
&lt;class 'list'&gt;</msg>
<msg timestamp="20191112 14:22:39.938" level="INFO">${data} = [[{'accessionNumber': 'A20191112142058625005', 'patientID': 'P20191112142058625005', 'patientName': 'CN20191112142058625005', 'studyDate': '2019-11-12', 'studyTime': '14:21:28', 'patientSex': 'F', 'pa...</msg>
<status status="PASS" starttime="20191112 14:22:39.922" endtime="20191112 14:22:39.938"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${query_data}</arg>
<arg>${data}</arg>
</arguments>
<msg timestamp="20191112 14:22:39.938" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191112 14:22:39.938" endtime="20191112 14:22:39.938"></status>
</kw>
<kw name="Platform Logout" library="PUMA_PlatformLibrary">
<doc>platform_logout_user_pwd</doc>
<assign>
<var>${logoff_status}</var>
</assign>
<msg timestamp="20191112 14:22:39.938" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.953" level="DEBUG">http://10.112.20.84:80 "GET /Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191112 14:22:39.953" level="DEBUG">Starting new HTTP connection (1): 10.112.20.84:80</msg>
<msg timestamp="20191112 14:22:39.953" level="DEBUG">http://10.112.20.84:80 "GET /Platform//account/logOff HTTP/1.1" 302 127</msg>
<msg timestamp="20191112 14:22:39.953" level="DEBUG">http://10.112.20.84:80 "GET /Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191112 14:22:39.953" level="INFO">Platform.platform_logout: Logoff successfully.</msg>
<msg timestamp="20191112 14:22:39.953" level="INFO">${logoff_status} = True</msg>
<status status="PASS" starttime="20191112 14:22:39.938" endtime="20191112 14:22:39.953"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${logoff_status}</arg>
</arguments>
<status status="PASS" starttime="20191112 14:22:39.953" endtime="20191112 14:22:39.953"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191112 14:22:38.781" endtime="20191112 14:22:39.953" critical="yes"></status>
</test>
<status status="FAIL" starttime="20191112 13:56:07.066" endtime="20191112 14:22:39.953"></status>
</suite>
<statistics>
<total>
<stat pass="14" fail="1">Critical Tests</stat>
<stat pass="14" fail="1">All Tests</stat>
</total>
<tag>
<stat pass="14" fail="1">Smoke</stat>
</tag>
<suite>
<stat pass="14" fail="1" id="s1" name="SmokeTest">SmokeTest</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
