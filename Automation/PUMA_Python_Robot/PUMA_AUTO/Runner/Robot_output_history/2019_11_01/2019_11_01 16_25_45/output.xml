<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.4 on win32)" generated="20191101 15:54:26.731" rpa="false">
<suite id="s1" name="SmokeTest" source="D:\PUMA_AUTO\RF_PUMA\PUMA\SmokeTest.robot">
<test id="s1-t1" name="SmokeTest_001_Core_4170_01.01.01 OCR Image process failed(9).">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step1 \nDescription:\n Create a patient in RIS or local table in PS.\nExpected:\n The patient can create successfully.</arg>
</arguments>
<msg timestamp="20191101 15:54:27.778" level="INFO">Step1 
Description:
Create a patient in RIS or local table in PS.
Expected:
The patient can create successfully.</msg>
<status status="PASS" starttime="20191101 15:54:27.778" endtime="20191101 15:54:27.778"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191101 15:54:27.794" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 15:54:28.138" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191101 15:54:28.138" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-01 15:54:27.778150", "UpdateDT": "2019-11-01 15:54:27.778150", "PatientID": "P20191101155427778150", "AccessionNumber": "A20191101155427778150", "StudyInstanceUID": "UID20191101155427778150", "NameCN": "CN20191101155427778150", "NameEN": "EN20191101155427778150", "Gender": "F", "Birthday": "1961-11-15", "Modality": "RF", "ModalityName": "IO", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-01 15:54:27.778150", "RegisterDT": "2019-11-01 15:54:27.778150", "ExamDT": "2019-11-01 15:54:27.778150", "ReportDT": "2019-11-01 15:54:27.778150", "SubmitDT": "2019-11-01 15:54:27.778150", "ApproveDT": "2019-11-01 15:54:27.778150", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191101155427778150", "ExamBodyPart": "Neck", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191101 15:54:28.138" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-01 15:54:27.778150", "UpdateDT": "2019-11-01 15:54:27.778150", "PatientID": "P20191101155427778150", "AccessionNumber": "A20191101155427778150", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191101 15:54:27.778" endtime="20191101 15:54:28.138"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191101 15:54:28.153" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-01 15:54:27.778150', 'UpdateDT': '2019-11-01 15:54:27.778150', 'PatientID': 'P20191101155427778150', 'AccessionNumber': 'A20191101155427778150', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191101 15:54:28.153" endtime="20191101 15:54:28.153"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191101 15:54:28.184" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191101 15:54:28.153" endtime="20191101 15:54:28.184"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191101 15:54:28.231" level="INFO">${patientID} = ['P20191101155427778150']</msg>
<status status="PASS" starttime="20191101 15:54:28.184" endtime="20191101 15:54:28.231"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191101 15:54:28.263" level="INFO">${Accessionnumber} = ['A20191101155427778150']</msg>
<status status="PASS" starttime="20191101 15:54:28.231" endtime="20191101 15:54:28.263"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 15:54:28.263" endtime="20191101 15:54:28.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step2 \n Description:\n1.Prepare a DICOM file whose patientid and accession number is same as that in step1.\n 2.The film is configured in OCR config tool in PS include PID&amp;ACCN, but not ROI rule.\n 3.The grammar configuration should meet the DICOM file that means the film will not recognize successfully.\n Expected: \n The preparation can execute successfully.</arg>
</arguments>
<msg timestamp="20191101 15:54:28.263" level="INFO">Step2 
Description:
1.Prepare a DICOM file whose patientid and accession number is same as that in step1.
2.The film is configured in OCR config tool in PS include PID&amp;ACCN, but not ROI rule.
3.The grammar configuration should meet the DICOM file that means the film will not recognize successfully.
Expected: 
The preparation can execute successfully.</msg>
<status status="PASS" starttime="20191101 15:54:28.263" endtime="20191101 15:54:28.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step3\n Description:\n 1. Delete the patient information from RIS or local table in step1. \nExpected:\n The patient can delete successfully.</arg>
</arguments>
<msg timestamp="20191101 15:54:28.263" level="INFO">Step3
Description:
1. Delete the patient information from RIS or local table in step1. 
Expected:
The patient can delete successfully.</msg>
<status status="PASS" starttime="20191101 15:54:28.263" endtime="20191101 15:54:28.263"></status>
</kw>
<kw name="Patient Delete By Pid Accn" library="PUMA_PatientLibrary">
<doc>patient delete by pid accn</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${delete_result}</var>
</assign>
<msg timestamp="20191101 15:54:28.559" level="INFO">Patient.patient_delete_by_pid_accn: [1] records will deleted.</msg>
<msg timestamp="20191101 15:54:28.575" level="INFO">${delete_result} = True</msg>
<status status="PASS" starttime="20191101 15:54:28.263" endtime="20191101 15:54:28.575"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${delete_result} == True</arg>
<arg>The patient delete successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 15:54:28.575" endtime="20191101 15:54:28.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4 \n Description:\n 1. Print the DICOM file(film) to PS. \nExpected:\n The DICOM file(film) can print to PS successfully.</arg>
</arguments>
<msg timestamp="20191101 15:54:28.575" level="INFO">Step 4 
Description:
1. Print the DICOM file(film) to PS. 
Expected:
The DICOM file(film) can print to PS successfully.</msg>
<status status="PASS" starttime="20191101 15:54:28.575" endtime="20191101 15:54:28.575"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191101 15:55:09.997" level="INFO">Film.film_create_film_with_sample:Film archived failed: {"Status": false, "PatientID": "P20191101155427778150", "AccessionNumber": "A20191101155427778150", "FilmSessionLable": "20191101155428575027", "DeliveryJob_status": 9, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191101 15:55:09.997" level="INFO">${Print_res} = {"Status": false, "PatientID": "P20191101155427778150", "AccessionNumber": "A20191101155427778150", "FilmSessionLable": "20191101155428575027", "DeliveryJob_status": 9, "WaterMark_Path": "D:\\PUMA_AUT...</msg>
<status status="PASS" starttime="20191101 15:54:28.575" endtime="20191101 15:55:09.997"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191101 15:55:09.997" level="INFO">${Print_Res_Json} = {'Status': False, 'PatientID': 'P20191101155427778150', 'AccessionNumber': 'A20191101155427778150', 'FilmSessionLable': '20191101155428575027', 'DeliveryJob_status': 9, 'WaterMark_Path': 'D:\\PUMA_AUT...</msg>
<status status="PASS" starttime="20191101 15:55:09.997" endtime="20191101 15:55:09.997"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191101 15:55:10.028" level="INFO">${Print_Result} = [False]</msg>
<status status="PASS" starttime="20191101 15:55:09.997" endtime="20191101 15:55:10.028"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${Print_Result}</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<msg timestamp="20191101 15:55:10.028" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20191101 15:55:10.028" endtime="20191101 15:55:10.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5\n Description:\n 1. Wait the OCR process finished. The default time is '600'. \n2. Check the jobstatus in printer.dbo.deliveryjob table.\nNote: query the records with filmsessionlabel. \ \ \nExpected: \nThe value should be 9 means grammar configured but identify failed.</arg>
</arguments>
<msg timestamp="20191101 15:55:10.028" level="INFO">Step 5
Description:
1. Wait the OCR process finished. The default time is '600'. 
2. Check the jobstatus in printer.dbo.deliveryjob table.
Note: query the records with filmsessionlabel.   
Expected: 
The value should be 9 means grammar configured but identify failed.</msg>
<status status="PASS" starttime="20191101 15:55:10.028" endtime="20191101 15:55:10.028"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>DeliveryJob_status</arg>
</arguments>
<assign>
<var>${Job_status}</var>
</assign>
<msg timestamp="20191101 15:55:10.075" level="INFO">${Job_status} = [9]</msg>
<status status="PASS" starttime="20191101 15:55:10.028" endtime="20191101 15:55:10.075"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Job_status}[0]</arg>
</arguments>
<assign>
<var>${Job_status}</var>
</assign>
<msg timestamp="20191101 15:55:10.075" level="DEBUG">Argument types are:
&lt;class 'int'&gt;</msg>
<msg timestamp="20191101 15:55:10.075" level="INFO">${Job_status} = 9</msg>
<status status="PASS" starttime="20191101 15:55:10.075" endtime="20191101 15:55:10.075"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${Job_status}</arg>
<arg>9</arg>
<arg>The film`s jobstatus in printer.dbo.DeliveryJob is 9.</arg>
</arguments>
<msg timestamp="20191101 15:55:10.075" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 15:55:10.075" endtime="20191101 15:55:10.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6:\nDescription\n1. Query the records in wggc.dbo.afp_filminfo with patient id and accession number.\nExpected:\n There is no record insert into this table.</arg>
</arguments>
<msg timestamp="20191101 15:55:10.075" level="INFO">Step 6:
Description
1. Query the records in wggc.dbo.afp_filminfo with patient id and accession number.
Expected:
There is no record insert into this table.</msg>
<status status="PASS" starttime="20191101 15:55:10.075" endtime="20191101 15:55:10.075"></status>
</kw>
<kw name="Film Check Archive In Filminfo Table" library="PUMA_FilmLibrary">
<doc>film_check_archive_in_filminfo_table</doc>
<assign>
<var>${Archive_Filminfo_Table_Result}</var>
</assign>
<msg timestamp="20191101 15:55:10.075" level="INFO">Film.film_check_archive_in_filminfo_table: Data exception!
Film.film_check_archive_in_filminfo_table:There is [0] records for patient[P20191101155427778150, A20191101155427778150] and filmsessionlable is [20191101155428575027]</msg>
<msg timestamp="20191101 15:55:10.075" level="INFO">${Archive_Filminfo_Table_Result} = False</msg>
<status status="PASS" starttime="20191101 15:55:10.075" endtime="20191101 15:55:10.075"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Archive_Filminfo_Table_Result} == False</arg>
<arg>There is no record insert into wggc.dbo.afp_filminfo table.</arg>
</arguments>
<status status="PASS" starttime="20191101 15:55:10.075" endtime="20191101 15:55:10.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 7:\nDescription:\n1. Query the records in wggc.dbo.afp_examinfo with patient id and accession number. \nExpected: \nThere is no record insert into this table.</arg>
</arguments>
<msg timestamp="20191101 15:55:10.075" level="INFO">Step 7:
Description:
1. Query the records in wggc.dbo.afp_examinfo with patient id and accession number. 
Expected: 
There is no record insert into this table.</msg>
<status status="PASS" starttime="20191101 15:55:10.075" endtime="20191101 15:55:10.075"></status>
</kw>
<kw name="Film Check Archive In Examinfo Table" library="PUMA_FilmLibrary">
<doc>film_check_archive_in_examinfo_table</doc>
<assign>
<var>${Archived_Examinfo_Table_result}</var>
</assign>
<msg timestamp="20191101 15:55:10.091" level="INFO">Film.film_check_archive_in_examinfo_table: There are no film records in wggc.dbo.Examinfo of patient [A20191101155427778150, P20191101155427778150]</msg>
<msg timestamp="20191101 15:55:10.091" level="INFO">${Archived_Examinfo_Table_result} = False</msg>
<status status="PASS" starttime="20191101 15:55:10.075" endtime="20191101 15:55:10.091"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Archived_Examinfo_Table_result} == False</arg>
<arg>There is no record insert into wggc.dbo.afp_examinfo table.</arg>
</arguments>
<status status="PASS" starttime="20191101 15:55:10.091" endtime="20191101 15:55:10.091"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191101 15:54:27.778" endtime="20191101 15:55:10.091" critical="yes"></status>
</test>
<test id="s1-t2" name="SmokeTest_002_Core_4172_01.01.02 OCR Image process success(2).">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description:\n Create a patient in RIS or local table in PS.\nExpected:\n The patient can create successfully.</arg>
</arguments>
<msg timestamp="20191101 15:55:10.091" level="INFO">Step 1 
Description:
Create a patient in RIS or local table in PS.
Expected:
The patient can create successfully.</msg>
<status status="PASS" starttime="20191101 15:55:10.091" endtime="20191101 15:55:10.091"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191101 15:55:10.091" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 15:55:10.122" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191101 15:55:10.122" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-01 15:55:10.090705", "UpdateDT": "2019-11-01 15:55:10.090705", "PatientID": "P20191101155510090705", "AccessionNumber": "A20191101155510090705", "StudyInstanceUID": "UID20191101155510090705", "NameCN": "CN20191101155510090705", "NameEN": "EN20191101155510090705", "Gender": "F", "Birthday": "2013-11-02", "Modality": "DX", "ModalityName": "CR", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-01 15:55:10.090705", "RegisterDT": "2019-11-01 15:55:10.090705", "ExamDT": "2019-11-01 15:55:10.090705", "ReportDT": "2019-11-01 15:55:10.090705", "SubmitDT": "2019-11-01 15:55:10.090705", "ApproveDT": "2019-11-01 15:55:10.090705", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191101155510090705", "ExamBodyPart": "Head", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191101 15:55:10.122" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-01 15:55:10.090705", "UpdateDT": "2019-11-01 15:55:10.090705", "PatientID": "P20191101155510090705", "AccessionNumber": "A20191101155510090705", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191101 15:55:10.091" endtime="20191101 15:55:10.122"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191101 15:55:10.122" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-01 15:55:10.090705', 'UpdateDT': '2019-11-01 15:55:10.090705', 'PatientID': 'P20191101155510090705', 'AccessionNumber': 'A20191101155510090705', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191101 15:55:10.122" endtime="20191101 15:55:10.122"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191101 15:55:10.153" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191101 15:55:10.122" endtime="20191101 15:55:10.153"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191101 15:55:10.184" level="INFO">${patientID} = ['P20191101155510090705']</msg>
<status status="PASS" starttime="20191101 15:55:10.153" endtime="20191101 15:55:10.184"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191101 15:55:10.231" level="INFO">${Accessionnumber} = ['A20191101155510090705']</msg>
<status status="PASS" starttime="20191101 15:55:10.184" endtime="20191101 15:55:10.231"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0] == True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 15:55:10.231" endtime="20191101 15:55:10.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description:\n1.Prepare a DICOM file whose patientid and accession number is same as that in step1.\n 2.The film is configured in OCR config tool in PS include PID&amp;ACCN, but not ROI rule.\n 3.The grammar configuration should meet the DICOM file that means the film will not recognize successfully.\n Expected: \n The preparation can execute successfully.</arg>
</arguments>
<msg timestamp="20191101 15:55:10.231" level="INFO">Step 2 
Description:
1.Prepare a DICOM file whose patientid and accession number is same as that in step1.
2.The film is configured in OCR config tool in PS include PID&amp;ACCN, but not ROI rule.
3.The grammar configuration should meet the DICOM file that means the film will not recognize successfully.
Expected: 
The preparation can execute successfully.</msg>
<status status="PASS" starttime="20191101 15:55:10.231" endtime="20191101 15:55:10.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3 \n Description:\n 1. Print the DICOM file(film) to PS. \nExpected:\n The DICOM file(film) can print to PS successfully.</arg>
</arguments>
<msg timestamp="20191101 15:55:10.231" level="INFO">Step 3 
Description:
1. Print the DICOM file(film) to PS. 
Expected:
The DICOM file(film) can print to PS successfully.</msg>
<status status="PASS" starttime="20191101 15:55:10.231" endtime="20191101 15:55:10.231"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191101 15:55:41.231" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191101155510090705", "AccessionNumber": "A20191101155510090705", "FilmSessionLable": "20191101155510231330", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191101 15:55:41.231" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191101155510090705", "AccessionNumber": "A20191101155510090705", "FilmSessionLable": "20191101155510231330", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191101 15:55:10.231" endtime="20191101 15:55:41.231"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191101 15:55:41.231" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191101155510090705', 'AccessionNumber': 'A20191101155510090705', 'FilmSessionLable': '20191101155510231330', 'DeliveryJob_status': 2, 'WaterMark_Path': 'D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191101 15:55:41.231" endtime="20191101 15:55:41.231"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191101 15:55:41.263" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191101 15:55:41.231" endtime="20191101 15:55:41.263"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${Print_Result}</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<msg timestamp="20191101 15:55:41.263" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20191101 15:55:41.263" endtime="20191101 15:55:41.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4\n Description:\n 1. Wait the OCR process finished. The default time is '600'. \n2. Check the jobstatus in printer.dbo.deliveryjob table.\nNote: query the records with filmsessionlabel. \ \ \nExpected: \nThe value should be 2 means have condifuration but indentfy successfully.</arg>
</arguments>
<msg timestamp="20191101 15:55:41.263" level="INFO">Step 4
Description:
1. Wait the OCR process finished. The default time is '600'. 
2. Check the jobstatus in printer.dbo.deliveryjob table.
Note: query the records with filmsessionlabel.   
Expected: 
The value should be 2 means have condifuration but indentfy successfully.</msg>
<status status="PASS" starttime="20191101 15:55:41.263" endtime="20191101 15:55:41.263"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>DeliveryJob_status</arg>
</arguments>
<assign>
<var>${Job_status}</var>
</assign>
<msg timestamp="20191101 15:55:41.309" level="INFO">${Job_status} = [2]</msg>
<status status="PASS" starttime="20191101 15:55:41.263" endtime="20191101 15:55:41.309"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Job_status}[0]</arg>
</arguments>
<assign>
<var>${Job_status}</var>
</assign>
<msg timestamp="20191101 15:55:41.309" level="DEBUG">Argument types are:
&lt;class 'int'&gt;</msg>
<msg timestamp="20191101 15:55:41.309" level="INFO">${Job_status} = 2</msg>
<status status="PASS" starttime="20191101 15:55:41.309" endtime="20191101 15:55:41.309"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${Job_status}</arg>
<arg>2</arg>
<arg>The film`s jobstatus in printer.dbo.DeliveryJob is 2.</arg>
</arguments>
<msg timestamp="20191101 15:55:41.309" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 15:55:41.309" endtime="20191101 15:55:41.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5:\nDescription\n1. Query the records in wggc.dbo.afp_filminfo with patient id and accession number.\nExpected:\n There is new record insert into this table..</arg>
</arguments>
<msg timestamp="20191101 15:55:41.309" level="INFO">Step 5:
Description
1. Query the records in wggc.dbo.afp_filminfo with patient id and accession number.
Expected:
There is new record insert into this table..</msg>
<status status="PASS" starttime="20191101 15:55:41.309" endtime="20191101 15:55:41.309"></status>
</kw>
<kw name="Film Check Archive In Filminfo Table" library="PUMA_FilmLibrary">
<doc>film_check_archive_in_filminfo_table</doc>
<assign>
<var>${Archive_Filminfo_Table_Result}</var>
</assign>
<msg timestamp="20191101 15:55:41.309" level="INFO">Film.film_check_archive_in_filminfo_table:There is [1] records for patient[P20191101155510090705, A20191101155510090705] and filmsessionlable is [20191101155510231330]</msg>
<msg timestamp="20191101 15:55:41.309" level="INFO">${Archive_Filminfo_Table_Result} = True</msg>
<status status="PASS" starttime="20191101 15:55:41.309" endtime="20191101 15:55:41.309"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Archive_Filminfo_Table_Result} == True</arg>
<arg>There is new record insert into this table.</arg>
</arguments>
<status status="PASS" starttime="20191101 15:55:41.309" endtime="20191101 15:55:41.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6:\nDescription:\n1. Query the records in wggc.dbo.afp_examinfo with patient id and accession number. \nExpected: \nThere is new record insert into this table..</arg>
</arguments>
<msg timestamp="20191101 15:55:41.309" level="INFO">Step 6:
Description:
1. Query the records in wggc.dbo.afp_examinfo with patient id and accession number. 
Expected: 
There is new record insert into this table..</msg>
<status status="PASS" starttime="20191101 15:55:41.309" endtime="20191101 15:55:41.309"></status>
</kw>
<kw name="Film Check Archive In Examinfo Table" library="PUMA_FilmLibrary">
<doc>film_check_archive_in_examinfo_table</doc>
<assign>
<var>${Archived_Examinfo_Table_result}</var>
</assign>
<msg timestamp="20191101 15:55:41.309" level="INFO">Film.film_check_archive_in_examinfo_table: There are [1] new records archived in wggc.dbo.Examinfo for film of patient [A20191101155510090705, P20191101155510090705]</msg>
<msg timestamp="20191101 15:55:41.309" level="INFO">${Archived_Examinfo_Table_result} = True</msg>
<status status="PASS" starttime="20191101 15:55:41.309" endtime="20191101 15:55:41.309"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Archived_Examinfo_Table_result} == True</arg>
<arg>There is new record insert into this table.</arg>
</arguments>
<status status="PASS" starttime="20191101 15:55:41.309" endtime="20191101 15:55:41.309"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191101 15:55:10.091" endtime="20191101 15:55:41.309" critical="yes"></status>
</test>
<test id="s1-t3" name="SmokeTest_003_Core_4713_02.01.01 Report receive from web service NotifyServer.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1\n Description:\n1. Create a patient with an exam in RIS or local table in PS.\nExpected:\n 1. The patient with an exam can create successfully.</arg>
</arguments>
<msg timestamp="20191101 15:55:41.309" level="INFO">Step 1
Description:
1. Create a patient with an exam in RIS or local table in PS.
Expected:
1. The patient with an exam can create successfully.</msg>
<status status="PASS" starttime="20191101 15:55:41.309" endtime="20191101 15:55:41.309"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191101 15:55:41.309" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 15:55:41.388" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191101 15:55:41.388" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-01 15:55:41.309493", "UpdateDT": "2019-11-01 15:55:41.309493", "PatientID": "P20191101155541309493", "AccessionNumber": "A20191101155541309493", "StudyInstanceUID": "UID20191101155541309493", "NameCN": "CN20191101155541309493", "NameEN": "EN20191101155541309493", "Gender": "F", "Birthday": "1958-11-16", "Modality": "MG", "ModalityName": "DX", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-01 15:55:41.309493", "RegisterDT": "2019-11-01 15:55:41.309493", "ExamDT": "2019-11-01 15:55:41.309493", "ReportDT": "2019-11-01 15:55:41.309493", "SubmitDT": "2019-11-01 15:55:41.309493", "ApproveDT": "2019-11-01 15:55:41.309493", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191101155541309493", "ExamBodyPart": "Chest", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191101 15:55:41.388" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-01 15:55:41.309493", "UpdateDT": "2019-11-01 15:55:41.309493", "PatientID": "P20191101155541309493", "AccessionNumber": "A20191101155541309493", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191101 15:55:41.309" endtime="20191101 15:55:41.388"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191101 15:55:41.388" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-01 15:55:41.309493', 'UpdateDT': '2019-11-01 15:55:41.309493', 'PatientID': 'P20191101155541309493', 'AccessionNumber': 'A20191101155541309493', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191101 15:55:41.388" endtime="20191101 15:55:41.388"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191101 15:55:41.434" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191101 15:55:41.388" endtime="20191101 15:55:41.434"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]</arg>
<arg>Patient create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 15:55:41.434" endtime="20191101 15:55:41.434"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191101 15:55:41.466" level="INFO">${patientID} = ['P20191101155541309493']</msg>
<status status="PASS" starttime="20191101 15:55:41.434" endtime="20191101 15:55:41.466"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${AccessionNumber}</var>
</assign>
<msg timestamp="20191101 15:55:41.513" level="INFO">${AccessionNumber} = ['A20191101155541309493']</msg>
<status status="PASS" starttime="20191101 15:55:41.466" endtime="20191101 15:55:41.513"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>NameCN</arg>
</arguments>
<assign>
<var>${PatientName}</var>
</assign>
<msg timestamp="20191101 15:55:41.544" level="INFO">${PatientName} = ['CN20191101155541309493']</msg>
<status status="PASS" starttime="20191101 15:55:41.513" endtime="20191101 15:55:41.544"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>formal</arg>
</arguments>
<assign>
<var>${Report_type}</var>
</assign>
<msg timestamp="20191101 15:55:41.544" level="INFO">${Report_type} = formal</msg>
<status status="PASS" starttime="20191101 15:55:41.544" endtime="20191101 15:55:41.544"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>E:\\PUMA_AUTO_Ref\\Cases\\SmokeTest\\4713\\Report\\Performance1.pdf,E:\\PUMA_AUTO_Ref\\Cases\\SmokeTest\\4713\\Report\\Performance1.pdf</arg>
</arguments>
<assign>
<var>${File_path}</var>
</assign>
<msg timestamp="20191101 15:55:41.544" level="INFO">${File_path} = E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf,E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf</msg>
<status status="PASS" starttime="20191101 15:55:41.544" endtime="20191101 15:55:41.544"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>,</arg>
</arguments>
<assign>
<var>${PDF_Password}</var>
</assign>
<msg timestamp="20191101 15:55:41.544" level="INFO">${PDF_Password} = ,</msg>
<status status="PASS" starttime="20191101 15:55:41.544" endtime="20191101 15:55:41.544"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191101 15:55:46.544" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191101 15:55:41.544" endtime="20191101 15:55:46.544"></status>
</kw>
<kw name="Report Create By Notifyserver Reportinfo" library="PUMA_ReportLibrary">
<doc>report_create_by_notifyserver_reportinfo</doc>
<arguments>
<arg>${PatientName}[0]</arg>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
<arg>${Report_type}</arg>
<arg>${File_path}</arg>
<arg>${PDF_Password}</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191101 15:55:46.544" level="DEBUG">reading WSDL at: http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl ...</msg>
<msg timestamp="20191101 15:55:46.544" level="DEBUG">opening (http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl)</msg>
<msg timestamp="20191101 15:55:46.575" level="DEBUG">b'&lt;?xml version="1.0" encoding="utf-8"?&gt;\r\n&lt;wsdl:definitions xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://carestream.org/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" targetNamespace="http://carestream.org/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"&gt;\r\n  &lt;wsdl:types&gt;\r\n    &lt;s:schema elementFormDefault="qualified" targetNamespace="http://carestream.org/"&gt;\r\n      &lt;s:element name="NotifyExamInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:complexType name="ExamInfo"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="CreateDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="UpdateDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="AccessionNumber" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="StudyInstanceUID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="NameCN" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="NameEN" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Modality" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ModalityName" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PatientType" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="VisitID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="RequestID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDepartment" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="RegisterDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ExamDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ReportDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="SubmitDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ApproveDT" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PDFReportURL" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="StudyStatus" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="OutHospitalNo" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="InHospitalNo" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PhysicalNumber" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ExamName" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ExamBodyPart" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="RefferingDepartment" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional0" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional1" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional2" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional3" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional4" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional5" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional6" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional7" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional8" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Optional9" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:element name="NotifyExamInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamInfoResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyReportFile"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="reportPath" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyReportFileResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportFileResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="SetPrintMode"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="printWaitTime" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="reportWaitTime" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="SetPrintModeResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyFilmInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyFilmInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyReportInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="tns:ArrayOfString" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:complexType name="ArrayOfString"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:element name="NotifyReportInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyExamReservationInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="base64ExamReservation" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyExamReservationInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamReservationInfoResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyPatientInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientInfo" type="tns:PatientInfoEx" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:complexType name="PatientInfoEx"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PatientName" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="LocalName" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Age" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="IdentifyCardNumber" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="MedicalCardNumber" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="SocialSecurityCardNumber" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:element name="NotifyPatientInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyPatientInfoResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryCloudFilmUrl"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryCloudFilmUrlResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlResult" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryCloudFilmUrlForQrCode"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryCloudFilmUrlForQrCodeResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlForQrCodeResult" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n    &lt;/s:schema&gt;\r\n  &lt;/wsdl:types&gt;\r\n  &lt;wsdl:message name="NotifyExamInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyExamInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportFileSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyReportFile" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportFileSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetPrintModeSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetPrintMode" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetPrintModeSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyExamReservationInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyExamReservationInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyPatientInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyPatientInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryCloudFilmUrlSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryCloudFilmUrlSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryCloudFilmUrlForQrCodeSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryCloudFilmUrlForQrCodeSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:portType name="NotifyServiceSoap"&gt;\r\n    &lt;wsdl:operation name="NotifyExamInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyExamInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyExamInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportFile"&gt;\r\n      &lt;wsdl:input message="tns:NotifyReportFileSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyReportFileSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;wsdl:input message="tns:SetPrintModeSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetPrintModeSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyFilmInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyFilmInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyReportInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyReportInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyExamReservationInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyExamReservationInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyExamReservationInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyPatientInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyPatientInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyPatientInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryCloudFilmUrl"&gt;\r\n      &lt;wsdl:input message="tns:QueryCloudFilmUrlSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryCloudFilmUrlSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryCloudFilmUrlForQrCode"&gt;\r\n      &lt;wsdl:input message="tns:QueryCloudFilmUrlForQrCodeSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryCloudFilmUrlForQrCodeSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:portType&gt;\r\n  &lt;wsdl:binding name="NotifyServiceSoap" type="tns:NotifyServiceSoap"&gt;\r\n    &lt;soap:binding transport="http://schemas.xmlsoap.org/soap/http" /&gt;\r\n    &lt;wsdl:operation name="NotifyExamInfo"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/NotifyExamInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportFile"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/NotifyReportFile" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/SetPrintMode" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/NotifyFilmInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/NotifyReportInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyExamReservationInfo"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/NotifyExamReservationInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyPatientInfo"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/NotifyPatientInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryCloudFilmUrl"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/QueryCloudFilmUrl" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryCloudFilmUrlForQrCode"&gt;\r\n      &lt;soap:operation soapAction="http://carestream.org/QueryCloudFilmUrlForQrCode" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:binding&gt;\r\n  &lt;wsdl:binding name="NotifyServiceSoap12" type="tns:NotifyServiceSoap"&gt;\r\n    &lt;soap12:binding transport="http://schemas.xmlsoap.org/soap/http" /&gt;\r\n    &lt;wsdl:operation name="NotifyExamInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/NotifyExamInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportFile"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/NotifyReportFile" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/SetPrintMode" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/NotifyFilmInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/NotifyReportInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyExamReservationInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/NotifyExamReservationInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyPatientInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/NotifyPatientInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryCloudFilmUrl"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/QueryCloudFilmUrl" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryCloudFilmUrlForQrCode"&gt;\r\n      &lt;soap12:operation soapAction="http://carestream.org/QueryCloudFilmUrlForQrCode" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:binding&gt;\r\n  &lt;wsdl:service name="NotifyService"&gt;\r\n    &lt;wsdl:port name="NotifyServiceSoap" binding="tns:NotifyServiceSoap"&gt;\r\n      &lt;soap:address location="http://10.112.20.84/NotifyServer/NotifyService.asmx" /&gt;\r\n    &lt;/wsdl:port&gt;\r\n    &lt;wsdl:port name="NotifyServiceSoap12" binding="tns:NotifyServiceSoap12"&gt;\r\n      &lt;soap12:address location="http://10.112.20.84/NotifyServer/NotifyService.asmx" /&gt;\r\n    &lt;/wsdl:port&gt;\r\n  &lt;/wsdl:service&gt;\r\n&lt;/wsdl:definitions&gt;'
sax duration: 15 (ms)</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f090, convert type="tns:ExamInfo" to ('ExamInfo', 'http://carestream.org/')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f0f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f130, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f150, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f170, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f190, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f1d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f1f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f210, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f230, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f1b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f250, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f270, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f290, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f2b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f2d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f2f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f310, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f330, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f350, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f370, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f390, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f3b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f3d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f3f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f410, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f430, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f450, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f470, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f490, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f4b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f4d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f4f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f510, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f530, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f550, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f570, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f590, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f5b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f5d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f630, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f6b0, convert type="tns:ExamInfo" to ('ExamInfo', 'http://carestream.org/')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f710, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f730, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f750, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f7b0, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f830, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f8b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f8d0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f8f0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f910, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f930, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440f9d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440fa30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440fa10, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440fad0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440fb50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440fb70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440fb90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440fbb0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440fbf0, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://carestream.org/')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440fc10, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://carestream.org/')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440fb30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440fc90, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440fd10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440fd90, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440fe10, convert type="tns:PatientInfoEx" to ('PatientInfoEx', 'http://carestream.org/')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440fe70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440feb0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440fed0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440fef0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440ff10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440ff50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440ff70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440ff90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440ffb0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440ff30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x440ffd0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x4419050, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x44190d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x4419130, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x4419170, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x44191f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x4419250, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">Element:0x4419290, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:46.591" level="DEBUG">loaded:

schema collection
   Schema:0x43f2e10
   (raw)
      &lt;s:schema elementFormDefault="qualified" targetNamespace="http://carestream.org/"&gt;
         &lt;s:element name="NotifyExamInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ExamInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="CreateDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="UpdateDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="AccessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="StudyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="NameCN" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="NameEN" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Modality" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ModalityName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientType" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="VisitID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDepartment" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RegisterDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ReportDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="SubmitDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ApproveDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PDFReportURL" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="StudyStatus" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="OutHospitalNo" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="InHospitalNo" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PhysicalNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamBodyPart" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RefferingDepartment" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional0" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional1" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional2" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional3" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional4" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional5" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional6" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional7" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional8" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional9" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyExamInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportFile"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportPath" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportFileResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportFileResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetPrintMode"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="printWaitTime" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportWaitTime" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetPrintModeResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyFilmInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyFilmInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="tns:ArrayOfString"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ArrayOfString"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyReportInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyExamReservationInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="base64ExamReservation" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyExamReservationInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamReservationInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyPatientInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientInfo" type="tns:PatientInfoEx"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="PatientInfoEx"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="LocalName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Age" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="IdentifyCardNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="MedicalCardNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="SocialSecurityCardNumber" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyPatientInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyPatientInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrl"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlForQrCode"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlForQrCodeResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlForQrCodeResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
      &lt;/s:schema&gt;
   (model)
      &lt;Element:0x43f2fb0 name="NotifyExamInfo"&gt;
         &lt;Complex:0x440f030&gt;
            &lt;Sequence:0x440f050&gt;
               &lt;Element:0x440f090 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x43f2ff0 name="ExamInfo"&gt;
         &lt;Sequence:0x440f070&gt;
            &lt;Element:0x440f0f0 name="CreateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f130 name="UpdateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f150 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f170 name="AccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f190 name="StudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f1d0 name="NameCN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f1f0 name="NameEN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f210 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f230 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f1b0 name="Modality" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f250 name="ModalityName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f270 name="PatientType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f290 name="VisitID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f2b0 name="RequestID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f2d0 name="RequestDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f2f0 name="RequestDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f310 name="RegisterDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f330 name="ExamDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f350 name="ReportDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f370 name="SubmitDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f390 name="ApproveDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f3b0 name="PDFReportURL" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f3d0 name="StudyStatus" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f3f0 name="OutHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f410 name="InHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f430 name="PhysicalNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f450 name="ExamName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f470 name="ExamBodyPart" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f490 name="RefferingDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f4b0 name="Optional0" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f4d0 name="Optional1" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f4f0 name="Optional2" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f510 name="Optional3" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f530 name="Optional4" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f550 name="Optional5" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f570 name="Optional6" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f590 name="Optional7" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f5b0 name="Optional8" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f5d0 name="Optional9" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x440f0b0 name="NotifyExamInfoResponse"&gt;
         &lt;Complex:0x440f0d0&gt;
            &lt;Sequence:0x440f110&gt;
               &lt;Element:0x440f630 name="NotifyExamInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x440f5f0 name="NotifyReportFile"&gt;
         &lt;Complex:0x440f610&gt;
            &lt;Sequence:0x440f690&gt;
               &lt;Element:0x440f6b0 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
               &lt;Element:0x440f710 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x440f730 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x440f750 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x440f650 name="NotifyReportFileResponse"&gt;
         &lt;Complex:0x440f6d0&gt;
            &lt;Sequence:0x440f6f0&gt;
               &lt;Element:0x440f7b0 name="NotifyReportFileResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x440f770 name="SetPrintMode"&gt;
         &lt;Complex:0x440f790&gt;
            &lt;Sequence:0x440f810&gt;
               &lt;Element:0x440f830 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x440f8b0 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x440f8d0 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x440f8f0 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x440f910 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x440f7d0 name="SetPrintModeResponse"&gt;
         &lt;Complex:0x440f7f0&gt;
            &lt;Sequence:0x440f890&gt;
               &lt;Element:0x440f930 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x440f850 name="NotifyFilmInfo"&gt;
         &lt;Complex:0x440f950&gt;
            &lt;Sequence:0x440f9b0&gt;
               &lt;Element:0x440f9d0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x440fa30 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x440f970 name="NotifyFilmInfoResponse"&gt;
         &lt;Complex:0x440f670&gt;
            &lt;Sequence:0x440f9f0&gt;
               &lt;Element:0x440fa10 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x440f990 name="NotifyReportInfo"&gt;
         &lt;Complex:0x440fa50&gt;
            &lt;Sequence:0x440fab0&gt;
               &lt;Element:0x440fad0 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x440fb50 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x440fb70 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x440fb90 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x440fbb0 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x440fbf0 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
               &lt;Element:0x440fc10 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x440fa70 name="ArrayOfString"&gt;
         &lt;Sequence:0x440fa90&gt;
            &lt;Element:0x440fb30 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x440faf0 name="NotifyReportInfoResponse"&gt;
         &lt;Complex:0x440fc30&gt;
            &lt;Sequence:0x440fbd0&gt;
               &lt;Element:0x440fc90 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x440fc50 name="NotifyExamReservationInfo"&gt;
         &lt;Complex:0x440fc70&gt;
            &lt;Sequence:0x440fcf0&gt;
               &lt;Element:0x440fd10 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x440fcb0 name="NotifyExamReservationInfoResponse"&gt;
         &lt;Complex:0x440fcd0&gt;
            &lt;Sequence:0x440fd70&gt;
               &lt;Element:0x440fd90 name="NotifyExamReservationInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x440fd30 name="NotifyPatientInfo"&gt;
         &lt;Complex:0x440fd50&gt;
            &lt;Sequence:0x440fdf0&gt;
               &lt;Element:0x440fe10 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x440fdb0 name="PatientInfoEx"&gt;
         &lt;Sequence:0x440fdd0&gt;
            &lt;Element:0x440fe70 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440feb0 name="PatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440fed0 name="LocalName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440fef0 name="Age" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440ff10 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440ff50 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440ff70 name="Address" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440ff90 name="IdentifyCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440ffb0 name="MedicalCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440ff30 name="PhoneNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440ffd0 name="SocialSecurityCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x440fe30 name="NotifyPatientInfoResponse"&gt;
         &lt;Complex:0x440fe50&gt;
            &lt;Sequence:0x4419030&gt;
               &lt;Element:0x4419050 name="NotifyPatientInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x440fff0 name="QueryCloudFilmUrl"&gt;
         &lt;Complex:0x4419070&gt;
            &lt;Sequence:0x44190b0&gt;
               &lt;Element:0x44190d0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4419130 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x440fe90 name="QueryCloudFilmUrlResponse"&gt;
         &lt;Complex:0x4419090&gt;
            &lt;Sequence:0x4419150&gt;
               &lt;Element:0x4419170 name="QueryCloudFilmUrlResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x44190f0 name="QueryCloudFilmUrlForQrCode"&gt;
         &lt;Complex:0x4419110&gt;
            &lt;Sequence:0x44191d0&gt;
               &lt;Element:0x44191f0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4419250 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4419190 name="QueryCloudFilmUrlForQrCodeResponse"&gt;
         &lt;Complex:0x44191b0&gt;
            &lt;Sequence:0x4419270&gt;
               &lt;Element:0x4419290 name="QueryCloudFilmUrlForQrCodeResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">MERGED:
Schema:0x43f2e10
(raw)
   &lt;s:schema elementFormDefault="qualified" targetNamespace="http://carestream.org/"&gt;
      &lt;s:element name="NotifyExamInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ExamInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="CreateDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="UpdateDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="AccessionNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="StudyInstanceUID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="NameCN" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="NameEN" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Modality" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ModalityName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientType" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="VisitID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDepartment" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RegisterDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ReportDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="SubmitDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ApproveDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PDFReportURL" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="StudyStatus" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="OutHospitalNo" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="InHospitalNo" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PhysicalNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamBodyPart" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RefferingDepartment" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional0" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional1" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional2" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional3" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional4" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional5" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional6" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional7" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional8" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional9" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyExamInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportFile"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportPath" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportFileResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportFileResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetPrintMode"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="printWaitTime" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportWaitTime" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetPrintModeResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyFilmInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyFilmInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="tns:ArrayOfString"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ArrayOfString"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyReportInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyExamReservationInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="base64ExamReservation" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyExamReservationInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamReservationInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyPatientInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientInfo" type="tns:PatientInfoEx"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="PatientInfoEx"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="LocalName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Age" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="IdentifyCardNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="MedicalCardNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="SocialSecurityCardNumber" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyPatientInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyPatientInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrl"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlForQrCode"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlForQrCodeResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlForQrCodeResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
   &lt;/s:schema&gt;
(model)
   &lt;Element:0x43f2fb0 name="NotifyExamInfo"&gt;
      &lt;Complex:0x440f030&gt;
         &lt;Sequence:0x440f050&gt;
            &lt;Element:0x440f090 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x43f2ff0 name="ExamInfo"&gt;
      &lt;Sequence:0x440f070&gt;
         &lt;Element:0x440f0f0 name="CreateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f130 name="UpdateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f150 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f170 name="AccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f190 name="StudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f1d0 name="NameCN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f1f0 name="NameEN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f210 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f230 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f1b0 name="Modality" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f250 name="ModalityName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f270 name="PatientType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f290 name="VisitID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f2b0 name="RequestID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f2d0 name="RequestDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f2f0 name="RequestDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f310 name="RegisterDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f330 name="ExamDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f350 name="ReportDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f370 name="SubmitDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f390 name="ApproveDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f3b0 name="PDFReportURL" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f3d0 name="StudyStatus" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f3f0 name="OutHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f410 name="InHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f430 name="PhysicalNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f450 name="ExamName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f470 name="ExamBodyPart" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f490 name="RefferingDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f4b0 name="Optional0" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f4d0 name="Optional1" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f4f0 name="Optional2" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f510 name="Optional3" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f530 name="Optional4" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f550 name="Optional5" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f570 name="Optional6" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f590 name="Optional7" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f5b0 name="Optional8" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440f5d0 name="Optional9" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x440f0b0 name="NotifyExamInfoResponse"&gt;
      &lt;Complex:0x440f0d0&gt;
         &lt;Sequence:0x440f110&gt;
            &lt;Element:0x440f630 name="NotifyExamInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x440f5f0 name="NotifyReportFile"&gt;
      &lt;Complex:0x440f610&gt;
         &lt;Sequence:0x440f690&gt;
            &lt;Element:0x440f6b0 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
            &lt;Element:0x440f710 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f730 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f750 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x440f650 name="NotifyReportFileResponse"&gt;
      &lt;Complex:0x440f6d0&gt;
         &lt;Sequence:0x440f6f0&gt;
            &lt;Element:0x440f7b0 name="NotifyReportFileResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x440f770 name="SetPrintMode"&gt;
      &lt;Complex:0x440f790&gt;
         &lt;Sequence:0x440f810&gt;
            &lt;Element:0x440f830 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f8b0 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f8d0 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f8f0 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440f910 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x440f7d0 name="SetPrintModeResponse"&gt;
      &lt;Complex:0x440f7f0&gt;
         &lt;Sequence:0x440f890&gt;
            &lt;Element:0x440f930 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x440f850 name="NotifyFilmInfo"&gt;
      &lt;Complex:0x440f950&gt;
         &lt;Sequence:0x440f9b0&gt;
            &lt;Element:0x440f9d0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440fa30 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x440f970 name="NotifyFilmInfoResponse"&gt;
      &lt;Complex:0x440f670&gt;
         &lt;Sequence:0x440f9f0&gt;
            &lt;Element:0x440fa10 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x440f990 name="NotifyReportInfo"&gt;
      &lt;Complex:0x440fa50&gt;
         &lt;Sequence:0x440fab0&gt;
            &lt;Element:0x440fad0 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440fb50 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440fb70 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440fb90 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440fbb0 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x440fbf0 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
            &lt;Element:0x440fc10 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x440fa70 name="ArrayOfString"&gt;
      &lt;Sequence:0x440fa90&gt;
         &lt;Element:0x440fb30 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x440faf0 name="NotifyReportInfoResponse"&gt;
      &lt;Complex:0x440fc30&gt;
         &lt;Sequence:0x440fbd0&gt;
            &lt;Element:0x440fc90 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x440fc50 name="NotifyExamReservationInfo"&gt;
      &lt;Complex:0x440fc70&gt;
         &lt;Sequence:0x440fcf0&gt;
            &lt;Element:0x440fd10 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x440fcb0 name="NotifyExamReservationInfoResponse"&gt;
      &lt;Complex:0x440fcd0&gt;
         &lt;Sequence:0x440fd70&gt;
            &lt;Element:0x440fd90 name="NotifyExamReservationInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x440fd30 name="NotifyPatientInfo"&gt;
      &lt;Complex:0x440fd50&gt;
         &lt;Sequence:0x440fdf0&gt;
            &lt;Element:0x440fe10 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x440fdb0 name="PatientInfoEx"&gt;
      &lt;Sequence:0x440fdd0&gt;
         &lt;Element:0x440fe70 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440feb0 name="PatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440fed0 name="LocalName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440fef0 name="Age" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440ff10 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440ff50 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440ff70 name="Address" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440ff90 name="IdentifyCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440ffb0 name="MedicalCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440ff30 name="PhoneNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x440ffd0 name="SocialSecurityCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x440fe30 name="NotifyPatientInfoResponse"&gt;
      &lt;Complex:0x440fe50&gt;
         &lt;Sequence:0x4419030&gt;
            &lt;Element:0x4419050 name="NotifyPatientInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x440fff0 name="QueryCloudFilmUrl"&gt;
      &lt;Complex:0x4419070&gt;
         &lt;Sequence:0x44190b0&gt;
            &lt;Element:0x44190d0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4419130 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x440fe90 name="QueryCloudFilmUrlResponse"&gt;
      &lt;Complex:0x4419090&gt;
         &lt;Sequence:0x4419150&gt;
            &lt;Element:0x4419170 name="QueryCloudFilmUrlResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x44190f0 name="QueryCloudFilmUrlForQrCode"&gt;
      &lt;Complex:0x4419110&gt;
         &lt;Sequence:0x44191d0&gt;
            &lt;Element:0x44191f0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4419250 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4419190 name="QueryCloudFilmUrlForQrCodeResponse"&gt;
      &lt;Complex:0x44191b0&gt;
         &lt;Sequence:0x4419270&gt;
            &lt;Element:0x4419290 name="QueryCloudFilmUrlForQrCodeResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x43f2fb0 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('NotifyExamInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x440f0b0 name="NotifyExamInfoResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x440f5f0 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('NotifyReportFileResponse', 'http://carestream.org/'), found as: &lt;Element:0x440f650 name="NotifyReportFileResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x440f770 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x440f7d0 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x440f850 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('NotifyFilmInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x440f970 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x440f990 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('NotifyReportInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x440faf0 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x440fc50 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('NotifyExamReservationInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x440fcb0 name="NotifyExamReservationInfoResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x440fd30 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('NotifyPatientInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x440fe30 name="NotifyPatientInfoResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x440fff0 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('QueryCloudFilmUrlResponse', 'http://carestream.org/'), found as: &lt;Element:0x440fe90 name="QueryCloudFilmUrlResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x44190f0 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/'), found as: &lt;Element:0x4419190 name="QueryCloudFilmUrlForQrCodeResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x43f2fb0 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('NotifyExamInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x440f0b0 name="NotifyExamInfoResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x440f5f0 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('NotifyReportFileResponse', 'http://carestream.org/'), found as: &lt;Element:0x440f650 name="NotifyReportFileResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x440f770 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x440f7d0 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x440f850 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('NotifyFilmInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x440f970 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x440f990 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('NotifyReportInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x440faf0 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x440fc50 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('NotifyExamReservationInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x440fcb0 name="NotifyExamReservationInfoResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x440fd30 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('NotifyPatientInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x440fe30 name="NotifyPatientInfoResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x440fff0 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('QueryCloudFilmUrlResponse', 'http://carestream.org/'), found as: &lt;Element:0x440fe90 name="QueryCloudFilmUrlResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x44190f0 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191101 15:55:46.606" level="DEBUG">('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/'), found as: &lt;Element:0x4419190 name="QueryCloudFilmUrlForQrCodeResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:46.653" level="DEBUG">WSDL at 'http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl' loaded:
(Definitions){
   id = "Definitions:0x413b210"
   options = Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x041519B0&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x03CE68B0&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x0413B1B0&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x03CE68B0&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x04151E50&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
Linked:
Definitions:
	proxy: classes=(&lt;class 'dict'&gt;,), default={}
	timeout: classes=(&lt;class 'int'&gt;, &lt;class 'float'&gt;), default=90
	headers: classes=(&lt;class 'dict'&gt;,), default={}
	username: classes=(&lt;class 'str'&gt;,), default=None
	password: classes=(&lt;class 'str'&gt;,), default=None
Content:
	('proxy', {})
	('timeout', 90)
	('headers', {})
	('username', None)
	('password', None)
Linked:
Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x041519B0&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x03CE68B0&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x0413B1B0&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x03CE68B0&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x04151E50&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
   url = "http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl"
   tns[] = 
      "tns",
      "http://carestream.org/",
   types[] = 
      (Types){
         definitions = (Definitions)...
      },
   schema = "&lt;Schema:0x43f2e10 tns="http://carestream.org/"/&gt;"
   imports[] = &lt;empty&gt;
   messages = 
      {
         (NotifyExamInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamInfoSoapIn"
               qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamInfoSoapOut"
               qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportFileSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportFileSoapIn"
               qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportFile', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportFileSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportFileSoapOut"
               qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "SetPrintModeSoapIn"
               qname = "(SetPrintModeSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('SetPrintMode', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "SetPrintModeSoapOut"
               qname = "(SetPrintModeSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('SetPrintModeResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapIn"
               qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyFilmInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapOut"
               qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapIn"
               qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapOut"
               qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamReservationInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamReservationInfoSoapIn"
               qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamReservationInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamReservationInfoSoapOut"
               qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyPatientInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyPatientInfoSoapIn"
               qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyPatientInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyPatientInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyPatientInfoSoapOut"
               qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlSoapIn"
               qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlSoapOut"
               qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlForQrCodeSoapIn"
               qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlForQrCodeSoapOut"
               qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
      }
   port_types = 
      {
         (NotifyServiceSoap, http://carestream.org/, ) = 
            (PortType){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyExamInfoSoapIn"
                                 qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyExamInfoSoapOut"
                                 qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportFileSoapIn"
                                 qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportFile', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportFileSoapOut"
                                 qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "SetPrintModeSoapIn"
                                 qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('SetPrintMode', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetPrintModeSoapOut"
                                 qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyFilmInfoSoapIn"
                                 qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyFilmInfoSoapOut"
                                 qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportInfoSoapIn"
                                 qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportInfoSoapOut"
                                 qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyExamReservationInfoSoapIn"
                                 qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyExamReservationInfoSoapOut"
                                 qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyPatientInfoSoapIn"
                                 qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyPatientInfoSoapOut"
                                 qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "QueryCloudFilmUrlSoapIn"
                                 qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryCloudFilmUrlSoapOut"
                                 qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                 qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                 qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                  }
            }
      }
   bindings = 
      {
         (NotifyServiceSoap, http://carestream.org/, ) = 
            (Binding){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamInfoSoapIn"
                                       qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamInfoSoapOut"
                                       qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportFileSoapIn"
                                       qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFile', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportFileSoapOut"
                                       qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintMode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapIn"
                                       qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapOut"
                                       qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapIn"
                                       qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapOut"
                                       qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapIn"
                                       qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapOut"
                                       qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
         (NotifyServiceSoap12, http://carestream.org/, ) = 
            (Binding){
               name = "NotifyServiceSoap12"
               qname = "(NotifyServiceSoap12, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamInfoSoapIn"
                                       qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamInfoSoapOut"
                                       qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportFileSoapIn"
                                       qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFile', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportFileSoapOut"
                                       qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintMode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapIn"
                                       qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapOut"
                                       qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapIn"
                                       qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapOut"
                                       qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapIn"
                                       qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapOut"
                                       qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
      }
   services[] = 
      (Service){
         name = "NotifyService"
         qname = "(NotifyService, http://carestream.org/)"
         ports[] = 
            (Port){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportFile""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFile', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintMode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamReservationInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyPatientInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrl""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "NotifyServiceSoap"
                           qname = "(NotifyServiceSoap, http://carestream.org/)"
                           operations = 
                              {
                                 NotifyExamInfo = 
                                    (Operation){
                                       name = "NotifyExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamInfoSoapIn"
                                             qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamInfoSoapOut"
                                             qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportFile = 
                                    (Operation){
                                       name = "NotifyReportFile"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportFileSoapIn"
                                             qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportFileSoapOut"
                                             qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyExamReservationInfo = 
                                    (Operation){
                                       name = "NotifyExamReservationInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapIn"
                                             qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapOut"
                                             qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyPatientInfo = 
                                    (Operation){
                                       name = "NotifyPatientInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapIn"
                                             qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapOut"
                                             qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrl = 
                                    (Operation){
                                       name = "QueryCloudFilmUrl"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapIn"
                                             qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapOut"
                                             qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrlForQrCode = 
                                    (Operation){
                                       name = "QueryCloudFilmUrlForQrCode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
               methods = 
                  {
                     NotifyExamInfo = 
                        (Method){
                           name = "NotifyExamInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Method){
                           name = "NotifyReportFile"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Method){
                           name = "NotifyExamReservationInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Method){
                           name = "NotifyPatientInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Method){
                           name = "QueryCloudFilmUrl"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Method){
                           name = "QueryCloudFilmUrlForQrCode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
            (Port){
               name = "NotifyServiceSoap12"
               qname = "(NotifyServiceSoap12, http://carestream.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "NotifyServiceSoap12"
                     qname = "(NotifyServiceSoap12, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportFile""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFile', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintMode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamReservationInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyPatientInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrl""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "NotifyServiceSoap"
                           qname = "(NotifyServiceSoap, http://carestream.org/)"
                           operations = 
                              {
                                 NotifyExamInfo = 
                                    (Operation){
                                       name = "NotifyExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamInfoSoapIn"
                                             qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamInfoSoapOut"
                                             qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportFile = 
                                    (Operation){
                                       name = "NotifyReportFile"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportFileSoapIn"
                                             qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportFileSoapOut"
                                             qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyExamReservationInfo = 
                                    (Operation){
                                       name = "NotifyExamReservationInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapIn"
                                             qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapOut"
                                             qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyPatientInfo = 
                                    (Operation){
                                       name = "NotifyPatientInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapIn"
                                             qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapOut"
                                             qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrl = 
                                    (Operation){
                                       name = "QueryCloudFilmUrl"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapIn"
                                             qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapOut"
                                             qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrlForQrCode = 
                                    (Operation){
                                       name = "QueryCloudFilmUrlForQrCode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
               methods = 
                  {
                     NotifyExamInfo = 
                        (Method){
                           name = "NotifyExamInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Method){
                           name = "NotifyReportFile"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Method){
                           name = "NotifyExamReservationInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Method){
                           name = "NotifyPatientInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Method){
                           name = "QueryCloudFilmUrl"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Method){
                           name = "QueryCloudFilmUrlForQrCode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x043F2FD0&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
      },
 }</msg>
<msg timestamp="20191101 15:55:46.653" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x43f2fb0 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:46.653" level="DEBUG">method 'NotifyExamInfo' created: started: 1572594946 (running)</msg>
<msg timestamp="20191101 15:55:46.653" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x440f5f0 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191101 15:55:46.653" level="DEBUG">method 'NotifyReportFile' created: started: 1572594946 (running)</msg>
<msg timestamp="20191101 15:55:46.653" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x440f770 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191101 15:55:46.653" level="DEBUG">method 'SetPrintMode' created: started: 1572594946 (running)</msg>
<msg timestamp="20191101 15:55:46.653" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x440f850 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:46.653" level="DEBUG">method 'NotifyFilmInfo' created: started: 1572594946 (running)</msg>
<msg timestamp="20191101 15:55:46.653" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x440f990 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:46.653" level="DEBUG">method 'NotifyReportInfo' created: started: 1572594946 (running)</msg>
<msg timestamp="20191101 15:55:46.653" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x440fc50 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:46.653" level="DEBUG">method 'NotifyExamReservationInfo' created: started: 1572594946 (running)</msg>
<msg timestamp="20191101 15:55:46.653" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x440fd30 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:46.653" level="DEBUG">method 'NotifyPatientInfo' created: started: 1572594946 (running)</msg>
<msg timestamp="20191101 15:55:46.653" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x440fff0 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191101 15:55:46.653" level="DEBUG">method 'QueryCloudFilmUrl' created: started: 1572594946 (running)</msg>
<msg timestamp="20191101 15:55:46.653" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x44190f0 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191101 15:55:46.653" level="DEBUG">method 'QueryCloudFilmUrlForQrCode' created: started: 1572594946 (running)</msg>
<msg timestamp="20191101 15:55:46.653" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x43f2fb0 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:46.653" level="DEBUG">method 'NotifyExamInfo' created: started: 1572594946 (running)</msg>
<msg timestamp="20191101 15:55:46.653" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x440f5f0 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191101 15:55:46.653" level="DEBUG">method 'NotifyReportFile' created: started: 1572594946 (running)</msg>
<msg timestamp="20191101 15:55:46.653" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x440f770 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191101 15:55:46.653" level="DEBUG">method 'SetPrintMode' created: started: 1572594946 (running)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x440f850 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">method 'NotifyFilmInfo' created: started: 1572594946 (running)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x440f990 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">method 'NotifyReportInfo' created: started: 1572594946 (running)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x440fc50 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">method 'NotifyExamReservationInfo' created: started: 1572594946 (running)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x440fd30 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">method 'NotifyPatientInfo' created: started: 1572594946 (running)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x440fff0 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">method 'QueryCloudFilmUrl' created: started: 1572594946 (running)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x44190f0 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">method 'QueryCloudFilmUrlForQrCode' created: started: 1572594946 (running)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">Element:0x440f090, resolving: ('ExamInfo', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x44192b0"
   ref[] = 
      "ExamInfo",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x440f090 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">('ExamInfo', 'http://carestream.org/'), found as: &lt;Complex:0x43f2ff0 name="ExamInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">Element:0x440fd10, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x44192b0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x440fd10 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">TypeQuery:0x44192b0, found builtin (string)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">Element:0x440f9d0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x44192b0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x440f9d0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">TypeQuery:0x44192b0, found builtin (string)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">Element:0x440fa30, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x44192b0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x440fa30 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">TypeQuery:0x44192b0, found builtin (string)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">Element:0x440fe10, resolving: ('PatientInfoEx', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x44192b0"
   ref[] = 
      "PatientInfoEx",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x440fe10 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">('PatientInfoEx', 'http://carestream.org/'), found as: &lt;Complex:0x440fdb0 name="PatientInfoEx" /&gt;</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">Element:0x440f6b0, resolving: ('ExamInfo', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x4419230"
   ref[] = 
      "ExamInfo",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x440f6b0 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">('ExamInfo', 'http://carestream.org/'), found as: &lt;Complex:0x43f2ff0 name="ExamInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">Element:0x440f710, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4419230"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x440f710 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">TypeQuery:0x4419230, found builtin (string)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">Element:0x440f730, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4419230"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x440f730 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">TypeQuery:0x4419230, found builtin (int)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">Element:0x440f750, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4419230"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x440f750 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">TypeQuery:0x4419230, found builtin (string)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">Element:0x440fad0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x44192b0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x440fad0 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">TypeQuery:0x44192b0, found builtin (string)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">Element:0x440fb50, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x44192b0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x440fb50 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">TypeQuery:0x44192b0, found builtin (string)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">Element:0x440fb70, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x44192b0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x440fb70 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">TypeQuery:0x44192b0, found builtin (string)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">Element:0x440fb90, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x44192b0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x440fb90 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">TypeQuery:0x44192b0, found builtin (string)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">Element:0x440fbb0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x44192b0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x440fbb0 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">TypeQuery:0x44192b0, found builtin (int)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">Element:0x440fbf0, resolving: ('ArrayOfString', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x44192b0"
   ref[] = 
      "ArrayOfString",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x440fbf0 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">('ArrayOfString', 'http://carestream.org/'), found as: &lt;Complex:0x440fa70 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">Element:0x440fc10, resolving: ('ArrayOfString', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x44192b0"
   ref[] = 
      "ArrayOfString",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x440fc10 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">('ArrayOfString', 'http://carestream.org/'), found as: &lt;Complex:0x440fa70 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">Element:0x44190d0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x44192b0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x44190d0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">TypeQuery:0x44192b0, found builtin (string)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">Element:0x4419130, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x44192b0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4419130 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">TypeQuery:0x44192b0, found builtin (string)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">Element:0x44191f0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x44192b0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x44191f0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">TypeQuery:0x44192b0, found builtin (string)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">Element:0x4419250, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x44192b0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4419250 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">TypeQuery:0x44192b0, found builtin (string)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">Element:0x440f830, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x44192b0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x440f830 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">TypeQuery:0x44192b0, found builtin (string)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">Element:0x440f8b0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x44192b0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x440f8b0 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">TypeQuery:0x44192b0, found builtin (string)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">Element:0x440f8d0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x44192b0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x440f8d0 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">TypeQuery:0x44192b0, found builtin (int)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">Element:0x440f8f0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x44192b0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x440f8f0 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">TypeQuery:0x44192b0, found builtin (int)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">Element:0x440f910, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x44192b0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x440f910 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">TypeQuery:0x44192b0, found builtin (int)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">searching schema for (ArrayOfString)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">('ArrayOfString', http://carestream.org/), found as: &lt;Complex:0x440fa70 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">found (ArrayOfString) as (&lt;Complex:0x440fa70 name="ArrayOfString" /&gt;)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">Element:0x440fb30, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x44192b0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x440fb30 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">TypeQuery:0x44192b0, found builtin (string)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">ArrayOfString created: 0 (ms)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">searching schema for (ArrayOfString)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">('ArrayOfString', http://carestream.org/), found as: &lt;Complex:0x440fa70 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">found (ArrayOfString) as (&lt;Complex:0x440fa70 name="ArrayOfString" /&gt;)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">ArrayOfString created: 0 (ms)</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x440f990 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x440f990 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">processing:
(Content){
   tag = "patientName"
   value = "CN20191101155541309493"
   type = &lt;Element:0x440fad0 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x44281b0 /&gt;
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x04428AF0&gt;
content:
(Content){
   tag = "patientName"
   value = "CN20191101155541309493"
   type = &lt;Element:0x440fad0 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x44281b0 /&gt;
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">starting content:
(Content){
   tag = "patientName"
   value = "CN20191101155541309493"
   type = &lt;Element:0x440fad0 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x44281b0 /&gt;
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04428B30&gt;)
&lt;suds.resolver.Frame object at 0x04428B30&gt;</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">created - node:
&lt;tns:patientName xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">ending content:
(Content){
   tag = "patientName"
   value = "CN20191101155541309493"
   type = &lt;Element:0x440fad0 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x44281b0 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04428B30&gt;)
</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">processing:
(Content){
   tag = "patientID"
   value = "P20191101155541309493"
   type = &lt;Element:0x440fb50 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x44282b0 /&gt;
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x04428DD0&gt;
content:
(Content){
   tag = "patientID"
   value = "P20191101155541309493"
   type = &lt;Element:0x440fb50 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x44282b0 /&gt;
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">starting content:
(Content){
   tag = "patientID"
   value = "P20191101155541309493"
   type = &lt;Element:0x440fb50 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x44282b0 /&gt;
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04428E10&gt;)
&lt;suds.resolver.Frame object at 0x04428E10&gt;</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">created - node:
&lt;tns:patientID xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">ending content:
(Content){
   tag = "patientID"
   value = "P20191101155541309493"
   type = &lt;Element:0x440fb50 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x44282b0 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04428E10&gt;)
</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">processing:
(Content){
   tag = "accessionNumber"
   value = "A20191101155541309493"
   type = &lt;Element:0x440fb70 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4428210 /&gt;
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x044450F0&gt;
content:
(Content){
   tag = "accessionNumber"
   value = "A20191101155541309493"
   type = &lt;Element:0x440fb70 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4428210 /&gt;
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">starting content:
(Content){
   tag = "accessionNumber"
   value = "A20191101155541309493"
   type = &lt;Element:0x440fb70 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4428210 /&gt;
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04445130&gt;)
&lt;suds.resolver.Frame object at 0x04445130&gt;</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">created - node:
&lt;tns:accessionNumber xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">ending content:
(Content){
   tag = "accessionNumber"
   value = "A20191101155541309493"
   type = &lt;Element:0x440fb70 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4428210 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04445130&gt;)
</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">processing:
(Content){
   tag = "studyInstanceUID"
   value = "9be1a6d7-1e34-4733-b6c1-885ff4c7bdc8"
   type = &lt;Element:0x440fb90 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4428330 /&gt;
 }</msg>
<msg timestamp="20191101 15:55:46.669" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x044453D0&gt;
content:
(Content){
   tag = "studyInstanceUID"
   value = "9be1a6d7-1e34-4733-b6c1-885ff4c7bdc8"
   type = &lt;Element:0x440fb90 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4428330 /&gt;
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">starting content:
(Content){
   tag = "studyInstanceUID"
   value = "9be1a6d7-1e34-4733-b6c1-885ff4c7bdc8"
   type = &lt;Element:0x440fb90 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4428330 /&gt;
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04445410&gt;)
&lt;suds.resolver.Frame object at 0x04445410&gt;</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">created - node:
&lt;tns:studyInstanceUID xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">ending content:
(Content){
   tag = "studyInstanceUID"
   value = "9be1a6d7-1e34-4733-b6c1-885ff4c7bdc8"
   type = &lt;Element:0x440fb90 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4428330 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04445410&gt;)
</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">processing:
(Content){
   tag = "reportStatus"
   value = 2
   type = &lt;Element:0x440fbb0 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4428370 /&gt;
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x04445690&gt;
content:
(Content){
   tag = "reportStatus"
   value = 2
   type = &lt;Element:0x440fbb0 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4428370 /&gt;
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">starting content:
(Content){
   tag = "reportStatus"
   value = 2
   type = &lt;Element:0x440fbb0 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4428370 /&gt;
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x044456D0&gt;)
&lt;suds.resolver.Frame object at 0x044456D0&gt;</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">created - node:
&lt;tns:reportStatus xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">ending content:
(Content){
   tag = "reportStatus"
   value = "2"
   type = &lt;Element:0x440fbb0 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4428370 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x044456D0&gt;)
</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">processing:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
      }
   type = &lt;Element:0x440fbf0 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x440fa70 name="ArrayOfString"&gt;
   &lt;Sequence:0x440fa90&gt;
      &lt;Element:0x440fb30 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x04428D50&gt;
content:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
      }
   type = &lt;Element:0x440fbf0 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x440fa70 name="ArrayOfString"&gt;
   &lt;Sequence:0x440fa90&gt;
      &lt;Element:0x440fb30 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">starting content:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
      }
   type = &lt;Element:0x440fbf0 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x440fa70 name="ArrayOfString"&gt;
   &lt;Sequence:0x440fa90&gt;
      &lt;Element:0x440fb30 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x02A42130&gt;)
&lt;suds.resolver.Frame object at 0x02A42130&gt;</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">created - node:
&lt;tns:reportFileName xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">appending parent:
&lt;tns:reportFileName xmlns:tns="http://carestream.org/"/&gt;
content:
(Content){
   tag = "string"
   value[] = 
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">starting content:
(Content){
   tag = "string"
   value[] = 
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">searching parent (&lt;Complex:0x440fa70 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04428E70&gt;)
&lt;suds.resolver.Frame object at 0x02A42130&gt;
&lt;suds.resolver.Frame object at 0x04428E70&gt;</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04428E70&gt;)
&lt;suds.resolver.Frame object at 0x02A42130&gt;</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">appending parent:
&lt;tns:reportFileName xmlns:tns="http://carestream.org/"/&gt;
content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf"
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">starting content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf"
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">searching parent (&lt;Complex:0x440fa70 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04428E50&gt;)
&lt;suds.resolver.Frame object at 0x02A42130&gt;
&lt;suds.resolver.Frame object at 0x04428E50&gt;</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">created - node:
&lt;tns:string xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">ending content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf"
   type = &lt;Element:0x440fb30 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4428450 /&gt;
   ancestry[] = 
      &lt;Complex:0x440fa70 name="ArrayOfString"&gt;
   &lt;Sequence:0x440fa90&gt;
      &lt;Element:0x440fb30 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x440fa90&gt;
   &lt;Element:0x440fb30 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04428E50&gt;)
&lt;suds.resolver.Frame object at 0x02A42130&gt;</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">appending parent:
&lt;tns:reportFileName xmlns:tns="http://carestream.org/"&gt;
   &lt;tns:string&gt;E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf&lt;/tns:string&gt;
&lt;/tns:reportFileName&gt;
content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf"
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">starting content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf"
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">searching parent (&lt;Complex:0x440fa70 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04428E10&gt;)
&lt;suds.resolver.Frame object at 0x02A42130&gt;
&lt;suds.resolver.Frame object at 0x04428E10&gt;</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">created - node:
&lt;tns:string xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">ending content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf"
   type = &lt;Element:0x440fb30 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4428450 /&gt;
   ancestry[] = 
      &lt;Complex:0x440fa70 name="ArrayOfString"&gt;
   &lt;Sequence:0x440fa90&gt;
      &lt;Element:0x440fb30 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x440fa90&gt;
   &lt;Element:0x440fb30 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04428E10&gt;)
&lt;suds.resolver.Frame object at 0x02A42130&gt;</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04428E70&gt;)
&lt;suds.resolver.Frame object at 0x02A42130&gt;
&lt;suds.resolver.Frame object at 0x04428E70&gt;</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">ending content:
(Content){
   tag = "string"
   value[] = 
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
   type = &lt;Element:0x440fb30 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4428450 /&gt;
   ancestry[] = 
      &lt;Complex:0x440fa70 name="ArrayOfString"&gt;
   &lt;Sequence:0x440fa90&gt;
      &lt;Element:0x440fb30 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x440fa90&gt;
   &lt;Element:0x440fb30 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04428E70&gt;)
&lt;suds.resolver.Frame object at 0x02A42130&gt;</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">ending content:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4713\Report\Performance1.pdf",
      }
   type = &lt;Element:0x440fbf0 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x440fa70 name="ArrayOfString"&gt;
   &lt;Sequence:0x440fa90&gt;
      &lt;Element:0x440fb30 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x02A42130&gt;)
</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">processing:
(Content){
   tag = "pdfPassword"
   value = 
      (ArrayOfString){
         string[] = 
            "",
            "",
      }
   type = &lt;Element:0x440fc10 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x440fa70 name="ArrayOfString"&gt;
   &lt;Sequence:0x440fa90&gt;
      &lt;Element:0x440fb30 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x04428B90&gt;
content:
(Content){
   tag = "pdfPassword"
   value = 
      (ArrayOfString){
         string[] = 
            "",
            "",
      }
   type = &lt;Element:0x440fc10 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x440fa70 name="ArrayOfString"&gt;
   &lt;Sequence:0x440fa90&gt;
      &lt;Element:0x440fb30 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">starting content:
(Content){
   tag = "pdfPassword"
   value = 
      (ArrayOfString){
         string[] = 
            "",
            "",
      }
   type = &lt;Element:0x440fc10 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x440fa70 name="ArrayOfString"&gt;
   &lt;Sequence:0x440fa90&gt;
      &lt;Element:0x440fb30 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04428BD0&gt;)
&lt;suds.resolver.Frame object at 0x04428BD0&gt;</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">created - node:
&lt;tns:pdfPassword xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">appending parent:
&lt;tns:pdfPassword xmlns:tns="http://carestream.org/"/&gt;
content:
(Content){
   tag = "string"
   value[] = 
      "",
      "",
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">starting content:
(Content){
   tag = "string"
   value[] = 
      "",
      "",
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">searching parent (&lt;Complex:0x440fa70 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04428C30&gt;)
&lt;suds.resolver.Frame object at 0x04428BD0&gt;
&lt;suds.resolver.Frame object at 0x04428C30&gt;</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04428C30&gt;)
&lt;suds.resolver.Frame object at 0x04428BD0&gt;</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">appending parent:
&lt;tns:pdfPassword xmlns:tns="http://carestream.org/"/&gt;
content:
(Content){
   tag = "string"
   value = ""
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">starting content:
(Content){
   tag = "string"
   value = ""
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">searching parent (&lt;Complex:0x440fa70 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04428850&gt;)
&lt;suds.resolver.Frame object at 0x04428BD0&gt;
&lt;suds.resolver.Frame object at 0x04428850&gt;</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">created - node:
&lt;tns:string xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">ending content:
(Content){
   tag = "string"
   value = ""
   type = &lt;Element:0x440fb30 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4428450 /&gt;
   ancestry[] = 
      &lt;Complex:0x440fa70 name="ArrayOfString"&gt;
   &lt;Sequence:0x440fa90&gt;
      &lt;Element:0x440fb30 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x440fa90&gt;
   &lt;Element:0x440fb30 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04428850&gt;)
&lt;suds.resolver.Frame object at 0x04428BD0&gt;</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">appending parent:
&lt;tns:pdfPassword xmlns:tns="http://carestream.org/"&gt;
   &lt;tns:string&gt;&lt;/tns:string&gt;
&lt;/tns:pdfPassword&gt;
content:
(Content){
   tag = "string"
   value = ""
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">starting content:
(Content){
   tag = "string"
   value = ""
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">searching parent (&lt;Complex:0x440fa70 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04428D10&gt;)
&lt;suds.resolver.Frame object at 0x04428BD0&gt;
&lt;suds.resolver.Frame object at 0x04428D10&gt;</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">created - node:
&lt;tns:string xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">ending content:
(Content){
   tag = "string"
   value = ""
   type = &lt;Element:0x440fb30 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4428450 /&gt;
   ancestry[] = 
      &lt;Complex:0x440fa70 name="ArrayOfString"&gt;
   &lt;Sequence:0x440fa90&gt;
      &lt;Element:0x440fb30 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x440fa90&gt;
   &lt;Element:0x440fb30 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04428D10&gt;)
&lt;suds.resolver.Frame object at 0x04428BD0&gt;</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04428C30&gt;)
&lt;suds.resolver.Frame object at 0x04428BD0&gt;
&lt;suds.resolver.Frame object at 0x04428C30&gt;</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">ending content:
(Content){
   tag = "string"
   value[] = 
      "",
      "",
   type = &lt;Element:0x440fb30 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4428450 /&gt;
   ancestry[] = 
      &lt;Complex:0x440fa70 name="ArrayOfString"&gt;
   &lt;Sequence:0x440fa90&gt;
      &lt;Element:0x440fb30 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x440fa90&gt;
   &lt;Element:0x440fb30 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04428C30&gt;)
&lt;suds.resolver.Frame object at 0x04428BD0&gt;</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">ending content:
(Content){
   tag = "pdfPassword"
   value = 
      (ArrayOfString){
         string[] = 
            "",
            "",
      }
   type = &lt;Element:0x440fc10 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
   real = &lt;Complex:0x440fa70 name="ArrayOfString"&gt;
   &lt;Sequence:0x440fa90&gt;
      &lt;Element:0x440fb30 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04428BD0&gt;)
</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">message for 'NotifyReportInfo' created: 15 (ms)</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">sending to (http://10.112.20.84/NotifyServer/NotifyService.asmx)
message:
&lt;suds.sax.document.Document object at 0x04428690&gt;</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">headers = {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://carestream.org/NotifyReportInfo"'}</msg>
<msg timestamp="20191101 15:55:46.685" level="DEBUG">sending:
URL: http://10.112.20.84/NotifyServer/NotifyService.asmx
HEADERS: {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://carestream.org/NotifyReportInfo"', 'Content-type': 'text/xml; charset=utf-8', 'Soapaction': b'"http://carestream.org/NotifyReportInfo"'}
MESSAGE:
b'&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://carestream.org/"&gt;&lt;SOAP-ENV:Header/&gt;&lt;ns0:Body&gt;&lt;ns1:NotifyReportInfo&gt;&lt;ns1:patientName&gt;CN20191101155541309493&lt;/ns1:patientName&gt;&lt;ns1:patientID&gt;P20191101155541309493&lt;/ns1:patientID&gt;&lt;ns1:accessionNumber&gt;A20191101155541309493&lt;/ns1:accessionNumber&gt;&lt;ns1:studyInstanceUID&gt;9be1a6d7-1e34-4733-b6c1-885ff4c7bdc8&lt;/ns1:studyInstanceUID&gt;&lt;ns1:reportStatus&gt;2&lt;/ns1:reportStatus&gt;&lt;ns1:reportFileName&gt;&lt;ns1:string&gt;E:\\PUMA_AUTO_Ref\\Cases\\SmokeTest\\4713\\Report\\Performance1.pdf&lt;/ns1:string&gt;&lt;ns1:string&gt;E:\\PUMA_AUTO_Ref\\Cases\\SmokeTest\\4713\\Report\\Performance1.pdf&lt;/ns1:string&gt;&lt;/ns1:reportFileName&gt;&lt;ns1:pdfPassword&gt;&lt;ns1:string&gt;&lt;/ns1:string&gt;&lt;ns1:string&gt;&lt;/ns1:string&gt;&lt;/ns1:pdfPassword&gt;&lt;/ns1:NotifyReportInfo&gt;&lt;/ns0:Body&gt;&lt;/SOAP-ENV:Envelope&gt;'</msg>
<msg timestamp="20191101 15:55:47.106" level="DEBUG">received:
CODE: HTTPStatus.OK
HEADERS: Cache-Control: private, max-age=0
Content-Type: text/xml; charset=utf-8
Server: Microsoft-IIS/7.5
X-AspNet-Version: 4.0.30319
X-Powered-By: ASP.NET
Date: Fri, 01 Nov 2019 07:55:46 GMT
Connection: close
Content-Length: 380


MESSAGE:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;NotifyReportInfoResponse xmlns="http://carestream.org/"&gt;&lt;NotifyReportInfoResult&gt;0&lt;/NotifyReportInfoResult&gt;&lt;/NotifyReportInfoResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191101 15:55:47.106" level="DEBUG">waited 421 (ms) on server reply</msg>
<msg timestamp="20191101 15:55:47.106" level="DEBUG">HTTP succeeded:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;NotifyReportInfoResponse xmlns="http://carestream.org/"&gt;&lt;NotifyReportInfoResult&gt;0&lt;/NotifyReportInfoResult&gt;&lt;/NotifyReportInfoResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191101 15:55:47.106" level="DEBUG">b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;NotifyReportInfoResponse xmlns="http://carestream.org/"&gt;&lt;NotifyReportInfoResult&gt;0&lt;/NotifyReportInfoResult&gt;&lt;/NotifyReportInfoResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'
sax duration: 0 (ms)</msg>
<msg timestamp="20191101 15:55:47.106" level="DEBUG">('NotifyReportInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x440faf0 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:47.106" level="DEBUG">Element:0x440fc90, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4428b30"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x440fc90 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:47.106" level="DEBUG">TypeQuery:0x4428b30, found builtin (int)</msg>
<msg timestamp="20191101 15:55:47.106" level="DEBUG">reset</msg>
<msg timestamp="20191101 15:55:47.106" level="DEBUG">Element:0x440fc90, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4428790"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x440fc90 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:47.106" level="DEBUG">TypeQuery:0x4428790, found builtin (int)</msg>
<msg timestamp="20191101 15:55:47.106" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04428890&gt;)
&lt;suds.resolver.Frame object at 0x04428890&gt;</msg>
<msg timestamp="20191101 15:55:47.106" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04428890&gt;)
</msg>
<msg timestamp="20191101 15:55:47.106" level="DEBUG">method 'NotifyReportInfo' invoked: 421 (ms)</msg>
<msg timestamp="20191101 15:55:47.106" level="INFO">Report.report_create_by_notifyserver_reportinfo: Report Archived successfully!</msg>
<msg timestamp="20191101 15:55:47.106" level="INFO">${Report_archived_Info} = {"result": true, "patient_name": "CN20191101155541309493", "patient_id": "P20191101155541309493", "accessionNumber": "A20191101155541309493", "StudyInstanceUID": "9be1a6d7-1e34-4733-b6c1-885ff4c7bdc8"...</msg>
<status status="PASS" starttime="20191101 15:55:46.544" endtime="20191101 15:55:47.106"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191101 15:55:47.106" level="INFO">${Report_archived_Info_Json} = {'result': True, 'patient_name': 'CN20191101155541309493', 'patient_id': 'P20191101155541309493', 'accessionNumber': 'A20191101155541309493', 'StudyInstanceUID': '9be1a6d7-1e34-4733-b6c1-885ff4c7bdc8'...</msg>
<status status="PASS" starttime="20191101 15:55:47.106" endtime="20191101 15:55:47.106"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191101 15:55:47.153" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191101 15:55:47.106" endtime="20191101 15:55:47.153"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The web service should return true or return successfully response. Th web service return 0 as true.</arg>
</arguments>
<status status="PASS" starttime="20191101 15:55:47.153" endtime="20191101 15:55:47.153"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191101 15:55:52.153" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191101 15:55:47.153" endtime="20191101 15:55:52.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4:\n Description \n 1. Check the WGGC.dbo.AFP_ReportInfo table. \n Expected \n 1. New record can be found in AFP_ReportInfo table for received report, and the ReportStatus value should be 2.</arg>
</arguments>
<msg timestamp="20191101 15:55:52.153" level="INFO">Step 4:
Description 
1. Check the WGGC.dbo.AFP_ReportInfo table. 
Expected 
1. New record can be found in AFP_ReportInfo table for received report, and the ReportStatus value should be 2.</msg>
<status status="PASS" starttime="20191101 15:55:52.153" endtime="20191101 15:55:52.153"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>StudyInstanceUID</arg>
</arguments>
<assign>
<var>${Report_StudyInstanceUID}</var>
</assign>
<msg timestamp="20191101 15:55:52.216" level="INFO">${Report_StudyInstanceUID} = ['9be1a6d7-1e34-4733-b6c1-885ff4c7bdc8']</msg>
<status status="PASS" starttime="20191101 15:55:52.153" endtime="20191101 15:55:52.216"></status>
</kw>
<kw name="Report Check Archive In Reportinfo By UUID" library="PUMA_ReportLibrary">
<doc>Report_check_archive_in_reportinfo_by_UUID</doc>
<arguments>
<arg>${Report_StudyInstanceUID}[0]</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Info}</var>
</assign>
<msg timestamp="20191101 15:55:52.419" level="INFO">Report.Report_check_archive_by_studyUID: The report archived successfully and the ReportStatus value in wggc.dbo.afp_reportinfo is [2]</msg>
<msg timestamp="20191101 15:55:52.419" level="INFO">${Report_Check_ReportInfo_Info_Info} = {"result": true, "ReportStatus": "2"}</msg>
<status status="PASS" starttime="20191101 15:55:52.216" endtime="20191101 15:55:52.419"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Info}</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Json}</var>
</assign>
<msg timestamp="20191101 15:55:52.419" level="INFO">${Report_Check_ReportInfo_Info_Json} = {'result': True, 'ReportStatus': '2'}</msg>
<status status="PASS" starttime="20191101 15:55:52.419" endtime="20191101 15:55:52.419"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Result}</var>
</assign>
<msg timestamp="20191101 15:55:52.450" level="INFO">${Report_Check_ReportInfo_Info_Result} = [True]</msg>
<status status="PASS" starttime="20191101 15:55:52.419" endtime="20191101 15:55:52.450"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>ReportStatus</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_ReportStatus}</var>
</assign>
<msg timestamp="20191101 15:55:52.481" level="INFO">${Report_Check_ReportInfo_Info_ReportStatus} = ['2']</msg>
<status status="PASS" starttime="20191101 15:55:52.450" endtime="20191101 15:55:52.481"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Result}[0]</arg>
<arg>Wggc.dbo.AFP_ReportInfo table have new records of this report</arg>
</arguments>
<status status="PASS" starttime="20191101 15:55:52.481" endtime="20191101 15:55:52.481"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_ReportStatus}[0]</arg>
<arg>2</arg>
<arg>The report status value in table wggc.dbo.afp_reportinfo is 2</arg>
</arguments>
<msg timestamp="20191101 15:55:52.481" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 15:55:52.481" endtime="20191101 15:55:52.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5: \n Description: \n 1. Check the WGGC.dbo.AFP_PrintMode table. \n Expected: \n 1. Can find a new record in table and value should be correct. \n</arg>
</arguments>
<msg timestamp="20191101 15:55:52.481" level="INFO">Step 5: 
Description: 
1. Check the WGGC.dbo.AFP_PrintMode table. 
Expected: 
1. Can find a new record in table and value should be correct. 
</msg>
<status status="PASS" starttime="20191101 15:55:52.481" endtime="20191101 15:55:52.497"></status>
</kw>
<kw name="Printmode Get Info From Db By Accn" library="PUMA_PrintModeLibrary">
<doc>printmode_get_info_from_db_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${PrintMode_info}</var>
</assign>
<msg timestamp="20191101 15:55:52.497" level="INFO">${PrintMode_info} = {"result": true, "AccessionNumber": "A20191101155541309493", "StudyInstanceUID": "", "PrintMode": 0, "StatusTime": "2019-11-01 15:55:47.720000", "HoldFlag": 1, "PrintWaitTime": "60", "ReportWaitTime":...</msg>
<status status="PASS" starttime="20191101 15:55:52.497" endtime="20191101 15:55:52.497"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintMode_info}</arg>
</arguments>
<assign>
<var>${PrintMode_info_Json}</var>
</assign>
<msg timestamp="20191101 15:55:52.497" level="INFO">${PrintMode_info_Json} = {'result': True, 'AccessionNumber': 'A20191101155541309493', 'StudyInstanceUID': '', 'PrintMode': 0, 'StatusTime': '2019-11-01 15:55:47.720000', 'HoldFlag': 1, 'PrintWaitTime': '60', 'ReportWaitTime':...</msg>
<status status="PASS" starttime="20191101 15:55:52.497" endtime="20191101 15:55:52.497"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${PrintMode_info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${PrintMode_result}</var>
</assign>
<msg timestamp="20191101 15:55:52.544" level="INFO">${PrintMode_result} = [True]</msg>
<status status="PASS" starttime="20191101 15:55:52.497" endtime="20191101 15:55:52.544"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${PrintMode_info_Json}</arg>
<arg>PrintMode</arg>
</arguments>
<assign>
<var>${PrintMode_value}</var>
</assign>
<msg timestamp="20191101 15:55:52.575" level="INFO">${PrintMode_value} = [0]</msg>
<status status="PASS" starttime="20191101 15:55:52.544" endtime="20191101 15:55:52.575"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${PrintMode_result}</arg>
</arguments>
<status status="PASS" starttime="20191101 15:55:52.575" endtime="20191101 15:55:52.575"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${PrintMode_value}[0]</arg>
<arg>0</arg>
<arg>The patient print mode is 0 for "门诊病人"</arg>
</arguments>
<msg timestamp="20191101 15:55:52.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 15:55:52.575" endtime="20191101 15:55:52.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6: \n Description: \n 1. Check the ReportStoredFlag value in T_Integration_ExamInfo table in WGGC database for this report. \n Expected: \n 1. The ReportStoredFlag value should be 9 \n</arg>
</arguments>
<msg timestamp="20191101 15:55:52.575" level="INFO">Step 6: 
Description: 
1. Check the ReportStoredFlag value in T_Integration_ExamInfo table in WGGC database for this report. 
Expected: 
1. The ReportStoredFlag value should be 9 
</msg>
<status status="PASS" starttime="20191101 15:55:52.575" endtime="20191101 15:55:52.575"></status>
</kw>
<kw name="Report Check ReportStoredFlag In T Integration ExamInfo" library="PUMA_ReportLibrary">
<doc>report_check_ReportStoredFlag_in_T_Integration_ExamInfo</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlag_info}</var>
</assign>
<msg timestamp="20191101 15:55:52.591" level="INFO">Report.report_check_ReportStoredFlag_in_T_Integration_ExamInfo: Get the ReportStoredFlag of patient [P20191101155541309493, A20191101155541309493] correct and value is 9</msg>
<msg timestamp="20191101 15:55:52.591" level="INFO">${Report_ReportStoreFlag_info} = {"result": true, "ReportStoredFlag": 9}</msg>
<status status="PASS" starttime="20191101 15:55:52.575" endtime="20191101 15:55:52.591"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info}</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlag_info_json}</var>
</assign>
<msg timestamp="20191101 15:55:52.591" level="INFO">${Report_ReportStoreFlag_info_json} = {'result': True, 'ReportStoredFlag': 9}</msg>
<status status="PASS" starttime="20191101 15:55:52.591" endtime="20191101 15:55:52.591"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info_json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlage_info_result}</var>
</assign>
<msg timestamp="20191101 15:55:52.622" level="INFO">${Report_ReportStoreFlage_info_result} = [True]</msg>
<status status="PASS" starttime="20191101 15:55:52.591" endtime="20191101 15:55:52.622"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info_json}</arg>
<arg>ReportStoredFlag</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlage_value}</var>
</assign>
<msg timestamp="20191101 15:55:52.653" level="INFO">${Report_ReportStoreFlage_value} = [9]</msg>
<status status="PASS" starttime="20191101 15:55:52.622" endtime="20191101 15:55:52.653"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_ReportStoreFlage_info_result}[0]</arg>
</arguments>
<status status="PASS" starttime="20191101 15:55:52.653" endtime="20191101 15:55:52.653"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Report_ReportStoreFlage_value}[0]</arg>
<arg>9</arg>
<arg>The ReportStoredFlag value should be 9 in T_integration_examInfo table</arg>
</arguments>
<msg timestamp="20191101 15:55:52.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 15:55:52.653" endtime="20191101 15:55:52.653"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191101 15:55:41.309" endtime="20191101 15:55:52.653" critical="yes"></status>
</test>
<test id="s1-t4" name="SmokeTest_004_Core_4714_02.01.02 Report receive from web service PrintServer_Reportinfo">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1\n Description:\n1. Create a patient with an exam in RIS or local table in PS.\nExpected:\n 1. The patient with an exam can create successfully.</arg>
</arguments>
<msg timestamp="20191101 15:55:52.669" level="INFO">Step 1
Description:
1. Create a patient with an exam in RIS or local table in PS.
Expected:
1. The patient with an exam can create successfully.</msg>
<status status="PASS" starttime="20191101 15:55:52.669" endtime="20191101 15:55:52.669"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191101 15:55:52.669" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 15:55:52.685" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191101 15:55:52.685" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-01 15:55:52.668885", "UpdateDT": "2019-11-01 15:55:52.668885", "PatientID": "P20191101155552668885", "AccessionNumber": "A20191101155552668885", "StudyInstanceUID": "UID20191101155552668885", "NameCN": "CN20191101155552668885", "NameEN": "EN20191101155552668885", "Gender": "M", "Birthday": "1953-11-17", "Modality": "MG", "ModalityName": "DR", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-01 15:55:52.668885", "RegisterDT": "2019-11-01 15:55:52.668885", "ExamDT": "2019-11-01 15:55:52.668885", "ReportDT": "2019-11-01 15:55:52.668885", "SubmitDT": "2019-11-01 15:55:52.668885", "ApproveDT": "2019-11-01 15:55:52.668885", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191101155552668885", "ExamBodyPart": "Leg", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191101 15:55:52.685" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-01 15:55:52.668885", "UpdateDT": "2019-11-01 15:55:52.668885", "PatientID": "P20191101155552668885", "AccessionNumber": "A20191101155552668885", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191101 15:55:52.669" endtime="20191101 15:55:52.685"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191101 15:55:52.685" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-01 15:55:52.668885', 'UpdateDT': '2019-11-01 15:55:52.668885', 'PatientID': 'P20191101155552668885', 'AccessionNumber': 'A20191101155552668885', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191101 15:55:52.685" endtime="20191101 15:55:52.685"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191101 15:55:52.716" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191101 15:55:52.685" endtime="20191101 15:55:52.716"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]</arg>
<arg>Patient create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 15:55:52.716" endtime="20191101 15:55:52.716"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191101 15:55:52.778" level="INFO">${patientID} = ['P20191101155552668885']</msg>
<status status="PASS" starttime="20191101 15:55:52.716" endtime="20191101 15:55:52.778"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${AccessionNumber}</var>
</assign>
<msg timestamp="20191101 15:55:52.856" level="INFO">${AccessionNumber} = ['A20191101155552668885']</msg>
<status status="PASS" starttime="20191101 15:55:52.778" endtime="20191101 15:55:52.856"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>NameCN</arg>
</arguments>
<assign>
<var>${PatientName}</var>
</assign>
<msg timestamp="20191101 15:55:52.903" level="INFO">${PatientName} = ['CN20191101155552668885']</msg>
<status status="PASS" starttime="20191101 15:55:52.856" endtime="20191101 15:55:52.903"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>formal</arg>
</arguments>
<assign>
<var>${Report_type}</var>
</assign>
<msg timestamp="20191101 15:55:52.903" level="INFO">${Report_type} = formal</msg>
<status status="PASS" starttime="20191101 15:55:52.903" endtime="20191101 15:55:52.903"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>E:\\PUMA_AUTO_Ref\\Cases\\SmokeTest\\4714\\Report\\Performance1.pdf</arg>
</arguments>
<assign>
<var>${File_path}</var>
</assign>
<msg timestamp="20191101 15:55:52.903" level="INFO">${File_path} = E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf</msg>
<status status="PASS" starttime="20191101 15:55:52.903" endtime="20191101 15:55:52.903"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191101 15:55:57.903" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191101 15:55:52.903" endtime="20191101 15:55:57.903"></status>
</kw>
<kw name="Report Create By Printserver Reportinfo" library="PUMA_ReportLibrary">
<doc>report_create_by_printserver_reportinfo</doc>
<arguments>
<arg>${PatientName}[0]</arg>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
<arg>${Report_type}</arg>
<arg>${File_path}</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191101 15:55:57.903" level="DEBUG">reading WSDL at: http://10.112.20.84/PrintServer/PrintService.asmx?wsdl ...</msg>
<msg timestamp="20191101 15:55:57.903" level="DEBUG">opening (http://10.112.20.84/PrintServer/PrintService.asmx?wsdl)</msg>
<msg timestamp="20191101 15:55:57.935" level="DEBUG">b'&lt;?xml version="1.0" encoding="utf-8"?&gt;\r\n&lt;wsdl:definitions xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://tempuri.org/" xmlns:s1="http://tempuri.org/AbstractTypes" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" targetNamespace="http://tempuri.org/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"&gt;\r\n  &lt;wsdl:types&gt;\r\n    &lt;s:schema elementFormDefault="qualified" targetNamespace="http://tempuri.org/"&gt;\r\n      &lt;s:element name="SetPrintMode"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="SetPrintModeResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyReportInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:complexType name="ArrayOfString"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:element name="NotifyReportInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="GetPrintServerStatus"&gt;\r\n        &lt;s:complexType /&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="GetPrintServerStatusResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="GetPrintServerStatusResult" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="error_code" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="error_description" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="CreatePrintTask"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id_type" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="CreatePrintTaskResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="CreatePrintTaskResult" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patient_name" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="warning_code" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="warning_description" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="CreatePrintTask2"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id_type" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="CreatePrintTask2Response"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="CreatePrintTask2Result" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patient_name" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="warning_code" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="warning_description" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="extensions" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="Print"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="PrintResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="PrintResult" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="error_code" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="error_description" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="GetPrintTaskStatus"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="GetPrintTaskStatusResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="GetPrintTaskStatusResult" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="task_status" type="tns:PrintTask" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:complexType name="PrintTask"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PrintTaskId" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="1" maxOccurs="1" name="PrintStatus" type="s:int" /&gt;\r\n          &lt;s:element minOccurs="1" maxOccurs="1" name="TotalReports" type="s:int" /&gt;\r\n          &lt;s:element minOccurs="1" maxOccurs="1" name="TotalImages" type="s:int" /&gt;\r\n          &lt;s:element minOccurs="1" maxOccurs="1" name="ReportsLeft" type="s:int" /&gt;\r\n          &lt;s:element minOccurs="1" maxOccurs="1" name="ImagesLeft" type="s:int" /&gt;\r\n          &lt;s:element minOccurs="1" maxOccurs="1" name="TimeNeeded" type="s:int" /&gt;\r\n          &lt;s:element minOccurs="1" maxOccurs="1" name="ErrorCode" type="s:int" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ErrorDesc" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:element name="CentralPrintCombine"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strTerminalID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strIDAccID" type="tns:ArrayOfString" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strAccType" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strIDUsID" type="tns:ArrayOfString" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strUsType" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="userId" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="CentralPrintCombineResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="CentralPrintCombineResult" type="tns:ArrayOfInt" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strPatientName" type="tns:ArrayOfString" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strPrintTaskID" type="tns:ArrayOfString" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="nWarningCode" type="tns:ArrayOfInt" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strWarningDescription" type="tns:ArrayOfString" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strExtensions" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:complexType name="ArrayOfInt"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="unbounded" name="int" type="s:int" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:element name="CentralPrint"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strTerminalID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strIDType" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="userId" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="CentralPrintResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="CentralPrintResult" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strPatientName" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strPrintTaskID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="nWarningCode" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strWarningDescription" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strExtensions" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="AddQCLog"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QCUID" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QCLevel" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QCUser" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QCEvent" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QCDescription" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="AddQCLogResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="AddQCLogResult" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="Version"&gt;\r\n        &lt;s:complexType /&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="VersionResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="VersionResult" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="UpdateReportPrinterStatus"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="nPrinterStatus" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="nErrorCode" type="s:int" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="strErrorDesc" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="UpdateReportPrinterStatusResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="UpdateReportPrinterStatusResult" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryExamInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="cardNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="cardType" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryExamInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="QueryExamInfoResult" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="SetReportPrinted"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="reportId" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="SetReportPrintedResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="SetReportPrintedResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="SetReportUnPrinted"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="reportId" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="SetReportUnPrintedResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="SetReportUnPrintedResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryPrintTask"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="QueryPrintTaskResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="PrintTask" type="tns:TaskInfo" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:complexType name="TaskInfo"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="TerminalID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="FilmCount" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ReportCount" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PrintedFilmCount" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="PrintedReportCount" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Patient" type="tns:PatientInfo" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Films" type="tns:ArrayOfFilmInfo" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Reports" type="tns:ArrayOfReportInfo" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:complexType name="PatientInfo"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Name" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Type" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:complexType name="ArrayOfFilmInfo"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="unbounded" name="FilmInfo" nillable="true" type="tns:FilmInfo" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:complexType name="FilmInfo"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Size" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Type" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:complexType name="ArrayOfReportInfo"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="unbounded" name="ReportInfo" nillable="true" type="tns:ReportInfo" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:complexType name="ReportInfo"&gt;\r\n        &lt;s:sequence&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string" /&gt;\r\n          &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string" /&gt;\r\n        &lt;/s:sequence&gt;\r\n      &lt;/s:complexType&gt;\r\n      &lt;s:element name="NotifyFilmInfo"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string" /&gt;\r\n            &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="NotifyFilmInfoResponse"&gt;\r\n        &lt;s:complexType&gt;\r\n          &lt;s:sequence&gt;\r\n            &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean" /&gt;\r\n          &lt;/s:sequence&gt;\r\n        &lt;/s:complexType&gt;\r\n      &lt;/s:element&gt;\r\n      &lt;s:element name="int" type="s:int" /&gt;\r\n      &lt;s:element name="string" nillable="true" type="s:string" /&gt;\r\n      &lt;s:element name="boolean" type="s:boolean" /&gt;\r\n      &lt;s:element name="PrintTask" type="tns:TaskInfo" /&gt;\r\n    &lt;/s:schema&gt;\r\n    &lt;s:schema targetNamespace="http://tempuri.org/AbstractTypes"&gt;\r\n      &lt;s:import namespace="http://schemas.xmlsoap.org/soap/encoding/" /&gt;\r\n      &lt;s:complexType name="StringArray"&gt;\r\n        &lt;s:complexContent mixed="false"&gt;\r\n          &lt;s:restriction base="soapenc:Array"&gt;\r\n            &lt;s:sequence&gt;\r\n              &lt;s:element minOccurs="0" maxOccurs="unbounded" name="String" type="s:string" /&gt;\r\n            &lt;/s:sequence&gt;\r\n          &lt;/s:restriction&gt;\r\n        &lt;/s:complexContent&gt;\r\n      &lt;/s:complexType&gt;\r\n    &lt;/s:schema&gt;\r\n  &lt;/wsdl:types&gt;\r\n  &lt;wsdl:message name="SetPrintModeSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetPrintMode" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetPrintModeSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="GetPrintServerStatusSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="GetPrintServerStatusSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CreatePrintTaskSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CreatePrintTask" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CreatePrintTaskSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CreatePrintTask2SoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CreatePrintTask2SoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="PrintSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:Print" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="PrintSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:PrintResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="GetPrintTaskStatusSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="GetPrintTaskStatusSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CentralPrintCombineSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CentralPrintCombineSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CentralPrintSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CentralPrint" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="CentralPrintSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="AddQCLogSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:AddQCLog" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="AddQCLogSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="VersionSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:Version" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="VersionSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:VersionResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="UpdateReportPrinterStatusSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="UpdateReportPrinterStatusSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryExamInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryExamInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryExamInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportPrintedSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetReportPrinted" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportPrintedSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportUnPrintedSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportUnPrintedSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryPrintTaskSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryPrintTask" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryPrintTaskSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoSoapIn"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoSoapOut"&gt;\r\n    &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetPrintModeHttpGetIn"&gt;\r\n    &lt;wsdl:part name="strAccessionNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="strStudyInstanceUID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="nMode" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetPrintModeHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoHttpGetIn"&gt;\r\n    &lt;wsdl:part name="patientName" type="s:string" /&gt;\r\n    &lt;wsdl:part name="patientID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="accessionNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="studyInstanceUID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="reportStatus" type="s:string" /&gt;\r\n    &lt;wsdl:part name="reportFileName" type="s1:StringArray" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="AddQCLogHttpGetIn"&gt;\r\n    &lt;wsdl:part name="QCUID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCLevel" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCUser" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCEvent" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCDescription" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="AddQCLogHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="VersionHttpGetIn" /&gt;\r\n  &lt;wsdl:message name="VersionHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="UpdateReportPrinterStatusHttpGetIn"&gt;\r\n    &lt;wsdl:part name="nPrinterStatus" type="s:string" /&gt;\r\n    &lt;wsdl:part name="nErrorCode" type="s:string" /&gt;\r\n    &lt;wsdl:part name="strErrorDesc" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="UpdateReportPrinterStatusHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryExamInfoHttpGetIn"&gt;\r\n    &lt;wsdl:part name="cardNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="cardType" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryExamInfoHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportPrintedHttpGetIn"&gt;\r\n    &lt;wsdl:part name="reportId" type="s:string" /&gt;\r\n    &lt;wsdl:part name="taskId" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportPrintedHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:boolean" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportUnPrintedHttpGetIn"&gt;\r\n    &lt;wsdl:part name="reportId" type="s:string" /&gt;\r\n    &lt;wsdl:part name="taskId" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportUnPrintedHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:boolean" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryPrintTaskHttpGetIn"&gt;\r\n    &lt;wsdl:part name="taskId" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryPrintTaskHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:PrintTask" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoHttpGetIn"&gt;\r\n    &lt;wsdl:part name="accessionNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="patientID" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoHttpGetOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:boolean" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetPrintModeHttpPostIn"&gt;\r\n    &lt;wsdl:part name="strAccessionNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="strStudyInstanceUID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="nMode" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetPrintModeHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoHttpPostIn"&gt;\r\n    &lt;wsdl:part name="patientName" type="s:string" /&gt;\r\n    &lt;wsdl:part name="patientID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="accessionNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="studyInstanceUID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="reportStatus" type="s:string" /&gt;\r\n    &lt;wsdl:part name="reportFileName" type="s1:StringArray" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyReportInfoHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="AddQCLogHttpPostIn"&gt;\r\n    &lt;wsdl:part name="QCUID" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCLevel" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCUser" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCEvent" type="s:string" /&gt;\r\n    &lt;wsdl:part name="QCDescription" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="AddQCLogHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="VersionHttpPostIn" /&gt;\r\n  &lt;wsdl:message name="VersionHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="UpdateReportPrinterStatusHttpPostIn"&gt;\r\n    &lt;wsdl:part name="nPrinterStatus" type="s:string" /&gt;\r\n    &lt;wsdl:part name="nErrorCode" type="s:string" /&gt;\r\n    &lt;wsdl:part name="strErrorDesc" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="UpdateReportPrinterStatusHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:int" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryExamInfoHttpPostIn"&gt;\r\n    &lt;wsdl:part name="cardNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="cardType" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryExamInfoHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportPrintedHttpPostIn"&gt;\r\n    &lt;wsdl:part name="reportId" type="s:string" /&gt;\r\n    &lt;wsdl:part name="taskId" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportPrintedHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:boolean" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportUnPrintedHttpPostIn"&gt;\r\n    &lt;wsdl:part name="reportId" type="s:string" /&gt;\r\n    &lt;wsdl:part name="taskId" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="SetReportUnPrintedHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:boolean" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryPrintTaskHttpPostIn"&gt;\r\n    &lt;wsdl:part name="taskId" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="QueryPrintTaskHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:PrintTask" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoHttpPostIn"&gt;\r\n    &lt;wsdl:part name="accessionNumber" type="s:string" /&gt;\r\n    &lt;wsdl:part name="patientID" type="s:string" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:message name="NotifyFilmInfoHttpPostOut"&gt;\r\n    &lt;wsdl:part name="Body" element="tns:boolean" /&gt;\r\n  &lt;/wsdl:message&gt;\r\n  &lt;wsdl:portType name="PrintServiceSoap"&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;wsdl:input message="tns:SetPrintModeSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetPrintModeSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyReportInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyReportInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="GetPrintServerStatus"&gt;\r\n      &lt;wsdl:input message="tns:GetPrintServerStatusSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:GetPrintServerStatusSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CreatePrintTask"&gt;\r\n      &lt;wsdl:input message="tns:CreatePrintTaskSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:CreatePrintTaskSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CreatePrintTask2"&gt;\r\n      &lt;wsdl:input message="tns:CreatePrintTask2SoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:CreatePrintTask2SoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Print"&gt;\r\n      &lt;wsdl:input message="tns:PrintSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:PrintSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="GetPrintTaskStatus"&gt;\r\n      &lt;wsdl:input message="tns:GetPrintTaskStatusSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:GetPrintTaskStatusSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CentralPrintCombine"&gt;\r\n      &lt;wsdl:input message="tns:CentralPrintCombineSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:CentralPrintCombineSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CentralPrint"&gt;\r\n      &lt;wsdl:input message="tns:CentralPrintSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:CentralPrintSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="AddQCLog"&gt;\r\n      &lt;wsdl:input message="tns:AddQCLogSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:AddQCLogSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Version"&gt;\r\n      &lt;wsdl:input message="tns:VersionSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:VersionSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="UpdateReportPrinterStatus"&gt;\r\n      &lt;wsdl:input message="tns:UpdateReportPrinterStatusSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:UpdateReportPrinterStatusSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryExamInfo"&gt;\r\n      &lt;wsdl:input message="tns:QueryExamInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryExamInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportPrinted"&gt;\r\n      &lt;wsdl:input message="tns:SetReportPrintedSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetReportPrintedSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportUnPrinted"&gt;\r\n      &lt;wsdl:input message="tns:SetReportUnPrintedSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetReportUnPrintedSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryPrintTask"&gt;\r\n      &lt;wsdl:input message="tns:QueryPrintTaskSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryPrintTaskSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyFilmInfoSoapIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyFilmInfoSoapOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:portType&gt;\r\n  &lt;wsdl:portType name="PrintServiceHttpGet"&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;wsdl:input message="tns:SetPrintModeHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetPrintModeHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyReportInfoHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyReportInfoHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="AddQCLog"&gt;\r\n      &lt;wsdl:input message="tns:AddQCLogHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:AddQCLogHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Version"&gt;\r\n      &lt;wsdl:input message="tns:VersionHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:VersionHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="UpdateReportPrinterStatus"&gt;\r\n      &lt;wsdl:input message="tns:UpdateReportPrinterStatusHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:UpdateReportPrinterStatusHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryExamInfo"&gt;\r\n      &lt;wsdl:input message="tns:QueryExamInfoHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryExamInfoHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportPrinted"&gt;\r\n      &lt;wsdl:input message="tns:SetReportPrintedHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetReportPrintedHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportUnPrinted"&gt;\r\n      &lt;wsdl:input message="tns:SetReportUnPrintedHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetReportUnPrintedHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryPrintTask"&gt;\r\n      &lt;wsdl:input message="tns:QueryPrintTaskHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryPrintTaskHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyFilmInfoHttpGetIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyFilmInfoHttpGetOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:portType&gt;\r\n  &lt;wsdl:portType name="PrintServiceHttpPost"&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;wsdl:input message="tns:SetPrintModeHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetPrintModeHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyReportInfoHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyReportInfoHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="AddQCLog"&gt;\r\n      &lt;wsdl:input message="tns:AddQCLogHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:AddQCLogHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Version"&gt;\r\n      &lt;wsdl:input message="tns:VersionHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:VersionHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="UpdateReportPrinterStatus"&gt;\r\n      &lt;wsdl:input message="tns:UpdateReportPrinterStatusHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:UpdateReportPrinterStatusHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryExamInfo"&gt;\r\n      &lt;wsdl:input message="tns:QueryExamInfoHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryExamInfoHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportPrinted"&gt;\r\n      &lt;wsdl:input message="tns:SetReportPrintedHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetReportPrintedHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportUnPrinted"&gt;\r\n      &lt;wsdl:input message="tns:SetReportUnPrintedHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:SetReportUnPrintedHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryPrintTask"&gt;\r\n      &lt;wsdl:input message="tns:QueryPrintTaskHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:QueryPrintTaskHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;wsdl:input message="tns:NotifyFilmInfoHttpPostIn" /&gt;\r\n      &lt;wsdl:output message="tns:NotifyFilmInfoHttpPostOut" /&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:portType&gt;\r\n  &lt;wsdl:binding name="PrintServiceSoap" type="tns:PrintServiceSoap"&gt;\r\n    &lt;soap:binding transport="http://schemas.xmlsoap.org/soap/http" /&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/SetPrintMode" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/NotifyReportInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="GetPrintServerStatus"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/GetPrintServerStatus" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CreatePrintTask"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/CreatePrintTask" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CreatePrintTask2"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/CreatePrintTask2" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Print"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/Print" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="GetPrintTaskStatus"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/GetPrintTaskStatus" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CentralPrintCombine"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/CentralPrintCombine" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CentralPrint"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/CentralPrint" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="AddQCLog"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/AddQCLog" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Version"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/Version" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="UpdateReportPrinterStatus"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/UpdateReportPrinterStatus" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryExamInfo"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/QueryExamInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportPrinted"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/SetReportPrinted" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportUnPrinted"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/SetReportUnPrinted" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryPrintTask"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/QueryPrintTask" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;soap:operation soapAction="http://tempuri.org/NotifyFilmInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:binding&gt;\r\n  &lt;wsdl:binding name="PrintServiceSoap12" type="tns:PrintServiceSoap"&gt;\r\n    &lt;soap12:binding transport="http://schemas.xmlsoap.org/soap/http" /&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/SetPrintMode" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/NotifyReportInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="GetPrintServerStatus"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/GetPrintServerStatus" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CreatePrintTask"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/CreatePrintTask" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CreatePrintTask2"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/CreatePrintTask2" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Print"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/Print" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="GetPrintTaskStatus"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/GetPrintTaskStatus" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CentralPrintCombine"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/CentralPrintCombine" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="CentralPrint"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/CentralPrint" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="AddQCLog"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/AddQCLog" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Version"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/Version" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="UpdateReportPrinterStatus"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/UpdateReportPrinterStatus" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryExamInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/QueryExamInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportPrinted"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/SetReportPrinted" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportUnPrinted"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/SetReportUnPrinted" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryPrintTask"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/QueryPrintTask" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;soap12:operation soapAction="http://tempuri.org/NotifyFilmInfo" style="document" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;soap12:body use="literal" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:binding&gt;\r\n  &lt;wsdl:binding name="PrintServiceHttpGet" type="tns:PrintServiceHttpGet"&gt;\r\n    &lt;http:binding verb="GET" /&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;http:operation location="/SetPrintMode" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;http:operation location="/NotifyReportInfo" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="AddQCLog"&gt;\r\n      &lt;http:operation location="/AddQCLog" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Version"&gt;\r\n      &lt;http:operation location="/Version" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="UpdateReportPrinterStatus"&gt;\r\n      &lt;http:operation location="/UpdateReportPrinterStatus" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryExamInfo"&gt;\r\n      &lt;http:operation location="/QueryExamInfo" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportPrinted"&gt;\r\n      &lt;http:operation location="/SetReportPrinted" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportUnPrinted"&gt;\r\n      &lt;http:operation location="/SetReportUnPrinted" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryPrintTask"&gt;\r\n      &lt;http:operation location="/QueryPrintTask" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;http:operation location="/NotifyFilmInfo" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;http:urlEncoded /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:binding&gt;\r\n  &lt;wsdl:binding name="PrintServiceHttpPost" type="tns:PrintServiceHttpPost"&gt;\r\n    &lt;http:binding verb="POST" /&gt;\r\n    &lt;wsdl:operation name="SetPrintMode"&gt;\r\n      &lt;http:operation location="/SetPrintMode" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyReportInfo"&gt;\r\n      &lt;http:operation location="/NotifyReportInfo" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="AddQCLog"&gt;\r\n      &lt;http:operation location="/AddQCLog" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="Version"&gt;\r\n      &lt;http:operation location="/Version" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="UpdateReportPrinterStatus"&gt;\r\n      &lt;http:operation location="/UpdateReportPrinterStatus" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryExamInfo"&gt;\r\n      &lt;http:operation location="/QueryExamInfo" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportPrinted"&gt;\r\n      &lt;http:operation location="/SetReportPrinted" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="SetReportUnPrinted"&gt;\r\n      &lt;http:operation location="/SetReportUnPrinted" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="QueryPrintTask"&gt;\r\n      &lt;http:operation location="/QueryPrintTask" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n    &lt;wsdl:operation name="NotifyFilmInfo"&gt;\r\n      &lt;http:operation location="/NotifyFilmInfo" /&gt;\r\n      &lt;wsdl:input&gt;\r\n        &lt;mime:content type="application/x-www-form-urlencoded" /&gt;\r\n      &lt;/wsdl:input&gt;\r\n      &lt;wsdl:output&gt;\r\n        &lt;mime:mimeXml part="Body" /&gt;\r\n      &lt;/wsdl:output&gt;\r\n    &lt;/wsdl:operation&gt;\r\n  &lt;/wsdl:binding&gt;\r\n  &lt;wsdl:service name="PrintService"&gt;\r\n    &lt;wsdl:port name="PrintServiceSoap" binding="tns:PrintServiceSoap"&gt;\r\n      &lt;soap:address location="http://10.112.20.84/PrintServer/PrintService.asmx" /&gt;\r\n    &lt;/wsdl:port&gt;\r\n    &lt;wsdl:port name="PrintServiceSoap12" binding="tns:PrintServiceSoap12"&gt;\r\n      &lt;soap12:address location="http://10.112.20.84/PrintServer/PrintService.asmx" /&gt;\r\n    &lt;/wsdl:port&gt;\r\n    &lt;wsdl:port name="PrintServiceHttpGet" binding="tns:PrintServiceHttpGet"&gt;\r\n      &lt;http:address location="http://10.112.20.84/PrintServer/PrintService.asmx" /&gt;\r\n    &lt;/wsdl:port&gt;\r\n    &lt;wsdl:port name="PrintServiceHttpPost" binding="tns:PrintServiceHttpPost"&gt;\r\n      &lt;http:address location="http://10.112.20.84/PrintServer/PrintService.asmx" /&gt;\r\n    &lt;/wsdl:port&gt;\r\n  &lt;/wsdl:service&gt;\r\n&lt;/wsdl:definitions&gt;'
sax duration: 15 (ms)</msg>
<msg timestamp="20191101 15:55:57.966" level="DEBUG">binding: "PrintServiceHttpGet" not a SOAP binding</msg>
<msg timestamp="20191101 15:55:57.966" level="DEBUG">binding: "PrintServiceHttpPost" not a SOAP binding</msg>
<msg timestamp="20191101 15:55:57.966" level="DEBUG">binding "PrintServiceHttpGet" - not a SOAP binding, discarded</msg>
<msg timestamp="20191101 15:55:57.966" level="DEBUG">binding "PrintServiceHttpPost" - not a SOAP binding, discarded</msg>
<msg timestamp="20191101 15:55:57.966" level="DEBUG">Import:0x3e0ca70, importing ns="http://schemas.xmlsoap.org/soap/encoding/", location="suds://schemas.xmlsoap.org/soap/encoding/"</msg>
<msg timestamp="20191101 15:55:57.981" level="DEBUG">b'&lt;?xml version="1.0" encoding="UTF-8"?&gt;\n&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"\n    xmlns:tns="http://schemas.xmlsoap.org/soap/encoding/"\n    targetNamespace="http://schemas.xmlsoap.org/soap/encoding/"&gt;\n\n &lt;xs:attribute name="root"&gt;\n   &lt;xs:annotation&gt;\n     &lt;xs:documentation&gt;\n       \'root\' can be used to distinguish serialization roots from other\n       elements that are present in a serialization but are not roots of\n       a serialized value graph\n     &lt;/xs:documentation&gt;\n   &lt;/xs:annotation&gt;\n   &lt;xs:simpleType&gt;\n     &lt;xs:restriction base="xs:boolean"&gt;\n       &lt;xs:pattern value="0|1"/&gt;\n     &lt;/xs:restriction&gt;\n   &lt;/xs:simpleType&gt;\n &lt;/xs:attribute&gt;\n\n  &lt;xs:attributeGroup name="commonAttributes"&gt;\n    &lt;xs:annotation&gt;\n      &lt;xs:documentation&gt;\n        Attributes common to all elements that function as accessors or\n        represent independent (multi-ref) values.  The href attribute is\n        intended to be used in a manner like CONREF.  That is, the element\n        content should be empty iff the href attribute appears\n      &lt;/xs:documentation&gt;\n    &lt;/xs:annotation&gt;\n    &lt;xs:attribute name="id" type="xs:ID"/&gt;\n    &lt;xs:attribute name="href" type="xs:anyURI"/&gt;\n    &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;\n  &lt;/xs:attributeGroup&gt;\n\n  &lt;!-- Global Attributes.  The following attributes are intended to be usable via qualified attribute names on any complex type referencing them. --&gt;\n\n  &lt;!-- Array attributes. Needed to give the type and dimensions of an array\'s contents, and the offset for partially-transmitted arrays. --&gt;\n\n  &lt;xs:simpleType name="arrayCoordinate"&gt;\n    &lt;xs:restriction base="xs:string"/&gt;\n  &lt;/xs:simpleType&gt;\n\n  &lt;xs:attribute name="arrayType" type="xs:string"/&gt;\n  &lt;xs:attribute name="offset" type="tns:arrayCoordinate"/&gt;\n\n  &lt;xs:attributeGroup name="arrayAttributes"&gt;\n    &lt;xs:attribute ref="tns:arrayType"/&gt;\n    &lt;xs:attribute ref="tns:offset"/&gt;\n  &lt;/xs:attributeGroup&gt;\n\n  &lt;xs:attribute name="position" type="tns:arrayCoordinate"/&gt;\n\n  &lt;xs:attributeGroup name="arrayMemberAttributes"&gt;\n    &lt;xs:attribute ref="tns:position"/&gt;\n  &lt;/xs:attributeGroup&gt;\n\n  &lt;xs:group name="Array"&gt;\n    &lt;xs:sequence&gt;\n      &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;\n    &lt;/xs:sequence&gt;\n  &lt;/xs:group&gt;\n\n  &lt;xs:element name="Array" type="tns:Array"/&gt;\n  &lt;xs:complexType name="Array"&gt;\n    &lt;xs:annotation&gt;\n      &lt;xs:documentation&gt;\n       \'Array\' is a complex type for accessors identified by position\n      &lt;/xs:documentation&gt;\n    &lt;/xs:annotation&gt;\n    &lt;xs:group ref="tns:Array" minOccurs="0"/&gt;\n    &lt;xs:attributeGroup ref="tns:arrayAttributes"/&gt;\n    &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;!-- \'Struct\' is a complex type for accessors identified by name.\n       Constraint: No element may be have the same name as any other,\n       nor may any element have a maxOccurs &gt; 1. --&gt;\n\n  &lt;xs:element name="Struct" type="tns:Struct"/&gt;\n\n  &lt;xs:group name="Struct"&gt;\n    &lt;xs:sequence&gt;\n      &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;\n    &lt;/xs:sequence&gt;\n  &lt;/xs:group&gt;\n\n  &lt;xs:complexType name="Struct"&gt;\n    &lt;xs:group ref="tns:Struct" minOccurs="0"/&gt;\n    &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;!-- \'Base64\' can be used to serialize binary data using base64 encoding\n       as defined in RFC2045 but without the MIME line length limitation. --&gt;\n\n  &lt;xs:simpleType name="base64"&gt;\n    &lt;xs:restriction base="xs:base64Binary"/&gt;\n  &lt;/xs:simpleType&gt;\n\n &lt;!-- Element declarations corresponding to each of the simple types in the\n      XML Schemas Specification. --&gt;\n\n  &lt;xs:element name="duration" type="tns:duration"/&gt;\n  &lt;xs:complexType name="duration"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:duration"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="dateTime" type="tns:dateTime"/&gt;\n  &lt;xs:complexType name="dateTime"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:dateTime"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="NOTATION" type="tns:NOTATION"/&gt;\n  &lt;xs:complexType name="NOTATION"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:QName"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="time" type="tns:time"/&gt;\n  &lt;xs:complexType name="time"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:time"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="date" type="tns:date"/&gt;\n  &lt;xs:complexType name="date"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:date"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="gYearMonth" type="tns:gYearMonth"/&gt;\n  &lt;xs:complexType name="gYearMonth"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:gYearMonth"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="gYear" type="tns:gYear"/&gt;\n  &lt;xs:complexType name="gYear"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:gYear"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="gMonthDay" type="tns:gMonthDay"/&gt;\n  &lt;xs:complexType name="gMonthDay"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:gMonthDay"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="gDay" type="tns:gDay"/&gt;\n  &lt;xs:complexType name="gDay"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:gDay"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="gMonth" type="tns:gMonth"/&gt;\n  &lt;xs:complexType name="gMonth"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:gMonth"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="boolean" type="tns:boolean"/&gt;\n  &lt;xs:complexType name="boolean"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:boolean"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="base64Binary" type="tns:base64Binary"/&gt;\n  &lt;xs:complexType name="base64Binary"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:base64Binary"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="hexBinary" type="tns:hexBinary"/&gt;\n  &lt;xs:complexType name="hexBinary"&gt;\n    &lt;xs:simpleContent&gt;\n     &lt;xs:extension base="xs:hexBinary"&gt;\n       &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n     &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="float" type="tns:float"/&gt;\n  &lt;xs:complexType name="float"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:float"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="double" type="tns:double"/&gt;\n  &lt;xs:complexType name="double"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:double"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="anyURI" type="tns:anyURI"/&gt;\n  &lt;xs:complexType name="anyURI"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:anyURI"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="QName" type="tns:QName"/&gt;\n  &lt;xs:complexType name="QName"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:QName"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="string" type="tns:string"/&gt;\n  &lt;xs:complexType name="string"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:string"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="normalizedString" type="tns:normalizedString"/&gt;\n  &lt;xs:complexType name="normalizedString"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:normalizedString"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="token" type="tns:token"/&gt;\n  &lt;xs:complexType name="token"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:token"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="language" type="tns:language"/&gt;\n  &lt;xs:complexType name="language"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:language"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="Name" type="tns:Name"/&gt;\n  &lt;xs:complexType name="Name"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:Name"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="NMTOKEN" type="tns:NMTOKEN"/&gt;\n  &lt;xs:complexType name="NMTOKEN"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:NMTOKEN"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="NCName" type="tns:NCName"/&gt;\n  &lt;xs:complexType name="NCName"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:NCName"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="NMTOKENS" type="tns:NMTOKENS"/&gt;\n  &lt;xs:complexType name="NMTOKENS"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:NMTOKENS"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="ID" type="tns:ID"/&gt;\n  &lt;xs:complexType name="ID"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:ID"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="IDREF" type="tns:IDREF"/&gt;\n  &lt;xs:complexType name="IDREF"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:IDREF"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="ENTITY" type="tns:ENTITY"/&gt;\n  &lt;xs:complexType name="ENTITY"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:ENTITY"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="IDREFS" type="tns:IDREFS"/&gt;\n  &lt;xs:complexType name="IDREFS"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:IDREFS"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="ENTITIES" type="tns:ENTITIES"/&gt;\n  &lt;xs:complexType name="ENTITIES"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:ENTITIES"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="decimal" type="tns:decimal"/&gt;\n  &lt;xs:complexType name="decimal"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:decimal"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="integer" type="tns:integer"/&gt;\n  &lt;xs:complexType name="integer"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:integer"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="nonPositiveInteger" type="tns:nonPositiveInteger"/&gt;\n  &lt;xs:complexType name="nonPositiveInteger"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:nonPositiveInteger"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="negativeInteger" type="tns:negativeInteger"/&gt;\n  &lt;xs:complexType name="negativeInteger"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:negativeInteger"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="long" type="tns:long"/&gt;\n  &lt;xs:complexType name="long"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:long"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="int" type="tns:int"/&gt;\n  &lt;xs:complexType name="int"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:int"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="short" type="tns:short"/&gt;\n  &lt;xs:complexType name="short"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:short"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="byte" type="tns:byte"/&gt;\n  &lt;xs:complexType name="byte"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:byte"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="nonNegativeInteger" type="tns:nonNegativeInteger"/&gt;\n  &lt;xs:complexType name="nonNegativeInteger"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:nonNegativeInteger"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="unsignedLong" type="tns:unsignedLong"/&gt;\n  &lt;xs:complexType name="unsignedLong"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:unsignedLong"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="unsignedInt" type="tns:unsignedInt"/&gt;\n  &lt;xs:complexType name="unsignedInt"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:unsignedInt"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="unsignedShort" type="tns:unsignedShort"/&gt;\n  &lt;xs:complexType name="unsignedShort"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:unsignedShort"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="unsignedByte" type="tns:unsignedByte"/&gt;\n  &lt;xs:complexType name="unsignedByte"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:unsignedByte"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="positiveInteger" type="tns:positiveInteger"/&gt;\n  &lt;xs:complexType name="positiveInteger"&gt;\n    &lt;xs:simpleContent&gt;\n      &lt;xs:extension base="xs:positiveInteger"&gt;\n        &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;\n      &lt;/xs:extension&gt;\n    &lt;/xs:simpleContent&gt;\n  &lt;/xs:complexType&gt;\n\n  &lt;xs:element name="anyType"/&gt;\n&lt;/xs:schema&gt;\n'
sax duration: 15 (ms)</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">built:
Schema:0x4152290
(raw)
   &lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.xmlsoap.org/soap/encoding/" targetNamespace="http://schemas.xmlsoap.org/soap/encoding/" url="suds://schemas.xmlsoap.org/soap/encoding/"&gt;
      &lt;xs:attribute name="root"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;root&amp;apos; can be used to distinguish serialization roots from other
       elements that are present in a serialization but are not roots of
       a serialized value graph
     &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:simpleType&gt;
            &lt;xs:restriction base="xs:boolean"&gt;
               &lt;xs:pattern value="0|1"/&gt;
            &lt;/xs:restriction&gt;
         &lt;/xs:simpleType&gt;
      &lt;/xs:attribute&gt;
      &lt;xs:attributeGroup name="commonAttributes"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
        Attributes common to all elements that function as accessors or
        represent independent (multi-ref) values.  The href attribute is
        intended to be used in a manner like CONREF.  That is, the element
        content should be empty iff the href attribute appears
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:attribute name="id" type="xs:ID"/&gt;
         &lt;xs:attribute name="href" type="xs:anyURI"/&gt;
         &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:simpleType name="arrayCoordinate"&gt;
         &lt;xs:restriction base="xs:string"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:attribute name="arrayType" type="xs:string"/&gt;
      &lt;xs:attribute name="offset" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayAttributes"&gt;
         &lt;xs:attribute ref="tns:arrayType"/&gt;
         &lt;xs:attribute ref="tns:offset"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:attribute name="position" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayMemberAttributes"&gt;
         &lt;xs:attribute ref="tns:position"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:group name="Array"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:element name="Array" type="tns:Array"/&gt;
      &lt;xs:complexType name="Array"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;Array&amp;apos; is a complex type for accessors identified by position
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:group ref="tns:Array" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:arrayAttributes"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Struct" type="tns:Struct"/&gt;
      &lt;xs:group name="Struct"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:complexType name="Struct"&gt;
         &lt;xs:group ref="tns:Struct" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:simpleType name="base64"&gt;
         &lt;xs:restriction base="xs:base64Binary"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:element name="duration" type="tns:duration"/&gt;
      &lt;xs:complexType name="duration"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:duration"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="dateTime" type="tns:dateTime"/&gt;
      &lt;xs:complexType name="dateTime"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:dateTime"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NOTATION" type="tns:NOTATION"/&gt;
      &lt;xs:complexType name="NOTATION"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="time" type="tns:time"/&gt;
      &lt;xs:complexType name="time"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:time"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="date" type="tns:date"/&gt;
      &lt;xs:complexType name="date"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:date"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYearMonth" type="tns:gYearMonth"/&gt;
      &lt;xs:complexType name="gYearMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYearMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYear" type="tns:gYear"/&gt;
      &lt;xs:complexType name="gYear"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYear"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonthDay" type="tns:gMonthDay"/&gt;
      &lt;xs:complexType name="gMonthDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonthDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gDay" type="tns:gDay"/&gt;
      &lt;xs:complexType name="gDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonth" type="tns:gMonth"/&gt;
      &lt;xs:complexType name="gMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="boolean" type="tns:boolean"/&gt;
      &lt;xs:complexType name="boolean"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:boolean"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="base64Binary" type="tns:base64Binary"/&gt;
      &lt;xs:complexType name="base64Binary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:base64Binary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="hexBinary" type="tns:hexBinary"/&gt;
      &lt;xs:complexType name="hexBinary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:hexBinary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="float" type="tns:float"/&gt;
      &lt;xs:complexType name="float"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:float"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="double" type="tns:double"/&gt;
      &lt;xs:complexType name="double"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:double"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyURI" type="tns:anyURI"/&gt;
      &lt;xs:complexType name="anyURI"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:anyURI"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="QName" type="tns:QName"/&gt;
      &lt;xs:complexType name="QName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="string" type="tns:string"/&gt;
      &lt;xs:complexType name="string"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:string"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="normalizedString" type="tns:normalizedString"/&gt;
      &lt;xs:complexType name="normalizedString"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:normalizedString"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="token" type="tns:token"/&gt;
      &lt;xs:complexType name="token"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:token"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="language" type="tns:language"/&gt;
      &lt;xs:complexType name="language"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:language"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Name" type="tns:Name"/&gt;
      &lt;xs:complexType name="Name"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:Name"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKEN" type="tns:NMTOKEN"/&gt;
      &lt;xs:complexType name="NMTOKEN"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKEN"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NCName" type="tns:NCName"/&gt;
      &lt;xs:complexType name="NCName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NCName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKENS" type="tns:NMTOKENS"/&gt;
      &lt;xs:complexType name="NMTOKENS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKENS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ID" type="tns:ID"/&gt;
      &lt;xs:complexType name="ID"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ID"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREF" type="tns:IDREF"/&gt;
      &lt;xs:complexType name="IDREF"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREF"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITY" type="tns:ENTITY"/&gt;
      &lt;xs:complexType name="ENTITY"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITY"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREFS" type="tns:IDREFS"/&gt;
      &lt;xs:complexType name="IDREFS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREFS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITIES" type="tns:ENTITIES"/&gt;
      &lt;xs:complexType name="ENTITIES"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITIES"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="decimal" type="tns:decimal"/&gt;
      &lt;xs:complexType name="decimal"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:decimal"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="integer" type="tns:integer"/&gt;
      &lt;xs:complexType name="integer"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:integer"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonPositiveInteger" type="tns:nonPositiveInteger"/&gt;
      &lt;xs:complexType name="nonPositiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonPositiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="negativeInteger" type="tns:negativeInteger"/&gt;
      &lt;xs:complexType name="negativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:negativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="long" type="tns:long"/&gt;
      &lt;xs:complexType name="long"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:long"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="int" type="tns:int"/&gt;
      &lt;xs:complexType name="int"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:int"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="short" type="tns:short"/&gt;
      &lt;xs:complexType name="short"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:short"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="byte" type="tns:byte"/&gt;
      &lt;xs:complexType name="byte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:byte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonNegativeInteger" type="tns:nonNegativeInteger"/&gt;
      &lt;xs:complexType name="nonNegativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonNegativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedLong" type="tns:unsignedLong"/&gt;
      &lt;xs:complexType name="unsignedLong"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedLong"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedInt" type="tns:unsignedInt"/&gt;
      &lt;xs:complexType name="unsignedInt"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedInt"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedShort" type="tns:unsignedShort"/&gt;
      &lt;xs:complexType name="unsignedShort"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedShort"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedByte" type="tns:unsignedByte"/&gt;
      &lt;xs:complexType name="unsignedByte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedByte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="positiveInteger" type="tns:positiveInteger"/&gt;
      &lt;xs:complexType name="positiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:positiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyType"/&gt;
   &lt;/xs:schema&gt;
(model)
   &lt;Attribute:0x41520d0 name="root" /&gt;
   &lt;AttributeGroup:0x4152810 name="commonAttributes"&gt;
      &lt;Attribute:0x4152510 name="id" type="xs:ID" /&gt;@
      &lt;Attribute:0x4152a50 name="href" type="xs:anyURI" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Simple:0x4152870 name="arrayCoordinate" /&gt;
   &lt;Attribute:0x4152950 name="arrayType" type="xs:string" /&gt;
   &lt;Attribute:0x4152d50 name="offset" type="tns:arrayCoordinate" /&gt;
   &lt;AttributeGroup:0x41232b0 name="arrayAttributes"&gt;
      &lt;Attribute:0x4123130 ref="tns:arrayType" /&gt;@
      &lt;Attribute:0x4123730 ref="tns:offset" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Attribute:0x41234d0 name="position" type="tns:arrayCoordinate" /&gt;
   &lt;AttributeGroup:0x41235d0 name="arrayMemberAttributes"&gt;
      &lt;Attribute:0x4123870 ref="tns:position" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Group:0x4123b90 name="Array"&gt;
      &lt;Sequence:0x4123e30&gt;
         &lt;Any:0x4123cf0 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Element:0x4152f70 name="Array" type="tns:Array" /&gt;
   &lt;Complex:0x4123f90 name="Array" /&gt;
   &lt;Element:0x4123a90 name="Struct" type="tns:Struct" /&gt;
   &lt;Group:0x4158130 name="Struct"&gt;
      &lt;Sequence:0x4158630&gt;
         &lt;Any:0x4158a10 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Complex:0x4158730 name="Struct" /&gt;
   &lt;Simple:0x4158e50 name="base64" /&gt;
   &lt;Element:0x4158cb0 name="duration" type="tns:duration" /&gt;
   &lt;Complex:0x413cd10 name="duration" /&gt;
   &lt;Element:0x413c510 name="dateTime" type="tns:dateTime" /&gt;
   &lt;Complex:0x413ca30 name="dateTime" /&gt;
   &lt;Element:0x413cfb0 name="NOTATION" type="tns:NOTATION" /&gt;
   &lt;Complex:0x413c4b0 name="NOTATION" /&gt;
   &lt;Element:0x413c290 name="time" type="tns:time" /&gt;
   &lt;Complex:0x3e0ceb0 name="time" /&gt;
   &lt;Element:0x3e0cd90 name="date" type="tns:date" /&gt;
   &lt;Complex:0x3e0caf0 name="date" /&gt;
   &lt;Element:0x3e0cc10 name="gYearMonth" type="tns:gYearMonth" /&gt;
   &lt;Complex:0x3e0cf70 name="gYearMonth" /&gt;
   &lt;Element:0x3e0cb90 name="gYear" type="tns:gYear" /&gt;
   &lt;Complex:0x414e850 name="gYear" /&gt;
   &lt;Element:0x414e290 name="gMonthDay" type="tns:gMonthDay" /&gt;
   &lt;Complex:0x414eb70 name="gMonthDay" /&gt;
   &lt;Element:0x414e710 name="gDay" type="tns:gDay" /&gt;
   &lt;Complex:0x4157150 name="gDay" /&gt;
   &lt;Element:0x4157ef0 name="gMonth" type="tns:gMonth" /&gt;
   &lt;Complex:0x41573f0 name="gMonth" /&gt;
   &lt;Element:0x4157870 name="boolean" type="tns:boolean" /&gt;
   &lt;Complex:0x4157f10 name="boolean" /&gt;
   &lt;Element:0x416e550 name="base64Binary" type="tns:base64Binary" /&gt;
   &lt;Complex:0x416ea50 name="base64Binary" /&gt;
   &lt;Element:0x416ecb0 name="hexBinary" type="tns:hexBinary" /&gt;
   &lt;Complex:0x416ef90 name="hexBinary" /&gt;
   &lt;Element:0x416edf0 name="float" type="tns:float" /&gt;
   &lt;Complex:0x4179850 name="float" /&gt;
   &lt;Element:0x4179bf0 name="double" type="tns:double" /&gt;
   &lt;Complex:0x4179f50 name="double" /&gt;
   &lt;Element:0x4179c10 name="anyURI" type="tns:anyURI" /&gt;
   &lt;Complex:0x4198250 name="anyURI" /&gt;
   &lt;Element:0x4198b90 name="QName" type="tns:QName" /&gt;
   &lt;Complex:0x4198950 name="QName" /&gt;
   &lt;Element:0x4198370 name="string" type="tns:string" /&gt;
   &lt;Complex:0x418d550 name="string" /&gt;
   &lt;Element:0x418d670 name="normalizedString" type="tns:normalizedString" /&gt;
   &lt;Complex:0x418d6f0 name="normalizedString" /&gt;
   &lt;Element:0x418d730 name="token" type="tns:token" /&gt;
   &lt;Complex:0x418d790 name="token" /&gt;
   &lt;Element:0x418d7d0 name="language" type="tns:language" /&gt;
   &lt;Complex:0x418d830 name="language" /&gt;
   &lt;Element:0x418d870 name="Name" type="tns:Name" /&gt;
   &lt;Complex:0x418d8d0 name="Name" /&gt;
   &lt;Element:0x418d910 name="NMTOKEN" type="tns:NMTOKEN" /&gt;
   &lt;Complex:0x418d970 name="NMTOKEN" /&gt;
   &lt;Element:0x418d9b0 name="NCName" type="tns:NCName" /&gt;
   &lt;Complex:0x418da10 name="NCName" /&gt;
   &lt;Element:0x418da50 name="NMTOKENS" type="tns:NMTOKENS" /&gt;
   &lt;Complex:0x418dab0 name="NMTOKENS" /&gt;
   &lt;Element:0x418daf0 name="ID" type="tns:ID" /&gt;
   &lt;Complex:0x418db50 name="ID" /&gt;
   &lt;Element:0x418db90 name="IDREF" type="tns:IDREF" /&gt;
   &lt;Complex:0x418dbf0 name="IDREF" /&gt;
   &lt;Element:0x418dc30 name="ENTITY" type="tns:ENTITY" /&gt;
   &lt;Complex:0x418dc90 name="ENTITY" /&gt;
   &lt;Element:0x418dcd0 name="IDREFS" type="tns:IDREFS" /&gt;
   &lt;Complex:0x418dd30 name="IDREFS" /&gt;
   &lt;Element:0x418dd70 name="ENTITIES" type="tns:ENTITIES" /&gt;
   &lt;Complex:0x418ddd0 name="ENTITIES" /&gt;
   &lt;Element:0x418de10 name="decimal" type="tns:decimal" /&gt;
   &lt;Complex:0x418de70 name="decimal" /&gt;
   &lt;Element:0x418deb0 name="integer" type="tns:integer" /&gt;
   &lt;Complex:0x418df10 name="integer" /&gt;
   &lt;Element:0x418df50 name="nonPositiveInteger" type="tns:nonPositiveInteger" /&gt;
   &lt;Complex:0x418dfb0 name="nonPositiveInteger" /&gt;
   &lt;Element:0x418dff0 name="negativeInteger" type="tns:negativeInteger" /&gt;
   &lt;Complex:0x418dfd0 name="negativeInteger" /&gt;
   &lt;Element:0x418f0b0 name="long" type="tns:long" /&gt;
   &lt;Complex:0x418f110 name="long" /&gt;
   &lt;Element:0x418f150 name="int" type="tns:int" /&gt;
   &lt;Complex:0x418f1b0 name="int" /&gt;
   &lt;Element:0x418f1f0 name="short" type="tns:short" /&gt;
   &lt;Complex:0x418f250 name="short" /&gt;
   &lt;Element:0x418f290 name="byte" type="tns:byte" /&gt;
   &lt;Complex:0x418f2f0 name="byte" /&gt;
   &lt;Element:0x418f330 name="nonNegativeInteger" type="tns:nonNegativeInteger" /&gt;
   &lt;Complex:0x418f390 name="nonNegativeInteger" /&gt;
   &lt;Element:0x418f3d0 name="unsignedLong" type="tns:unsignedLong" /&gt;
   &lt;Complex:0x418f430 name="unsignedLong" /&gt;
   &lt;Element:0x418f470 name="unsignedInt" type="tns:unsignedInt" /&gt;
   &lt;Complex:0x418f4d0 name="unsignedInt" /&gt;
   &lt;Element:0x418f510 name="unsignedShort" type="tns:unsignedShort" /&gt;
   &lt;Complex:0x418f570 name="unsignedShort" /&gt;
   &lt;Element:0x418f5b0 name="unsignedByte" type="tns:unsignedByte" /&gt;
   &lt;Complex:0x418f610 name="unsignedByte" /&gt;
   &lt;Element:0x418f650 name="positiveInteger" type="tns:positiveInteger" /&gt;
   &lt;Complex:0x418f6b0 name="positiveInteger" /&gt;
   &lt;Element:0x418f6f0 name="anyType" type="xs:anyType" /&gt;
</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Attribute:0x4152510, convert type="xs:ID" to ('ID', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Attribute:0x4152a50, convert type="xs:anyURI" to ('anyURI', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Restriction:0x4152b90, convert ref="xs:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">TypeQuery:0x418f750, found builtin (string)</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Attribute:0x4152950, convert type="xs:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Attribute:0x4152d50, convert type="tns:arrayCoordinate" to ('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Attribute:0x4123130, convert ref="tns:arrayType" to ('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;Attribute:0x4152950 name="arrayType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Attribute:0x4123730, convert ref="tns:offset" to ('offset', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">('offset', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;Attribute:0x4152d50 name="offset" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Attribute:0x41234d0, convert type="tns:arrayCoordinate" to ('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Attribute:0x4123870, convert ref="tns:position" to ('position', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">('position', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;Attribute:0x41234d0 name="position" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Element:0x4152f70, convert type="tns:Array" to ('Array', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Group:0x4158910, convert ref="tns:Array" to ('Array', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">('Array', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;Group:0x4123b90 name="Array" /&gt;</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">AttributeGroup:0x41582d0, convert ref="tns:arrayAttributes" to ('arrayAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">('arrayAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x41232b0 name="arrayAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">AttributeGroup:0x4158410, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Element:0x4123a90, convert type="tns:Struct" to ('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Group:0x4158b10, convert ref="tns:Struct" to ('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">('Struct', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;Group:0x4158130 name="Struct" /&gt;</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">AttributeGroup:0x4158f90, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Restriction:0x413ce70, convert ref="xs:base64Binary" to ('base64Binary', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">TypeQuery:0x418f850, found builtin (base64Binary)</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Element:0x4158cb0, convert type="tns:duration" to ('duration', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Extension:0x413c750, convert ref="xs:duration" to ('duration', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">TypeQuery:0x418f7d0, found builtin (duration)</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">AttributeGroup:0x413c930, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Element:0x413c510, convert type="tns:dateTime" to ('dateTime', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Extension:0x413cc10, convert ref="xs:dateTime" to ('dateTime', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">TypeQuery:0x418f790, found builtin (dateTime)</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">AttributeGroup:0x3e0cb50, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Element:0x413cfb0, convert type="tns:NOTATION" to ('NOTATION', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Extension:0x3e0cbb0, convert ref="xs:QName" to ('QName', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">TypeQuery:0x418f930, found builtin (QName)</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">AttributeGroup:0x3e0cc70, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Element:0x413c290, convert type="tns:time" to ('time', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Extension:0x3e0cb10, convert ref="xs:time" to ('time', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">TypeQuery:0x418f9b0, found builtin (time)</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">AttributeGroup:0x3e0cb70, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Element:0x3e0cd90, convert type="tns:date" to ('date', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Extension:0x3e0cc30, convert ref="xs:date" to ('date', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">TypeQuery:0x418f7d0, found builtin (date)</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">AttributeGroup:0x3e0cdb0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Element:0x3e0cc10, convert type="tns:gYearMonth" to ('gYearMonth', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Extension:0x414e430, convert ref="xs:gYearMonth" to ('gYearMonth', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">TypeQuery:0x418f9d0, found builtin (gYearMonth)</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">AttributeGroup:0x414ee10, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Element:0x3e0cb90, convert type="tns:gYear" to ('gYear', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Extension:0x414e150, convert ref="xs:gYear" to ('gYear', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">TypeQuery:0x418f970, found builtin (gYear)</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">AttributeGroup:0x414ea70, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Element:0x414e290, convert type="tns:gMonthDay" to ('gMonthDay', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Extension:0x41576d0, convert ref="xs:gMonthDay" to ('gMonthDay', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">TypeQuery:0x418fa50, found builtin (gMonthDay)</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">AttributeGroup:0x4157050, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Element:0x414e710, convert type="tns:gDay" to ('gDay', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Extension:0x4157bd0, convert ref="xs:gDay" to ('gDay', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">TypeQuery:0x418fa90, found builtin (gDay)</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">AttributeGroup:0x41572b0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Element:0x4157ef0, convert type="tns:gMonth" to ('gMonth', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Extension:0x4157550, convert ref="xs:gMonth" to ('gMonth', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">TypeQuery:0x418f910, found builtin (gMonth)</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">AttributeGroup:0x416e0f0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Element:0x4157870, convert type="tns:boolean" to ('boolean', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Extension:0x416e410, convert ref="xs:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">TypeQuery:0x418fa30, found builtin (boolean)</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">AttributeGroup:0x416e830, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Element:0x416e550, convert type="tns:base64Binary" to ('base64Binary', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Extension:0x416eb50, convert ref="xs:base64Binary" to ('base64Binary', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">TypeQuery:0x418f970, found builtin (base64Binary)</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">AttributeGroup:0x41790f0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Element:0x416ecb0, convert type="tns:hexBinary" to ('hexBinary', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Extension:0x4179310, convert ref="xs:hexBinary" to ('hexBinary', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">TypeQuery:0x418fab0, found builtin (hexBinary)</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">AttributeGroup:0x41796f0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Element:0x416edf0, convert type="tns:float" to ('float', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Extension:0x4179990, convert ref="xs:float" to ('float', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">TypeQuery:0x418f890, found builtin (float)</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">AttributeGroup:0x4179dd0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Element:0x4179bf0, convert type="tns:double" to ('double', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Extension:0x4198cf0, convert ref="xs:double" to ('double', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">TypeQuery:0x418fa30, found builtin (double)</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">AttributeGroup:0x41982b0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Element:0x4179c10, convert type="tns:anyURI" to ('anyURI', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Extension:0x41988f0, convert ref="xs:anyURI" to ('anyURI', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">TypeQuery:0x418fb10, found builtin (anyURI)</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">AttributeGroup:0x4198f50, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Element:0x4198b90, convert type="tns:QName" to ('QName', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Extension:0x418d110, convert ref="xs:QName" to ('QName', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">TypeQuery:0x418f970, found builtin (QName)</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">AttributeGroup:0x418d3f0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Element:0x4198370, convert type="tns:string" to ('string', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Extension:0x418d5d0, convert ref="xs:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">TypeQuery:0x418fad0, found builtin (string)</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">AttributeGroup:0x418d6d0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Element:0x418d670, convert type="tns:normalizedString" to ('normalizedString', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">Extension:0x418d710, convert ref="xs:normalizedString" to ('normalizedString', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">TypeQuery:0x418fb90, found builtin (normalizedString)</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">AttributeGroup:0x418d770, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:57.997" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Element:0x418d730, convert type="tns:token" to ('token', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Extension:0x418d7b0, convert ref="xs:token" to ('token', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">TypeQuery:0x418fc50, found builtin (token)</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">AttributeGroup:0x418d810, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Element:0x418d7d0, convert type="tns:language" to ('language', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Extension:0x418d850, convert ref="xs:language" to ('language', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">TypeQuery:0x418fc90, found builtin (language)</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">AttributeGroup:0x418d8b0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Element:0x418d870, convert type="tns:Name" to ('Name', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Extension:0x418d8f0, convert ref="xs:Name" to ('Name', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">TypeQuery:0x418fa70, found builtin (Name)</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">AttributeGroup:0x418d950, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Element:0x418d910, convert type="tns:NMTOKEN" to ('NMTOKEN', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Extension:0x418d990, convert ref="xs:NMTOKEN" to ('NMTOKEN', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">TypeQuery:0x418fc30, found builtin (NMTOKEN)</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">AttributeGroup:0x418d9f0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Element:0x418d9b0, convert type="tns:NCName" to ('NCName', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Extension:0x418da30, convert ref="xs:NCName" to ('NCName', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">TypeQuery:0x418fcf0, found builtin (NCName)</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">AttributeGroup:0x418da90, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Element:0x418da50, convert type="tns:NMTOKENS" to ('NMTOKENS', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Extension:0x418dad0, convert ref="xs:NMTOKENS" to ('NMTOKENS', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">TypeQuery:0x418fc50, found builtin (NMTOKENS)</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">AttributeGroup:0x418db30, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Element:0x418daf0, convert type="tns:ID" to ('ID', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Extension:0x418db70, convert ref="xs:ID" to ('ID', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">TypeQuery:0x418fd10, found builtin (ID)</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">AttributeGroup:0x418dbd0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Element:0x418db90, convert type="tns:IDREF" to ('IDREF', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Extension:0x418dc10, convert ref="xs:IDREF" to ('IDREF', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">TypeQuery:0x418fcb0, found builtin (IDREF)</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">AttributeGroup:0x418dc70, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Element:0x418dc30, convert type="tns:ENTITY" to ('ENTITY', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Extension:0x418dcb0, convert ref="xs:ENTITY" to ('ENTITY', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">TypeQuery:0x418fcf0, found builtin (ENTITY)</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">AttributeGroup:0x418dd10, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Element:0x418dcd0, convert type="tns:IDREFS" to ('IDREFS', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Extension:0x418dd50, convert ref="xs:IDREFS" to ('IDREFS', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">TypeQuery:0x418fd50, found builtin (IDREFS)</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">AttributeGroup:0x418ddb0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Element:0x418dd70, convert type="tns:ENTITIES" to ('ENTITIES', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Extension:0x418ddf0, convert ref="xs:ENTITIES" to ('ENTITIES', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">TypeQuery:0x418fad0, found builtin (ENTITIES)</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">AttributeGroup:0x418de50, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Element:0x418de10, convert type="tns:decimal" to ('decimal', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Extension:0x418de90, convert ref="xs:decimal" to ('decimal', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">TypeQuery:0x418fd70, found builtin (decimal)</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">AttributeGroup:0x418def0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Element:0x418deb0, convert type="tns:integer" to ('integer', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Extension:0x418df30, convert ref="xs:integer" to ('integer', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">TypeQuery:0x418fe90, found builtin (integer)</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">AttributeGroup:0x418df90, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Element:0x418df50, convert type="tns:nonPositiveInteger" to ('nonPositiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Extension:0x418f030, convert ref="xs:nonPositiveInteger" to ('nonPositiveInteger', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">TypeQuery:0x418fe10, found builtin (nonPositiveInteger)</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">AttributeGroup:0x418f050, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Element:0x418dff0, convert type="tns:negativeInteger" to ('negativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Extension:0x418f090, convert ref="xs:negativeInteger" to ('negativeInteger', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">TypeQuery:0x418fef0, found builtin (negativeInteger)</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">AttributeGroup:0x418f0f0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Element:0x418f0b0, convert type="tns:long" to ('long', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Extension:0x418f130, convert ref="xs:long" to ('long', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">TypeQuery:0x418fed0, found builtin (long)</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">AttributeGroup:0x418f190, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Element:0x418f150, convert type="tns:int" to ('int', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Extension:0x418f1d0, convert ref="xs:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">TypeQuery:0x418fe90, found builtin (int)</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">AttributeGroup:0x418f230, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Element:0x418f1f0, convert type="tns:short" to ('short', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Extension:0x418f270, convert ref="xs:short" to ('short', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">TypeQuery:0x418feb0, found builtin (short)</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">AttributeGroup:0x418f2d0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Element:0x418f290, convert type="tns:byte" to ('byte', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Extension:0x418f310, convert ref="xs:byte" to ('byte', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">TypeQuery:0x418fc70, found builtin (byte)</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">AttributeGroup:0x418f370, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Element:0x418f330, convert type="tns:nonNegativeInteger" to ('nonNegativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Extension:0x418f3b0, convert ref="xs:nonNegativeInteger" to ('nonNegativeInteger', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">TypeQuery:0x418fe50, found builtin (nonNegativeInteger)</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">AttributeGroup:0x418f410, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Element:0x418f3d0, convert type="tns:unsignedLong" to ('unsignedLong', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Extension:0x418f450, convert ref="xs:unsignedLong" to ('unsignedLong', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">TypeQuery:0x418ff70, found builtin (unsignedLong)</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">AttributeGroup:0x418f4b0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Element:0x418f470, convert type="tns:unsignedInt" to ('unsignedInt', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Extension:0x418f4f0, convert ref="xs:unsignedInt" to ('unsignedInt', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">TypeQuery:0x418fe10, found builtin (unsignedInt)</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">AttributeGroup:0x418f550, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Element:0x418f510, convert type="tns:unsignedShort" to ('unsignedShort', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Extension:0x418f590, convert ref="xs:unsignedShort" to ('unsignedShort', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">TypeQuery:0x418fe30, found builtin (unsignedShort)</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">AttributeGroup:0x418f5f0, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Element:0x418f5b0, convert type="tns:unsignedByte" to ('unsignedByte', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Extension:0x418f630, convert ref="xs:unsignedByte" to ('unsignedByte', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">TypeQuery:0x418ff30, found builtin (unsignedByte)</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">AttributeGroup:0x418f690, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Element:0x418f650, convert type="tns:positiveInteger" to ('positiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Extension:0x418f6d0, convert ref="xs:positiveInteger" to ('positiveInteger', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">TypeQuery:0x418ff50, found builtin (positiveInteger)</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">AttributeGroup:0x418f730, convert ref="tns:commonAttributes" to ('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">Element:0x418f6f0, convert type="xs:anyType" to ('anyType', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;Attribute:0x4123130 ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;Attribute:0x4152950 name="arrayType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;Attribute:0x4123730 ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;Attribute:0x4152d50 name="offset" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;Attribute:0x4123870 ref="('position', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;Attribute:0x41234d0 name="position" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;Group:0x4158910 ref="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;Group:0x4123b90 name="Array" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41582d0 ref="('arrayAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x41232b0 name="arrayAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x4158410 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;Group:0x4158b10 ref="('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;Group:0x4158130 name="Struct" /&gt;</msg>
<msg timestamp="20191101 15:55:58.013" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x4158f90 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x413c930 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x3e0cb50 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x3e0cc70 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x3e0cb70 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x3e0cdb0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x414ee10 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x414ea70 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x4157050 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41572b0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x416e0f0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x416e830 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41790f0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41796f0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x4179dd0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x41982b0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x4198f50 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x418d3f0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x418d6d0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x418d770 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x418d810 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x418d8b0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x418d950 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x418d9f0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x418da90 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x418db30 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x418dbd0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x418dc70 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x418dd10 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x418ddb0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x418de50 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x418def0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x418df90 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x418f050 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x418f0f0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x418f190 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x418f230 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x418f2d0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x418f370 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x418f410 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x418f4b0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x418f550 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x418f5f0 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x418f690 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">(http://schemas.xmlsoap.org/soap/encoding/) merging &lt;AttributeGroup:0x418f730 ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;AttributeGroup:0x4152810 name="commonAttributes" /&gt;</msg>
<msg timestamp="20191101 15:55:58.028" level="DEBUG">dereferenced:
Schema:0x4152290
(raw)
   &lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.xmlsoap.org/soap/encoding/" targetNamespace="http://schemas.xmlsoap.org/soap/encoding/" url="suds://schemas.xmlsoap.org/soap/encoding/"&gt;
      &lt;xs:attribute name="root"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;root&amp;apos; can be used to distinguish serialization roots from other
       elements that are present in a serialization but are not roots of
       a serialized value graph
     &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:simpleType&gt;
            &lt;xs:restriction base="xs:boolean"&gt;
               &lt;xs:pattern value="0|1"/&gt;
            &lt;/xs:restriction&gt;
         &lt;/xs:simpleType&gt;
      &lt;/xs:attribute&gt;
      &lt;xs:attributeGroup name="commonAttributes"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
        Attributes common to all elements that function as accessors or
        represent independent (multi-ref) values.  The href attribute is
        intended to be used in a manner like CONREF.  That is, the element
        content should be empty iff the href attribute appears
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:attribute name="id" type="xs:ID"/&gt;
         &lt;xs:attribute name="href" type="xs:anyURI"/&gt;
         &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:simpleType name="arrayCoordinate"&gt;
         &lt;xs:restriction base="xs:string"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:attribute name="arrayType" type="xs:string"/&gt;
      &lt;xs:attribute name="offset" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayAttributes"&gt;
         &lt;xs:attribute ref="tns:arrayType"/&gt;
         &lt;xs:attribute ref="tns:offset"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:attribute name="position" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayMemberAttributes"&gt;
         &lt;xs:attribute ref="tns:position"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:group name="Array"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:element name="Array" type="tns:Array"/&gt;
      &lt;xs:complexType name="Array"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;Array&amp;apos; is a complex type for accessors identified by position
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:group ref="tns:Array" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:arrayAttributes"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Struct" type="tns:Struct"/&gt;
      &lt;xs:group name="Struct"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:complexType name="Struct"&gt;
         &lt;xs:group ref="tns:Struct" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:simpleType name="base64"&gt;
         &lt;xs:restriction base="xs:base64Binary"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:element name="duration" type="tns:duration"/&gt;
      &lt;xs:complexType name="duration"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:duration"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="dateTime" type="tns:dateTime"/&gt;
      &lt;xs:complexType name="dateTime"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:dateTime"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NOTATION" type="tns:NOTATION"/&gt;
      &lt;xs:complexType name="NOTATION"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="time" type="tns:time"/&gt;
      &lt;xs:complexType name="time"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:time"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="date" type="tns:date"/&gt;
      &lt;xs:complexType name="date"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:date"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYearMonth" type="tns:gYearMonth"/&gt;
      &lt;xs:complexType name="gYearMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYearMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYear" type="tns:gYear"/&gt;
      &lt;xs:complexType name="gYear"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYear"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonthDay" type="tns:gMonthDay"/&gt;
      &lt;xs:complexType name="gMonthDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonthDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gDay" type="tns:gDay"/&gt;
      &lt;xs:complexType name="gDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonth" type="tns:gMonth"/&gt;
      &lt;xs:complexType name="gMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="boolean" type="tns:boolean"/&gt;
      &lt;xs:complexType name="boolean"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:boolean"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="base64Binary" type="tns:base64Binary"/&gt;
      &lt;xs:complexType name="base64Binary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:base64Binary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="hexBinary" type="tns:hexBinary"/&gt;
      &lt;xs:complexType name="hexBinary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:hexBinary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="float" type="tns:float"/&gt;
      &lt;xs:complexType name="float"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:float"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="double" type="tns:double"/&gt;
      &lt;xs:complexType name="double"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:double"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyURI" type="tns:anyURI"/&gt;
      &lt;xs:complexType name="anyURI"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:anyURI"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="QName" type="tns:QName"/&gt;
      &lt;xs:complexType name="QName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="string" type="tns:string"/&gt;
      &lt;xs:complexType name="string"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:string"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="normalizedString" type="tns:normalizedString"/&gt;
      &lt;xs:complexType name="normalizedString"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:normalizedString"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="token" type="tns:token"/&gt;
      &lt;xs:complexType name="token"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:token"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="language" type="tns:language"/&gt;
      &lt;xs:complexType name="language"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:language"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Name" type="tns:Name"/&gt;
      &lt;xs:complexType name="Name"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:Name"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKEN" type="tns:NMTOKEN"/&gt;
      &lt;xs:complexType name="NMTOKEN"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKEN"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NCName" type="tns:NCName"/&gt;
      &lt;xs:complexType name="NCName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NCName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKENS" type="tns:NMTOKENS"/&gt;
      &lt;xs:complexType name="NMTOKENS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKENS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ID" type="tns:ID"/&gt;
      &lt;xs:complexType name="ID"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ID"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREF" type="tns:IDREF"/&gt;
      &lt;xs:complexType name="IDREF"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREF"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITY" type="tns:ENTITY"/&gt;
      &lt;xs:complexType name="ENTITY"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITY"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREFS" type="tns:IDREFS"/&gt;
      &lt;xs:complexType name="IDREFS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREFS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITIES" type="tns:ENTITIES"/&gt;
      &lt;xs:complexType name="ENTITIES"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITIES"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="decimal" type="tns:decimal"/&gt;
      &lt;xs:complexType name="decimal"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:decimal"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="integer" type="tns:integer"/&gt;
      &lt;xs:complexType name="integer"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:integer"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonPositiveInteger" type="tns:nonPositiveInteger"/&gt;
      &lt;xs:complexType name="nonPositiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonPositiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="negativeInteger" type="tns:negativeInteger"/&gt;
      &lt;xs:complexType name="negativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:negativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="long" type="tns:long"/&gt;
      &lt;xs:complexType name="long"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:long"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="int" type="tns:int"/&gt;
      &lt;xs:complexType name="int"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:int"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="short" type="tns:short"/&gt;
      &lt;xs:complexType name="short"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:short"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="byte" type="tns:byte"/&gt;
      &lt;xs:complexType name="byte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:byte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonNegativeInteger" type="tns:nonNegativeInteger"/&gt;
      &lt;xs:complexType name="nonNegativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonNegativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedLong" type="tns:unsignedLong"/&gt;
      &lt;xs:complexType name="unsignedLong"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedLong"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedInt" type="tns:unsignedInt"/&gt;
      &lt;xs:complexType name="unsignedInt"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedInt"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedShort" type="tns:unsignedShort"/&gt;
      &lt;xs:complexType name="unsignedShort"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedShort"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedByte" type="tns:unsignedByte"/&gt;
      &lt;xs:complexType name="unsignedByte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedByte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="positiveInteger" type="tns:positiveInteger"/&gt;
      &lt;xs:complexType name="positiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:positiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyType"/&gt;
   &lt;/xs:schema&gt;
(model)
   &lt;Attribute:0x41520d0 name="root" /&gt;
   &lt;AttributeGroup:0x4152810 name="commonAttributes"&gt;
      &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Simple:0x4152870 name="arrayCoordinate" /&gt;
   &lt;Attribute:0x4152950 name="arrayType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;Attribute:0x4152d50 name="offset" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;AttributeGroup:0x41232b0 name="arrayAttributes"&gt;
      &lt;Attribute:0x4123130 name="arrayType" ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;Attribute:0x4123730 name="offset" ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Attribute:0x41234d0 name="position" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;AttributeGroup:0x41235d0 name="arrayMemberAttributes"&gt;
      &lt;Attribute:0x4123870 name="position" ref="('position', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Group:0x4123b90 name="Array"&gt;
      &lt;Sequence:0x4123e30&gt;
         &lt;Any:0x4123cf0 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Element:0x4152f70 name="Array" type="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4123f90 name="Array"&gt;
      &lt;Group:0x4158910 name="Array" ref="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Sequence:0x4123e30&gt;
            &lt;Any:0x4123cf0 /&gt;
         &lt;/Sequence&gt;
      &lt;/Group&gt;
      &lt;AttributeGroup:0x41582d0 name="arrayAttributes" ref="('arrayAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x4123130 name="arrayType" ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x4123730 name="offset" ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
      &lt;/AttributeGroup&gt;
      &lt;AttributeGroup:0x4158410 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;/AttributeGroup&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4123a90 name="Struct" type="('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Group:0x4158130 name="Struct"&gt;
      &lt;Sequence:0x4158630&gt;
         &lt;Any:0x4158a10 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Complex:0x4158730 name="Struct"&gt;
      &lt;Group:0x4158b10 name="Struct" ref="('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Sequence:0x4158630&gt;
            &lt;Any:0x4158a10 /&gt;
         &lt;/Sequence&gt;
      &lt;/Group&gt;
      &lt;AttributeGroup:0x4158f90 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;/AttributeGroup&gt;
   &lt;/Complex&gt;
   &lt;Simple:0x4158e50 name="base64" /&gt;
   &lt;Element:0x4158cb0 name="duration" type="('duration', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x413cd10 name="duration"&gt;
      &lt;SimpleContent:0x413c110&gt;
         &lt;Extension:0x413c750 ref="('duration', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x413c930 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x413c510 name="dateTime" type="('dateTime', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x413ca30 name="dateTime"&gt;
      &lt;SimpleContent:0x413c670&gt;
         &lt;Extension:0x413cc10 ref="('dateTime', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e0cb50 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x413cfb0 name="NOTATION" type="('NOTATION', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x413c4b0 name="NOTATION"&gt;
      &lt;SimpleContent:0x3e0ce90&gt;
         &lt;Extension:0x3e0cbb0 ref="('QName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e0cc70 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x413c290 name="time" type="('time', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e0ceb0 name="time"&gt;
      &lt;SimpleContent:0x3e0cc90&gt;
         &lt;Extension:0x3e0cb10 ref="('time', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e0cb70 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e0cd90 name="date" type="('date', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e0caf0 name="date"&gt;
      &lt;SimpleContent:0x3e0cbd0&gt;
         &lt;Extension:0x3e0cc30 ref="('date', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e0cdb0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e0cc10 name="gYearMonth" type="('gYearMonth', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e0cf70 name="gYearMonth"&gt;
      &lt;SimpleContent:0x3e0cbf0&gt;
         &lt;Extension:0x414e430 ref="('gYearMonth', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x414ee10 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e0cb90 name="gYear" type="('gYear', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x414e850 name="gYear"&gt;
      &lt;SimpleContent:0x414ecd0&gt;
         &lt;Extension:0x414e150 ref="('gYear', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x414ea70 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x414e290 name="gMonthDay" type="('gMonthDay', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x414eb70 name="gMonthDay"&gt;
      &lt;SimpleContent:0x414e570&gt;
         &lt;Extension:0x41576d0 ref="('gMonthDay', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x4157050 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x414e710 name="gDay" type="('gDay', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4157150 name="gDay"&gt;
      &lt;SimpleContent:0x41579b0&gt;
         &lt;Extension:0x4157bd0 ref="('gDay', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41572b0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4157ef0 name="gMonth" type="('gMonth', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41573f0 name="gMonth"&gt;
      &lt;SimpleContent:0x4157cd0&gt;
         &lt;Extension:0x4157550 ref="('gMonth', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x416e0f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4157870 name="boolean" type="('boolean', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4157f10 name="boolean"&gt;
      &lt;SimpleContent:0x416e270&gt;
         &lt;Extension:0x416e410 ref="('boolean', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x416e830 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x416e550 name="base64Binary" type="('base64Binary', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x416ea50 name="base64Binary"&gt;
      &lt;SimpleContent:0x416e6f0&gt;
         &lt;Extension:0x416eb50 ref="('base64Binary', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41790f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x416ecb0 name="hexBinary" type="('hexBinary', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x416ef90 name="hexBinary"&gt;
      &lt;SimpleContent:0x4179410&gt;
         &lt;Extension:0x4179310 ref="('hexBinary', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41796f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x416edf0 name="float" type="('float', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4179850 name="float"&gt;
      &lt;SimpleContent:0x41795f0&gt;
         &lt;Extension:0x4179990 ref="('float', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x4179dd0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4179bf0 name="double" type="('double', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4179f50 name="double"&gt;
      &lt;SimpleContent:0x4198870&gt;
         &lt;Extension:0x4198cf0 ref="('double', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41982b0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4179c10 name="anyURI" type="('anyURI', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4198250 name="anyURI"&gt;
      &lt;SimpleContent:0x4198030&gt;
         &lt;Extension:0x41988f0 ref="('anyURI', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x4198f50 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4198b90 name="QName" type="('QName', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4198950 name="QName"&gt;
      &lt;SimpleContent:0x4198df0&gt;
         &lt;Extension:0x418d110 ref="('QName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418d3f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4198370 name="string" type="('string', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418d550 name="string"&gt;
      &lt;SimpleContent:0x418d2f0&gt;
         &lt;Extension:0x418d5d0 ref="('string', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418d6d0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418d670 name="normalizedString" type="('normalizedString', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418d6f0 name="normalizedString"&gt;
      &lt;SimpleContent:0x418d6b0&gt;
         &lt;Extension:0x418d710 ref="('normalizedString', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418d770 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418d730 name="token" type="('token', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418d790 name="token"&gt;
      &lt;SimpleContent:0x418d750&gt;
         &lt;Extension:0x418d7b0 ref="('token', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418d810 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418d7d0 name="language" type="('language', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418d830 name="language"&gt;
      &lt;SimpleContent:0x418d7f0&gt;
         &lt;Extension:0x418d850 ref="('language', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418d8b0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418d870 name="Name" type="('Name', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418d8d0 name="Name"&gt;
      &lt;SimpleContent:0x418d890&gt;
         &lt;Extension:0x418d8f0 ref="('Name', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418d950 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418d910 name="NMTOKEN" type="('NMTOKEN', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418d970 name="NMTOKEN"&gt;
      &lt;SimpleContent:0x418d930&gt;
         &lt;Extension:0x418d990 ref="('NMTOKEN', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418d9f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418d9b0 name="NCName" type="('NCName', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418da10 name="NCName"&gt;
      &lt;SimpleContent:0x418d9d0&gt;
         &lt;Extension:0x418da30 ref="('NCName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418da90 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418da50 name="NMTOKENS" type="('NMTOKENS', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418dab0 name="NMTOKENS"&gt;
      &lt;SimpleContent:0x418da70&gt;
         &lt;Extension:0x418dad0 ref="('NMTOKENS', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418db30 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418daf0 name="ID" type="('ID', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418db50 name="ID"&gt;
      &lt;SimpleContent:0x418db10&gt;
         &lt;Extension:0x418db70 ref="('ID', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418dbd0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418db90 name="IDREF" type="('IDREF', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418dbf0 name="IDREF"&gt;
      &lt;SimpleContent:0x418dbb0&gt;
         &lt;Extension:0x418dc10 ref="('IDREF', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418dc70 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418dc30 name="ENTITY" type="('ENTITY', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418dc90 name="ENTITY"&gt;
      &lt;SimpleContent:0x418dc50&gt;
         &lt;Extension:0x418dcb0 ref="('ENTITY', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418dd10 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418dcd0 name="IDREFS" type="('IDREFS', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418dd30 name="IDREFS"&gt;
      &lt;SimpleContent:0x418dcf0&gt;
         &lt;Extension:0x418dd50 ref="('IDREFS', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418ddb0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418dd70 name="ENTITIES" type="('ENTITIES', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418ddd0 name="ENTITIES"&gt;
      &lt;SimpleContent:0x418dd90&gt;
         &lt;Extension:0x418ddf0 ref="('ENTITIES', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418de50 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418de10 name="decimal" type="('decimal', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418de70 name="decimal"&gt;
      &lt;SimpleContent:0x418de30&gt;
         &lt;Extension:0x418de90 ref="('decimal', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418def0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418deb0 name="integer" type="('integer', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418df10 name="integer"&gt;
      &lt;SimpleContent:0x418ded0&gt;
         &lt;Extension:0x418df30 ref="('integer', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418df90 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418df50 name="nonPositiveInteger" type="('nonPositiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418dfb0 name="nonPositiveInteger"&gt;
      &lt;SimpleContent:0x418df70&gt;
         &lt;Extension:0x418f030 ref="('nonPositiveInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f050 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418dff0 name="negativeInteger" type="('negativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418dfd0 name="negativeInteger"&gt;
      &lt;SimpleContent:0x418f070&gt;
         &lt;Extension:0x418f090 ref="('negativeInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f0f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f0b0 name="long" type="('long', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418f110 name="long"&gt;
      &lt;SimpleContent:0x418f0d0&gt;
         &lt;Extension:0x418f130 ref="('long', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f190 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f150 name="int" type="('int', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418f1b0 name="int"&gt;
      &lt;SimpleContent:0x418f170&gt;
         &lt;Extension:0x418f1d0 ref="('int', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f230 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f1f0 name="short" type="('short', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418f250 name="short"&gt;
      &lt;SimpleContent:0x418f210&gt;
         &lt;Extension:0x418f270 ref="('short', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f2d0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f290 name="byte" type="('byte', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418f2f0 name="byte"&gt;
      &lt;SimpleContent:0x418f2b0&gt;
         &lt;Extension:0x418f310 ref="('byte', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f370 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f330 name="nonNegativeInteger" type="('nonNegativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418f390 name="nonNegativeInteger"&gt;
      &lt;SimpleContent:0x418f350&gt;
         &lt;Extension:0x418f3b0 ref="('nonNegativeInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f410 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f3d0 name="unsignedLong" type="('unsignedLong', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418f430 name="unsignedLong"&gt;
      &lt;SimpleContent:0x418f3f0&gt;
         &lt;Extension:0x418f450 ref="('unsignedLong', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f4b0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f470 name="unsignedInt" type="('unsignedInt', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418f4d0 name="unsignedInt"&gt;
      &lt;SimpleContent:0x418f490&gt;
         &lt;Extension:0x418f4f0 ref="('unsignedInt', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f550 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f510 name="unsignedShort" type="('unsignedShort', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418f570 name="unsignedShort"&gt;
      &lt;SimpleContent:0x418f530&gt;
         &lt;Extension:0x418f590 ref="('unsignedShort', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f5f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f5b0 name="unsignedByte" type="('unsignedByte', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418f610 name="unsignedByte"&gt;
      &lt;SimpleContent:0x418f5d0&gt;
         &lt;Extension:0x418f630 ref="('unsignedByte', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f690 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f650 name="positiveInteger" type="('positiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418f6b0 name="positiveInteger"&gt;
      &lt;SimpleContent:0x418f670&gt;
         &lt;Extension:0x418f6d0 ref="('positiveInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f730 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f6f0 name="anyType" type="('anyType', 'http://www.w3.org/2001/XMLSchema')" /&gt;
</msg>
<msg timestamp="20191101 15:55:58.044" level="DEBUG">imported:
Schema:0x4152290
(raw)
   &lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.xmlsoap.org/soap/encoding/" targetNamespace="http://schemas.xmlsoap.org/soap/encoding/" url="suds://schemas.xmlsoap.org/soap/encoding/"&gt;
      &lt;xs:attribute name="root"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;root&amp;apos; can be used to distinguish serialization roots from other
       elements that are present in a serialization but are not roots of
       a serialized value graph
     &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:simpleType&gt;
            &lt;xs:restriction base="xs:boolean"&gt;
               &lt;xs:pattern value="0|1"/&gt;
            &lt;/xs:restriction&gt;
         &lt;/xs:simpleType&gt;
      &lt;/xs:attribute&gt;
      &lt;xs:attributeGroup name="commonAttributes"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
        Attributes common to all elements that function as accessors or
        represent independent (multi-ref) values.  The href attribute is
        intended to be used in a manner like CONREF.  That is, the element
        content should be empty iff the href attribute appears
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:attribute name="id" type="xs:ID"/&gt;
         &lt;xs:attribute name="href" type="xs:anyURI"/&gt;
         &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:simpleType name="arrayCoordinate"&gt;
         &lt;xs:restriction base="xs:string"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:attribute name="arrayType" type="xs:string"/&gt;
      &lt;xs:attribute name="offset" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayAttributes"&gt;
         &lt;xs:attribute ref="tns:arrayType"/&gt;
         &lt;xs:attribute ref="tns:offset"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:attribute name="position" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayMemberAttributes"&gt;
         &lt;xs:attribute ref="tns:position"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:group name="Array"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:element name="Array" type="tns:Array"/&gt;
      &lt;xs:complexType name="Array"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;Array&amp;apos; is a complex type for accessors identified by position
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:group ref="tns:Array" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:arrayAttributes"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Struct" type="tns:Struct"/&gt;
      &lt;xs:group name="Struct"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:complexType name="Struct"&gt;
         &lt;xs:group ref="tns:Struct" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:simpleType name="base64"&gt;
         &lt;xs:restriction base="xs:base64Binary"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:element name="duration" type="tns:duration"/&gt;
      &lt;xs:complexType name="duration"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:duration"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="dateTime" type="tns:dateTime"/&gt;
      &lt;xs:complexType name="dateTime"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:dateTime"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NOTATION" type="tns:NOTATION"/&gt;
      &lt;xs:complexType name="NOTATION"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="time" type="tns:time"/&gt;
      &lt;xs:complexType name="time"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:time"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="date" type="tns:date"/&gt;
      &lt;xs:complexType name="date"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:date"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYearMonth" type="tns:gYearMonth"/&gt;
      &lt;xs:complexType name="gYearMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYearMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYear" type="tns:gYear"/&gt;
      &lt;xs:complexType name="gYear"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYear"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonthDay" type="tns:gMonthDay"/&gt;
      &lt;xs:complexType name="gMonthDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonthDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gDay" type="tns:gDay"/&gt;
      &lt;xs:complexType name="gDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonth" type="tns:gMonth"/&gt;
      &lt;xs:complexType name="gMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="boolean" type="tns:boolean"/&gt;
      &lt;xs:complexType name="boolean"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:boolean"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="base64Binary" type="tns:base64Binary"/&gt;
      &lt;xs:complexType name="base64Binary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:base64Binary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="hexBinary" type="tns:hexBinary"/&gt;
      &lt;xs:complexType name="hexBinary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:hexBinary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="float" type="tns:float"/&gt;
      &lt;xs:complexType name="float"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:float"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="double" type="tns:double"/&gt;
      &lt;xs:complexType name="double"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:double"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyURI" type="tns:anyURI"/&gt;
      &lt;xs:complexType name="anyURI"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:anyURI"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="QName" type="tns:QName"/&gt;
      &lt;xs:complexType name="QName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="string" type="tns:string"/&gt;
      &lt;xs:complexType name="string"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:string"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="normalizedString" type="tns:normalizedString"/&gt;
      &lt;xs:complexType name="normalizedString"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:normalizedString"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="token" type="tns:token"/&gt;
      &lt;xs:complexType name="token"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:token"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="language" type="tns:language"/&gt;
      &lt;xs:complexType name="language"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:language"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Name" type="tns:Name"/&gt;
      &lt;xs:complexType name="Name"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:Name"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKEN" type="tns:NMTOKEN"/&gt;
      &lt;xs:complexType name="NMTOKEN"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKEN"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NCName" type="tns:NCName"/&gt;
      &lt;xs:complexType name="NCName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NCName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKENS" type="tns:NMTOKENS"/&gt;
      &lt;xs:complexType name="NMTOKENS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKENS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ID" type="tns:ID"/&gt;
      &lt;xs:complexType name="ID"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ID"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREF" type="tns:IDREF"/&gt;
      &lt;xs:complexType name="IDREF"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREF"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITY" type="tns:ENTITY"/&gt;
      &lt;xs:complexType name="ENTITY"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITY"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREFS" type="tns:IDREFS"/&gt;
      &lt;xs:complexType name="IDREFS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREFS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITIES" type="tns:ENTITIES"/&gt;
      &lt;xs:complexType name="ENTITIES"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITIES"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="decimal" type="tns:decimal"/&gt;
      &lt;xs:complexType name="decimal"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:decimal"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="integer" type="tns:integer"/&gt;
      &lt;xs:complexType name="integer"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:integer"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonPositiveInteger" type="tns:nonPositiveInteger"/&gt;
      &lt;xs:complexType name="nonPositiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonPositiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="negativeInteger" type="tns:negativeInteger"/&gt;
      &lt;xs:complexType name="negativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:negativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="long" type="tns:long"/&gt;
      &lt;xs:complexType name="long"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:long"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="int" type="tns:int"/&gt;
      &lt;xs:complexType name="int"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:int"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="short" type="tns:short"/&gt;
      &lt;xs:complexType name="short"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:short"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="byte" type="tns:byte"/&gt;
      &lt;xs:complexType name="byte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:byte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonNegativeInteger" type="tns:nonNegativeInteger"/&gt;
      &lt;xs:complexType name="nonNegativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonNegativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedLong" type="tns:unsignedLong"/&gt;
      &lt;xs:complexType name="unsignedLong"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedLong"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedInt" type="tns:unsignedInt"/&gt;
      &lt;xs:complexType name="unsignedInt"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedInt"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedShort" type="tns:unsignedShort"/&gt;
      &lt;xs:complexType name="unsignedShort"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedShort"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedByte" type="tns:unsignedByte"/&gt;
      &lt;xs:complexType name="unsignedByte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedByte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="positiveInteger" type="tns:positiveInteger"/&gt;
      &lt;xs:complexType name="positiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:positiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyType"/&gt;
   &lt;/xs:schema&gt;
(model)
   &lt;Attribute:0x41520d0 name="root" /&gt;
   &lt;AttributeGroup:0x4152810 name="commonAttributes"&gt;
      &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Simple:0x4152870 name="arrayCoordinate" /&gt;
   &lt;Attribute:0x4152950 name="arrayType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;Attribute:0x4152d50 name="offset" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;AttributeGroup:0x41232b0 name="arrayAttributes"&gt;
      &lt;Attribute:0x4123130 name="arrayType" ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;Attribute:0x4123730 name="offset" ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Attribute:0x41234d0 name="position" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;AttributeGroup:0x41235d0 name="arrayMemberAttributes"&gt;
      &lt;Attribute:0x4123870 name="position" ref="('position', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Group:0x4123b90 name="Array"&gt;
      &lt;Sequence:0x4123e30&gt;
         &lt;Any:0x4123cf0 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Element:0x4152f70 name="Array" type="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4123f90 name="Array"&gt;
      &lt;Group:0x4158910 name="Array" ref="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Sequence:0x4123e30&gt;
            &lt;Any:0x4123cf0 /&gt;
         &lt;/Sequence&gt;
      &lt;/Group&gt;
      &lt;AttributeGroup:0x41582d0 name="arrayAttributes" ref="('arrayAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x4123130 name="arrayType" ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x4123730 name="offset" ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
      &lt;/AttributeGroup&gt;
      &lt;AttributeGroup:0x4158410 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;/AttributeGroup&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4123a90 name="Struct" type="('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Group:0x4158130 name="Struct"&gt;
      &lt;Sequence:0x4158630&gt;
         &lt;Any:0x4158a10 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Complex:0x4158730 name="Struct"&gt;
      &lt;Group:0x4158b10 name="Struct" ref="('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Sequence:0x4158630&gt;
            &lt;Any:0x4158a10 /&gt;
         &lt;/Sequence&gt;
      &lt;/Group&gt;
      &lt;AttributeGroup:0x4158f90 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;/AttributeGroup&gt;
   &lt;/Complex&gt;
   &lt;Simple:0x4158e50 name="base64" /&gt;
   &lt;Element:0x4158cb0 name="duration" type="('duration', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x413cd10 name="duration"&gt;
      &lt;SimpleContent:0x413c110&gt;
         &lt;Extension:0x413c750 ref="('duration', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x413c930 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x413c510 name="dateTime" type="('dateTime', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x413ca30 name="dateTime"&gt;
      &lt;SimpleContent:0x413c670&gt;
         &lt;Extension:0x413cc10 ref="('dateTime', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e0cb50 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x413cfb0 name="NOTATION" type="('NOTATION', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x413c4b0 name="NOTATION"&gt;
      &lt;SimpleContent:0x3e0ce90&gt;
         &lt;Extension:0x3e0cbb0 ref="('QName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e0cc70 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x413c290 name="time" type="('time', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e0ceb0 name="time"&gt;
      &lt;SimpleContent:0x3e0cc90&gt;
         &lt;Extension:0x3e0cb10 ref="('time', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e0cb70 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e0cd90 name="date" type="('date', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e0caf0 name="date"&gt;
      &lt;SimpleContent:0x3e0cbd0&gt;
         &lt;Extension:0x3e0cc30 ref="('date', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e0cdb0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e0cc10 name="gYearMonth" type="('gYearMonth', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e0cf70 name="gYearMonth"&gt;
      &lt;SimpleContent:0x3e0cbf0&gt;
         &lt;Extension:0x414e430 ref="('gYearMonth', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x414ee10 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e0cb90 name="gYear" type="('gYear', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x414e850 name="gYear"&gt;
      &lt;SimpleContent:0x414ecd0&gt;
         &lt;Extension:0x414e150 ref="('gYear', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x414ea70 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x414e290 name="gMonthDay" type="('gMonthDay', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x414eb70 name="gMonthDay"&gt;
      &lt;SimpleContent:0x414e570&gt;
         &lt;Extension:0x41576d0 ref="('gMonthDay', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x4157050 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x414e710 name="gDay" type="('gDay', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4157150 name="gDay"&gt;
      &lt;SimpleContent:0x41579b0&gt;
         &lt;Extension:0x4157bd0 ref="('gDay', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41572b0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4157ef0 name="gMonth" type="('gMonth', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41573f0 name="gMonth"&gt;
      &lt;SimpleContent:0x4157cd0&gt;
         &lt;Extension:0x4157550 ref="('gMonth', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x416e0f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4157870 name="boolean" type="('boolean', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4157f10 name="boolean"&gt;
      &lt;SimpleContent:0x416e270&gt;
         &lt;Extension:0x416e410 ref="('boolean', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x416e830 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x416e550 name="base64Binary" type="('base64Binary', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x416ea50 name="base64Binary"&gt;
      &lt;SimpleContent:0x416e6f0&gt;
         &lt;Extension:0x416eb50 ref="('base64Binary', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41790f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x416ecb0 name="hexBinary" type="('hexBinary', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x416ef90 name="hexBinary"&gt;
      &lt;SimpleContent:0x4179410&gt;
         &lt;Extension:0x4179310 ref="('hexBinary', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41796f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x416edf0 name="float" type="('float', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4179850 name="float"&gt;
      &lt;SimpleContent:0x41795f0&gt;
         &lt;Extension:0x4179990 ref="('float', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x4179dd0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4179bf0 name="double" type="('double', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4179f50 name="double"&gt;
      &lt;SimpleContent:0x4198870&gt;
         &lt;Extension:0x4198cf0 ref="('double', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41982b0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4179c10 name="anyURI" type="('anyURI', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4198250 name="anyURI"&gt;
      &lt;SimpleContent:0x4198030&gt;
         &lt;Extension:0x41988f0 ref="('anyURI', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x4198f50 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4198b90 name="QName" type="('QName', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4198950 name="QName"&gt;
      &lt;SimpleContent:0x4198df0&gt;
         &lt;Extension:0x418d110 ref="('QName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418d3f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4198370 name="string" type="('string', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418d550 name="string"&gt;
      &lt;SimpleContent:0x418d2f0&gt;
         &lt;Extension:0x418d5d0 ref="('string', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418d6d0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418d670 name="normalizedString" type="('normalizedString', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418d6f0 name="normalizedString"&gt;
      &lt;SimpleContent:0x418d6b0&gt;
         &lt;Extension:0x418d710 ref="('normalizedString', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418d770 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418d730 name="token" type="('token', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418d790 name="token"&gt;
      &lt;SimpleContent:0x418d750&gt;
         &lt;Extension:0x418d7b0 ref="('token', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418d810 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418d7d0 name="language" type="('language', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418d830 name="language"&gt;
      &lt;SimpleContent:0x418d7f0&gt;
         &lt;Extension:0x418d850 ref="('language', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418d8b0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418d870 name="Name" type="('Name', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418d8d0 name="Name"&gt;
      &lt;SimpleContent:0x418d890&gt;
         &lt;Extension:0x418d8f0 ref="('Name', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418d950 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418d910 name="NMTOKEN" type="('NMTOKEN', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418d970 name="NMTOKEN"&gt;
      &lt;SimpleContent:0x418d930&gt;
         &lt;Extension:0x418d990 ref="('NMTOKEN', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418d9f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418d9b0 name="NCName" type="('NCName', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418da10 name="NCName"&gt;
      &lt;SimpleContent:0x418d9d0&gt;
         &lt;Extension:0x418da30 ref="('NCName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418da90 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418da50 name="NMTOKENS" type="('NMTOKENS', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418dab0 name="NMTOKENS"&gt;
      &lt;SimpleContent:0x418da70&gt;
         &lt;Extension:0x418dad0 ref="('NMTOKENS', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418db30 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418daf0 name="ID" type="('ID', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418db50 name="ID"&gt;
      &lt;SimpleContent:0x418db10&gt;
         &lt;Extension:0x418db70 ref="('ID', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418dbd0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418db90 name="IDREF" type="('IDREF', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418dbf0 name="IDREF"&gt;
      &lt;SimpleContent:0x418dbb0&gt;
         &lt;Extension:0x418dc10 ref="('IDREF', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418dc70 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418dc30 name="ENTITY" type="('ENTITY', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418dc90 name="ENTITY"&gt;
      &lt;SimpleContent:0x418dc50&gt;
         &lt;Extension:0x418dcb0 ref="('ENTITY', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418dd10 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418dcd0 name="IDREFS" type="('IDREFS', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418dd30 name="IDREFS"&gt;
      &lt;SimpleContent:0x418dcf0&gt;
         &lt;Extension:0x418dd50 ref="('IDREFS', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418ddb0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418dd70 name="ENTITIES" type="('ENTITIES', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418ddd0 name="ENTITIES"&gt;
      &lt;SimpleContent:0x418dd90&gt;
         &lt;Extension:0x418ddf0 ref="('ENTITIES', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418de50 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418de10 name="decimal" type="('decimal', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418de70 name="decimal"&gt;
      &lt;SimpleContent:0x418de30&gt;
         &lt;Extension:0x418de90 ref="('decimal', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418def0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418deb0 name="integer" type="('integer', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418df10 name="integer"&gt;
      &lt;SimpleContent:0x418ded0&gt;
         &lt;Extension:0x418df30 ref="('integer', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418df90 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418df50 name="nonPositiveInteger" type="('nonPositiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418dfb0 name="nonPositiveInteger"&gt;
      &lt;SimpleContent:0x418df70&gt;
         &lt;Extension:0x418f030 ref="('nonPositiveInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f050 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418dff0 name="negativeInteger" type="('negativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418dfd0 name="negativeInteger"&gt;
      &lt;SimpleContent:0x418f070&gt;
         &lt;Extension:0x418f090 ref="('negativeInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f0f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f0b0 name="long" type="('long', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418f110 name="long"&gt;
      &lt;SimpleContent:0x418f0d0&gt;
         &lt;Extension:0x418f130 ref="('long', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f190 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f150 name="int" type="('int', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418f1b0 name="int"&gt;
      &lt;SimpleContent:0x418f170&gt;
         &lt;Extension:0x418f1d0 ref="('int', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f230 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f1f0 name="short" type="('short', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418f250 name="short"&gt;
      &lt;SimpleContent:0x418f210&gt;
         &lt;Extension:0x418f270 ref="('short', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f2d0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f290 name="byte" type="('byte', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418f2f0 name="byte"&gt;
      &lt;SimpleContent:0x418f2b0&gt;
         &lt;Extension:0x418f310 ref="('byte', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f370 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f330 name="nonNegativeInteger" type="('nonNegativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418f390 name="nonNegativeInteger"&gt;
      &lt;SimpleContent:0x418f350&gt;
         &lt;Extension:0x418f3b0 ref="('nonNegativeInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f410 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f3d0 name="unsignedLong" type="('unsignedLong', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418f430 name="unsignedLong"&gt;
      &lt;SimpleContent:0x418f3f0&gt;
         &lt;Extension:0x418f450 ref="('unsignedLong', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f4b0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f470 name="unsignedInt" type="('unsignedInt', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418f4d0 name="unsignedInt"&gt;
      &lt;SimpleContent:0x418f490&gt;
         &lt;Extension:0x418f4f0 ref="('unsignedInt', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f550 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f510 name="unsignedShort" type="('unsignedShort', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418f570 name="unsignedShort"&gt;
      &lt;SimpleContent:0x418f530&gt;
         &lt;Extension:0x418f590 ref="('unsignedShort', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f5f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f5b0 name="unsignedByte" type="('unsignedByte', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418f610 name="unsignedByte"&gt;
      &lt;SimpleContent:0x418f5d0&gt;
         &lt;Extension:0x418f630 ref="('unsignedByte', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f690 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f650 name="positiveInteger" type="('positiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418f6b0 name="positiveInteger"&gt;
      &lt;SimpleContent:0x418f670&gt;
         &lt;Extension:0x418f6d0 ref="('positiveInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f730 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f6f0 name="anyType" type="('anyType', 'http://www.w3.org/2001/XMLSchema')" /&gt;
</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">imported:
Schema:0x4152290
(raw)
   &lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.xmlsoap.org/soap/encoding/" targetNamespace="http://schemas.xmlsoap.org/soap/encoding/" url="suds://schemas.xmlsoap.org/soap/encoding/"&gt;
      &lt;xs:attribute name="root"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;root&amp;apos; can be used to distinguish serialization roots from other
       elements that are present in a serialization but are not roots of
       a serialized value graph
     &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:simpleType&gt;
            &lt;xs:restriction base="xs:boolean"&gt;
               &lt;xs:pattern value="0|1"/&gt;
            &lt;/xs:restriction&gt;
         &lt;/xs:simpleType&gt;
      &lt;/xs:attribute&gt;
      &lt;xs:attributeGroup name="commonAttributes"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
        Attributes common to all elements that function as accessors or
        represent independent (multi-ref) values.  The href attribute is
        intended to be used in a manner like CONREF.  That is, the element
        content should be empty iff the href attribute appears
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:attribute name="id" type="xs:ID"/&gt;
         &lt;xs:attribute name="href" type="xs:anyURI"/&gt;
         &lt;xs:anyAttribute namespace="##other" processContents="lax"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:simpleType name="arrayCoordinate"&gt;
         &lt;xs:restriction base="xs:string"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:attribute name="arrayType" type="xs:string"/&gt;
      &lt;xs:attribute name="offset" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayAttributes"&gt;
         &lt;xs:attribute ref="tns:arrayType"/&gt;
         &lt;xs:attribute ref="tns:offset"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:attribute name="position" type="tns:arrayCoordinate"/&gt;
      &lt;xs:attributeGroup name="arrayMemberAttributes"&gt;
         &lt;xs:attribute ref="tns:position"/&gt;
      &lt;/xs:attributeGroup&gt;
      &lt;xs:group name="Array"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:element name="Array" type="tns:Array"/&gt;
      &lt;xs:complexType name="Array"&gt;
         &lt;xs:annotation&gt;
            &lt;xs:documentation&gt;
       &amp;apos;Array&amp;apos; is a complex type for accessors identified by position
      &lt;/xs:documentation&gt;
         &lt;/xs:annotation&gt;
         &lt;xs:group ref="tns:Array" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:arrayAttributes"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Struct" type="tns:Struct"/&gt;
      &lt;xs:group name="Struct"&gt;
         &lt;xs:sequence&gt;
            &lt;xs:any namespace="##any" minOccurs="0" maxOccurs="unbounded" processContents="lax"/&gt;
         &lt;/xs:sequence&gt;
      &lt;/xs:group&gt;
      &lt;xs:complexType name="Struct"&gt;
         &lt;xs:group ref="tns:Struct" minOccurs="0"/&gt;
         &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:simpleType name="base64"&gt;
         &lt;xs:restriction base="xs:base64Binary"/&gt;
      &lt;/xs:simpleType&gt;
      &lt;xs:element name="duration" type="tns:duration"/&gt;
      &lt;xs:complexType name="duration"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:duration"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="dateTime" type="tns:dateTime"/&gt;
      &lt;xs:complexType name="dateTime"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:dateTime"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NOTATION" type="tns:NOTATION"/&gt;
      &lt;xs:complexType name="NOTATION"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="time" type="tns:time"/&gt;
      &lt;xs:complexType name="time"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:time"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="date" type="tns:date"/&gt;
      &lt;xs:complexType name="date"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:date"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYearMonth" type="tns:gYearMonth"/&gt;
      &lt;xs:complexType name="gYearMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYearMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gYear" type="tns:gYear"/&gt;
      &lt;xs:complexType name="gYear"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gYear"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonthDay" type="tns:gMonthDay"/&gt;
      &lt;xs:complexType name="gMonthDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonthDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gDay" type="tns:gDay"/&gt;
      &lt;xs:complexType name="gDay"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gDay"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="gMonth" type="tns:gMonth"/&gt;
      &lt;xs:complexType name="gMonth"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:gMonth"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="boolean" type="tns:boolean"/&gt;
      &lt;xs:complexType name="boolean"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:boolean"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="base64Binary" type="tns:base64Binary"/&gt;
      &lt;xs:complexType name="base64Binary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:base64Binary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="hexBinary" type="tns:hexBinary"/&gt;
      &lt;xs:complexType name="hexBinary"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:hexBinary"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="float" type="tns:float"/&gt;
      &lt;xs:complexType name="float"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:float"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="double" type="tns:double"/&gt;
      &lt;xs:complexType name="double"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:double"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyURI" type="tns:anyURI"/&gt;
      &lt;xs:complexType name="anyURI"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:anyURI"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="QName" type="tns:QName"/&gt;
      &lt;xs:complexType name="QName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:QName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="string" type="tns:string"/&gt;
      &lt;xs:complexType name="string"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:string"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="normalizedString" type="tns:normalizedString"/&gt;
      &lt;xs:complexType name="normalizedString"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:normalizedString"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="token" type="tns:token"/&gt;
      &lt;xs:complexType name="token"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:token"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="language" type="tns:language"/&gt;
      &lt;xs:complexType name="language"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:language"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="Name" type="tns:Name"/&gt;
      &lt;xs:complexType name="Name"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:Name"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKEN" type="tns:NMTOKEN"/&gt;
      &lt;xs:complexType name="NMTOKEN"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKEN"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NCName" type="tns:NCName"/&gt;
      &lt;xs:complexType name="NCName"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NCName"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="NMTOKENS" type="tns:NMTOKENS"/&gt;
      &lt;xs:complexType name="NMTOKENS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:NMTOKENS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ID" type="tns:ID"/&gt;
      &lt;xs:complexType name="ID"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ID"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREF" type="tns:IDREF"/&gt;
      &lt;xs:complexType name="IDREF"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREF"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITY" type="tns:ENTITY"/&gt;
      &lt;xs:complexType name="ENTITY"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITY"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="IDREFS" type="tns:IDREFS"/&gt;
      &lt;xs:complexType name="IDREFS"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:IDREFS"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="ENTITIES" type="tns:ENTITIES"/&gt;
      &lt;xs:complexType name="ENTITIES"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:ENTITIES"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="decimal" type="tns:decimal"/&gt;
      &lt;xs:complexType name="decimal"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:decimal"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="integer" type="tns:integer"/&gt;
      &lt;xs:complexType name="integer"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:integer"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonPositiveInteger" type="tns:nonPositiveInteger"/&gt;
      &lt;xs:complexType name="nonPositiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonPositiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="negativeInteger" type="tns:negativeInteger"/&gt;
      &lt;xs:complexType name="negativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:negativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="long" type="tns:long"/&gt;
      &lt;xs:complexType name="long"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:long"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="int" type="tns:int"/&gt;
      &lt;xs:complexType name="int"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:int"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="short" type="tns:short"/&gt;
      &lt;xs:complexType name="short"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:short"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="byte" type="tns:byte"/&gt;
      &lt;xs:complexType name="byte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:byte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="nonNegativeInteger" type="tns:nonNegativeInteger"/&gt;
      &lt;xs:complexType name="nonNegativeInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:nonNegativeInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedLong" type="tns:unsignedLong"/&gt;
      &lt;xs:complexType name="unsignedLong"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedLong"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedInt" type="tns:unsignedInt"/&gt;
      &lt;xs:complexType name="unsignedInt"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedInt"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedShort" type="tns:unsignedShort"/&gt;
      &lt;xs:complexType name="unsignedShort"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedShort"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="unsignedByte" type="tns:unsignedByte"/&gt;
      &lt;xs:complexType name="unsignedByte"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:unsignedByte"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="positiveInteger" type="tns:positiveInteger"/&gt;
      &lt;xs:complexType name="positiveInteger"&gt;
         &lt;xs:simpleContent&gt;
            &lt;xs:extension base="xs:positiveInteger"&gt;
               &lt;xs:attributeGroup ref="tns:commonAttributes"/&gt;
            &lt;/xs:extension&gt;
         &lt;/xs:simpleContent&gt;
      &lt;/xs:complexType&gt;
      &lt;xs:element name="anyType"/&gt;
   &lt;/xs:schema&gt;
(model)
   &lt;Attribute:0x41520d0 name="root" /&gt;
   &lt;AttributeGroup:0x4152810 name="commonAttributes"&gt;
      &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Simple:0x4152870 name="arrayCoordinate" /&gt;
   &lt;Attribute:0x4152950 name="arrayType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;Attribute:0x4152d50 name="offset" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;AttributeGroup:0x41232b0 name="arrayAttributes"&gt;
      &lt;Attribute:0x4123130 name="arrayType" ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;Attribute:0x4123730 name="offset" ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Attribute:0x41234d0 name="position" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;AttributeGroup:0x41235d0 name="arrayMemberAttributes"&gt;
      &lt;Attribute:0x4123870 name="position" ref="('position', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
   &lt;/AttributeGroup&gt;
   &lt;Group:0x4123b90 name="Array"&gt;
      &lt;Sequence:0x4123e30&gt;
         &lt;Any:0x4123cf0 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Element:0x4152f70 name="Array" type="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4123f90 name="Array"&gt;
      &lt;Group:0x4158910 name="Array" ref="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Sequence:0x4123e30&gt;
            &lt;Any:0x4123cf0 /&gt;
         &lt;/Sequence&gt;
      &lt;/Group&gt;
      &lt;AttributeGroup:0x41582d0 name="arrayAttributes" ref="('arrayAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x4123130 name="arrayType" ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x4123730 name="offset" ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
      &lt;/AttributeGroup&gt;
      &lt;AttributeGroup:0x4158410 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;/AttributeGroup&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4123a90 name="Struct" type="('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Group:0x4158130 name="Struct"&gt;
      &lt;Sequence:0x4158630&gt;
         &lt;Any:0x4158a10 /&gt;
      &lt;/Sequence&gt;
   &lt;/Group&gt;
   &lt;Complex:0x4158730 name="Struct"&gt;
      &lt;Group:0x4158b10 name="Struct" ref="('Struct', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Sequence:0x4158630&gt;
            &lt;Any:0x4158a10 /&gt;
         &lt;/Sequence&gt;
      &lt;/Group&gt;
      &lt;AttributeGroup:0x4158f90 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
         &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
         &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
      &lt;/AttributeGroup&gt;
   &lt;/Complex&gt;
   &lt;Simple:0x4158e50 name="base64" /&gt;
   &lt;Element:0x4158cb0 name="duration" type="('duration', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x413cd10 name="duration"&gt;
      &lt;SimpleContent:0x413c110&gt;
         &lt;Extension:0x413c750 ref="('duration', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x413c930 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x413c510 name="dateTime" type="('dateTime', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x413ca30 name="dateTime"&gt;
      &lt;SimpleContent:0x413c670&gt;
         &lt;Extension:0x413cc10 ref="('dateTime', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e0cb50 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x413cfb0 name="NOTATION" type="('NOTATION', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x413c4b0 name="NOTATION"&gt;
      &lt;SimpleContent:0x3e0ce90&gt;
         &lt;Extension:0x3e0cbb0 ref="('QName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e0cc70 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x413c290 name="time" type="('time', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e0ceb0 name="time"&gt;
      &lt;SimpleContent:0x3e0cc90&gt;
         &lt;Extension:0x3e0cb10 ref="('time', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e0cb70 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e0cd90 name="date" type="('date', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e0caf0 name="date"&gt;
      &lt;SimpleContent:0x3e0cbd0&gt;
         &lt;Extension:0x3e0cc30 ref="('date', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x3e0cdb0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e0cc10 name="gYearMonth" type="('gYearMonth', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x3e0cf70 name="gYearMonth"&gt;
      &lt;SimpleContent:0x3e0cbf0&gt;
         &lt;Extension:0x414e430 ref="('gYearMonth', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x414ee10 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e0cb90 name="gYear" type="('gYear', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x414e850 name="gYear"&gt;
      &lt;SimpleContent:0x414ecd0&gt;
         &lt;Extension:0x414e150 ref="('gYear', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x414ea70 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x414e290 name="gMonthDay" type="('gMonthDay', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x414eb70 name="gMonthDay"&gt;
      &lt;SimpleContent:0x414e570&gt;
         &lt;Extension:0x41576d0 ref="('gMonthDay', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x4157050 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x414e710 name="gDay" type="('gDay', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4157150 name="gDay"&gt;
      &lt;SimpleContent:0x41579b0&gt;
         &lt;Extension:0x4157bd0 ref="('gDay', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41572b0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4157ef0 name="gMonth" type="('gMonth', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x41573f0 name="gMonth"&gt;
      &lt;SimpleContent:0x4157cd0&gt;
         &lt;Extension:0x4157550 ref="('gMonth', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x416e0f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4157870 name="boolean" type="('boolean', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4157f10 name="boolean"&gt;
      &lt;SimpleContent:0x416e270&gt;
         &lt;Extension:0x416e410 ref="('boolean', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x416e830 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x416e550 name="base64Binary" type="('base64Binary', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x416ea50 name="base64Binary"&gt;
      &lt;SimpleContent:0x416e6f0&gt;
         &lt;Extension:0x416eb50 ref="('base64Binary', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41790f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x416ecb0 name="hexBinary" type="('hexBinary', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x416ef90 name="hexBinary"&gt;
      &lt;SimpleContent:0x4179410&gt;
         &lt;Extension:0x4179310 ref="('hexBinary', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41796f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x416edf0 name="float" type="('float', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4179850 name="float"&gt;
      &lt;SimpleContent:0x41795f0&gt;
         &lt;Extension:0x4179990 ref="('float', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x4179dd0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4179bf0 name="double" type="('double', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4179f50 name="double"&gt;
      &lt;SimpleContent:0x4198870&gt;
         &lt;Extension:0x4198cf0 ref="('double', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x41982b0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4179c10 name="anyURI" type="('anyURI', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4198250 name="anyURI"&gt;
      &lt;SimpleContent:0x4198030&gt;
         &lt;Extension:0x41988f0 ref="('anyURI', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x4198f50 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4198b90 name="QName" type="('QName', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x4198950 name="QName"&gt;
      &lt;SimpleContent:0x4198df0&gt;
         &lt;Extension:0x418d110 ref="('QName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418d3f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4198370 name="string" type="('string', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418d550 name="string"&gt;
      &lt;SimpleContent:0x418d2f0&gt;
         &lt;Extension:0x418d5d0 ref="('string', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418d6d0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418d670 name="normalizedString" type="('normalizedString', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418d6f0 name="normalizedString"&gt;
      &lt;SimpleContent:0x418d6b0&gt;
         &lt;Extension:0x418d710 ref="('normalizedString', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418d770 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418d730 name="token" type="('token', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418d790 name="token"&gt;
      &lt;SimpleContent:0x418d750&gt;
         &lt;Extension:0x418d7b0 ref="('token', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418d810 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418d7d0 name="language" type="('language', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418d830 name="language"&gt;
      &lt;SimpleContent:0x418d7f0&gt;
         &lt;Extension:0x418d850 ref="('language', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418d8b0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418d870 name="Name" type="('Name', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418d8d0 name="Name"&gt;
      &lt;SimpleContent:0x418d890&gt;
         &lt;Extension:0x418d8f0 ref="('Name', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418d950 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418d910 name="NMTOKEN" type="('NMTOKEN', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418d970 name="NMTOKEN"&gt;
      &lt;SimpleContent:0x418d930&gt;
         &lt;Extension:0x418d990 ref="('NMTOKEN', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418d9f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418d9b0 name="NCName" type="('NCName', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418da10 name="NCName"&gt;
      &lt;SimpleContent:0x418d9d0&gt;
         &lt;Extension:0x418da30 ref="('NCName', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418da90 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418da50 name="NMTOKENS" type="('NMTOKENS', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418dab0 name="NMTOKENS"&gt;
      &lt;SimpleContent:0x418da70&gt;
         &lt;Extension:0x418dad0 ref="('NMTOKENS', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418db30 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418daf0 name="ID" type="('ID', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418db50 name="ID"&gt;
      &lt;SimpleContent:0x418db10&gt;
         &lt;Extension:0x418db70 ref="('ID', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418dbd0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418db90 name="IDREF" type="('IDREF', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418dbf0 name="IDREF"&gt;
      &lt;SimpleContent:0x418dbb0&gt;
         &lt;Extension:0x418dc10 ref="('IDREF', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418dc70 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418dc30 name="ENTITY" type="('ENTITY', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418dc90 name="ENTITY"&gt;
      &lt;SimpleContent:0x418dc50&gt;
         &lt;Extension:0x418dcb0 ref="('ENTITY', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418dd10 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418dcd0 name="IDREFS" type="('IDREFS', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418dd30 name="IDREFS"&gt;
      &lt;SimpleContent:0x418dcf0&gt;
         &lt;Extension:0x418dd50 ref="('IDREFS', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418ddb0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418dd70 name="ENTITIES" type="('ENTITIES', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418ddd0 name="ENTITIES"&gt;
      &lt;SimpleContent:0x418dd90&gt;
         &lt;Extension:0x418ddf0 ref="('ENTITIES', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418de50 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418de10 name="decimal" type="('decimal', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418de70 name="decimal"&gt;
      &lt;SimpleContent:0x418de30&gt;
         &lt;Extension:0x418de90 ref="('decimal', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418def0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418deb0 name="integer" type="('integer', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418df10 name="integer"&gt;
      &lt;SimpleContent:0x418ded0&gt;
         &lt;Extension:0x418df30 ref="('integer', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418df90 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418df50 name="nonPositiveInteger" type="('nonPositiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418dfb0 name="nonPositiveInteger"&gt;
      &lt;SimpleContent:0x418df70&gt;
         &lt;Extension:0x418f030 ref="('nonPositiveInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f050 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418dff0 name="negativeInteger" type="('negativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418dfd0 name="negativeInteger"&gt;
      &lt;SimpleContent:0x418f070&gt;
         &lt;Extension:0x418f090 ref="('negativeInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f0f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f0b0 name="long" type="('long', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418f110 name="long"&gt;
      &lt;SimpleContent:0x418f0d0&gt;
         &lt;Extension:0x418f130 ref="('long', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f190 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f150 name="int" type="('int', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418f1b0 name="int"&gt;
      &lt;SimpleContent:0x418f170&gt;
         &lt;Extension:0x418f1d0 ref="('int', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f230 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f1f0 name="short" type="('short', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418f250 name="short"&gt;
      &lt;SimpleContent:0x418f210&gt;
         &lt;Extension:0x418f270 ref="('short', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f2d0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f290 name="byte" type="('byte', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418f2f0 name="byte"&gt;
      &lt;SimpleContent:0x418f2b0&gt;
         &lt;Extension:0x418f310 ref="('byte', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f370 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f330 name="nonNegativeInteger" type="('nonNegativeInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418f390 name="nonNegativeInteger"&gt;
      &lt;SimpleContent:0x418f350&gt;
         &lt;Extension:0x418f3b0 ref="('nonNegativeInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f410 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f3d0 name="unsignedLong" type="('unsignedLong', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418f430 name="unsignedLong"&gt;
      &lt;SimpleContent:0x418f3f0&gt;
         &lt;Extension:0x418f450 ref="('unsignedLong', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f4b0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f470 name="unsignedInt" type="('unsignedInt', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418f4d0 name="unsignedInt"&gt;
      &lt;SimpleContent:0x418f490&gt;
         &lt;Extension:0x418f4f0 ref="('unsignedInt', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f550 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f510 name="unsignedShort" type="('unsignedShort', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418f570 name="unsignedShort"&gt;
      &lt;SimpleContent:0x418f530&gt;
         &lt;Extension:0x418f590 ref="('unsignedShort', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f5f0 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f5b0 name="unsignedByte" type="('unsignedByte', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418f610 name="unsignedByte"&gt;
      &lt;SimpleContent:0x418f5d0&gt;
         &lt;Extension:0x418f630 ref="('unsignedByte', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f690 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f650 name="positiveInteger" type="('positiveInteger', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;
   &lt;Complex:0x418f6b0 name="positiveInteger"&gt;
      &lt;SimpleContent:0x418f670&gt;
         &lt;Extension:0x418f6d0 ref="('positiveInteger', 'http://www.w3.org/2001/XMLSchema')"&gt;
            &lt;AttributeGroup:0x418f730 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
            &lt;/AttributeGroup&gt;
         &lt;/Extension&gt;
      &lt;/SimpleContent&gt;
   &lt;/Complex&gt;
   &lt;Element:0x418f6f0 name="anyType" type="('anyType', 'http://www.w3.org/2001/XMLSchema')" /&gt;
</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e39f10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e39ff0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e39e90, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e39c10, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e39c70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e39cb0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e39b30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e39e10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e39e30, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e39a90, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://tempuri.org/')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e39c90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e39ad0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e398d0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08050, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08070, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e080b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08110, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e080f0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e081b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e081d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e081f0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08210, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08230, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e082b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e082f0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08370, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08390, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e083b0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e083d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08410, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e083f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e084b0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08510, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08530, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08570, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e085f0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08650, convert type="tns:PrintTask" to ('PrintTask', 'http://tempuri.org/')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08670, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e086b0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e086d0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e086f0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08710, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08750, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08770, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08790, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e087b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e087f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08870, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://tempuri.org/')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08890, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e088b0, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://tempuri.org/')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e088d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08910, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e088f0, convert type="tns:ArrayOfInt" to ('ArrayOfInt', 'http://tempuri.org/')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e089b0, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://tempuri.org/')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e089d0, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://tempuri.org/')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e089f0, convert type="tns:ArrayOfInt" to ('ArrayOfInt', 'http://tempuri.org/')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08a10, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://tempuri.org/')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08a50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08990, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08ad0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08b30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08b50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08b70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08bb0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08c30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08c50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08c70, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08c90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08cd0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08cb0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08d70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08d90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08db0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08dd0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08df0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08ed0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08f50, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08fb0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e08fd0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e0c030, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e0c0b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e0c110, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e0c150, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e0c1d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.060" level="DEBUG">Element:0x3e0c230, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c270, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c2f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c350, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c390, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c410, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c490, convert type="tns:TaskInfo" to ('TaskInfo', 'http://tempuri.org/')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c4f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c530, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c550, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c570, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c590, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c5d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c5f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c610, convert type="tns:PatientInfo" to ('PatientInfo', 'http://tempuri.org/')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c630, convert type="tns:ArrayOfFilmInfo" to ('ArrayOfFilmInfo', 'http://tempuri.org/')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c5b0, convert type="tns:ArrayOfReportInfo" to ('ArrayOfReportInfo', 'http://tempuri.org/')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c510, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c6b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c6d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c6f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c690, convert type="tns:FilmInfo" to ('FilmInfo', 'http://tempuri.org/')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c750, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c7d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c7f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c810, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c7b0, convert type="tns:ReportInfo" to ('ReportInfo', 'http://tempuri.org/')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c870, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c8f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c950, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c9b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c9f0, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0c970, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0ca10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0ca50, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Element:0x3e0ca30, convert type="tns:TaskInfo" to ('TaskInfo', 'http://tempuri.org/')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">Restriction:0x3e0cad0, convert ref="soapenc:Array" to ('Array', 'http://schemas.xmlsoap.org/soap/encoding/')</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">('Array', 'http://schemas.xmlsoap.org/soap/encoding/'), found as: &lt;Complex:0x4123f90 name="Array" /&gt;</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">"&lt;Complex:0x4123f90 name="Array" /&gt;" not found, skipped</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">(http://tempuri.org/AbstractTypes) merging &lt;Restriction:0x3e0cad0 ref="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt; &lt;== &lt;Complex:0x4123f90 name="Array" /&gt;</msg>
<msg timestamp="20191101 15:55:58.075" level="DEBUG">loaded:

schema collection
   Schema:0x3e39df0
   (raw)
      &lt;s:schema elementFormDefault="qualified" targetNamespace="http://tempuri.org/"&gt;
         &lt;s:element name="SetPrintMode"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetPrintModeResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ArrayOfString"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyReportInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="GetPrintServerStatus"&gt;
            &lt;s:complexType/&gt;
         &lt;/s:element&gt;
         &lt;s:element name="GetPrintServerStatusResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="GetPrintServerStatusResult" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="error_code" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="error_description" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="CreatePrintTask"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id_type" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="CreatePrintTaskResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="CreatePrintTaskResult" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patient_name" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="warning_code" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="warning_description" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="CreatePrintTask2"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id_type" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="CreatePrintTask2Response"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="CreatePrintTask2Result" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patient_name" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="warning_code" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="warning_description" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="extensions" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="Print"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="PrintResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="PrintResult" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="error_code" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="error_description" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="GetPrintTaskStatus"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="GetPrintTaskStatusResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="GetPrintTaskStatusResult" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="task_status" type="tns:PrintTask"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="PrintTask"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PrintTaskId" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="PrintStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="TotalReports" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="TotalImages" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="ReportsLeft" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="ImagesLeft" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="TimeNeeded" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="ErrorCode" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ErrorDesc" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="CentralPrintCombine"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strTerminalID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strIDAccID" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strAccType" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strIDUsID" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strUsType" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="userId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="CentralPrintCombineResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="CentralPrintCombineResult" type="tns:ArrayOfInt"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strPatientName" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strPrintTaskID" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="nWarningCode" type="tns:ArrayOfInt"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strWarningDescription" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strExtensions" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ArrayOfInt"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="unbounded" name="int" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="CentralPrint"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strTerminalID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strIDType" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="userId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="CentralPrintResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="CentralPrintResult" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strPatientName" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strPrintTaskID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="nWarningCode" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strWarningDescription" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strExtensions" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="AddQCLog"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QCUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QCLevel" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QCUser" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QCEvent" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QCDescription" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="AddQCLogResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="AddQCLogResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="Version"&gt;
            &lt;s:complexType/&gt;
         &lt;/s:element&gt;
         &lt;s:element name="VersionResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="VersionResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="UpdateReportPrinterStatus"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="nPrinterStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="nErrorCode" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strErrorDesc" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="UpdateReportPrinterStatusResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="UpdateReportPrinterStatusResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryExamInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="cardNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="cardType" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryExamInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QueryExamInfoResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetReportPrinted"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportId" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetReportPrintedResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="SetReportPrintedResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetReportUnPrinted"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportId" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetReportUnPrintedResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="SetReportUnPrintedResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryPrintTask"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryPrintTaskResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="PrintTask" type="tns:TaskInfo"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="TaskInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="TerminalID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="FilmCount" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ReportCount" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PrintedFilmCount" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PrintedReportCount" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Patient" type="tns:PatientInfo"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Films" type="tns:ArrayOfFilmInfo"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Reports" type="tns:ArrayOfReportInfo"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:complexType name="PatientInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Name" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Type" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:complexType name="ArrayOfFilmInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="unbounded" name="FilmInfo" nillable="true" type="tns:FilmInfo"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:complexType name="FilmInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Size" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Type" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:complexType name="ArrayOfReportInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="unbounded" name="ReportInfo" nillable="true" type="tns:ReportInfo"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:complexType name="ReportInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyFilmInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyFilmInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="int" type="s:int"/&gt;
         &lt;s:element name="string" nillable="true" type="s:string"/&gt;
         &lt;s:element name="boolean" type="s:boolean"/&gt;
         &lt;s:element name="PrintTask" type="tns:TaskInfo"/&gt;
      &lt;/s:schema&gt;
   (model)
      &lt;Element:0x3e39d90 name="SetPrintMode"&gt;
         &lt;Complex:0x3e39db0&gt;
            &lt;Sequence:0x3e39f70&gt;
               &lt;Element:0x3e39f10 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e39ff0 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e39e90 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e39cf0 name="SetPrintModeResponse"&gt;
         &lt;Complex:0x3e39fb0&gt;
            &lt;Sequence:0x3e39870&gt;
               &lt;Element:0x3e39c10 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e39ef0 name="NotifyReportInfo"&gt;
         &lt;Complex:0x3e39f90&gt;
            &lt;Sequence:0x3e39b10&gt;
               &lt;Element:0x3e39c70 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e39cb0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e39b30 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e39e10 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e39e30 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e39a90 name="reportFileName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x3e39bd0 name="ArrayOfString"&gt;
         &lt;Sequence:0x3e39c50&gt;
            &lt;Element:0x3e39c90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x3e39bf0 name="NotifyReportInfoResponse"&gt;
         &lt;Complex:0x3e399f0&gt;
            &lt;Sequence:0x3e39970&gt;
               &lt;Element:0x3e39ad0 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e39dd0 name="GetPrintServerStatus" /&gt;
      &lt;Element:0x3e39a50 name="GetPrintServerStatusResponse"&gt;
         &lt;Complex:0x3e39a30&gt;
            &lt;Sequence:0x3e399d0&gt;
               &lt;Element:0x3e398d0 name="GetPrintServerStatusResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e08050 name="error_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e08070 name="error_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e39a10 name="CreatePrintTask"&gt;
         &lt;Complex:0x3e39810&gt;
            &lt;Sequence:0x3e08090&gt;
               &lt;Element:0x3e080b0 name="patient_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e08110 name="patient_id_type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e39890 name="CreatePrintTaskResponse"&gt;
         &lt;Complex:0x3e08030&gt;
            &lt;Sequence:0x3e080d0&gt;
               &lt;Element:0x3e080f0 name="CreatePrintTaskResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e081b0 name="patient_name" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e081d0 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e081f0 name="warning_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e08210 name="warning_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e39ab0 name="CreatePrintTask2"&gt;
         &lt;Complex:0x3e08130&gt;
            &lt;Sequence:0x3e08190&gt;
               &lt;Element:0x3e08230 name="patient_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e082b0 name="patient_id_type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e08150 name="CreatePrintTask2Response"&gt;
         &lt;Complex:0x3e08250&gt;
            &lt;Sequence:0x3e082d0&gt;
               &lt;Element:0x3e082f0 name="CreatePrintTask2Result" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e08370 name="patient_name" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e08390 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e083b0 name="warning_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e083d0 name="warning_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e08410 name="extensions" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e08270 name="Print"&gt;
         &lt;Complex:0x3e08290&gt;
            &lt;Sequence:0x3e08350&gt;
               &lt;Element:0x3e083f0 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e08310 name="PrintResponse"&gt;
         &lt;Complex:0x3e08430&gt;
            &lt;Sequence:0x3e08490&gt;
               &lt;Element:0x3e084b0 name="PrintResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e08510 name="error_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e08530 name="error_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e08450 name="GetPrintTaskStatus"&gt;
         &lt;Complex:0x3e08470&gt;
            &lt;Sequence:0x3e08550&gt;
               &lt;Element:0x3e08570 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e084d0 name="GetPrintTaskStatusResponse"&gt;
         &lt;Complex:0x3e084f0&gt;
            &lt;Sequence:0x3e085d0&gt;
               &lt;Element:0x3e085f0 name="GetPrintTaskStatusResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e08650 name="task_status" type="('PrintTask', 'http://tempuri.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x3e08590 name="PrintTask"&gt;
         &lt;Sequence:0x3e085b0&gt;
            &lt;Element:0x3e08670 name="PrintTaskId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e086b0 name="PrintStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e086d0 name="TotalReports" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e086f0 name="TotalImages" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e08710 name="ReportsLeft" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e08750 name="ImagesLeft" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e08770 name="TimeNeeded" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e08790 name="ErrorCode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e087b0 name="ErrorDesc" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x3e08610 name="CentralPrintCombine"&gt;
         &lt;Complex:0x3e08630&gt;
            &lt;Sequence:0x3e08690&gt;
               &lt;Element:0x3e087f0 name="strTerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e08870 name="strIDAccID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
               &lt;Element:0x3e08890 name="strAccType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e088b0 name="strIDUsID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
               &lt;Element:0x3e088d0 name="strUsType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e08910 name="userId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e08730 name="CentralPrintCombineResponse"&gt;
         &lt;Complex:0x3e087d0&gt;
            &lt;Sequence:0x3e08850&gt;
               &lt;Element:0x3e088f0 name="CentralPrintCombineResult" type="('ArrayOfInt', 'http://tempuri.org/')" /&gt;
               &lt;Element:0x3e089b0 name="strPatientName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
               &lt;Element:0x3e089d0 name="strPrintTaskID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
               &lt;Element:0x3e089f0 name="nWarningCode" type="('ArrayOfInt', 'http://tempuri.org/')" /&gt;
               &lt;Element:0x3e08a10 name="strWarningDescription" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
               &lt;Element:0x3e08a50 name="strExtensions" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x3e08810 name="ArrayOfInt"&gt;
         &lt;Sequence:0x3e08930&gt;
            &lt;Element:0x3e08990 name="int" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x3e08950 name="CentralPrint"&gt;
         &lt;Complex:0x3e08a70&gt;
            &lt;Sequence:0x3e08a30&gt;
               &lt;Element:0x3e08ad0 name="strTerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e08b30 name="strID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e08b50 name="strIDType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e08b70 name="userId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e08a90 name="CentralPrintResponse"&gt;
         &lt;Complex:0x3e08ab0&gt;
            &lt;Sequence:0x3e08b90&gt;
               &lt;Element:0x3e08bb0 name="CentralPrintResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e08c30 name="strPatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e08c50 name="strPrintTaskID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e08c70 name="nWarningCode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e08c90 name="strWarningDescription" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e08cd0 name="strExtensions" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e08af0 name="AddQCLog"&gt;
         &lt;Complex:0x3e08b10&gt;
            &lt;Sequence:0x3e08c10&gt;
               &lt;Element:0x3e08cb0 name="QCUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e08d70 name="QCLevel" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e08d90 name="QCUser" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e08db0 name="QCEvent" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e08dd0 name="QCDescription" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e08bd0 name="AddQCLogResponse"&gt;
         &lt;Complex:0x3e08cf0&gt;
            &lt;Sequence:0x3e08d50&gt;
               &lt;Element:0x3e08df0 name="AddQCLogResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e08d10 name="Version" /&gt;
      &lt;Element:0x3e08e30 name="VersionResponse"&gt;
         &lt;Complex:0x3e08e50&gt;
            &lt;Sequence:0x3e08e90&gt;
               &lt;Element:0x3e08ed0 name="VersionResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e08e70 name="UpdateReportPrinterStatus"&gt;
         &lt;Complex:0x3e08eb0&gt;
            &lt;Sequence:0x3e08f30&gt;
               &lt;Element:0x3e08f50 name="nPrinterStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e08fb0 name="nErrorCode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e08fd0 name="strErrorDesc" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e08ef0 name="UpdateReportPrinterStatusResponse"&gt;
         &lt;Complex:0x3e08f10&gt;
            &lt;Sequence:0x3e08ff0&gt;
               &lt;Element:0x3e0c030 name="UpdateReportPrinterStatusResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e08f70 name="QueryExamInfo"&gt;
         &lt;Complex:0x3e0c050&gt;
            &lt;Sequence:0x3e0c090&gt;
               &lt;Element:0x3e0c0b0 name="cardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e0c110 name="cardType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e08f90 name="QueryExamInfoResponse"&gt;
         &lt;Complex:0x3e0c070&gt;
            &lt;Sequence:0x3e0c130&gt;
               &lt;Element:0x3e0c150 name="QueryExamInfoResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e0c0d0 name="SetReportPrinted"&gt;
         &lt;Complex:0x3e0c0f0&gt;
            &lt;Sequence:0x3e0c1b0&gt;
               &lt;Element:0x3e0c1d0 name="reportId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e0c230 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e0c170 name="SetReportPrintedResponse"&gt;
         &lt;Complex:0x3e0c190&gt;
            &lt;Sequence:0x3e0c250&gt;
               &lt;Element:0x3e0c270 name="SetReportPrintedResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e0c1f0 name="SetReportUnPrinted"&gt;
         &lt;Complex:0x3e0c210&gt;
            &lt;Sequence:0x3e0c2d0&gt;
               &lt;Element:0x3e0c2f0 name="reportId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e0c350 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e0c290 name="SetReportUnPrintedResponse"&gt;
         &lt;Complex:0x3e0c2b0&gt;
            &lt;Sequence:0x3e0c370&gt;
               &lt;Element:0x3e0c390 name="SetReportUnPrintedResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e0c310 name="QueryPrintTask"&gt;
         &lt;Complex:0x3e0c330&gt;
            &lt;Sequence:0x3e0c3f0&gt;
               &lt;Element:0x3e0c410 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e0c3b0 name="QueryPrintTaskResponse"&gt;
         &lt;Complex:0x3e0c3d0&gt;
            &lt;Sequence:0x3e0c470&gt;
               &lt;Element:0x3e0c490 name="PrintTask" type="('TaskInfo', 'http://tempuri.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x3e0c430 name="TaskInfo"&gt;
         &lt;Sequence:0x3e0c450&gt;
            &lt;Element:0x3e0c4f0 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e0c530 name="TerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e0c550 name="Status" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e0c570 name="FilmCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e0c590 name="ReportCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e0c5d0 name="PrintedFilmCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e0c5f0 name="PrintedReportCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e0c610 name="Patient" type="('PatientInfo', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x3e0c630 name="Films" type="('ArrayOfFilmInfo', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x3e0c5b0 name="Reports" type="('ArrayOfReportInfo', 'http://tempuri.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Complex:0x3e0c4b0 name="PatientInfo"&gt;
         &lt;Sequence:0x3e0c4d0&gt;
            &lt;Element:0x3e0c510 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e0c6b0 name="Name" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e0c6d0 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e0c6f0 name="Type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Complex:0x3e0c650 name="ArrayOfFilmInfo"&gt;
         &lt;Sequence:0x3e0c670&gt;
            &lt;Element:0x3e0c690 name="FilmInfo" type="('FilmInfo', 'http://tempuri.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Complex:0x3e0c710 name="FilmInfo"&gt;
         &lt;Sequence:0x3e0c730&gt;
            &lt;Element:0x3e0c750 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e0c7d0 name="Status" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e0c7f0 name="Size" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e0c810 name="Type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Complex:0x3e0c770 name="ArrayOfReportInfo"&gt;
         &lt;Sequence:0x3e0c790&gt;
            &lt;Element:0x3e0c7b0 name="ReportInfo" type="('ReportInfo', 'http://tempuri.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Complex:0x3e0c830 name="ReportInfo"&gt;
         &lt;Sequence:0x3e0c850&gt;
            &lt;Element:0x3e0c870 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e0c8f0 name="Status" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x3e0c890 name="NotifyFilmInfo"&gt;
         &lt;Complex:0x3e0c8b0&gt;
            &lt;Sequence:0x3e0c8d0&gt;
               &lt;Element:0x3e0c950 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x3e0c9b0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e0c910 name="NotifyFilmInfoResponse"&gt;
         &lt;Complex:0x3e0c930&gt;
            &lt;Sequence:0x3e0c9d0&gt;
               &lt;Element:0x3e0c9f0 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x3e0c970 name="int" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;Element:0x3e0ca10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;Element:0x3e0ca50 name="boolean" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;Element:0x3e0ca30 name="PrintTask" type="('TaskInfo', 'http://tempuri.org/')" /&gt;

   Schema:0x3e39d30
   (raw)
      &lt;s:schema targetNamespace="http://tempuri.org/AbstractTypes"&gt;
         &lt;s:import namespace="http://schemas.xmlsoap.org/soap/encoding/"/&gt;
         &lt;s:complexType name="StringArray"&gt;
            &lt;s:complexContent mixed="false"&gt;
               &lt;s:restriction base="soapenc:Array"&gt;
                  &lt;s:sequence&gt;
                     &lt;s:element minOccurs="0" maxOccurs="unbounded" name="String" type="s:string"/&gt;
                  &lt;/s:sequence&gt;
               &lt;/s:restriction&gt;
            &lt;/s:complexContent&gt;
         &lt;/s:complexType&gt;
      &lt;/s:schema&gt;
   (model)
      &lt;Complex:0x3e0ca90 name="StringArray"&gt;
         &lt;ComplexContent:0x3e0c990&gt;
            &lt;Restriction:0x3e0cad0 ref="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
               &lt;Group:0x4158910 name="Array" ref="('Array', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
                  &lt;Sequence:0x4123e30&gt;
                     &lt;Any:0x4123cf0 /&gt;
                  &lt;/Sequence&gt;
               &lt;/Group&gt;
               &lt;AttributeGroup:0x41582d0 name="arrayAttributes" ref="('arrayAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
                  &lt;Attribute:0x4123130 name="arrayType" ref="('arrayType', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
                  &lt;Attribute:0x4123730 name="offset" ref="('offset', 'http://schemas.xmlsoap.org/soap/encoding/')" type="('arrayCoordinate', 'http://schemas.xmlsoap.org/soap/encoding/')" /&gt;@
               &lt;/AttributeGroup&gt;
               &lt;AttributeGroup:0x4158410 name="commonAttributes" ref="('commonAttributes', 'http://schemas.xmlsoap.org/soap/encoding/')"&gt;
                  &lt;Attribute:0x4152510 name="id" type="('ID', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
                  &lt;Attribute:0x4152a50 name="href" type="('anyURI', 'http://www.w3.org/2001/XMLSchema')" /&gt;@
               &lt;/AttributeGroup&gt;
            &lt;/Restriction&gt;
         &lt;/ComplexContent&gt;
      &lt;/Complex&gt;
</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">MERGED:
Schema:0x3e39df0
(raw)
   &lt;s:schema elementFormDefault="qualified" targetNamespace="http://tempuri.org/"&gt;
      &lt;s:element name="SetPrintMode"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetPrintModeResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ArrayOfString"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyReportInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="GetPrintServerStatus"&gt;
         &lt;s:complexType/&gt;
      &lt;/s:element&gt;
      &lt;s:element name="GetPrintServerStatusResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="GetPrintServerStatusResult" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="error_code" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="error_description" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="CreatePrintTask"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id_type" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="CreatePrintTaskResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="CreatePrintTaskResult" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patient_name" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="warning_code" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="warning_description" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="CreatePrintTask2"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patient_id_type" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="CreatePrintTask2Response"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="CreatePrintTask2Result" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patient_name" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="warning_code" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="warning_description" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="extensions" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="Print"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="PrintResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="PrintResult" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="error_code" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="error_description" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="GetPrintTaskStatus"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="print_task_id" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="GetPrintTaskStatusResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="GetPrintTaskStatusResult" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="task_status" type="tns:PrintTask"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="PrintTask"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PrintTaskId" type="s:string"/&gt;
            &lt;s:element minOccurs="1" maxOccurs="1" name="PrintStatus" type="s:int"/&gt;
            &lt;s:element minOccurs="1" maxOccurs="1" name="TotalReports" type="s:int"/&gt;
            &lt;s:element minOccurs="1" maxOccurs="1" name="TotalImages" type="s:int"/&gt;
            &lt;s:element minOccurs="1" maxOccurs="1" name="ReportsLeft" type="s:int"/&gt;
            &lt;s:element minOccurs="1" maxOccurs="1" name="ImagesLeft" type="s:int"/&gt;
            &lt;s:element minOccurs="1" maxOccurs="1" name="TimeNeeded" type="s:int"/&gt;
            &lt;s:element minOccurs="1" maxOccurs="1" name="ErrorCode" type="s:int"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ErrorDesc" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="CentralPrintCombine"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strTerminalID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strIDAccID" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strAccType" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strIDUsID" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strUsType" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="userId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="CentralPrintCombineResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="CentralPrintCombineResult" type="tns:ArrayOfInt"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strPatientName" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strPrintTaskID" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="nWarningCode" type="tns:ArrayOfInt"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strWarningDescription" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strExtensions" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ArrayOfInt"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="unbounded" name="int" type="s:int"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="CentralPrint"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strTerminalID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strIDType" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="userId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="CentralPrintResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="CentralPrintResult" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strPatientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strPrintTaskID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="nWarningCode" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strWarningDescription" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strExtensions" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="AddQCLog"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QCUID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QCLevel" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QCUser" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QCEvent" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QCDescription" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="AddQCLogResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="AddQCLogResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="Version"&gt;
         &lt;s:complexType/&gt;
      &lt;/s:element&gt;
      &lt;s:element name="VersionResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="VersionResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="UpdateReportPrinterStatus"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="nPrinterStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="nErrorCode" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strErrorDesc" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="UpdateReportPrinterStatusResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="UpdateReportPrinterStatusResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryExamInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="cardNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="cardType" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryExamInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QueryExamInfoResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetReportPrinted"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportId" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetReportPrintedResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="SetReportPrintedResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetReportUnPrinted"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportId" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetReportUnPrintedResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="SetReportUnPrintedResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryPrintTask"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="taskId" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryPrintTaskResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PrintTask" type="tns:TaskInfo"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="TaskInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="TerminalID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="FilmCount" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ReportCount" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PrintedFilmCount" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PrintedReportCount" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Patient" type="tns:PatientInfo"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Films" type="tns:ArrayOfFilmInfo"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Reports" type="tns:ArrayOfReportInfo"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:complexType name="PatientInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Name" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Type" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:complexType name="ArrayOfFilmInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="unbounded" name="FilmInfo" nillable="true" type="tns:FilmInfo"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:complexType name="FilmInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Size" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Type" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:complexType name="ArrayOfReportInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="unbounded" name="ReportInfo" nillable="true" type="tns:ReportInfo"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:complexType name="ReportInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Status" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyFilmInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyFilmInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="int" type="s:int"/&gt;
      &lt;s:element name="string" nillable="true" type="s:string"/&gt;
      &lt;s:element name="boolean" type="s:boolean"/&gt;
      &lt;s:element name="PrintTask" type="tns:TaskInfo"/&gt;
   &lt;/s:schema&gt;
(model)
   &lt;Element:0x3e39d90 name="SetPrintMode"&gt;
      &lt;Complex:0x3e39db0&gt;
         &lt;Sequence:0x3e39f70&gt;
            &lt;Element:0x3e39f10 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e39ff0 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e39e90 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e39cf0 name="SetPrintModeResponse"&gt;
      &lt;Complex:0x3e39fb0&gt;
         &lt;Sequence:0x3e39870&gt;
            &lt;Element:0x3e39c10 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e39ef0 name="NotifyReportInfo"&gt;
      &lt;Complex:0x3e39f90&gt;
         &lt;Sequence:0x3e39b10&gt;
            &lt;Element:0x3e39c70 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e39cb0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e39b30 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e39e10 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e39e30 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e39a90 name="reportFileName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x3e39bd0 name="ArrayOfString"&gt;
      &lt;Sequence:0x3e39c50&gt;
         &lt;Element:0x3e39c90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e39bf0 name="NotifyReportInfoResponse"&gt;
      &lt;Complex:0x3e399f0&gt;
         &lt;Sequence:0x3e39970&gt;
            &lt;Element:0x3e39ad0 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e39dd0 name="GetPrintServerStatus" /&gt;
   &lt;Element:0x3e39a50 name="GetPrintServerStatusResponse"&gt;
      &lt;Complex:0x3e39a30&gt;
         &lt;Sequence:0x3e399d0&gt;
            &lt;Element:0x3e398d0 name="GetPrintServerStatusResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e08050 name="error_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e08070 name="error_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e39a10 name="CreatePrintTask"&gt;
      &lt;Complex:0x3e39810&gt;
         &lt;Sequence:0x3e08090&gt;
            &lt;Element:0x3e080b0 name="patient_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e08110 name="patient_id_type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e39890 name="CreatePrintTaskResponse"&gt;
      &lt;Complex:0x3e08030&gt;
         &lt;Sequence:0x3e080d0&gt;
            &lt;Element:0x3e080f0 name="CreatePrintTaskResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e081b0 name="patient_name" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e081d0 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e081f0 name="warning_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e08210 name="warning_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e39ab0 name="CreatePrintTask2"&gt;
      &lt;Complex:0x3e08130&gt;
         &lt;Sequence:0x3e08190&gt;
            &lt;Element:0x3e08230 name="patient_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e082b0 name="patient_id_type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e08150 name="CreatePrintTask2Response"&gt;
      &lt;Complex:0x3e08250&gt;
         &lt;Sequence:0x3e082d0&gt;
            &lt;Element:0x3e082f0 name="CreatePrintTask2Result" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e08370 name="patient_name" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e08390 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e083b0 name="warning_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e083d0 name="warning_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e08410 name="extensions" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e08270 name="Print"&gt;
      &lt;Complex:0x3e08290&gt;
         &lt;Sequence:0x3e08350&gt;
            &lt;Element:0x3e083f0 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e08310 name="PrintResponse"&gt;
      &lt;Complex:0x3e08430&gt;
         &lt;Sequence:0x3e08490&gt;
            &lt;Element:0x3e084b0 name="PrintResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e08510 name="error_code" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e08530 name="error_description" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e08450 name="GetPrintTaskStatus"&gt;
      &lt;Complex:0x3e08470&gt;
         &lt;Sequence:0x3e08550&gt;
            &lt;Element:0x3e08570 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e084d0 name="GetPrintTaskStatusResponse"&gt;
      &lt;Complex:0x3e084f0&gt;
         &lt;Sequence:0x3e085d0&gt;
            &lt;Element:0x3e085f0 name="GetPrintTaskStatusResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e08650 name="task_status" type="('PrintTask', 'http://tempuri.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x3e08590 name="PrintTask"&gt;
      &lt;Sequence:0x3e085b0&gt;
         &lt;Element:0x3e08670 name="PrintTaskId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e086b0 name="PrintStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e086d0 name="TotalReports" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e086f0 name="TotalImages" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e08710 name="ReportsLeft" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e08750 name="ImagesLeft" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e08770 name="TimeNeeded" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e08790 name="ErrorCode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e087b0 name="ErrorDesc" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e08610 name="CentralPrintCombine"&gt;
      &lt;Complex:0x3e08630&gt;
         &lt;Sequence:0x3e08690&gt;
            &lt;Element:0x3e087f0 name="strTerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e08870 name="strIDAccID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x3e08890 name="strAccType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e088b0 name="strIDUsID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x3e088d0 name="strUsType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e08910 name="userId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e08730 name="CentralPrintCombineResponse"&gt;
      &lt;Complex:0x3e087d0&gt;
         &lt;Sequence:0x3e08850&gt;
            &lt;Element:0x3e088f0 name="CentralPrintCombineResult" type="('ArrayOfInt', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x3e089b0 name="strPatientName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x3e089d0 name="strPrintTaskID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x3e089f0 name="nWarningCode" type="('ArrayOfInt', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x3e08a10 name="strWarningDescription" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
            &lt;Element:0x3e08a50 name="strExtensions" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x3e08810 name="ArrayOfInt"&gt;
      &lt;Sequence:0x3e08930&gt;
         &lt;Element:0x3e08990 name="int" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e08950 name="CentralPrint"&gt;
      &lt;Complex:0x3e08a70&gt;
         &lt;Sequence:0x3e08a30&gt;
            &lt;Element:0x3e08ad0 name="strTerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e08b30 name="strID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e08b50 name="strIDType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e08b70 name="userId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e08a90 name="CentralPrintResponse"&gt;
      &lt;Complex:0x3e08ab0&gt;
         &lt;Sequence:0x3e08b90&gt;
            &lt;Element:0x3e08bb0 name="CentralPrintResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e08c30 name="strPatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e08c50 name="strPrintTaskID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e08c70 name="nWarningCode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e08c90 name="strWarningDescription" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e08cd0 name="strExtensions" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e08af0 name="AddQCLog"&gt;
      &lt;Complex:0x3e08b10&gt;
         &lt;Sequence:0x3e08c10&gt;
            &lt;Element:0x3e08cb0 name="QCUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e08d70 name="QCLevel" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e08d90 name="QCUser" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e08db0 name="QCEvent" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e08dd0 name="QCDescription" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e08bd0 name="AddQCLogResponse"&gt;
      &lt;Complex:0x3e08cf0&gt;
         &lt;Sequence:0x3e08d50&gt;
            &lt;Element:0x3e08df0 name="AddQCLogResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e08d10 name="Version" /&gt;
   &lt;Element:0x3e08e30 name="VersionResponse"&gt;
      &lt;Complex:0x3e08e50&gt;
         &lt;Sequence:0x3e08e90&gt;
            &lt;Element:0x3e08ed0 name="VersionResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e08e70 name="UpdateReportPrinterStatus"&gt;
      &lt;Complex:0x3e08eb0&gt;
         &lt;Sequence:0x3e08f30&gt;
            &lt;Element:0x3e08f50 name="nPrinterStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e08fb0 name="nErrorCode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e08fd0 name="strErrorDesc" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e08ef0 name="UpdateReportPrinterStatusResponse"&gt;
      &lt;Complex:0x3e08f10&gt;
         &lt;Sequence:0x3e08ff0&gt;
            &lt;Element:0x3e0c030 name="UpdateReportPrinterStatusResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e08f70 name="QueryExamInfo"&gt;
      &lt;Complex:0x3e0c050&gt;
         &lt;Sequence:0x3e0c090&gt;
            &lt;Element:0x3e0c0b0 name="cardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e0c110 name="cardType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e08f90 name="QueryExamInfoResponse"&gt;
      &lt;Complex:0x3e0c070&gt;
         &lt;Sequence:0x3e0c130&gt;
            &lt;Element:0x3e0c150 name="QueryExamInfoResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e0c0d0 name="SetReportPrinted"&gt;
      &lt;Complex:0x3e0c0f0&gt;
         &lt;Sequence:0x3e0c1b0&gt;
            &lt;Element:0x3e0c1d0 name="reportId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e0c230 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e0c170 name="SetReportPrintedResponse"&gt;
      &lt;Complex:0x3e0c190&gt;
         &lt;Sequence:0x3e0c250&gt;
            &lt;Element:0x3e0c270 name="SetReportPrintedResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e0c1f0 name="SetReportUnPrinted"&gt;
      &lt;Complex:0x3e0c210&gt;
         &lt;Sequence:0x3e0c2d0&gt;
            &lt;Element:0x3e0c2f0 name="reportId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e0c350 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e0c290 name="SetReportUnPrintedResponse"&gt;
      &lt;Complex:0x3e0c2b0&gt;
         &lt;Sequence:0x3e0c370&gt;
            &lt;Element:0x3e0c390 name="SetReportUnPrintedResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e0c310 name="QueryPrintTask"&gt;
      &lt;Complex:0x3e0c330&gt;
         &lt;Sequence:0x3e0c3f0&gt;
            &lt;Element:0x3e0c410 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e0c3b0 name="QueryPrintTaskResponse"&gt;
      &lt;Complex:0x3e0c3d0&gt;
         &lt;Sequence:0x3e0c470&gt;
            &lt;Element:0x3e0c490 name="PrintTask" type="('TaskInfo', 'http://tempuri.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x3e0c430 name="TaskInfo"&gt;
      &lt;Sequence:0x3e0c450&gt;
         &lt;Element:0x3e0c4f0 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e0c530 name="TerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e0c550 name="Status" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e0c570 name="FilmCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e0c590 name="ReportCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e0c5d0 name="PrintedFilmCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e0c5f0 name="PrintedReportCount" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e0c610 name="Patient" type="('PatientInfo', 'http://tempuri.org/')" /&gt;
         &lt;Element:0x3e0c630 name="Films" type="('ArrayOfFilmInfo', 'http://tempuri.org/')" /&gt;
         &lt;Element:0x3e0c5b0 name="Reports" type="('ArrayOfReportInfo', 'http://tempuri.org/')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Complex:0x3e0c4b0 name="PatientInfo"&gt;
      &lt;Sequence:0x3e0c4d0&gt;
         &lt;Element:0x3e0c510 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e0c6b0 name="Name" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e0c6d0 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e0c6f0 name="Type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Complex:0x3e0c650 name="ArrayOfFilmInfo"&gt;
      &lt;Sequence:0x3e0c670&gt;
         &lt;Element:0x3e0c690 name="FilmInfo" type="('FilmInfo', 'http://tempuri.org/')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Complex:0x3e0c710 name="FilmInfo"&gt;
      &lt;Sequence:0x3e0c730&gt;
         &lt;Element:0x3e0c750 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e0c7d0 name="Status" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e0c7f0 name="Size" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e0c810 name="Type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Complex:0x3e0c770 name="ArrayOfReportInfo"&gt;
      &lt;Sequence:0x3e0c790&gt;
         &lt;Element:0x3e0c7b0 name="ReportInfo" type="('ReportInfo', 'http://tempuri.org/')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Complex:0x3e0c830 name="ReportInfo"&gt;
      &lt;Sequence:0x3e0c850&gt;
         &lt;Element:0x3e0c870 name="ID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x3e0c8f0 name="Status" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x3e0c890 name="NotifyFilmInfo"&gt;
      &lt;Complex:0x3e0c8b0&gt;
         &lt;Sequence:0x3e0c8d0&gt;
            &lt;Element:0x3e0c950 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x3e0c9b0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e0c910 name="NotifyFilmInfoResponse"&gt;
      &lt;Complex:0x3e0c930&gt;
         &lt;Sequence:0x3e0c9d0&gt;
            &lt;Element:0x3e0c9f0 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x3e0c970 name="int" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;Element:0x3e0ca10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;Element:0x3e0ca50 name="boolean" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;Element:0x3e0ca30 name="PrintTask" type="('TaskInfo', 'http://tempuri.org/')" /&gt;
</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('SetPrintMode', 'http://tempuri.org/'), found as: &lt;Element:0x3e39d90 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('SetPrintModeResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e39cf0 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('NotifyReportInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3e39ef0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('NotifyReportInfoResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e39bf0 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('GetPrintServerStatus', 'http://tempuri.org/'), found as: &lt;Element:0x3e39dd0 name="GetPrintServerStatus" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('GetPrintServerStatusResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e39a50 name="GetPrintServerStatusResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('CreatePrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x3e39a10 name="CreatePrintTask" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('CreatePrintTaskResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e39890 name="CreatePrintTaskResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('CreatePrintTask2', 'http://tempuri.org/'), found as: &lt;Element:0x3e39ab0 name="CreatePrintTask2" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('CreatePrintTask2Response', 'http://tempuri.org/'), found as: &lt;Element:0x3e08150 name="CreatePrintTask2Response" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('Print', 'http://tempuri.org/'), found as: &lt;Element:0x3e08270 name="Print" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('PrintResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e08310 name="PrintResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('GetPrintTaskStatus', 'http://tempuri.org/'), found as: &lt;Element:0x3e08450 name="GetPrintTaskStatus" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('GetPrintTaskStatusResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e084d0 name="GetPrintTaskStatusResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('CentralPrintCombine', 'http://tempuri.org/'), found as: &lt;Element:0x3e08610 name="CentralPrintCombine" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('CentralPrintCombineResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e08730 name="CentralPrintCombineResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('CentralPrint', 'http://tempuri.org/'), found as: &lt;Element:0x3e08950 name="CentralPrint" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('CentralPrintResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e08a90 name="CentralPrintResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('AddQCLog', 'http://tempuri.org/'), found as: &lt;Element:0x3e08af0 name="AddQCLog" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('AddQCLogResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e08bd0 name="AddQCLogResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('Version', 'http://tempuri.org/'), found as: &lt;Element:0x3e08d10 name="Version" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('VersionResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e08e30 name="VersionResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('UpdateReportPrinterStatus', 'http://tempuri.org/'), found as: &lt;Element:0x3e08e70 name="UpdateReportPrinterStatus" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('UpdateReportPrinterStatusResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e08ef0 name="UpdateReportPrinterStatusResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('QueryExamInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3e08f70 name="QueryExamInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('QueryExamInfoResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e08f90 name="QueryExamInfoResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('SetReportPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x3e0c0d0 name="SetReportPrinted" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('SetReportPrintedResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e0c170 name="SetReportPrintedResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('SetReportUnPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x3e0c1f0 name="SetReportUnPrinted" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('SetReportUnPrintedResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e0c290 name="SetReportUnPrintedResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('QueryPrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x3e0c310 name="QueryPrintTask" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('QueryPrintTaskResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e0c3b0 name="QueryPrintTaskResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('NotifyFilmInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3e0c890 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('NotifyFilmInfoResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e0c910 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('SetPrintMode', 'http://tempuri.org/'), found as: &lt;Element:0x3e39d90 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('SetPrintModeResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e39cf0 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('NotifyReportInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3e39ef0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('NotifyReportInfoResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e39bf0 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('GetPrintServerStatus', 'http://tempuri.org/'), found as: &lt;Element:0x3e39dd0 name="GetPrintServerStatus" /&gt;</msg>
<msg timestamp="20191101 15:55:58.091" level="DEBUG">('GetPrintServerStatusResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e39a50 name="GetPrintServerStatusResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.106" level="DEBUG">('CreatePrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x3e39a10 name="CreatePrintTask" /&gt;</msg>
<msg timestamp="20191101 15:55:58.106" level="DEBUG">('CreatePrintTaskResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e39890 name="CreatePrintTaskResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.106" level="DEBUG">('CreatePrintTask2', 'http://tempuri.org/'), found as: &lt;Element:0x3e39ab0 name="CreatePrintTask2" /&gt;</msg>
<msg timestamp="20191101 15:55:58.106" level="DEBUG">('CreatePrintTask2Response', 'http://tempuri.org/'), found as: &lt;Element:0x3e08150 name="CreatePrintTask2Response" /&gt;</msg>
<msg timestamp="20191101 15:55:58.106" level="DEBUG">('Print', 'http://tempuri.org/'), found as: &lt;Element:0x3e08270 name="Print" /&gt;</msg>
<msg timestamp="20191101 15:55:58.106" level="DEBUG">('PrintResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e08310 name="PrintResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.106" level="DEBUG">('GetPrintTaskStatus', 'http://tempuri.org/'), found as: &lt;Element:0x3e08450 name="GetPrintTaskStatus" /&gt;</msg>
<msg timestamp="20191101 15:55:58.106" level="DEBUG">('GetPrintTaskStatusResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e084d0 name="GetPrintTaskStatusResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.106" level="DEBUG">('CentralPrintCombine', 'http://tempuri.org/'), found as: &lt;Element:0x3e08610 name="CentralPrintCombine" /&gt;</msg>
<msg timestamp="20191101 15:55:58.106" level="DEBUG">('CentralPrintCombineResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e08730 name="CentralPrintCombineResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.106" level="DEBUG">('CentralPrint', 'http://tempuri.org/'), found as: &lt;Element:0x3e08950 name="CentralPrint" /&gt;</msg>
<msg timestamp="20191101 15:55:58.106" level="DEBUG">('CentralPrintResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e08a90 name="CentralPrintResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.106" level="DEBUG">('AddQCLog', 'http://tempuri.org/'), found as: &lt;Element:0x3e08af0 name="AddQCLog" /&gt;</msg>
<msg timestamp="20191101 15:55:58.106" level="DEBUG">('AddQCLogResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e08bd0 name="AddQCLogResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.106" level="DEBUG">('Version', 'http://tempuri.org/'), found as: &lt;Element:0x3e08d10 name="Version" /&gt;</msg>
<msg timestamp="20191101 15:55:58.106" level="DEBUG">('VersionResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e08e30 name="VersionResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.106" level="DEBUG">('UpdateReportPrinterStatus', 'http://tempuri.org/'), found as: &lt;Element:0x3e08e70 name="UpdateReportPrinterStatus" /&gt;</msg>
<msg timestamp="20191101 15:55:58.106" level="DEBUG">('UpdateReportPrinterStatusResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e08ef0 name="UpdateReportPrinterStatusResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.106" level="DEBUG">('QueryExamInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3e08f70 name="QueryExamInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:58.106" level="DEBUG">('QueryExamInfoResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e08f90 name="QueryExamInfoResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.106" level="DEBUG">('SetReportPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x3e0c0d0 name="SetReportPrinted" /&gt;</msg>
<msg timestamp="20191101 15:55:58.106" level="DEBUG">('SetReportPrintedResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e0c170 name="SetReportPrintedResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.106" level="DEBUG">('SetReportUnPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x3e0c1f0 name="SetReportUnPrinted" /&gt;</msg>
<msg timestamp="20191101 15:55:58.106" level="DEBUG">('SetReportUnPrintedResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e0c290 name="SetReportUnPrintedResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.106" level="DEBUG">('QueryPrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x3e0c310 name="QueryPrintTask" /&gt;</msg>
<msg timestamp="20191101 15:55:58.106" level="DEBUG">('QueryPrintTaskResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e0c3b0 name="QueryPrintTaskResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.106" level="DEBUG">('NotifyFilmInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3e0c890 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:58.106" level="DEBUG">('NotifyFilmInfoResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e0c910 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.200" level="DEBUG">WSDL at 'http://10.112.20.84/PrintServer/PrintService.asmx?wsdl' loaded:
(Definitions){
   id = "Definitions:0x442a690"
   options = Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x0442AD70&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x03CE68B0&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x0442A750&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x03CE68B0&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x0442A9B0&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
Linked:
Definitions:
	proxy: classes=(&lt;class 'dict'&gt;,), default={}
	timeout: classes=(&lt;class 'int'&gt;, &lt;class 'float'&gt;), default=90
	headers: classes=(&lt;class 'dict'&gt;,), default={}
	username: classes=(&lt;class 'str'&gt;,), default=None
	password: classes=(&lt;class 'str'&gt;,), default=None
Content:
	('proxy', {})
	('timeout', 90)
	('headers', {})
	('username', None)
	('password', None)
Linked:
Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x0442AD70&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x03CE68B0&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x0442A750&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x03CE68B0&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x0442A9B0&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
   url = "http://10.112.20.84/PrintServer/PrintService.asmx?wsdl"
   tns[] = 
      "tns",
      "http://tempuri.org/",
   types[] = 
      (Types){
         definitions = (Definitions)...
      },
   schema = "&lt;Schema:0x3e39df0 tns="http://tempuri.org/"/&gt;"
   imports[] = &lt;empty&gt;
   messages = 
      {
         (SetPrintModeSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetPrintModeSoapIn"
               qname = "(SetPrintModeSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('SetPrintMode', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetPrintModeSoapOut"
               qname = "(SetPrintModeSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapIn"
               qname = "(NotifyReportInfoSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('NotifyReportInfo', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapOut"
               qname = "(NotifyReportInfoSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (GetPrintServerStatusSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "GetPrintServerStatusSoapIn"
               qname = "(GetPrintServerStatusSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (GetPrintServerStatusSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "GetPrintServerStatusSoapOut"
               qname = "(GetPrintServerStatusSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CreatePrintTaskSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "CreatePrintTaskSoapIn"
               qname = "(CreatePrintTaskSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CreatePrintTask', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CreatePrintTaskSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "CreatePrintTaskSoapOut"
               qname = "(CreatePrintTaskSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CreatePrintTask2SoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "CreatePrintTask2SoapIn"
               qname = "(CreatePrintTask2SoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CreatePrintTask2', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CreatePrintTask2SoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "CreatePrintTask2SoapOut"
               qname = "(CreatePrintTask2SoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (PrintSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "PrintSoapIn"
               qname = "(PrintSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('Print', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (PrintSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "PrintSoapOut"
               qname = "(PrintSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('PrintResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (GetPrintTaskStatusSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "GetPrintTaskStatusSoapIn"
               qname = "(GetPrintTaskStatusSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (GetPrintTaskStatusSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "GetPrintTaskStatusSoapOut"
               qname = "(GetPrintTaskStatusSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CentralPrintCombineSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "CentralPrintCombineSoapIn"
               qname = "(CentralPrintCombineSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CentralPrintCombine', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CentralPrintCombineSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "CentralPrintCombineSoapOut"
               qname = "(CentralPrintCombineSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CentralPrintSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "CentralPrintSoapIn"
               qname = "(CentralPrintSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CentralPrint', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (CentralPrintSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "CentralPrintSoapOut"
               qname = "(CentralPrintSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('CentralPrintResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (AddQCLogSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "AddQCLogSoapIn"
               qname = "(AddQCLogSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('AddQCLog', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (AddQCLogSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "AddQCLogSoapOut"
               qname = "(AddQCLogSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('AddQCLogResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (VersionSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "VersionSoapIn"
               qname = "(VersionSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('Version', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (VersionSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "VersionSoapOut"
               qname = "(VersionSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('VersionResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (UpdateReportPrinterStatusSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "UpdateReportPrinterStatusSoapIn"
               qname = "(UpdateReportPrinterStatusSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (UpdateReportPrinterStatusSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "UpdateReportPrinterStatusSoapOut"
               qname = "(UpdateReportPrinterStatusSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryExamInfoSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "QueryExamInfoSoapIn"
               qname = "(QueryExamInfoSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('QueryExamInfo', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryExamInfoSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "QueryExamInfoSoapOut"
               qname = "(QueryExamInfoSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportPrintedSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportPrintedSoapIn"
               qname = "(SetReportPrintedSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('SetReportPrinted', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportPrintedSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportPrintedSoapOut"
               qname = "(SetReportPrintedSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportUnPrintedSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportUnPrintedSoapIn"
               qname = "(SetReportUnPrintedSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportUnPrintedSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportUnPrintedSoapOut"
               qname = "(SetReportUnPrintedSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryPrintTaskSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "QueryPrintTaskSoapIn"
               qname = "(QueryPrintTaskSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('QueryPrintTask', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryPrintTaskSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "QueryPrintTaskSoapOut"
               qname = "(QueryPrintTaskSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapIn, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapIn"
               qname = "(NotifyFilmInfoSoapIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapOut, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapOut"
               qname = "(NotifyFilmInfoSoapOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://tempuri.org/",
                     element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetPrintModeHttpGetIn"
               qname = "(SetPrintModeHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="strAccessionNumber" type="s:string"/&gt;
                     name = "strAccessionNumber"
                     qname[] = 
                        "strAccessionNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="strStudyInstanceUID" type="s:string"/&gt;
                     name = "strStudyInstanceUID"
                     qname[] = 
                        "strStudyInstanceUID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="nMode" type="s:string"/&gt;
                     name = "nMode"
                     qname[] = 
                        "nMode",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (SetPrintModeHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetPrintModeHttpGetOut"
               qname = "(SetPrintModeHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyReportInfoHttpGetIn"
               qname = "(NotifyReportInfoHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="patientName" type="s:string"/&gt;
                     name = "patientName"
                     qname[] = 
                        "patientName",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                     name = "patientID"
                     qname[] = 
                        "patientID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                     name = "accessionNumber"
                     qname[] = 
                        "accessionNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="studyInstanceUID" type="s:string"/&gt;
                     name = "studyInstanceUID"
                     qname[] = 
                        "studyInstanceUID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="reportStatus" type="s:string"/&gt;
                     name = "reportStatus"
                     qname[] = 
                        "reportStatus",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="reportFileName" type="s1:StringArray"/&gt;
                     name = "reportFileName"
                     qname[] = 
                        "reportFileName",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('StringArray', 'http://tempuri.org/AbstractTypes')"
                  },
            }
         (NotifyReportInfoHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyReportInfoHttpGetOut"
               qname = "(NotifyReportInfoHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (AddQCLogHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "AddQCLogHttpGetIn"
               qname = "(AddQCLogHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="QCUID" type="s:string"/&gt;
                     name = "QCUID"
                     qname[] = 
                        "QCUID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCLevel" type="s:string"/&gt;
                     name = "QCLevel"
                     qname[] = 
                        "QCLevel",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCUser" type="s:string"/&gt;
                     name = "QCUser"
                     qname[] = 
                        "QCUser",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCEvent" type="s:string"/&gt;
                     name = "QCEvent"
                     qname[] = 
                        "QCEvent",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCDescription" type="s:string"/&gt;
                     name = "QCDescription"
                     qname[] = 
                        "QCDescription",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (AddQCLogHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "AddQCLogHttpGetOut"
               qname = "(AddQCLogHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (VersionHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "VersionHttpGetIn"
               qname = "(VersionHttpGetIn, http://tempuri.org/)"
               parts[] = &lt;empty&gt;
            }
         (VersionHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "VersionHttpGetOut"
               qname = "(VersionHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('string', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (UpdateReportPrinterStatusHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "UpdateReportPrinterStatusHttpGetIn"
               qname = "(UpdateReportPrinterStatusHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="nPrinterStatus" type="s:string"/&gt;
                     name = "nPrinterStatus"
                     qname[] = 
                        "nPrinterStatus",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="nErrorCode" type="s:string"/&gt;
                     name = "nErrorCode"
                     qname[] = 
                        "nErrorCode",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="strErrorDesc" type="s:string"/&gt;
                     name = "strErrorDesc"
                     qname[] = 
                        "strErrorDesc",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (UpdateReportPrinterStatusHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "UpdateReportPrinterStatusHttpGetOut"
               qname = "(UpdateReportPrinterStatusHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryExamInfoHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "QueryExamInfoHttpGetIn"
               qname = "(QueryExamInfoHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="cardNumber" type="s:string"/&gt;
                     name = "cardNumber"
                     qname[] = 
                        "cardNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="cardType" type="s:string"/&gt;
                     name = "cardType"
                     qname[] = 
                        "cardType",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (QueryExamInfoHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "QueryExamInfoHttpGetOut"
               qname = "(QueryExamInfoHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('string', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportPrintedHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportPrintedHttpGetIn"
               qname = "(SetReportPrintedHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                     name = "reportId"
                     qname[] = 
                        "reportId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                     name = "taskId"
                     qname[] = 
                        "taskId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (SetReportPrintedHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportPrintedHttpGetOut"
               qname = "(SetReportPrintedHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('boolean', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportUnPrintedHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportUnPrintedHttpGetIn"
               qname = "(SetReportUnPrintedHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                     name = "reportId"
                     qname[] = 
                        "reportId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                     name = "taskId"
                     qname[] = 
                        "taskId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (SetReportUnPrintedHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportUnPrintedHttpGetOut"
               qname = "(SetReportUnPrintedHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('boolean', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryPrintTaskHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "QueryPrintTaskHttpGetIn"
               qname = "(QueryPrintTaskHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                     name = "taskId"
                     qname[] = 
                        "taskId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (QueryPrintTaskHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "QueryPrintTaskHttpGetOut"
               qname = "(QueryPrintTaskHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:PrintTask"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('PrintTask', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoHttpGetIn, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyFilmInfoHttpGetIn"
               qname = "(NotifyFilmInfoHttpGetIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                     name = "accessionNumber"
                     qname[] = 
                        "accessionNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                     name = "patientID"
                     qname[] = 
                        "patientID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (NotifyFilmInfoHttpGetOut, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyFilmInfoHttpGetOut"
               qname = "(NotifyFilmInfoHttpGetOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('boolean', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetPrintModeHttpPostIn"
               qname = "(SetPrintModeHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="strAccessionNumber" type="s:string"/&gt;
                     name = "strAccessionNumber"
                     qname[] = 
                        "strAccessionNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="strStudyInstanceUID" type="s:string"/&gt;
                     name = "strStudyInstanceUID"
                     qname[] = 
                        "strStudyInstanceUID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="nMode" type="s:string"/&gt;
                     name = "nMode"
                     qname[] = 
                        "nMode",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (SetPrintModeHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetPrintModeHttpPostOut"
               qname = "(SetPrintModeHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyReportInfoHttpPostIn"
               qname = "(NotifyReportInfoHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="patientName" type="s:string"/&gt;
                     name = "patientName"
                     qname[] = 
                        "patientName",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                     name = "patientID"
                     qname[] = 
                        "patientID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                     name = "accessionNumber"
                     qname[] = 
                        "accessionNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="studyInstanceUID" type="s:string"/&gt;
                     name = "studyInstanceUID"
                     qname[] = 
                        "studyInstanceUID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="reportStatus" type="s:string"/&gt;
                     name = "reportStatus"
                     qname[] = 
                        "reportStatus",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="reportFileName" type="s1:StringArray"/&gt;
                     name = "reportFileName"
                     qname[] = 
                        "reportFileName",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('StringArray', 'http://tempuri.org/AbstractTypes')"
                  },
            }
         (NotifyReportInfoHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyReportInfoHttpPostOut"
               qname = "(NotifyReportInfoHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (AddQCLogHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "AddQCLogHttpPostIn"
               qname = "(AddQCLogHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="QCUID" type="s:string"/&gt;
                     name = "QCUID"
                     qname[] = 
                        "QCUID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCLevel" type="s:string"/&gt;
                     name = "QCLevel"
                     qname[] = 
                        "QCLevel",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCUser" type="s:string"/&gt;
                     name = "QCUser"
                     qname[] = 
                        "QCUser",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCEvent" type="s:string"/&gt;
                     name = "QCEvent"
                     qname[] = 
                        "QCEvent",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="QCDescription" type="s:string"/&gt;
                     name = "QCDescription"
                     qname[] = 
                        "QCDescription",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (AddQCLogHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "AddQCLogHttpPostOut"
               qname = "(AddQCLogHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (VersionHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "VersionHttpPostIn"
               qname = "(VersionHttpPostIn, http://tempuri.org/)"
               parts[] = &lt;empty&gt;
            }
         (VersionHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "VersionHttpPostOut"
               qname = "(VersionHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('string', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (UpdateReportPrinterStatusHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "UpdateReportPrinterStatusHttpPostIn"
               qname = "(UpdateReportPrinterStatusHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="nPrinterStatus" type="s:string"/&gt;
                     name = "nPrinterStatus"
                     qname[] = 
                        "nPrinterStatus",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="nErrorCode" type="s:string"/&gt;
                     name = "nErrorCode"
                     qname[] = 
                        "nErrorCode",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="strErrorDesc" type="s:string"/&gt;
                     name = "strErrorDesc"
                     qname[] = 
                        "strErrorDesc",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (UpdateReportPrinterStatusHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "UpdateReportPrinterStatusHttpPostOut"
               qname = "(UpdateReportPrinterStatusHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('int', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryExamInfoHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "QueryExamInfoHttpPostIn"
               qname = "(QueryExamInfoHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="cardNumber" type="s:string"/&gt;
                     name = "cardNumber"
                     qname[] = 
                        "cardNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="cardType" type="s:string"/&gt;
                     name = "cardType"
                     qname[] = 
                        "cardType",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (QueryExamInfoHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "QueryExamInfoHttpPostOut"
               qname = "(QueryExamInfoHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('string', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportPrintedHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportPrintedHttpPostIn"
               qname = "(SetReportPrintedHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                     name = "reportId"
                     qname[] = 
                        "reportId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                     name = "taskId"
                     qname[] = 
                        "taskId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (SetReportPrintedHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportPrintedHttpPostOut"
               qname = "(SetReportPrintedHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('boolean', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (SetReportUnPrintedHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportUnPrintedHttpPostIn"
               qname = "(SetReportUnPrintedHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                     name = "reportId"
                     qname[] = 
                        "reportId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                     name = "taskId"
                     qname[] = 
                        "taskId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (SetReportUnPrintedHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "SetReportUnPrintedHttpPostOut"
               qname = "(SetReportUnPrintedHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('boolean', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (QueryPrintTaskHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "QueryPrintTaskHttpPostIn"
               qname = "(QueryPrintTaskHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                     name = "taskId"
                     qname[] = 
                        "taskId",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (QueryPrintTaskHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "QueryPrintTaskHttpPostOut"
               qname = "(QueryPrintTaskHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:PrintTask"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('PrintTask', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoHttpPostIn, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyFilmInfoHttpPostIn"
               qname = "(NotifyFilmInfoHttpPostIn, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                     name = "accessionNumber"
                     qname[] = 
                        "accessionNumber",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
                  (Part){
                     root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                     name = "patientID"
                     qname[] = 
                        "patientID",
                        "http://tempuri.org/",
                     element = "None"
                     type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                  },
            }
         (NotifyFilmInfoHttpPostOut, http://tempuri.org/, ) = 
            (Message){
               name = "NotifyFilmInfoHttpPostOut"
               qname = "(NotifyFilmInfoHttpPostOut, http://tempuri.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                     name = "Body"
                     qname[] = 
                        "Body",
                        "http://tempuri.org/",
                     element = "('boolean', 'http://tempuri.org/')"
                     type = "None"
                  },
            }
      }
   port_types = 
      {
         (PrintServiceSoap, http://tempuri.org/, ) = 
            (PortType){
               name = "PrintServiceSoap"
               qname = "(PrintServiceSoap, http://tempuri.org/)"
               operations = 
                  {
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetPrintModeSoapIn"
                                 qname = "(SetPrintModeSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('SetPrintMode', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetPrintModeSoapOut"
                                 qname = "(SetPrintModeSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportInfoSoapIn"
                                 qname = "(NotifyReportInfoSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportInfoSoapOut"
                                 qname = "(NotifyReportInfoSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     GetPrintServerStatus = 
                        (Operation){
                           name = "GetPrintServerStatus"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "GetPrintServerStatusSoapIn"
                                 qname = "(GetPrintServerStatusSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "GetPrintServerStatusSoapOut"
                                 qname = "(GetPrintServerStatusSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     CreatePrintTask = 
                        (Operation){
                           name = "CreatePrintTask"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "CreatePrintTaskSoapIn"
                                 qname = "(CreatePrintTaskSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CreatePrintTask', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "CreatePrintTaskSoapOut"
                                 qname = "(CreatePrintTaskSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     CreatePrintTask2 = 
                        (Operation){
                           name = "CreatePrintTask2"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "CreatePrintTask2SoapIn"
                                 qname = "(CreatePrintTask2SoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "CreatePrintTask2SoapOut"
                                 qname = "(CreatePrintTask2SoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     Print = 
                        (Operation){
                           name = "Print"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "PrintSoapIn"
                                 qname = "(PrintSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('Print', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "PrintSoapOut"
                                 qname = "(PrintSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('PrintResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     GetPrintTaskStatus = 
                        (Operation){
                           name = "GetPrintTaskStatus"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "GetPrintTaskStatusSoapIn"
                                 qname = "(GetPrintTaskStatusSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "GetPrintTaskStatusSoapOut"
                                 qname = "(GetPrintTaskStatusSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     CentralPrintCombine = 
                        (Operation){
                           name = "CentralPrintCombine"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "CentralPrintCombineSoapIn"
                                 qname = "(CentralPrintCombineSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "CentralPrintCombineSoapOut"
                                 qname = "(CentralPrintCombineSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     CentralPrint = 
                        (Operation){
                           name = "CentralPrint"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "CentralPrintSoapIn"
                                 qname = "(CentralPrintSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CentralPrint', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "CentralPrintSoapOut"
                                 qname = "(CentralPrintSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     AddQCLog = 
                        (Operation){
                           name = "AddQCLog"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "AddQCLogSoapIn"
                                 qname = "(AddQCLogSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('AddQCLog', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "AddQCLogSoapOut"
                                 qname = "(AddQCLogSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     Version = 
                        (Operation){
                           name = "Version"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "VersionSoapIn"
                                 qname = "(VersionSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('Version', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "VersionSoapOut"
                                 qname = "(VersionSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('VersionResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     UpdateReportPrinterStatus = 
                        (Operation){
                           name = "UpdateReportPrinterStatus"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "UpdateReportPrinterStatusSoapIn"
                                 qname = "(UpdateReportPrinterStatusSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "UpdateReportPrinterStatusSoapOut"
                                 qname = "(UpdateReportPrinterStatusSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryExamInfo = 
                        (Operation){
                           name = "QueryExamInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "QueryExamInfoSoapIn"
                                 qname = "(QueryExamInfoSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('QueryExamInfo', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryExamInfoSoapOut"
                                 qname = "(QueryExamInfoSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetReportPrinted = 
                        (Operation){
                           name = "SetReportPrinted"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetReportPrintedSoapIn"
                                 qname = "(SetReportPrintedSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('SetReportPrinted', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetReportPrintedSoapOut"
                                 qname = "(SetReportPrintedSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetReportUnPrinted = 
                        (Operation){
                           name = "SetReportUnPrinted"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetReportUnPrintedSoapIn"
                                 qname = "(SetReportUnPrintedSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetReportUnPrintedSoapOut"
                                 qname = "(SetReportUnPrintedSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryPrintTask = 
                        (Operation){
                           name = "QueryPrintTask"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "QueryPrintTaskSoapIn"
                                 qname = "(QueryPrintTaskSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('QueryPrintTask', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryPrintTaskSoapOut"
                                 qname = "(QueryPrintTaskSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "NotifyFilmInfoSoapIn"
                                 qname = "(NotifyFilmInfoSoapIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyFilmInfoSoapOut"
                                 qname = "(NotifyFilmInfoSoapOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://tempuri.org/",
                                       element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                  }
            }
         (PrintServiceHttpGet, http://tempuri.org/, ) = 
            (PortType){
               name = "PrintServiceHttpGet"
               qname = "(PrintServiceHttpGet, http://tempuri.org/)"
               operations = 
                  {
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetPrintModeHttpGetIn"
                                 qname = "(SetPrintModeHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="strAccessionNumber" type="s:string"/&gt;
                                       name = "strAccessionNumber"
                                       qname[] = 
                                          "strAccessionNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="strStudyInstanceUID" type="s:string"/&gt;
                                       name = "strStudyInstanceUID"
                                       qname[] = 
                                          "strStudyInstanceUID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="nMode" type="s:string"/&gt;
                                       name = "nMode"
                                       qname[] = 
                                          "nMode",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetPrintModeHttpGetOut"
                                 qname = "(SetPrintModeHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportInfoHttpGetIn"
                                 qname = "(NotifyReportInfoHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="patientName" type="s:string"/&gt;
                                       name = "patientName"
                                       qname[] = 
                                          "patientName",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                       name = "patientID"
                                       qname[] = 
                                          "patientID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                       name = "accessionNumber"
                                       qname[] = 
                                          "accessionNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="studyInstanceUID" type="s:string"/&gt;
                                       name = "studyInstanceUID"
                                       qname[] = 
                                          "studyInstanceUID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="reportStatus" type="s:string"/&gt;
                                       name = "reportStatus"
                                       qname[] = 
                                          "reportStatus",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="reportFileName" type="s1:StringArray"/&gt;
                                       name = "reportFileName"
                                       qname[] = 
                                          "reportFileName",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('StringArray', 'http://tempuri.org/AbstractTypes')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportInfoHttpGetOut"
                                 qname = "(NotifyReportInfoHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     AddQCLog = 
                        (Operation){
                           name = "AddQCLog"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "AddQCLogHttpGetIn"
                                 qname = "(AddQCLogHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="QCUID" type="s:string"/&gt;
                                       name = "QCUID"
                                       qname[] = 
                                          "QCUID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCLevel" type="s:string"/&gt;
                                       name = "QCLevel"
                                       qname[] = 
                                          "QCLevel",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCUser" type="s:string"/&gt;
                                       name = "QCUser"
                                       qname[] = 
                                          "QCUser",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCEvent" type="s:string"/&gt;
                                       name = "QCEvent"
                                       qname[] = 
                                          "QCEvent",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCDescription" type="s:string"/&gt;
                                       name = "QCDescription"
                                       qname[] = 
                                          "QCDescription",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "AddQCLogHttpGetOut"
                                 qname = "(AddQCLogHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     Version = 
                        (Operation){
                           name = "Version"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "VersionHttpGetIn"
                                 qname = "(VersionHttpGetIn, http://tempuri.org/)"
                                 parts[] = &lt;empty&gt;
                              }
                           output = 
                              (Message){
                                 name = "VersionHttpGetOut"
                                 qname = "(VersionHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('string', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     UpdateReportPrinterStatus = 
                        (Operation){
                           name = "UpdateReportPrinterStatus"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "UpdateReportPrinterStatusHttpGetIn"
                                 qname = "(UpdateReportPrinterStatusHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="nPrinterStatus" type="s:string"/&gt;
                                       name = "nPrinterStatus"
                                       qname[] = 
                                          "nPrinterStatus",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="nErrorCode" type="s:string"/&gt;
                                       name = "nErrorCode"
                                       qname[] = 
                                          "nErrorCode",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="strErrorDesc" type="s:string"/&gt;
                                       name = "strErrorDesc"
                                       qname[] = 
                                          "strErrorDesc",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "UpdateReportPrinterStatusHttpGetOut"
                                 qname = "(UpdateReportPrinterStatusHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryExamInfo = 
                        (Operation){
                           name = "QueryExamInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "QueryExamInfoHttpGetIn"
                                 qname = "(QueryExamInfoHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="cardNumber" type="s:string"/&gt;
                                       name = "cardNumber"
                                       qname[] = 
                                          "cardNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="cardType" type="s:string"/&gt;
                                       name = "cardType"
                                       qname[] = 
                                          "cardType",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryExamInfoHttpGetOut"
                                 qname = "(QueryExamInfoHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('string', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetReportPrinted = 
                        (Operation){
                           name = "SetReportPrinted"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetReportPrintedHttpGetIn"
                                 qname = "(SetReportPrintedHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                       name = "reportId"
                                       qname[] = 
                                          "reportId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                       name = "taskId"
                                       qname[] = 
                                          "taskId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetReportPrintedHttpGetOut"
                                 qname = "(SetReportPrintedHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('boolean', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetReportUnPrinted = 
                        (Operation){
                           name = "SetReportUnPrinted"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetReportUnPrintedHttpGetIn"
                                 qname = "(SetReportUnPrintedHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                       name = "reportId"
                                       qname[] = 
                                          "reportId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                       name = "taskId"
                                       qname[] = 
                                          "taskId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetReportUnPrintedHttpGetOut"
                                 qname = "(SetReportUnPrintedHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('boolean', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryPrintTask = 
                        (Operation){
                           name = "QueryPrintTask"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "QueryPrintTaskHttpGetIn"
                                 qname = "(QueryPrintTaskHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                       name = "taskId"
                                       qname[] = 
                                          "taskId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryPrintTaskHttpGetOut"
                                 qname = "(QueryPrintTaskHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:PrintTask"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('PrintTask', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "NotifyFilmInfoHttpGetIn"
                                 qname = "(NotifyFilmInfoHttpGetIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                       name = "accessionNumber"
                                       qname[] = 
                                          "accessionNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                       name = "patientID"
                                       qname[] = 
                                          "patientID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyFilmInfoHttpGetOut"
                                 qname = "(NotifyFilmInfoHttpGetOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('boolean', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                  }
            }
         (PrintServiceHttpPost, http://tempuri.org/, ) = 
            (PortType){
               name = "PrintServiceHttpPost"
               qname = "(PrintServiceHttpPost, http://tempuri.org/)"
               operations = 
                  {
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetPrintModeHttpPostIn"
                                 qname = "(SetPrintModeHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="strAccessionNumber" type="s:string"/&gt;
                                       name = "strAccessionNumber"
                                       qname[] = 
                                          "strAccessionNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="strStudyInstanceUID" type="s:string"/&gt;
                                       name = "strStudyInstanceUID"
                                       qname[] = 
                                          "strStudyInstanceUID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="nMode" type="s:string"/&gt;
                                       name = "nMode"
                                       qname[] = 
                                          "nMode",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetPrintModeHttpPostOut"
                                 qname = "(SetPrintModeHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportInfoHttpPostIn"
                                 qname = "(NotifyReportInfoHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="patientName" type="s:string"/&gt;
                                       name = "patientName"
                                       qname[] = 
                                          "patientName",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                       name = "patientID"
                                       qname[] = 
                                          "patientID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                       name = "accessionNumber"
                                       qname[] = 
                                          "accessionNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="studyInstanceUID" type="s:string"/&gt;
                                       name = "studyInstanceUID"
                                       qname[] = 
                                          "studyInstanceUID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="reportStatus" type="s:string"/&gt;
                                       name = "reportStatus"
                                       qname[] = 
                                          "reportStatus",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="reportFileName" type="s1:StringArray"/&gt;
                                       name = "reportFileName"
                                       qname[] = 
                                          "reportFileName",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('StringArray', 'http://tempuri.org/AbstractTypes')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportInfoHttpPostOut"
                                 qname = "(NotifyReportInfoHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     AddQCLog = 
                        (Operation){
                           name = "AddQCLog"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "AddQCLogHttpPostIn"
                                 qname = "(AddQCLogHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="QCUID" type="s:string"/&gt;
                                       name = "QCUID"
                                       qname[] = 
                                          "QCUID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCLevel" type="s:string"/&gt;
                                       name = "QCLevel"
                                       qname[] = 
                                          "QCLevel",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCUser" type="s:string"/&gt;
                                       name = "QCUser"
                                       qname[] = 
                                          "QCUser",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCEvent" type="s:string"/&gt;
                                       name = "QCEvent"
                                       qname[] = 
                                          "QCEvent",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="QCDescription" type="s:string"/&gt;
                                       name = "QCDescription"
                                       qname[] = 
                                          "QCDescription",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "AddQCLogHttpPostOut"
                                 qname = "(AddQCLogHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     Version = 
                        (Operation){
                           name = "Version"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "VersionHttpPostIn"
                                 qname = "(VersionHttpPostIn, http://tempuri.org/)"
                                 parts[] = &lt;empty&gt;
                              }
                           output = 
                              (Message){
                                 name = "VersionHttpPostOut"
                                 qname = "(VersionHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('string', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     UpdateReportPrinterStatus = 
                        (Operation){
                           name = "UpdateReportPrinterStatus"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "UpdateReportPrinterStatusHttpPostIn"
                                 qname = "(UpdateReportPrinterStatusHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="nPrinterStatus" type="s:string"/&gt;
                                       name = "nPrinterStatus"
                                       qname[] = 
                                          "nPrinterStatus",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="nErrorCode" type="s:string"/&gt;
                                       name = "nErrorCode"
                                       qname[] = 
                                          "nErrorCode",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="strErrorDesc" type="s:string"/&gt;
                                       name = "strErrorDesc"
                                       qname[] = 
                                          "strErrorDesc",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "UpdateReportPrinterStatusHttpPostOut"
                                 qname = "(UpdateReportPrinterStatusHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('int', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryExamInfo = 
                        (Operation){
                           name = "QueryExamInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "QueryExamInfoHttpPostIn"
                                 qname = "(QueryExamInfoHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="cardNumber" type="s:string"/&gt;
                                       name = "cardNumber"
                                       qname[] = 
                                          "cardNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="cardType" type="s:string"/&gt;
                                       name = "cardType"
                                       qname[] = 
                                          "cardType",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryExamInfoHttpPostOut"
                                 qname = "(QueryExamInfoHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('string', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetReportPrinted = 
                        (Operation){
                           name = "SetReportPrinted"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetReportPrintedHttpPostIn"
                                 qname = "(SetReportPrintedHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                       name = "reportId"
                                       qname[] = 
                                          "reportId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                       name = "taskId"
                                       qname[] = 
                                          "taskId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetReportPrintedHttpPostOut"
                                 qname = "(SetReportPrintedHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('boolean', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetReportUnPrinted = 
                        (Operation){
                           name = "SetReportUnPrinted"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "SetReportUnPrintedHttpPostIn"
                                 qname = "(SetReportUnPrintedHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                       name = "reportId"
                                       qname[] = 
                                          "reportId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                       name = "taskId"
                                       qname[] = 
                                          "taskId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetReportUnPrintedHttpPostOut"
                                 qname = "(SetReportUnPrintedHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('boolean', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryPrintTask = 
                        (Operation){
                           name = "QueryPrintTask"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "QueryPrintTaskHttpPostIn"
                                 qname = "(QueryPrintTaskHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                       name = "taskId"
                                       qname[] = 
                                          "taskId",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryPrintTaskHttpPostOut"
                                 qname = "(QueryPrintTaskHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:PrintTask"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('PrintTask', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           tns[] = 
                              "tns",
                              "http://tempuri.org/",
                           input = 
                              (Message){
                                 name = "NotifyFilmInfoHttpPostIn"
                                 qname = "(NotifyFilmInfoHttpPostIn, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                       name = "accessionNumber"
                                       qname[] = 
                                          "accessionNumber",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                                    (Part){
                                       root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                       name = "patientID"
                                       qname[] = 
                                          "patientID",
                                          "http://tempuri.org/",
                                       element = "None"
                                       type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyFilmInfoHttpPostOut"
                                 qname = "(NotifyFilmInfoHttpPostOut, http://tempuri.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                       name = "Body"
                                       qname[] = 
                                          "Body",
                                          "http://tempuri.org/",
                                       element = "('boolean', 'http://tempuri.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                  }
            }
      }
   bindings = 
      {
         (PrintServiceSoap, http://tempuri.org/, ) = 
            (Binding){
               name = "PrintServiceSoap"
               qname = "(PrintServiceSoap, http://tempuri.org/)"
               operations = 
                  {
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintMode', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintServerStatus = 
                        (Operation){
                           name = "GetPrintServerStatus"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintServerStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask = 
                        (Operation){
                           name = "CreatePrintTask"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask2 = 
                        (Operation){
                           name = "CreatePrintTask2"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask2""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Print = 
                        (Operation){
                           name = "Print"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Print""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Print', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('PrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintTaskStatus = 
                        (Operation){
                           name = "GetPrintTaskStatus"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintTaskStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrintCombine = 
                        (Operation){
                           name = "CentralPrintCombine"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrintCombine""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrint = 
                        (Operation){
                           name = "CentralPrint"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrint""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrint', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     AddQCLog = 
                        (Operation){
                           name = "AddQCLog"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/AddQCLog""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLog', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Version = 
                        (Operation){
                           name = "Version"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Version""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Version', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('VersionResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     UpdateReportPrinterStatus = 
                        (Operation){
                           name = "UpdateReportPrinterStatus"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/UpdateReportPrinterStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryExamInfo = 
                        (Operation){
                           name = "QueryExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportPrinted = 
                        (Operation){
                           name = "SetReportPrinted"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportUnPrinted = 
                        (Operation){
                           name = "SetReportUnPrinted"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportUnPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryPrintTask = 
                        (Operation){
                           name = "QueryPrintTask"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryPrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "PrintServiceSoap"
                     qname = "(PrintServiceSoap, http://tempuri.org/)"
                     operations = 
                        {
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetPrintMode', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           GetPrintServerStatus = 
                              (Operation){
                                 name = "GetPrintServerStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "GetPrintServerStatusSoapIn"
                                       qname = "(GetPrintServerStatusSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "GetPrintServerStatusSoapOut"
                                       qname = "(GetPrintServerStatusSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CreatePrintTask = 
                              (Operation){
                                 name = "CreatePrintTask"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CreatePrintTaskSoapIn"
                                       qname = "(CreatePrintTaskSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTask', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CreatePrintTaskSoapOut"
                                       qname = "(CreatePrintTaskSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CreatePrintTask2 = 
                              (Operation){
                                 name = "CreatePrintTask2"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CreatePrintTask2SoapIn"
                                       qname = "(CreatePrintTask2SoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CreatePrintTask2SoapOut"
                                       qname = "(CreatePrintTask2SoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           Print = 
                              (Operation){
                                 name = "Print"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "PrintSoapIn"
                                       qname = "(PrintSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('Print', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "PrintSoapOut"
                                       qname = "(PrintSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('PrintResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           GetPrintTaskStatus = 
                              (Operation){
                                 name = "GetPrintTaskStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "GetPrintTaskStatusSoapIn"
                                       qname = "(GetPrintTaskStatusSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "GetPrintTaskStatusSoapOut"
                                       qname = "(GetPrintTaskStatusSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CentralPrintCombine = 
                              (Operation){
                                 name = "CentralPrintCombine"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CentralPrintCombineSoapIn"
                                       qname = "(CentralPrintCombineSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CentralPrintCombineSoapOut"
                                       qname = "(CentralPrintCombineSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CentralPrint = 
                              (Operation){
                                 name = "CentralPrint"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CentralPrintSoapIn"
                                       qname = "(CentralPrintSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrint', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CentralPrintSoapOut"
                                       qname = "(CentralPrintSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           AddQCLog = 
                              (Operation){
                                 name = "AddQCLog"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "AddQCLogSoapIn"
                                       qname = "(AddQCLogSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('AddQCLog', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "AddQCLogSoapOut"
                                       qname = "(AddQCLogSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           Version = 
                              (Operation){
                                 name = "Version"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "VersionSoapIn"
                                       qname = "(VersionSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('Version', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "VersionSoapOut"
                                       qname = "(VersionSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('VersionResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           UpdateReportPrinterStatus = 
                              (Operation){
                                 name = "UpdateReportPrinterStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusSoapIn"
                                       qname = "(UpdateReportPrinterStatusSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusSoapOut"
                                       qname = "(UpdateReportPrinterStatusSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryExamInfo = 
                              (Operation){
                                 name = "QueryExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryExamInfoSoapIn"
                                       qname = "(QueryExamInfoSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryExamInfo', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryExamInfoSoapOut"
                                       qname = "(QueryExamInfoSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportPrinted = 
                              (Operation){
                                 name = "SetReportPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportPrintedSoapIn"
                                       qname = "(SetReportPrintedSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportPrinted', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportPrintedSoapOut"
                                       qname = "(SetReportPrintedSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportUnPrinted = 
                              (Operation){
                                 name = "SetReportUnPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportUnPrintedSoapIn"
                                       qname = "(SetReportUnPrintedSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportUnPrintedSoapOut"
                                       qname = "(SetReportUnPrintedSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryPrintTask = 
                              (Operation){
                                 name = "QueryPrintTask"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryPrintTaskSoapIn"
                                       qname = "(QueryPrintTaskSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryPrintTask', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryPrintTaskSoapOut"
                                       qname = "(QueryPrintTaskSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
         (PrintServiceSoap12, http://tempuri.org/, ) = 
            (Binding){
               name = "PrintServiceSoap12"
               qname = "(PrintServiceSoap12, http://tempuri.org/)"
               operations = 
                  {
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintMode', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintServerStatus = 
                        (Operation){
                           name = "GetPrintServerStatus"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintServerStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask = 
                        (Operation){
                           name = "CreatePrintTask"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask2 = 
                        (Operation){
                           name = "CreatePrintTask2"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask2""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Print = 
                        (Operation){
                           name = "Print"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Print""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Print', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('PrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintTaskStatus = 
                        (Operation){
                           name = "GetPrintTaskStatus"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintTaskStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrintCombine = 
                        (Operation){
                           name = "CentralPrintCombine"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrintCombine""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrint = 
                        (Operation){
                           name = "CentralPrint"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrint""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrint', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     AddQCLog = 
                        (Operation){
                           name = "AddQCLog"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/AddQCLog""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLog', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Version = 
                        (Operation){
                           name = "Version"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Version""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Version', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('VersionResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     UpdateReportPrinterStatus = 
                        (Operation){
                           name = "UpdateReportPrinterStatus"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/UpdateReportPrinterStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryExamInfo = 
                        (Operation){
                           name = "QueryExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportPrinted = 
                        (Operation){
                           name = "SetReportPrinted"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportUnPrinted = 
                        (Operation){
                           name = "SetReportUnPrinted"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportUnPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryPrintTask = 
                        (Operation){
                           name = "QueryPrintTask"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryPrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "PrintServiceSoap"
                     qname = "(PrintServiceSoap, http://tempuri.org/)"
                     operations = 
                        {
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetPrintMode', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           GetPrintServerStatus = 
                              (Operation){
                                 name = "GetPrintServerStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "GetPrintServerStatusSoapIn"
                                       qname = "(GetPrintServerStatusSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "GetPrintServerStatusSoapOut"
                                       qname = "(GetPrintServerStatusSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CreatePrintTask = 
                              (Operation){
                                 name = "CreatePrintTask"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CreatePrintTaskSoapIn"
                                       qname = "(CreatePrintTaskSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTask', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CreatePrintTaskSoapOut"
                                       qname = "(CreatePrintTaskSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CreatePrintTask2 = 
                              (Operation){
                                 name = "CreatePrintTask2"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CreatePrintTask2SoapIn"
                                       qname = "(CreatePrintTask2SoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CreatePrintTask2SoapOut"
                                       qname = "(CreatePrintTask2SoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           Print = 
                              (Operation){
                                 name = "Print"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "PrintSoapIn"
                                       qname = "(PrintSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('Print', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "PrintSoapOut"
                                       qname = "(PrintSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('PrintResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           GetPrintTaskStatus = 
                              (Operation){
                                 name = "GetPrintTaskStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "GetPrintTaskStatusSoapIn"
                                       qname = "(GetPrintTaskStatusSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "GetPrintTaskStatusSoapOut"
                                       qname = "(GetPrintTaskStatusSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CentralPrintCombine = 
                              (Operation){
                                 name = "CentralPrintCombine"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CentralPrintCombineSoapIn"
                                       qname = "(CentralPrintCombineSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CentralPrintCombineSoapOut"
                                       qname = "(CentralPrintCombineSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           CentralPrint = 
                              (Operation){
                                 name = "CentralPrint"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "CentralPrintSoapIn"
                                       qname = "(CentralPrintSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrint', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "CentralPrintSoapOut"
                                       qname = "(CentralPrintSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           AddQCLog = 
                              (Operation){
                                 name = "AddQCLog"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "AddQCLogSoapIn"
                                       qname = "(AddQCLogSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('AddQCLog', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "AddQCLogSoapOut"
                                       qname = "(AddQCLogSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           Version = 
                              (Operation){
                                 name = "Version"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "VersionSoapIn"
                                       qname = "(VersionSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('Version', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "VersionSoapOut"
                                       qname = "(VersionSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('VersionResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           UpdateReportPrinterStatus = 
                              (Operation){
                                 name = "UpdateReportPrinterStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusSoapIn"
                                       qname = "(UpdateReportPrinterStatusSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusSoapOut"
                                       qname = "(UpdateReportPrinterStatusSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryExamInfo = 
                              (Operation){
                                 name = "QueryExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryExamInfoSoapIn"
                                       qname = "(QueryExamInfoSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryExamInfo', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryExamInfoSoapOut"
                                       qname = "(QueryExamInfoSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportPrinted = 
                              (Operation){
                                 name = "SetReportPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportPrintedSoapIn"
                                       qname = "(SetReportPrintedSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportPrinted', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportPrintedSoapOut"
                                       qname = "(SetReportPrintedSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportUnPrinted = 
                              (Operation){
                                 name = "SetReportUnPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportUnPrintedSoapIn"
                                       qname = "(SetReportUnPrintedSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportUnPrintedSoapOut"
                                       qname = "(SetReportUnPrintedSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryPrintTask = 
                              (Operation){
                                 name = "QueryPrintTask"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryPrintTaskSoapIn"
                                       qname = "(QueryPrintTaskSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryPrintTask', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryPrintTaskSoapOut"
                                       qname = "(QueryPrintTaskSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://tempuri.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
         (PrintServiceHttpGet, http://tempuri.org/, ) = 
            (Binding){
               name = "PrintServiceHttpGet"
               qname = "(PrintServiceHttpGet, http://tempuri.org/)"
               operations = &lt;empty&gt;
               type = 
                  (PortType){
                     name = "PrintServiceHttpGet"
                     qname = "(PrintServiceHttpGet, http://tempuri.org/)"
                     operations = 
                        {
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeHttpGetIn"
                                       qname = "(SetPrintModeHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="strAccessionNumber" type="s:string"/&gt;
                                             name = "strAccessionNumber"
                                             qname[] = 
                                                "strAccessionNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="strStudyInstanceUID" type="s:string"/&gt;
                                             name = "strStudyInstanceUID"
                                             qname[] = 
                                                "strStudyInstanceUID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="nMode" type="s:string"/&gt;
                                             name = "nMode"
                                             qname[] = 
                                                "nMode",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeHttpGetOut"
                                       qname = "(SetPrintModeHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoHttpGetIn"
                                       qname = "(NotifyReportInfoHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="patientName" type="s:string"/&gt;
                                             name = "patientName"
                                             qname[] = 
                                                "patientName",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                             name = "patientID"
                                             qname[] = 
                                                "patientID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                             name = "accessionNumber"
                                             qname[] = 
                                                "accessionNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="studyInstanceUID" type="s:string"/&gt;
                                             name = "studyInstanceUID"
                                             qname[] = 
                                                "studyInstanceUID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="reportStatus" type="s:string"/&gt;
                                             name = "reportStatus"
                                             qname[] = 
                                                "reportStatus",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="reportFileName" type="s1:StringArray"/&gt;
                                             name = "reportFileName"
                                             qname[] = 
                                                "reportFileName",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('StringArray', 'http://tempuri.org/AbstractTypes')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoHttpGetOut"
                                       qname = "(NotifyReportInfoHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           AddQCLog = 
                              (Operation){
                                 name = "AddQCLog"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "AddQCLogHttpGetIn"
                                       qname = "(AddQCLogHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="QCUID" type="s:string"/&gt;
                                             name = "QCUID"
                                             qname[] = 
                                                "QCUID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCLevel" type="s:string"/&gt;
                                             name = "QCLevel"
                                             qname[] = 
                                                "QCLevel",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCUser" type="s:string"/&gt;
                                             name = "QCUser"
                                             qname[] = 
                                                "QCUser",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCEvent" type="s:string"/&gt;
                                             name = "QCEvent"
                                             qname[] = 
                                                "QCEvent",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCDescription" type="s:string"/&gt;
                                             name = "QCDescription"
                                             qname[] = 
                                                "QCDescription",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "AddQCLogHttpGetOut"
                                       qname = "(AddQCLogHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           Version = 
                              (Operation){
                                 name = "Version"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "VersionHttpGetIn"
                                       qname = "(VersionHttpGetIn, http://tempuri.org/)"
                                       parts[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Message){
                                       name = "VersionHttpGetOut"
                                       qname = "(VersionHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('string', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           UpdateReportPrinterStatus = 
                              (Operation){
                                 name = "UpdateReportPrinterStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusHttpGetIn"
                                       qname = "(UpdateReportPrinterStatusHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="nPrinterStatus" type="s:string"/&gt;
                                             name = "nPrinterStatus"
                                             qname[] = 
                                                "nPrinterStatus",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="nErrorCode" type="s:string"/&gt;
                                             name = "nErrorCode"
                                             qname[] = 
                                                "nErrorCode",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="strErrorDesc" type="s:string"/&gt;
                                             name = "strErrorDesc"
                                             qname[] = 
                                                "strErrorDesc",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusHttpGetOut"
                                       qname = "(UpdateReportPrinterStatusHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryExamInfo = 
                              (Operation){
                                 name = "QueryExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryExamInfoHttpGetIn"
                                       qname = "(QueryExamInfoHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="cardNumber" type="s:string"/&gt;
                                             name = "cardNumber"
                                             qname[] = 
                                                "cardNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="cardType" type="s:string"/&gt;
                                             name = "cardType"
                                             qname[] = 
                                                "cardType",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryExamInfoHttpGetOut"
                                       qname = "(QueryExamInfoHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('string', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportPrinted = 
                              (Operation){
                                 name = "SetReportPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportPrintedHttpGetIn"
                                       qname = "(SetReportPrintedHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                             name = "reportId"
                                             qname[] = 
                                                "reportId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                             name = "taskId"
                                             qname[] = 
                                                "taskId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportPrintedHttpGetOut"
                                       qname = "(SetReportPrintedHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('boolean', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportUnPrinted = 
                              (Operation){
                                 name = "SetReportUnPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportUnPrintedHttpGetIn"
                                       qname = "(SetReportUnPrintedHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                             name = "reportId"
                                             qname[] = 
                                                "reportId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                             name = "taskId"
                                             qname[] = 
                                                "taskId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportUnPrintedHttpGetOut"
                                       qname = "(SetReportUnPrintedHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('boolean', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryPrintTask = 
                              (Operation){
                                 name = "QueryPrintTask"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryPrintTaskHttpGetIn"
                                       qname = "(QueryPrintTaskHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                             name = "taskId"
                                             qname[] = 
                                                "taskId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryPrintTaskHttpGetOut"
                                       qname = "(QueryPrintTaskHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:PrintTask"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('PrintTask', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoHttpGetIn"
                                       qname = "(NotifyFilmInfoHttpGetIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                             name = "accessionNumber"
                                             qname[] = 
                                                "accessionNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                             name = "patientID"
                                             qname[] = 
                                                "patientID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoHttpGetOut"
                                       qname = "(NotifyFilmInfoHttpGetOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('boolean', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = None
            }
         (PrintServiceHttpPost, http://tempuri.org/, ) = 
            (Binding){
               name = "PrintServiceHttpPost"
               qname = "(PrintServiceHttpPost, http://tempuri.org/)"
               operations = &lt;empty&gt;
               type = 
                  (PortType){
                     name = "PrintServiceHttpPost"
                     qname = "(PrintServiceHttpPost, http://tempuri.org/)"
                     operations = 
                        {
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeHttpPostIn"
                                       qname = "(SetPrintModeHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="strAccessionNumber" type="s:string"/&gt;
                                             name = "strAccessionNumber"
                                             qname[] = 
                                                "strAccessionNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="strStudyInstanceUID" type="s:string"/&gt;
                                             name = "strStudyInstanceUID"
                                             qname[] = 
                                                "strStudyInstanceUID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="nMode" type="s:string"/&gt;
                                             name = "nMode"
                                             qname[] = 
                                                "nMode",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeHttpPostOut"
                                       qname = "(SetPrintModeHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoHttpPostIn"
                                       qname = "(NotifyReportInfoHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="patientName" type="s:string"/&gt;
                                             name = "patientName"
                                             qname[] = 
                                                "patientName",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                             name = "patientID"
                                             qname[] = 
                                                "patientID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                             name = "accessionNumber"
                                             qname[] = 
                                                "accessionNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="studyInstanceUID" type="s:string"/&gt;
                                             name = "studyInstanceUID"
                                             qname[] = 
                                                "studyInstanceUID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="reportStatus" type="s:string"/&gt;
                                             name = "reportStatus"
                                             qname[] = 
                                                "reportStatus",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="reportFileName" type="s1:StringArray"/&gt;
                                             name = "reportFileName"
                                             qname[] = 
                                                "reportFileName",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('StringArray', 'http://tempuri.org/AbstractTypes')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoHttpPostOut"
                                       qname = "(NotifyReportInfoHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           AddQCLog = 
                              (Operation){
                                 name = "AddQCLog"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "AddQCLogHttpPostIn"
                                       qname = "(AddQCLogHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="QCUID" type="s:string"/&gt;
                                             name = "QCUID"
                                             qname[] = 
                                                "QCUID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCLevel" type="s:string"/&gt;
                                             name = "QCLevel"
                                             qname[] = 
                                                "QCLevel",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCUser" type="s:string"/&gt;
                                             name = "QCUser"
                                             qname[] = 
                                                "QCUser",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCEvent" type="s:string"/&gt;
                                             name = "QCEvent"
                                             qname[] = 
                                                "QCEvent",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="QCDescription" type="s:string"/&gt;
                                             name = "QCDescription"
                                             qname[] = 
                                                "QCDescription",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "AddQCLogHttpPostOut"
                                       qname = "(AddQCLogHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           Version = 
                              (Operation){
                                 name = "Version"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "VersionHttpPostIn"
                                       qname = "(VersionHttpPostIn, http://tempuri.org/)"
                                       parts[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Message){
                                       name = "VersionHttpPostOut"
                                       qname = "(VersionHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('string', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           UpdateReportPrinterStatus = 
                              (Operation){
                                 name = "UpdateReportPrinterStatus"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusHttpPostIn"
                                       qname = "(UpdateReportPrinterStatusHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="nPrinterStatus" type="s:string"/&gt;
                                             name = "nPrinterStatus"
                                             qname[] = 
                                                "nPrinterStatus",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="nErrorCode" type="s:string"/&gt;
                                             name = "nErrorCode"
                                             qname[] = 
                                                "nErrorCode",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="strErrorDesc" type="s:string"/&gt;
                                             name = "strErrorDesc"
                                             qname[] = 
                                                "strErrorDesc",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "UpdateReportPrinterStatusHttpPostOut"
                                       qname = "(UpdateReportPrinterStatusHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:int"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('int', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryExamInfo = 
                              (Operation){
                                 name = "QueryExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryExamInfoHttpPostIn"
                                       qname = "(QueryExamInfoHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="cardNumber" type="s:string"/&gt;
                                             name = "cardNumber"
                                             qname[] = 
                                                "cardNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="cardType" type="s:string"/&gt;
                                             name = "cardType"
                                             qname[] = 
                                                "cardType",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryExamInfoHttpPostOut"
                                       qname = "(QueryExamInfoHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:string"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('string', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportPrinted = 
                              (Operation){
                                 name = "SetReportPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportPrintedHttpPostIn"
                                       qname = "(SetReportPrintedHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                             name = "reportId"
                                             qname[] = 
                                                "reportId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                             name = "taskId"
                                             qname[] = 
                                                "taskId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportPrintedHttpPostOut"
                                       qname = "(SetReportPrintedHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('boolean', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetReportUnPrinted = 
                              (Operation){
                                 name = "SetReportUnPrinted"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "SetReportUnPrintedHttpPostIn"
                                       qname = "(SetReportUnPrintedHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="reportId" type="s:string"/&gt;
                                             name = "reportId"
                                             qname[] = 
                                                "reportId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                             name = "taskId"
                                             qname[] = 
                                                "taskId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetReportUnPrintedHttpPostOut"
                                       qname = "(SetReportUnPrintedHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('boolean', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryPrintTask = 
                              (Operation){
                                 name = "QueryPrintTask"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "QueryPrintTaskHttpPostIn"
                                       qname = "(QueryPrintTaskHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="taskId" type="s:string"/&gt;
                                             name = "taskId"
                                             qname[] = 
                                                "taskId",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryPrintTaskHttpPostOut"
                                       qname = "(QueryPrintTaskHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:PrintTask"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('PrintTask', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://tempuri.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoHttpPostIn"
                                       qname = "(NotifyFilmInfoHttpPostIn, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="accessionNumber" type="s:string"/&gt;
                                             name = "accessionNumber"
                                             qname[] = 
                                                "accessionNumber",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                          (Part){
                                             root = &lt;wsdl:part name="patientID" type="s:string"/&gt;
                                             name = "patientID"
                                             qname[] = 
                                                "patientID",
                                                "http://tempuri.org/",
                                             element = "None"
                                             type = "('string', 'http://www.w3.org/2001/XMLSchema')"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoHttpPostOut"
                                       qname = "(NotifyFilmInfoHttpPostOut, http://tempuri.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="Body" element="tns:boolean"/&gt;
                                             name = "Body"
                                             qname[] = 
                                                "Body",
                                                "http://tempuri.org/",
                                             element = "('boolean', 'http://tempuri.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = None
            }
      }
   services[] = 
      (Service){
         name = "PrintService"
         qname = "(PrintService, http://tempuri.org/)"
         ports[] = 
            (Port){
               name = "PrintServiceSoap"
               qname = "(PrintServiceSoap, http://tempuri.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "PrintServiceSoap"
                     qname = "(PrintServiceSoap, http://tempuri.org/)"
                     operations = 
                        {
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetPrintMode', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           GetPrintServerStatus = 
                              (Operation){
                                 name = "GetPrintServerStatus"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/GetPrintServerStatus""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CreatePrintTask = 
                              (Operation){
                                 name = "CreatePrintTask"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CreatePrintTask""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CreatePrintTask2 = 
                              (Operation){
                                 name = "CreatePrintTask2"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CreatePrintTask2""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           Print = 
                              (Operation){
                                 name = "Print"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/Print""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('Print', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('PrintResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           GetPrintTaskStatus = 
                              (Operation){
                                 name = "GetPrintTaskStatus"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/GetPrintTaskStatus""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CentralPrintCombine = 
                              (Operation){
                                 name = "CentralPrintCombine"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CentralPrintCombine""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CentralPrint = 
                              (Operation){
                                 name = "CentralPrint"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CentralPrint""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrint', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           AddQCLog = 
                              (Operation){
                                 name = "AddQCLog"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/AddQCLog""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('AddQCLog', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           Version = 
                              (Operation){
                                 name = "Version"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/Version""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('Version', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('VersionResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           UpdateReportPrinterStatus = 
                              (Operation){
                                 name = "UpdateReportPrinterStatus"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/UpdateReportPrinterStatus""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryExamInfo = 
                              (Operation){
                                 name = "QueryExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/QueryExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetReportPrinted = 
                              (Operation){
                                 name = "SetReportPrinted"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/SetReportPrinted""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetReportUnPrinted = 
                              (Operation){
                                 name = "SetReportUnPrinted"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/SetReportUnPrinted""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryPrintTask = 
                              (Operation){
                                 name = "QueryPrintTask"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/QueryPrintTask""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "PrintServiceSoap"
                           qname = "(PrintServiceSoap, http://tempuri.org/)"
                           operations = 
                              {
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintMode', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 GetPrintServerStatus = 
                                    (Operation){
                                       name = "GetPrintServerStatus"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "GetPrintServerStatusSoapIn"
                                             qname = "(GetPrintServerStatusSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "GetPrintServerStatusSoapOut"
                                             qname = "(GetPrintServerStatusSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CreatePrintTask = 
                                    (Operation){
                                       name = "CreatePrintTask"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CreatePrintTaskSoapIn"
                                             qname = "(CreatePrintTaskSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CreatePrintTaskSoapOut"
                                             qname = "(CreatePrintTaskSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CreatePrintTask2 = 
                                    (Operation){
                                       name = "CreatePrintTask2"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CreatePrintTask2SoapIn"
                                             qname = "(CreatePrintTask2SoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CreatePrintTask2SoapOut"
                                             qname = "(CreatePrintTask2SoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 Print = 
                                    (Operation){
                                       name = "Print"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "PrintSoapIn"
                                             qname = "(PrintSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Print', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "PrintSoapOut"
                                             qname = "(PrintSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('PrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 GetPrintTaskStatus = 
                                    (Operation){
                                       name = "GetPrintTaskStatus"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "GetPrintTaskStatusSoapIn"
                                             qname = "(GetPrintTaskStatusSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "GetPrintTaskStatusSoapOut"
                                             qname = "(GetPrintTaskStatusSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CentralPrintCombine = 
                                    (Operation){
                                       name = "CentralPrintCombine"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CentralPrintCombineSoapIn"
                                             qname = "(CentralPrintCombineSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CentralPrintCombineSoapOut"
                                             qname = "(CentralPrintCombineSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CentralPrint = 
                                    (Operation){
                                       name = "CentralPrint"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CentralPrintSoapIn"
                                             qname = "(CentralPrintSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrint', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CentralPrintSoapOut"
                                             qname = "(CentralPrintSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 AddQCLog = 
                                    (Operation){
                                       name = "AddQCLog"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "AddQCLogSoapIn"
                                             qname = "(AddQCLogSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLog', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "AddQCLogSoapOut"
                                             qname = "(AddQCLogSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 Version = 
                                    (Operation){
                                       name = "Version"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "VersionSoapIn"
                                             qname = "(VersionSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Version', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "VersionSoapOut"
                                             qname = "(VersionSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('VersionResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 UpdateReportPrinterStatus = 
                                    (Operation){
                                       name = "UpdateReportPrinterStatus"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "UpdateReportPrinterStatusSoapIn"
                                             qname = "(UpdateReportPrinterStatusSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "UpdateReportPrinterStatusSoapOut"
                                             qname = "(UpdateReportPrinterStatusSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryExamInfo = 
                                    (Operation){
                                       name = "QueryExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "QueryExamInfoSoapIn"
                                             qname = "(QueryExamInfoSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryExamInfoSoapOut"
                                             qname = "(QueryExamInfoSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetReportPrinted = 
                                    (Operation){
                                       name = "SetReportPrinted"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "SetReportPrintedSoapIn"
                                             qname = "(SetReportPrintedSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetReportPrintedSoapOut"
                                             qname = "(SetReportPrintedSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetReportUnPrinted = 
                                    (Operation){
                                       name = "SetReportUnPrinted"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "SetReportUnPrintedSoapIn"
                                             qname = "(SetReportUnPrintedSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetReportUnPrintedSoapOut"
                                             qname = "(SetReportUnPrintedSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryPrintTask = 
                                    (Operation){
                                       name = "QueryPrintTask"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "QueryPrintTaskSoapIn"
                                             qname = "(QueryPrintTaskSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryPrintTaskSoapOut"
                                             qname = "(QueryPrintTaskSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.84/PrintServer/PrintService.asmx"
               methods = 
                  {
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintMode', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintServerStatus = 
                        (Method){
                           name = "GetPrintServerStatus"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintServerStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask = 
                        (Method){
                           name = "CreatePrintTask"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask2 = 
                        (Method){
                           name = "CreatePrintTask2"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask2""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Print = 
                        (Method){
                           name = "Print"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Print""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Print', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('PrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintTaskStatus = 
                        (Method){
                           name = "GetPrintTaskStatus"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintTaskStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrintCombine = 
                        (Method){
                           name = "CentralPrintCombine"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrintCombine""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrint = 
                        (Method){
                           name = "CentralPrint"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrint""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrint', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     AddQCLog = 
                        (Method){
                           name = "AddQCLog"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/AddQCLog""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLog', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Version = 
                        (Method){
                           name = "Version"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Version""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Version', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('VersionResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     UpdateReportPrinterStatus = 
                        (Method){
                           name = "UpdateReportPrinterStatus"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/UpdateReportPrinterStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryExamInfo = 
                        (Method){
                           name = "QueryExamInfo"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportPrinted = 
                        (Method){
                           name = "SetReportPrinted"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportUnPrinted = 
                        (Method){
                           name = "SetReportUnPrinted"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportUnPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryPrintTask = 
                        (Method){
                           name = "QueryPrintTask"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryPrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
            (Port){
               name = "PrintServiceSoap12"
               qname = "(PrintServiceSoap12, http://tempuri.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "PrintServiceSoap12"
                     qname = "(PrintServiceSoap12, http://tempuri.org/)"
                     operations = 
                        {
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetPrintMode', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           GetPrintServerStatus = 
                              (Operation){
                                 name = "GetPrintServerStatus"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/GetPrintServerStatus""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CreatePrintTask = 
                              (Operation){
                                 name = "CreatePrintTask"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CreatePrintTask""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CreatePrintTask2 = 
                              (Operation){
                                 name = "CreatePrintTask2"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CreatePrintTask2""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           Print = 
                              (Operation){
                                 name = "Print"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/Print""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('Print', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('PrintResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           GetPrintTaskStatus = 
                              (Operation){
                                 name = "GetPrintTaskStatus"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/GetPrintTaskStatus""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CentralPrintCombine = 
                              (Operation){
                                 name = "CentralPrintCombine"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CentralPrintCombine""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           CentralPrint = 
                              (Operation){
                                 name = "CentralPrint"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/CentralPrint""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrint', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           AddQCLog = 
                              (Operation){
                                 name = "AddQCLog"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/AddQCLog""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('AddQCLog', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           Version = 
                              (Operation){
                                 name = "Version"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/Version""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('Version', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('VersionResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           UpdateReportPrinterStatus = 
                              (Operation){
                                 name = "UpdateReportPrinterStatus"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/UpdateReportPrinterStatus""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryExamInfo = 
                              (Operation){
                                 name = "QueryExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/QueryExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetReportPrinted = 
                              (Operation){
                                 name = "SetReportPrinted"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/SetReportPrinted""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetReportUnPrinted = 
                              (Operation){
                                 name = "SetReportUnPrinted"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/SetReportUnPrinted""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryPrintTask = 
                              (Operation){
                                 name = "QueryPrintTask"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/QueryPrintTask""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://tempuri.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://tempuri.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://tempuri.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "PrintServiceSoap"
                           qname = "(PrintServiceSoap, http://tempuri.org/)"
                           operations = 
                              {
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintMode', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 GetPrintServerStatus = 
                                    (Operation){
                                       name = "GetPrintServerStatus"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "GetPrintServerStatusSoapIn"
                                             qname = "(GetPrintServerStatusSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "GetPrintServerStatusSoapOut"
                                             qname = "(GetPrintServerStatusSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CreatePrintTask = 
                                    (Operation){
                                       name = "CreatePrintTask"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CreatePrintTaskSoapIn"
                                             qname = "(CreatePrintTaskSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CreatePrintTaskSoapOut"
                                             qname = "(CreatePrintTaskSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CreatePrintTask2 = 
                                    (Operation){
                                       name = "CreatePrintTask2"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CreatePrintTask2SoapIn"
                                             qname = "(CreatePrintTask2SoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CreatePrintTask2SoapOut"
                                             qname = "(CreatePrintTask2SoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 Print = 
                                    (Operation){
                                       name = "Print"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "PrintSoapIn"
                                             qname = "(PrintSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Print', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "PrintSoapOut"
                                             qname = "(PrintSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('PrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 GetPrintTaskStatus = 
                                    (Operation){
                                       name = "GetPrintTaskStatus"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "GetPrintTaskStatusSoapIn"
                                             qname = "(GetPrintTaskStatusSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "GetPrintTaskStatusSoapOut"
                                             qname = "(GetPrintTaskStatusSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CentralPrintCombine = 
                                    (Operation){
                                       name = "CentralPrintCombine"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CentralPrintCombineSoapIn"
                                             qname = "(CentralPrintCombineSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CentralPrintCombineSoapOut"
                                             qname = "(CentralPrintCombineSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 CentralPrint = 
                                    (Operation){
                                       name = "CentralPrint"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "CentralPrintSoapIn"
                                             qname = "(CentralPrintSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrint', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "CentralPrintSoapOut"
                                             qname = "(CentralPrintSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 AddQCLog = 
                                    (Operation){
                                       name = "AddQCLog"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "AddQCLogSoapIn"
                                             qname = "(AddQCLogSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLog', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "AddQCLogSoapOut"
                                             qname = "(AddQCLogSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 Version = 
                                    (Operation){
                                       name = "Version"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "VersionSoapIn"
                                             qname = "(VersionSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Version', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "VersionSoapOut"
                                             qname = "(VersionSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('VersionResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 UpdateReportPrinterStatus = 
                                    (Operation){
                                       name = "UpdateReportPrinterStatus"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "UpdateReportPrinterStatusSoapIn"
                                             qname = "(UpdateReportPrinterStatusSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "UpdateReportPrinterStatusSoapOut"
                                             qname = "(UpdateReportPrinterStatusSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryExamInfo = 
                                    (Operation){
                                       name = "QueryExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "QueryExamInfoSoapIn"
                                             qname = "(QueryExamInfoSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryExamInfoSoapOut"
                                             qname = "(QueryExamInfoSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetReportPrinted = 
                                    (Operation){
                                       name = "SetReportPrinted"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "SetReportPrintedSoapIn"
                                             qname = "(SetReportPrintedSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetReportPrintedSoapOut"
                                             qname = "(SetReportPrintedSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetReportUnPrinted = 
                                    (Operation){
                                       name = "SetReportUnPrinted"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "SetReportUnPrintedSoapIn"
                                             qname = "(SetReportUnPrintedSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetReportUnPrintedSoapOut"
                                             qname = "(SetReportUnPrintedSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryPrintTask = 
                                    (Operation){
                                       name = "QueryPrintTask"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "QueryPrintTaskSoapIn"
                                             qname = "(QueryPrintTaskSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryPrintTaskSoapOut"
                                             qname = "(QueryPrintTaskSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://tempuri.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://tempuri.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.84/PrintServer/PrintService.asmx"
               methods = 
                  {
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintMode', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetPrintModeResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintServerStatus = 
                        (Method){
                           name = "GetPrintServerStatus"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintServerStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintServerStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintServerStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask = 
                        (Method){
                           name = "CreatePrintTask"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CreatePrintTask2 = 
                        (Method){
                           name = "CreatePrintTask2"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CreatePrintTask2""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CreatePrintTask2Response"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CreatePrintTask2Response', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Print = 
                        (Method){
                           name = "Print"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Print""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Print"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Print', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:PrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('PrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     GetPrintTaskStatus = 
                        (Method){
                           name = "GetPrintTaskStatus"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/GetPrintTaskStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:GetPrintTaskStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('GetPrintTaskStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrintCombine = 
                        (Method){
                           name = "CentralPrintCombine"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrintCombine""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombine"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombine', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintCombineResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintCombineResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     CentralPrint = 
                        (Method){
                           name = "CentralPrint"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/CentralPrint""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrint"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrint', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:CentralPrintResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('CentralPrintResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     AddQCLog = 
                        (Method){
                           name = "AddQCLog"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/AddQCLog""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLog"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLog', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:AddQCLogResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('AddQCLogResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     Version = 
                        (Method){
                           name = "Version"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/Version""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:Version"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('Version', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:VersionResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('VersionResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     UpdateReportPrinterStatus = 
                        (Method){
                           name = "UpdateReportPrinterStatus"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/UpdateReportPrinterStatus""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatus"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatus', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:UpdateReportPrinterStatusResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('UpdateReportPrinterStatusResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryExamInfo = 
                        (Method){
                           name = "QueryExamInfo"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryExamInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportPrinted = 
                        (Method){
                           name = "SetReportPrinted"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetReportUnPrinted = 
                        (Method){
                           name = "SetReportUnPrinted"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/SetReportUnPrinted""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrinted"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrinted', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetReportUnPrintedResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('SetReportUnPrintedResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryPrintTask = 
                        (Method){
                           name = "QueryPrintTask"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/QueryPrintTask""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTask"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTask', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryPrintTaskResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('QueryPrintTaskResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.84/PrintServer/PrintService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x03E39E50&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://tempuri.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfo', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://tempuri.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://tempuri.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://tempuri.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
      },
 }</msg>
<msg timestamp="20191101 15:55:58.200" level="DEBUG">('SetPrintMode', 'http://tempuri.org/'), found as: &lt;Element:0x3e39d90 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191101 15:55:58.200" level="DEBUG">method 'SetPrintMode' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.200" level="DEBUG">('NotifyReportInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3e39ef0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:58.200" level="DEBUG">method 'NotifyReportInfo' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.200" level="DEBUG">('GetPrintServerStatus', 'http://tempuri.org/'), found as: &lt;Element:0x3e39dd0 name="GetPrintServerStatus" /&gt;</msg>
<msg timestamp="20191101 15:55:58.200" level="DEBUG">method 'GetPrintServerStatus' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.200" level="DEBUG">('CreatePrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x3e39a10 name="CreatePrintTask" /&gt;</msg>
<msg timestamp="20191101 15:55:58.200" level="DEBUG">method 'CreatePrintTask' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.200" level="DEBUG">('CreatePrintTask2', 'http://tempuri.org/'), found as: &lt;Element:0x3e39ab0 name="CreatePrintTask2" /&gt;</msg>
<msg timestamp="20191101 15:55:58.200" level="DEBUG">method 'CreatePrintTask2' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.200" level="DEBUG">('Print', 'http://tempuri.org/'), found as: &lt;Element:0x3e08270 name="Print" /&gt;</msg>
<msg timestamp="20191101 15:55:58.200" level="DEBUG">method 'Print' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.200" level="DEBUG">('GetPrintTaskStatus', 'http://tempuri.org/'), found as: &lt;Element:0x3e08450 name="GetPrintTaskStatus" /&gt;</msg>
<msg timestamp="20191101 15:55:58.200" level="DEBUG">method 'GetPrintTaskStatus' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.200" level="DEBUG">('CentralPrintCombine', 'http://tempuri.org/'), found as: &lt;Element:0x3e08610 name="CentralPrintCombine" /&gt;</msg>
<msg timestamp="20191101 15:55:58.200" level="DEBUG">method 'CentralPrintCombine' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.200" level="DEBUG">('CentralPrint', 'http://tempuri.org/'), found as: &lt;Element:0x3e08950 name="CentralPrint" /&gt;</msg>
<msg timestamp="20191101 15:55:58.200" level="DEBUG">method 'CentralPrint' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.200" level="DEBUG">('AddQCLog', 'http://tempuri.org/'), found as: &lt;Element:0x3e08af0 name="AddQCLog" /&gt;</msg>
<msg timestamp="20191101 15:55:58.200" level="DEBUG">method 'AddQCLog' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.200" level="DEBUG">('Version', 'http://tempuri.org/'), found as: &lt;Element:0x3e08d10 name="Version" /&gt;</msg>
<msg timestamp="20191101 15:55:58.200" level="DEBUG">method 'Version' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.200" level="DEBUG">('UpdateReportPrinterStatus', 'http://tempuri.org/'), found as: &lt;Element:0x3e08e70 name="UpdateReportPrinterStatus" /&gt;</msg>
<msg timestamp="20191101 15:55:58.200" level="DEBUG">method 'UpdateReportPrinterStatus' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.200" level="DEBUG">('QueryExamInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3e08f70 name="QueryExamInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">method 'QueryExamInfo' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">('SetReportPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x3e0c0d0 name="SetReportPrinted" /&gt;</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">method 'SetReportPrinted' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">('SetReportUnPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x3e0c1f0 name="SetReportUnPrinted" /&gt;</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">method 'SetReportUnPrinted' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">('QueryPrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x3e0c310 name="QueryPrintTask" /&gt;</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">method 'QueryPrintTask' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">('NotifyFilmInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3e0c890 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">method 'NotifyFilmInfo' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">('SetPrintMode', 'http://tempuri.org/'), found as: &lt;Element:0x3e39d90 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">method 'SetPrintMode' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">('NotifyReportInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3e39ef0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">method 'NotifyReportInfo' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">('GetPrintServerStatus', 'http://tempuri.org/'), found as: &lt;Element:0x3e39dd0 name="GetPrintServerStatus" /&gt;</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">method 'GetPrintServerStatus' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">('CreatePrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x3e39a10 name="CreatePrintTask" /&gt;</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">method 'CreatePrintTask' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">('CreatePrintTask2', 'http://tempuri.org/'), found as: &lt;Element:0x3e39ab0 name="CreatePrintTask2" /&gt;</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">method 'CreatePrintTask2' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">('Print', 'http://tempuri.org/'), found as: &lt;Element:0x3e08270 name="Print" /&gt;</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">method 'Print' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">('GetPrintTaskStatus', 'http://tempuri.org/'), found as: &lt;Element:0x3e08450 name="GetPrintTaskStatus" /&gt;</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">method 'GetPrintTaskStatus' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">('CentralPrintCombine', 'http://tempuri.org/'), found as: &lt;Element:0x3e08610 name="CentralPrintCombine" /&gt;</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">method 'CentralPrintCombine' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">('CentralPrint', 'http://tempuri.org/'), found as: &lt;Element:0x3e08950 name="CentralPrint" /&gt;</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">method 'CentralPrint' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">('AddQCLog', 'http://tempuri.org/'), found as: &lt;Element:0x3e08af0 name="AddQCLog" /&gt;</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">method 'AddQCLog' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">('Version', 'http://tempuri.org/'), found as: &lt;Element:0x3e08d10 name="Version" /&gt;</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">method 'Version' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">('UpdateReportPrinterStatus', 'http://tempuri.org/'), found as: &lt;Element:0x3e08e70 name="UpdateReportPrinterStatus" /&gt;</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">method 'UpdateReportPrinterStatus' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">('QueryExamInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3e08f70 name="QueryExamInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">method 'QueryExamInfo' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">('SetReportPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x3e0c0d0 name="SetReportPrinted" /&gt;</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">method 'SetReportPrinted' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">('SetReportUnPrinted', 'http://tempuri.org/'), found as: &lt;Element:0x3e0c1f0 name="SetReportUnPrinted" /&gt;</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">method 'SetReportUnPrinted' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">('QueryPrintTask', 'http://tempuri.org/'), found as: &lt;Element:0x3e0c310 name="QueryPrintTask" /&gt;</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">method 'QueryPrintTask' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">('NotifyFilmInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3e0c890 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">method 'NotifyFilmInfo' created: started: 1572594958 (running)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e08cb0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e08cb0 name="QCUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">TypeQuery:0x492cd30, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e08d70, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e08d70 name="QCLevel" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">TypeQuery:0x492cd30, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e08d90, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e08d90 name="QCUser" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">TypeQuery:0x492cd30, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e08db0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e08db0 name="QCEvent" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">TypeQuery:0x492cd30, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e08dd0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e08dd0 name="QCDescription" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">TypeQuery:0x492cd30, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e08ad0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4959ed0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e08ad0 name="strTerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">TypeQuery:0x4959ed0, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e08b30, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4959ed0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e08b30 name="strID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">TypeQuery:0x4959ed0, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e08b50, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4959ed0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e08b50 name="strIDType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">TypeQuery:0x4959ed0, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e08b70, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4959ed0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e08b70 name="userId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">TypeQuery:0x4959ed0, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e087f0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e087f0 name="strTerminalID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">TypeQuery:0x492cd30, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e08870, resolving: ('ArrayOfString', 'http://tempuri.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "ArrayOfString",
      "http://tempuri.org/",
   history[] = 
      &lt;Element:0x3e08870 name="strIDAccID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">('ArrayOfString', 'http://tempuri.org/'), found as: &lt;Complex:0x3e39bd0 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e08890, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e08890 name="strAccType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">TypeQuery:0x492cd30, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e088b0, resolving: ('ArrayOfString', 'http://tempuri.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "ArrayOfString",
      "http://tempuri.org/",
   history[] = 
      &lt;Element:0x3e088b0 name="strIDUsID" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">('ArrayOfString', 'http://tempuri.org/'), found as: &lt;Complex:0x3e39bd0 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e088d0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e088d0 name="strUsType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">TypeQuery:0x492cd30, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e08910, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e08910 name="userId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">TypeQuery:0x492cd30, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e080b0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e080b0 name="patient_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">TypeQuery:0x492cd30, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e08110, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e08110 name="patient_id_type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">TypeQuery:0x492cd30, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e08230, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e08230 name="patient_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">TypeQuery:0x492cd30, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e082b0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e082b0 name="patient_id_type" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">TypeQuery:0x492cd30, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e08570, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e08570 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">TypeQuery:0x492cd30, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e0c950, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e0c950 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">TypeQuery:0x492cd30, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e0c9b0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e0c9b0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">TypeQuery:0x492cd30, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e39c70, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e39c70 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">TypeQuery:0x492cd30, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e39cb0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e39cb0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">TypeQuery:0x492cd30, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e39b30, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e39b30 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">TypeQuery:0x492cd30, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e39e10, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e39e10 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">TypeQuery:0x492cd30, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e39e30, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e39e30 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">TypeQuery:0x492cd30, found builtin (int)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e39a90, resolving: ('ArrayOfString', 'http://tempuri.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "ArrayOfString",
      "http://tempuri.org/",
   history[] = 
      &lt;Element:0x3e39a90 name="reportFileName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">('ArrayOfString', 'http://tempuri.org/'), found as: &lt;Complex:0x3e39bd0 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e083f0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e083f0 name="print_task_id" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">TypeQuery:0x492cd30, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e0c0b0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e0c0b0 name="cardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">TypeQuery:0x492cd30, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e0c110, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e0c110 name="cardType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">TypeQuery:0x492cd30, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e0c410, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e0c410 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">TypeQuery:0x492cd30, found builtin (int)</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">Element:0x3e39f10, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e39f10 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.216" level="DEBUG">TypeQuery:0x492cd30, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">Element:0x3e39ff0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e39ff0 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">TypeQuery:0x492cd30, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">Element:0x3e39e90, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e39e90 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">TypeQuery:0x492cd30, found builtin (int)</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">Element:0x3e0c1d0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e0c1d0 name="reportId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">TypeQuery:0x492cd30, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">Element:0x3e0c230, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e0c230 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">TypeQuery:0x492cd30, found builtin (int)</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">Element:0x3e0c2f0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e0c2f0 name="reportId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">TypeQuery:0x492cd30, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">Element:0x3e0c350, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e0c350 name="taskId" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">TypeQuery:0x492cd30, found builtin (int)</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">Element:0x3e08f50, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e08f50 name="nPrinterStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">TypeQuery:0x492cd30, found builtin (int)</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">Element:0x3e08fb0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e08fb0 name="nErrorCode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">TypeQuery:0x492cd30, found builtin (int)</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">Element:0x3e08fd0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492cd30"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e08fd0 name="strErrorDesc" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">TypeQuery:0x492cd30, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">searching schema for (ArrayOfString)</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">('ArrayOfString', http://tempuri.org/), found as: &lt;Complex:0x3e39bd0 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">found (ArrayOfString) as (&lt;Complex:0x3e39bd0 name="ArrayOfString" /&gt;)</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">Element:0x3e39c90, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4959ed0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e39c90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">TypeQuery:0x4959ed0, found builtin (string)</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">ArrayOfString created: 0 (ms)</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">('NotifyReportInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3e39ef0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">('NotifyReportInfo', 'http://tempuri.org/'), found as: &lt;Element:0x3e39ef0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">processing:
(Content){
   tag = "patientName"
   value = "CN20191101155552668885"
   type = &lt;Element:0x3e39c70 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4928570 /&gt;
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x04928F10&gt;
content:
(Content){
   tag = "patientName"
   value = "CN20191101155552668885"
   type = &lt;Element:0x3e39c70 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4928570 /&gt;
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">starting content:
(Content){
   tag = "patientName"
   value = "CN20191101155552668885"
   type = &lt;Element:0x3e39c70 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4928570 /&gt;
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04928F50&gt;)
&lt;suds.resolver.Frame object at 0x04928F50&gt;</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">created - node:
&lt;tns:patientName xmlns:tns="http://tempuri.org/"/&gt;</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">ending content:
(Content){
   tag = "patientName"
   value = "CN20191101155552668885"
   type = &lt;Element:0x3e39c70 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4928570 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04928F50&gt;)
</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">processing:
(Content){
   tag = "patientID"
   value = "P20191101155552668885"
   type = &lt;Element:0x3e39cb0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x49285b0 /&gt;
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x0492A210&gt;
content:
(Content){
   tag = "patientID"
   value = "P20191101155552668885"
   type = &lt;Element:0x3e39cb0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x49285b0 /&gt;
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">starting content:
(Content){
   tag = "patientID"
   value = "P20191101155552668885"
   type = &lt;Element:0x3e39cb0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x49285b0 /&gt;
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x0492A250&gt;)
&lt;suds.resolver.Frame object at 0x0492A250&gt;</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">created - node:
&lt;tns:patientID xmlns:tns="http://tempuri.org/"/&gt;</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">ending content:
(Content){
   tag = "patientID"
   value = "P20191101155552668885"
   type = &lt;Element:0x3e39cb0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x49285b0 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x0492A250&gt;)
</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">processing:
(Content){
   tag = "accessionNumber"
   value = "A20191101155552668885"
   type = &lt;Element:0x3e39b30 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x49285f0 /&gt;
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x0492A4F0&gt;
content:
(Content){
   tag = "accessionNumber"
   value = "A20191101155552668885"
   type = &lt;Element:0x3e39b30 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x49285f0 /&gt;
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">starting content:
(Content){
   tag = "accessionNumber"
   value = "A20191101155552668885"
   type = &lt;Element:0x3e39b30 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x49285f0 /&gt;
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x0492A530&gt;)
&lt;suds.resolver.Frame object at 0x0492A530&gt;</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">created - node:
&lt;tns:accessionNumber xmlns:tns="http://tempuri.org/"/&gt;</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">ending content:
(Content){
   tag = "accessionNumber"
   value = "A20191101155552668885"
   type = &lt;Element:0x3e39b30 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x49285f0 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x0492A530&gt;)
</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">processing:
(Content){
   tag = "studyInstanceUID"
   value = "0672189d-1702-46e2-8797-303c2f945509"
   type = &lt;Element:0x3e39e10 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4928630 /&gt;
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x0492A7D0&gt;
content:
(Content){
   tag = "studyInstanceUID"
   value = "0672189d-1702-46e2-8797-303c2f945509"
   type = &lt;Element:0x3e39e10 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4928630 /&gt;
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">starting content:
(Content){
   tag = "studyInstanceUID"
   value = "0672189d-1702-46e2-8797-303c2f945509"
   type = &lt;Element:0x3e39e10 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4928630 /&gt;
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x0492A810&gt;)
&lt;suds.resolver.Frame object at 0x0492A810&gt;</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">created - node:
&lt;tns:studyInstanceUID xmlns:tns="http://tempuri.org/"/&gt;</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">ending content:
(Content){
   tag = "studyInstanceUID"
   value = "0672189d-1702-46e2-8797-303c2f945509"
   type = &lt;Element:0x3e39e10 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4928630 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x0492A810&gt;)
</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">processing:
(Content){
   tag = "reportStatus"
   value = 2
   type = &lt;Element:0x3e39e30 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4928670 /&gt;
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x0492AAB0&gt;
content:
(Content){
   tag = "reportStatus"
   value = 2
   type = &lt;Element:0x3e39e30 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4928670 /&gt;
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">starting content:
(Content){
   tag = "reportStatus"
   value = 2
   type = &lt;Element:0x3e39e30 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4928670 /&gt;
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x0492AAF0&gt;)
&lt;suds.resolver.Frame object at 0x0492AAF0&gt;</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">created - node:
&lt;tns:reportStatus xmlns:tns="http://tempuri.org/"/&gt;</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">ending content:
(Content){
   tag = "reportStatus"
   value = "2"
   type = &lt;Element:0x3e39e30 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4928670 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x0492AAF0&gt;)
</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">processing:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf",
      }
   type = &lt;Element:0x3e39a90 name="reportFileName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
   real = &lt;Complex:0x3e39bd0 name="ArrayOfString"&gt;
   &lt;Sequence:0x3e39c50&gt;
      &lt;Element:0x3e39c90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x0492ADD0&gt;
content:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf",
      }
   type = &lt;Element:0x3e39a90 name="reportFileName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
   real = &lt;Complex:0x3e39bd0 name="ArrayOfString"&gt;
   &lt;Sequence:0x3e39c50&gt;
      &lt;Element:0x3e39c90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">starting content:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf",
      }
   type = &lt;Element:0x3e39a90 name="reportFileName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
   real = &lt;Complex:0x3e39bd0 name="ArrayOfString"&gt;
   &lt;Sequence:0x3e39c50&gt;
      &lt;Element:0x3e39c90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x0492AE10&gt;)
&lt;suds.resolver.Frame object at 0x0492AE10&gt;</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">created - node:
&lt;tns:reportFileName xmlns:tns="http://tempuri.org/"/&gt;</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">appending parent:
&lt;tns:reportFileName xmlns:tns="http://tempuri.org/"/&gt;
content:
(Content){
   tag = "string"
   value[] = 
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf",
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">starting content:
(Content){
   tag = "string"
   value[] = 
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf",
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">searching parent (&lt;Complex:0x3e39bd0 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x0492AE90&gt;)
&lt;suds.resolver.Frame object at 0x0492AE10&gt;
&lt;suds.resolver.Frame object at 0x0492AE90&gt;</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x0492AE90&gt;)
&lt;suds.resolver.Frame object at 0x0492AE10&gt;</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">appending parent:
&lt;tns:reportFileName xmlns:tns="http://tempuri.org/"/&gt;
content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf"
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">starting content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf"
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">searching parent (&lt;Complex:0x3e39bd0 name="ArrayOfString" /&gt;) for (string)</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x0492AFB0&gt;)
&lt;suds.resolver.Frame object at 0x0492AE10&gt;
&lt;suds.resolver.Frame object at 0x0492AFB0&gt;</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">created - node:
&lt;tns:string xmlns:tns="http://tempuri.org/"/&gt;</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">ending content:
(Content){
   tag = "string"
   value = "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf"
   type = &lt;Element:0x3e39c90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4928710 /&gt;
   ancestry[] = 
      &lt;Complex:0x3e39bd0 name="ArrayOfString"&gt;
   &lt;Sequence:0x3e39c50&gt;
      &lt;Element:0x3e39c90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x3e39c50&gt;
   &lt;Element:0x3e39c90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x0492AFB0&gt;)
&lt;suds.resolver.Frame object at 0x0492AE10&gt;</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x0492AE90&gt;)
&lt;suds.resolver.Frame object at 0x0492AE10&gt;
&lt;suds.resolver.Frame object at 0x0492AE90&gt;</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">ending content:
(Content){
   tag = "string"
   value[] = 
      "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf",
   type = &lt;Element:0x3e39c90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4928710 /&gt;
   ancestry[] = 
      &lt;Complex:0x3e39bd0 name="ArrayOfString"&gt;
   &lt;Sequence:0x3e39c50&gt;
      &lt;Element:0x3e39c90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;,
      &lt;Sequence:0x3e39c50&gt;
   &lt;Element:0x3e39c90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
&lt;/Sequence&gt;,
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x0492AE90&gt;)
&lt;suds.resolver.Frame object at 0x0492AE10&gt;</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">ending content:
(Content){
   tag = "reportFileName"
   value = 
      (ArrayOfString){
         string[] = 
            "E:\PUMA_AUTO_Ref\Cases\SmokeTest\4714\Report\Performance1.pdf",
      }
   type = &lt;Element:0x3e39a90 name="reportFileName" type="('ArrayOfString', 'http://tempuri.org/')" /&gt;
   real = &lt;Complex:0x3e39bd0 name="ArrayOfString"&gt;
   &lt;Sequence:0x3e39c50&gt;
      &lt;Element:0x3e39c90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   &lt;/Sequence&gt;
&lt;/Complex&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x0492AE10&gt;)
</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">message for 'NotifyReportInfo' created: 0 (ms)</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">sending to (http://10.112.20.84/PrintServer/PrintService.asmx)
message:
&lt;suds.sax.document.Document object at 0x04928A90&gt;</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">headers = {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://tempuri.org/NotifyReportInfo"'}</msg>
<msg timestamp="20191101 15:55:58.231" level="DEBUG">sending:
URL: http://10.112.20.84/PrintServer/PrintService.asmx
HEADERS: {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://tempuri.org/NotifyReportInfo"', 'Content-type': 'text/xml; charset=utf-8', 'Soapaction': b'"http://tempuri.org/NotifyReportInfo"'}
MESSAGE:
b'&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://tempuri.org/"&gt;&lt;SOAP-ENV:Header/&gt;&lt;ns0:Body&gt;&lt;ns1:NotifyReportInfo&gt;&lt;ns1:patientName&gt;CN20191101155552668885&lt;/ns1:patientName&gt;&lt;ns1:patientID&gt;P20191101155552668885&lt;/ns1:patientID&gt;&lt;ns1:accessionNumber&gt;A20191101155552668885&lt;/ns1:accessionNumber&gt;&lt;ns1:studyInstanceUID&gt;0672189d-1702-46e2-8797-303c2f945509&lt;/ns1:studyInstanceUID&gt;&lt;ns1:reportStatus&gt;2&lt;/ns1:reportStatus&gt;&lt;ns1:reportFileName&gt;&lt;ns1:string&gt;E:\\PUMA_AUTO_Ref\\Cases\\SmokeTest\\4714\\Report\\Performance1.pdf&lt;/ns1:string&gt;&lt;/ns1:reportFileName&gt;&lt;/ns1:NotifyReportInfo&gt;&lt;/ns0:Body&gt;&lt;/SOAP-ENV:Envelope&gt;'</msg>
<msg timestamp="20191101 15:55:58.560" level="DEBUG">received:
CODE: HTTPStatus.OK
HEADERS: Cache-Control: private, max-age=0
Content-Type: text/xml; charset=utf-8
Server: Microsoft-IIS/7.5
X-AspNet-Version: 4.0.30319
X-Powered-By: ASP.NET
Date: Fri, 01 Nov 2019 07:55:57 GMT
Connection: close
Content-Length: 377


MESSAGE:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;NotifyReportInfoResponse xmlns="http://tempuri.org/"&gt;&lt;NotifyReportInfoResult&gt;0&lt;/NotifyReportInfoResult&gt;&lt;/NotifyReportInfoResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191101 15:55:58.560" level="DEBUG">waited 328 (ms) on server reply</msg>
<msg timestamp="20191101 15:55:58.560" level="DEBUG">HTTP succeeded:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;NotifyReportInfoResponse xmlns="http://tempuri.org/"&gt;&lt;NotifyReportInfoResult&gt;0&lt;/NotifyReportInfoResult&gt;&lt;/NotifyReportInfoResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191101 15:55:58.560" level="DEBUG">b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;NotifyReportInfoResponse xmlns="http://tempuri.org/"&gt;&lt;NotifyReportInfoResult&gt;0&lt;/NotifyReportInfoResult&gt;&lt;/NotifyReportInfoResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'
sax duration: 0 (ms)</msg>
<msg timestamp="20191101 15:55:58.560" level="DEBUG">('NotifyReportInfoResponse', 'http://tempuri.org/'), found as: &lt;Element:0x3e39bf0 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191101 15:55:58.560" level="DEBUG">Element:0x3e39ad0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x492adf0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e39ad0 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.560" level="DEBUG">TypeQuery:0x492adf0, found builtin (int)</msg>
<msg timestamp="20191101 15:55:58.560" level="DEBUG">reset</msg>
<msg timestamp="20191101 15:55:58.560" level="DEBUG">Element:0x3e39ad0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x49233f0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x3e39ad0 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 15:55:58.560" level="DEBUG">TypeQuery:0x49233f0, found builtin (int)</msg>
<msg timestamp="20191101 15:55:58.560" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04923130&gt;)
&lt;suds.resolver.Frame object at 0x04923130&gt;</msg>
<msg timestamp="20191101 15:55:58.560" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04923130&gt;)
</msg>
<msg timestamp="20191101 15:55:58.560" level="DEBUG">method 'NotifyReportInfo' invoked: 328 (ms)</msg>
<msg timestamp="20191101 15:55:58.560" level="INFO">Report.report_create_by_printserver_reportinfo: Report Archived successfully!</msg>
<msg timestamp="20191101 15:55:58.560" level="INFO">${Report_archived_Info} = {"result": true, "patient_name": "CN20191101155552668885", "patient_id": "P20191101155552668885", "accessionNumber": "A20191101155552668885", "StudyInstanceUID": "0672189d-1702-46e2-8797-303c2f945509"...</msg>
<status status="PASS" starttime="20191101 15:55:57.903" endtime="20191101 15:55:58.560"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191101 15:55:58.560" level="INFO">${Report_archived_Info_Json} = {'result': True, 'patient_name': 'CN20191101155552668885', 'patient_id': 'P20191101155552668885', 'accessionNumber': 'A20191101155552668885', 'StudyInstanceUID': '0672189d-1702-46e2-8797-303c2f945509'...</msg>
<status status="PASS" starttime="20191101 15:55:58.560" endtime="20191101 15:55:58.560"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191101 15:55:58.606" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191101 15:55:58.560" endtime="20191101 15:55:58.606"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The web service should return true or return successfully response. Th web service return 0 as true.</arg>
</arguments>
<status status="PASS" starttime="20191101 15:55:58.606" endtime="20191101 15:55:58.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4:\n Description \n 1. Check the WGGC.dbo.AFP_ReportInfo table. \n Expected \n 1. New record can be found in AFP_ReportInfo table for received report, and the ReportStatus value should be 2.</arg>
</arguments>
<msg timestamp="20191101 15:55:58.606" level="INFO">Step 4:
Description 
1. Check the WGGC.dbo.AFP_ReportInfo table. 
Expected 
1. New record can be found in AFP_ReportInfo table for received report, and the ReportStatus value should be 2.</msg>
<status status="PASS" starttime="20191101 15:55:58.606" endtime="20191101 15:55:58.606"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>StudyInstanceUID</arg>
</arguments>
<assign>
<var>${Report_StudyInstanceUID}</var>
</assign>
<msg timestamp="20191101 15:55:58.653" level="INFO">${Report_StudyInstanceUID} = ['0672189d-1702-46e2-8797-303c2f945509']</msg>
<status status="PASS" starttime="20191101 15:55:58.606" endtime="20191101 15:55:58.653"></status>
</kw>
<kw name="Report Check Archive In Reportinfo By UUID" library="PUMA_ReportLibrary">
<doc>Report_check_archive_in_reportinfo_by_UUID</doc>
<arguments>
<arg>${Report_StudyInstanceUID}[0]</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Info}</var>
</assign>
<msg timestamp="20191101 15:55:58.888" level="INFO">Report.Report_check_archive_by_studyUID: The report archived successfully and the ReportStatus value in wggc.dbo.afp_reportinfo is [2]</msg>
<msg timestamp="20191101 15:55:58.888" level="INFO">${Report_Check_ReportInfo_Info_Info} = {"result": true, "ReportStatus": "2"}</msg>
<status status="PASS" starttime="20191101 15:55:58.653" endtime="20191101 15:55:58.888"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Info}</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Json}</var>
</assign>
<msg timestamp="20191101 15:55:58.888" level="INFO">${Report_Check_ReportInfo_Info_Json} = {'result': True, 'ReportStatus': '2'}</msg>
<status status="PASS" starttime="20191101 15:55:58.888" endtime="20191101 15:55:58.888"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Result}</var>
</assign>
<msg timestamp="20191101 15:55:58.935" level="INFO">${Report_Check_ReportInfo_Info_Result} = [True]</msg>
<status status="PASS" starttime="20191101 15:55:58.888" endtime="20191101 15:55:58.935"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>ReportStatus</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_ReportStatus}</var>
</assign>
<msg timestamp="20191101 15:55:58.966" level="INFO">${Report_Check_ReportInfo_Info_ReportStatus} = ['2']</msg>
<status status="PASS" starttime="20191101 15:55:58.935" endtime="20191101 15:55:58.966"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Result}[0]</arg>
<arg>Wggc.dbo.AFP_ReportInfo table have new records of this report</arg>
</arguments>
<status status="PASS" starttime="20191101 15:55:58.966" endtime="20191101 15:55:58.966"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_ReportStatus}[0]</arg>
<arg>2</arg>
<arg>The report status value in table wggc.dbo.afp_reportinfo is 2</arg>
</arguments>
<msg timestamp="20191101 15:55:58.966" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 15:55:58.966" endtime="20191101 15:55:58.966"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191101 15:56:03.966" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191101 15:55:58.966" endtime="20191101 15:56:03.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5: \n Description: \n 1. Check the WGGC.dbo.AFP_PrintMode table. \n Expected: \n 1. Can find a new record in table and value should be correct. \n</arg>
</arguments>
<msg timestamp="20191101 15:56:03.966" level="INFO">Step 5: 
Description: 
1. Check the WGGC.dbo.AFP_PrintMode table. 
Expected: 
1. Can find a new record in table and value should be correct. 
</msg>
<status status="PASS" starttime="20191101 15:56:03.966" endtime="20191101 15:56:03.966"></status>
</kw>
<kw name="Printmode Get Info From Db By Accn" library="PUMA_PrintModeLibrary">
<doc>printmode_get_info_from_db_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${PrintMode_info}</var>
</assign>
<msg timestamp="20191101 15:56:03.981" level="INFO">${PrintMode_info} = {"result": true, "AccessionNumber": "A20191101155552668885", "StudyInstanceUID": "", "PrintMode": 0, "StatusTime": "2019-11-01 15:55:58.817000", "HoldFlag": 1, "PrintWaitTime": "60", "ReportWaitTime":...</msg>
<status status="PASS" starttime="20191101 15:56:03.966" endtime="20191101 15:56:03.981"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintMode_info}</arg>
</arguments>
<assign>
<var>${PrintMode_info_Json}</var>
</assign>
<msg timestamp="20191101 15:56:03.981" level="INFO">${PrintMode_info_Json} = {'result': True, 'AccessionNumber': 'A20191101155552668885', 'StudyInstanceUID': '', 'PrintMode': 0, 'StatusTime': '2019-11-01 15:55:58.817000', 'HoldFlag': 1, 'PrintWaitTime': '60', 'ReportWaitTime':...</msg>
<status status="PASS" starttime="20191101 15:56:03.981" endtime="20191101 15:56:03.981"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${PrintMode_info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${PrintMode_result}</var>
</assign>
<msg timestamp="20191101 15:56:04.013" level="INFO">${PrintMode_result} = [True]</msg>
<status status="PASS" starttime="20191101 15:56:03.981" endtime="20191101 15:56:04.013"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${PrintMode_info_Json}</arg>
<arg>PrintMode</arg>
</arguments>
<assign>
<var>${PrintMode_value}</var>
</assign>
<msg timestamp="20191101 15:56:04.060" level="INFO">${PrintMode_value} = [0]</msg>
<status status="PASS" starttime="20191101 15:56:04.013" endtime="20191101 15:56:04.060"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${PrintMode_result}</arg>
</arguments>
<status status="PASS" starttime="20191101 15:56:04.060" endtime="20191101 15:56:04.060"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${PrintMode_value}[0]</arg>
<arg>0</arg>
<arg>The patient print mode is 0 for "门诊病人"</arg>
</arguments>
<msg timestamp="20191101 15:56:04.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 15:56:04.060" endtime="20191101 15:56:04.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6: \n Description: \n 1. Check the ReportStoredFlag value in T_Integration_ExamInfo table in WGGC database for this report. \n Expected: \n 1. The ReportStoredFlag value should be 9 \n</arg>
</arguments>
<msg timestamp="20191101 15:56:04.060" level="INFO">Step 6: 
Description: 
1. Check the ReportStoredFlag value in T_Integration_ExamInfo table in WGGC database for this report. 
Expected: 
1. The ReportStoredFlag value should be 9 
</msg>
<status status="PASS" starttime="20191101 15:56:04.060" endtime="20191101 15:56:04.060"></status>
</kw>
<kw name="Report Check ReportStoredFlag In T Integration ExamInfo" library="PUMA_ReportLibrary">
<doc>report_check_ReportStoredFlag_in_T_Integration_ExamInfo</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlag_info}</var>
</assign>
<msg timestamp="20191101 15:56:04.075" level="INFO">Report.report_check_ReportStoredFlag_in_T_Integration_ExamInfo: Get the ReportStoredFlag of patient [P20191101155552668885, A20191101155552668885] correct and value is 9</msg>
<msg timestamp="20191101 15:56:04.075" level="INFO">${Report_ReportStoreFlag_info} = {"result": true, "ReportStoredFlag": 9}</msg>
<status status="PASS" starttime="20191101 15:56:04.060" endtime="20191101 15:56:04.075"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info}</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlag_info_json}</var>
</assign>
<msg timestamp="20191101 15:56:04.075" level="INFO">${Report_ReportStoreFlag_info_json} = {'result': True, 'ReportStoredFlag': 9}</msg>
<status status="PASS" starttime="20191101 15:56:04.075" endtime="20191101 15:56:04.075"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info_json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlage_info_result}</var>
</assign>
<msg timestamp="20191101 15:56:04.106" level="INFO">${Report_ReportStoreFlage_info_result} = [True]</msg>
<status status="PASS" starttime="20191101 15:56:04.075" endtime="20191101 15:56:04.106"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info_json}</arg>
<arg>ReportStoredFlag</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlage_value}</var>
</assign>
<msg timestamp="20191101 15:56:04.138" level="INFO">${Report_ReportStoreFlage_value} = [9]</msg>
<status status="PASS" starttime="20191101 15:56:04.106" endtime="20191101 15:56:04.138"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_ReportStoreFlage_info_result}[0]</arg>
</arguments>
<status status="PASS" starttime="20191101 15:56:04.138" endtime="20191101 15:56:04.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Report_ReportStoreFlage_value}[0]</arg>
<arg>9</arg>
<arg>The ReportStoredFlag value should be 9 in T_integration_examInfo table</arg>
</arguments>
<msg timestamp="20191101 15:56:04.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 15:56:04.153" endtime="20191101 15:56:04.153"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191101 15:55:52.653" endtime="20191101 15:56:04.153" critical="yes"></status>
</test>
<test id="s1-t5" name="SmokeTest_005_Core_4715_03.01.01 Report receive from Virtual Print success.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1\n Description:\n1. Create a patient with an exam in RIS or local table in PS.\nExpected:\n 1. The patient with an exam can create successfully.</arg>
</arguments>
<msg timestamp="20191101 15:56:04.153" level="INFO">Step 1
Description:
1. Create a patient with an exam in RIS or local table in PS.
Expected:
1. The patient with an exam can create successfully.</msg>
<status status="PASS" starttime="20191101 15:56:04.153" endtime="20191101 15:56:04.153"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191101 15:56:04.153" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 15:56:04.169" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191101 15:56:04.169" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-01 15:56:04.153275", "UpdateDT": "2019-11-01 15:56:04.153275", "PatientID": "P20191101155604153275", "AccessionNumber": "A20191101155604153275", "StudyInstanceUID": "UID20191101155604153275", "NameCN": "CN20191101155604153275", "NameEN": "EN20191101155604153275", "Gender": "F", "Birthday": "1949-11-18", "Modality": "US", "ModalityName": "CR", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-01 15:56:04.153275", "RegisterDT": "2019-11-01 15:56:04.153275", "ExamDT": "2019-11-01 15:56:04.153275", "ReportDT": "2019-11-01 15:56:04.153275", "SubmitDT": "2019-11-01 15:56:04.153275", "ApproveDT": "2019-11-01 15:56:04.153275", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191101155604153275", "ExamBodyPart": "Chest", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191101 15:56:04.169" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-01 15:56:04.153275", "UpdateDT": "2019-11-01 15:56:04.153275", "PatientID": "P20191101155604153275", "AccessionNumber": "A20191101155604153275", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191101 15:56:04.153" endtime="20191101 15:56:04.169"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191101 15:56:04.169" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-01 15:56:04.153275', 'UpdateDT': '2019-11-01 15:56:04.153275', 'PatientID': 'P20191101155604153275', 'AccessionNumber': 'A20191101155604153275', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191101 15:56:04.169" endtime="20191101 15:56:04.169"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191101 15:56:04.216" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191101 15:56:04.169" endtime="20191101 15:56:04.216"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]</arg>
<arg>Patient create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 15:56:04.216" endtime="20191101 15:56:04.216"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191101 15:56:04.247" level="INFO">${patientID} = ['P20191101155604153275']</msg>
<status status="PASS" starttime="20191101 15:56:04.216" endtime="20191101 15:56:04.247"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${AccessionNumber}</var>
</assign>
<msg timestamp="20191101 15:56:04.294" level="INFO">${AccessionNumber} = ['A20191101155604153275']</msg>
<status status="PASS" starttime="20191101 15:56:04.247" endtime="20191101 15:56:04.294"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>NameCN</arg>
</arguments>
<assign>
<var>${PatientName}</var>
</assign>
<msg timestamp="20191101 15:56:04.325" level="INFO">${PatientName} = ['CN20191101155604153275']</msg>
<status status="PASS" starttime="20191101 15:56:04.294" endtime="20191101 15:56:04.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2: \n Description \n 1. Configure the report OCR service in PS. \n 2. Make sure it can identify the patient report in step1. \n Expected:\n The operation can execute successfully.</arg>
</arguments>
<msg timestamp="20191101 15:56:04.325" level="INFO">Step 2: 
Description 
1. Configure the report OCR service in PS. 
2. Make sure it can identify the patient report in step1. 
Expected:
The operation can execute successfully.</msg>
<status status="PASS" starttime="20191101 15:56:04.325" endtime="20191101 15:56:04.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3: \n Description \n 1. Prepare a report of patient which create in step1. \n 2. Print the report to PS by virtul printing. \n Expected: \n 1. The report can print to PS successfully. \n</arg>
</arguments>
<msg timestamp="20191101 15:56:04.325" level="INFO">Step 3: 
Description 
1. Prepare a report of patient which create in step1. 
2. Print the report to PS by virtul printing. 
Expected: 
1. The report can print to PS successfully. 
</msg>
<status status="PASS" starttime="20191101 15:56:04.325" endtime="20191101 15:56:04.325"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191101 15:56:09.325" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191101 15:56:04.325" endtime="20191101 15:56:09.325"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191101 15:56:19.435" level="INFO">PUMA_ReportLibrary._archive_check: Report achived successfully.
Report achived successfully. {"Status": true, "server": "10.112.20.84", "patient_id": "P20191101155604153275", "accession_number": "A20191101155604153275", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "powershell_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.84/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191101 15:56:19.435" level="INFO">${Report_archived_Info} = {"Status": true, "server": "10.112.20.84", "patient_id": "P20191101155604153275", "accession_number": "A20191101155604153275", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191101 15:56:09.325" endtime="20191101 15:56:19.435"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191101 15:56:19.435" level="INFO">${Report_archived_Info_Json} = {'Status': True, 'server': '10.112.20.84', 'patient_id': 'P20191101155604153275', 'accession_number': 'A20191101155604153275', 'report_file': 'D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191101 15:56:19.435" endtime="20191101 15:56:19.435"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191101 15:56:19.466" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191101 15:56:19.435" endtime="20191101 15:56:19.466"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 15:56:19.466" endtime="20191101 15:56:19.466"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20191101 15:56:29.466" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20191101 15:56:19.466" endtime="20191101 15:56:29.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4 \n \ Description \n 1. Check the WGGC.dbo.AFP_ReportInfo table. \n Expected: \n 1. New record can be found in AFP_ReportInfo table for received report, and the ReportStatus value should be 2. \n</arg>
</arguments>
<msg timestamp="20191101 15:56:29.466" level="INFO">Step 4 
 Description 
1. Check the WGGC.dbo.AFP_ReportInfo table. 
Expected: 
1. New record can be found in AFP_ReportInfo table for received report, and the ReportStatus value should be 2. 
</msg>
<status status="PASS" starttime="20191101 15:56:29.466" endtime="20191101 15:56:29.466"></status>
</kw>
<kw name="Report Get Info From Afp Reportinfo" library="PUMA_ReportLibrary">
<doc>report_get_info_from_afp_reportinfo</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Info}</var>
</assign>
<msg timestamp="20191101 15:56:29.466" level="INFO">['StudyInstanceUID', 'ReportStatus', 'StatusTime', 'AccessionNumber', 'FileName', 'PatientID', 'PatientName', 'PrintTime', 'PrintStatus', 'DeleteStatus', 'PrintCount', 'Gender', 'ExamName', 'PatientType', 'ModalityName', 'ExamDateTime', 'ReferringDepartment', 'VerifyDateTime', 'ModalityType', 'ForwardDestination', 'ForwardDateTime', 'BodyPart', 'AAccessionNumber', 'AStudyInstanceUID', 'CreatedTime', 'DepartmentID', 'PageCount', 'TerminalID', 'SyncToECS', 'CopiesCount', 'PdfPassword']
{'result': True, 'StudyInstanceUID': ('74244750345542f296a8674a26fddf14',), 'ReportStatus': (2,), 'StatusTime': ('2019-11-01 15:56:15.930000',), 'AccessionNumber': ('A20191101155604153275',), 'FileName': ('E:\\Report\\Archive\\20191101\\A20191101155604153275_155615_46b45596d5a1495e85b133dfb048559b.pdf',), 'PatientID': ('P20191101155604153275                                           ',), 'PatientName': ('CN20191101155604153275',), 'PrintTime': (None,), 'PrintStatus': (0,), 'DeleteStatus': (0,), 'PrintCount': (0,), 'Gender': ('F',), 'ExamName': ('Exam20191101155604153275',), 'PatientType': ('2',), 'ModalityName': ('CR',), 'ExamDateTime': ('2019-11-01 15:56:04.153275',), 'ReferringDepartment': ('',), 'VerifyDateTime': ('2019-11-01 15:56:15',), 'ModalityType': ('US',), 'ForwardDestination': (None,), 'ForwardDateTime': (None,), 'BodyPart': ('',), 'AAccessionNumber': (None,), 'AStudyInstanceUID': (None,), 'CreatedTime': ('2019-11-01 15:56:15.930000',), 'DepartmentID': (1,), 'PageCount': (1,), 'TerminalID': (None,), 'SyncToECS': (0,), 'CopiesCount': (1,), 'PdfPassword': (None,)}</msg>
<msg timestamp="20191101 15:56:29.481" level="INFO">${Report_Check_ReportInfo_Info_Info} = {"result": true, "StudyInstanceUID": ["74244750345542f296a8674a26fddf14"], "ReportStatus": [2], "StatusTime": ["2019-11-01 15:56:15.930000"], "AccessionNumber": ["A20191101155604153275"], "FileName": ...</msg>
<status status="PASS" starttime="20191101 15:56:29.466" endtime="20191101 15:56:29.481"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Info}</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Json}</var>
</assign>
<msg timestamp="20191101 15:56:29.481" level="INFO">${Report_Check_ReportInfo_Info_Json} = {'result': True, 'StudyInstanceUID': ['74244750345542f296a8674a26fddf14'], 'ReportStatus': [2], 'StatusTime': ['2019-11-01 15:56:15.930000'], 'AccessionNumber': ['A20191101155604153275'], 'FileName': ...</msg>
<status status="PASS" starttime="20191101 15:56:29.481" endtime="20191101 15:56:29.481"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Result}</var>
</assign>
<msg timestamp="20191101 15:56:29.513" level="INFO">${Report_Check_ReportInfo_Info_Result} = [True]</msg>
<status status="PASS" starttime="20191101 15:56:29.481" endtime="20191101 15:56:29.513"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>ReportStatus</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_ReportStatus}</var>
</assign>
<msg timestamp="20191101 15:56:29.560" level="INFO">${Report_Check_ReportInfo_Info_ReportStatus} = [[2]]</msg>
<status status="PASS" starttime="20191101 15:56:29.513" endtime="20191101 15:56:29.560"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>FileName</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_ReportPath}</var>
</assign>
<msg timestamp="20191101 15:56:29.591" level="INFO">${Report_Check_ReportInfo_Info_ReportPath} = [['E:\\Report\\Archive\\20191101\\A20191101155604153275_155615_46b45596d5a1495e85b133dfb048559b.pdf']]</msg>
<status status="PASS" starttime="20191101 15:56:29.560" endtime="20191101 15:56:29.591"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Result}[0]</arg>
<arg>Wggc.dbo.AFP_ReportInfo table have new records of this report</arg>
</arguments>
<status status="PASS" starttime="20191101 15:56:29.591" endtime="20191101 15:56:29.591"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_ReportStatus}[0][0]</arg>
<arg>2</arg>
<arg>The report status value in table wggc.dbo.afp_reportinfo is 2</arg>
</arguments>
<msg timestamp="20191101 15:56:29.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 15:56:29.591" endtime="20191101 15:56:29.591"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191101 15:56:34.591" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191101 15:56:29.591" endtime="20191101 15:56:34.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5: \n Description:\n 1. Check the WGGC.dbo.AFP_ReportInfo table. \n Expected: \n 1. New record can be found in AFP_ReportInfo table for received report, and the printstatus value should be 0. \n</arg>
</arguments>
<msg timestamp="20191101 15:56:34.591" level="INFO">Step 5: 
Description:
1. Check the WGGC.dbo.AFP_ReportInfo table. 
Expected: 
1. New record can be found in AFP_ReportInfo table for received report, and the printstatus value should be 0. 
</msg>
<status status="PASS" starttime="20191101 15:56:34.591" endtime="20191101 15:56:34.591"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>PrintStatus</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_PrintStatus}</var>
</assign>
<msg timestamp="20191101 15:56:34.638" level="INFO">${Report_Check_ReportInfo_Info_PrintStatus} = [[0]]</msg>
<status status="PASS" starttime="20191101 15:56:34.591" endtime="20191101 15:56:34.638"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Result}[0]</arg>
<arg>Wggc.dbo.AFP_ReportInfo table have new records of this report</arg>
</arguments>
<status status="PASS" starttime="20191101 15:56:34.638" endtime="20191101 15:56:34.638"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_PrintStatus}[0][0]</arg>
<arg>0</arg>
<arg>The report printstatus value is 0</arg>
</arguments>
<msg timestamp="20191101 15:56:34.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 15:56:34.638" endtime="20191101 15:56:34.638"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191101 15:56:39.638" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191101 15:56:34.638" endtime="20191101 15:56:39.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6 \n Description: \n 1. Check the WGGC.dbo.AFP_PrintMode table \n Expected:\n 1. Can find a new record in this table and value should be correct. \n</arg>
</arguments>
<msg timestamp="20191101 15:56:39.638" level="INFO">Step 6 
Description: 
1. Check the WGGC.dbo.AFP_PrintMode table 
Expected:
1. Can find a new record in this table and value should be correct. 
</msg>
<status status="PASS" starttime="20191101 15:56:39.638" endtime="20191101 15:56:39.638"></status>
</kw>
<kw name="Printmode Get Info From Db By Accn" library="PUMA_PrintModeLibrary">
<doc>printmode_get_info_from_db_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${PrintMode_info}</var>
</assign>
<msg timestamp="20191101 15:56:39.638" level="INFO">${PrintMode_info} = {"result": true, "AccessionNumber": "A20191101155604153275", "StudyInstanceUID": "", "PrintMode": 0, "StatusTime": "2019-11-01 15:56:16.147000", "HoldFlag": 1, "PrintWaitTime": "60", "ReportWaitTime":...</msg>
<status status="PASS" starttime="20191101 15:56:39.638" endtime="20191101 15:56:39.638"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintMode_info}</arg>
</arguments>
<assign>
<var>${PrintMode_info_Json}</var>
</assign>
<msg timestamp="20191101 15:56:39.638" level="INFO">${PrintMode_info_Json} = {'result': True, 'AccessionNumber': 'A20191101155604153275', 'StudyInstanceUID': '', 'PrintMode': 0, 'StatusTime': '2019-11-01 15:56:16.147000', 'HoldFlag': 1, 'PrintWaitTime': '60', 'ReportWaitTime':...</msg>
<status status="PASS" starttime="20191101 15:56:39.638" endtime="20191101 15:56:39.638"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${PrintMode_info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${PrintMode_result}</var>
</assign>
<msg timestamp="20191101 15:56:39.669" level="INFO">${PrintMode_result} = [True]</msg>
<status status="PASS" starttime="20191101 15:56:39.638" endtime="20191101 15:56:39.669"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${PrintMode_info_Json}</arg>
<arg>PrintMode</arg>
</arguments>
<assign>
<var>${PrintMode_value}</var>
</assign>
<msg timestamp="20191101 15:56:39.716" level="INFO">${PrintMode_value} = [0]</msg>
<status status="PASS" starttime="20191101 15:56:39.669" endtime="20191101 15:56:39.716"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${PrintMode_result}</arg>
</arguments>
<status status="PASS" starttime="20191101 15:56:39.716" endtime="20191101 15:56:39.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${PrintMode_value}[0]</arg>
<arg>0</arg>
<arg>The patient print mode is 0 for "门诊病人"</arg>
</arguments>
<msg timestamp="20191101 15:56:39.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 15:56:39.716" endtime="20191101 15:56:39.716"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191101 15:56:44.716" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191101 15:56:39.716" endtime="20191101 15:56:44.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 7 \n Description: \n 1. Check the ReportStoredFlag value in T_Integration_ExamInfo table in WGGC database for this report. \n Expected: \n 1. The ReportStoredFlag value should be 9 \n</arg>
</arguments>
<msg timestamp="20191101 15:56:44.716" level="INFO">Step 7 
Description: 
1. Check the ReportStoredFlag value in T_Integration_ExamInfo table in WGGC database for this report. 
Expected: 
1. The ReportStoredFlag value should be 9 
</msg>
<status status="PASS" starttime="20191101 15:56:44.716" endtime="20191101 15:56:44.716"></status>
</kw>
<kw name="Report Check ReportStoredFlag In T Integration ExamInfo" library="PUMA_ReportLibrary">
<doc>report_check_ReportStoredFlag_in_T_Integration_ExamInfo</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlag_info}</var>
</assign>
<msg timestamp="20191101 15:56:44.716" level="INFO">Report.report_check_ReportStoredFlag_in_T_Integration_ExamInfo: Get the ReportStoredFlag of patient [P20191101155604153275, A20191101155604153275] correct and value is 9</msg>
<msg timestamp="20191101 15:56:44.716" level="INFO">${Report_ReportStoreFlag_info} = {"result": true, "ReportStoredFlag": 9}</msg>
<status status="PASS" starttime="20191101 15:56:44.716" endtime="20191101 15:56:44.716"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info}</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlag_info_json}</var>
</assign>
<msg timestamp="20191101 15:56:44.716" level="INFO">${Report_ReportStoreFlag_info_json} = {'result': True, 'ReportStoredFlag': 9}</msg>
<status status="PASS" starttime="20191101 15:56:44.716" endtime="20191101 15:56:44.716"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info_json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlage_info_result}</var>
</assign>
<msg timestamp="20191101 15:56:44.747" level="INFO">${Report_ReportStoreFlage_info_result} = [True]</msg>
<status status="PASS" starttime="20191101 15:56:44.716" endtime="20191101 15:56:44.747"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info_json}</arg>
<arg>ReportStoredFlag</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlage_value}</var>
</assign>
<msg timestamp="20191101 15:56:44.794" level="INFO">${Report_ReportStoreFlage_value} = [9]</msg>
<status status="PASS" starttime="20191101 15:56:44.747" endtime="20191101 15:56:44.794"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_ReportStoreFlage_info_result}[0]</arg>
</arguments>
<status status="PASS" starttime="20191101 15:56:44.794" endtime="20191101 15:56:44.794"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Report_ReportStoreFlage_value}[0]</arg>
<arg>9</arg>
<arg>The ReportStoredFlag value should be 9 in T_integration_examInfo table</arg>
</arguments>
<msg timestamp="20191101 15:56:44.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 15:56:44.794" endtime="20191101 15:56:44.794"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191101 15:56:49.794" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191101 15:56:44.794" endtime="20191101 15:56:49.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 8: \n Description: \n 1. Check the records in WGGC.dbo.AFP_ExamInfo table in WGGC database for this report. \n Expected: \n1. The Report can find in the table. \n</arg>
</arguments>
<msg timestamp="20191101 15:56:49.794" level="INFO">Step 8: 
Description: 
1. Check the records in WGGC.dbo.AFP_ExamInfo table in WGGC database for this report. 
Expected: 
1. The Report can find in the table. 
</msg>
<status status="PASS" starttime="20191101 15:56:49.794" endtime="20191101 15:56:49.794"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_exam_info}</var>
</assign>
<msg timestamp="20191101 15:56:49.794" level="INFO">${Report_exam_info} = {"Result": true, "AccessionNumber": "A20191101155604153275", "FilmPrintStatus": -1, "FilmPrintTime": null, "HoldFlag": 1, "ImageCount": 0, "Modalities": "US", "ExamName": null, "BodyPart": null, "Pati...</msg>
<status status="PASS" starttime="20191101 15:56:49.794" endtime="20191101 15:56:49.794"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_exam_info}</arg>
</arguments>
<assign>
<var>${Report_exam_info_Json}</var>
</assign>
<msg timestamp="20191101 15:56:49.794" level="INFO">${Report_exam_info_Json} = {'Result': True, 'AccessionNumber': 'A20191101155604153275', 'FilmPrintStatus': -1, 'FilmPrintTime': None, 'HoldFlag': 1, 'ImageCount': 0, 'Modalities': 'US', 'ExamName': None, 'BodyPart': None, 'Pati...</msg>
<status status="PASS" starttime="20191101 15:56:49.794" endtime="20191101 15:56:49.794"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_exam_info_Json}</arg>
<arg>Result</arg>
</arguments>
<assign>
<var>${Report_exam_info_Result}</var>
</assign>
<msg timestamp="20191101 15:56:49.825" level="INFO">${Report_exam_info_Result} = [True]</msg>
<status status="PASS" starttime="20191101 15:56:49.794" endtime="20191101 15:56:49.825"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_exam_info_Result}[0]</arg>
<arg>The report can find in the wggc.dbo.afp_ExamInfo table.</arg>
</arguments>
<status status="PASS" starttime="20191101 15:56:49.825" endtime="20191101 15:56:49.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 9 \n Description \n 1. Check the report in archived folder. (default is E:\\Report\\Archive.) \n Expected: \n 1.The file should exist in the folder \n</arg>
</arguments>
<msg timestamp="20191101 15:56:49.825" level="INFO">Step 9 
Description 
1. Check the report in archived folder. (default is E:\Report\Archive.) 
Expected: 
1.The file should exist in the folder 
</msg>
<status status="PASS" starttime="20191101 15:56:49.825" endtime="20191101 15:56:49.825"></status>
</kw>
<kw name="Report Check File Exist By Path Remote" library="PUMA_ReportLibrary">
<doc>report_check_file_exist_by_path_remote</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_ReportPath}[0][0]</arg>
</arguments>
<assign>
<var>${Report_File_Pathc_Check_Result}</var>
</assign>
<msg timestamp="20191101 15:56:51.606" level="INFO">E:\Report\Archive\20191101\A20191101155604153275_155615_46b45596d5a1495e85b133dfb048559b.pdf
Report.report_check_file_exist_by_path_remote: The file is exsit in the PS system [E:\Report\Archive\20191101\A20191101155604153275_155615_46b45596d5a1495e85b133dfb048559b.pdf].</msg>
<msg timestamp="20191101 15:56:51.606" level="INFO">${Report_File_Pathc_Check_Result} = True</msg>
<status status="PASS" starttime="20191101 15:56:49.825" endtime="20191101 15:56:51.606"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_File_Pathc_Check_Result}</arg>
<arg>The file exist in the folder.</arg>
</arguments>
<status status="PASS" starttime="20191101 15:56:51.606" endtime="20191101 15:56:51.622"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191101 15:56:04.153" endtime="20191101 15:56:51.622" critical="yes"></status>
</test>
<test id="s1-t6" name="SmokeTest_006_Core_4176_03.01.02 Report receive from Virtual Print failure.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1\n Description:\n1. Create a patient with an exam in RIS or local table in PS.\nExpected:\n 1. The patient with an exam can create successfully.</arg>
</arguments>
<msg timestamp="20191101 15:56:51.622" level="INFO">Step 1
Description:
1. Create a patient with an exam in RIS or local table in PS.
Expected:
1. The patient with an exam can create successfully.</msg>
<status status="PASS" starttime="20191101 15:56:51.622" endtime="20191101 15:56:51.622"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191101 15:56:51.622" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 15:56:51.638" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191101 15:56:51.653" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-01 15:56:51.622086", "UpdateDT": "2019-11-01 15:56:51.622086", "PatientID": "P20191101155651622086", "AccessionNumber": "A20191101155651622086", "StudyInstanceUID": "UID20191101155651622086", "NameCN": "CN20191101155651622086", "NameEN": "EN20191101155651622086", "Gender": "F", "Birthday": "1979-11-11", "Modality": "XA", "ModalityName": "RF", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-01 15:56:51.622086", "RegisterDT": "2019-11-01 15:56:51.622086", "ExamDT": "2019-11-01 15:56:51.622086", "ReportDT": "2019-11-01 15:56:51.622086", "SubmitDT": "2019-11-01 15:56:51.622086", "ApproveDT": "2019-11-01 15:56:51.622086", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191101155651622086", "ExamBodyPart": "Chest", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191101 15:56:51.653" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-01 15:56:51.622086", "UpdateDT": "2019-11-01 15:56:51.622086", "PatientID": "P20191101155651622086", "AccessionNumber": "A20191101155651622086", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191101 15:56:51.622" endtime="20191101 15:56:51.653"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191101 15:56:51.653" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-01 15:56:51.622086', 'UpdateDT': '2019-11-01 15:56:51.622086', 'PatientID': 'P20191101155651622086', 'AccessionNumber': 'A20191101155651622086', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191101 15:56:51.653" endtime="20191101 15:56:51.653"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191101 15:56:51.685" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191101 15:56:51.653" endtime="20191101 15:56:51.685"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]</arg>
<arg>Patient create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 15:56:51.685" endtime="20191101 15:56:51.685"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191101 15:56:51.778" level="INFO">${patientID} = ['P20191101155651622086']</msg>
<status status="PASS" starttime="20191101 15:56:51.685" endtime="20191101 15:56:51.778"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${AccessionNumber}</var>
</assign>
<msg timestamp="20191101 15:56:51.841" level="INFO">${AccessionNumber} = ['A20191101155651622086']</msg>
<status status="PASS" starttime="20191101 15:56:51.778" endtime="20191101 15:56:51.841"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>NameCN</arg>
</arguments>
<assign>
<var>${PatientName}</var>
</assign>
<msg timestamp="20191101 15:56:51.872" level="INFO">${PatientName} = ['CN20191101155651622086']</msg>
<status status="PASS" starttime="20191101 15:56:51.841" endtime="20191101 15:56:51.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2: \n Description \n 1. Configure the report OCR service in PS. \n 2. Make sure it can identify the patient report in step1. \n 3. Delete the patient information of step1. \n Expected:\n The operation can execute successfully.</arg>
</arguments>
<msg timestamp="20191101 15:56:51.872" level="INFO">Step 2: 
Description 
1. Configure the report OCR service in PS. 
2. Make sure it can identify the patient report in step1. 
3. Delete the patient information of step1. 
Expected:
The operation can execute successfully.</msg>
<status status="PASS" starttime="20191101 15:56:51.872" endtime="20191101 15:56:51.872"></status>
</kw>
<kw name="Patient Delete By Pid Accn" library="PUMA_PatientLibrary">
<doc>patient delete by pid accn</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Patient_Delete_Result}</var>
</assign>
<msg timestamp="20191101 15:56:51.888" level="INFO">Patient.patient_delete_by_pid_accn: [1] records will deleted.</msg>
<msg timestamp="20191101 15:56:51.888" level="INFO">${Patient_Delete_Result} = True</msg>
<status status="PASS" starttime="20191101 15:56:51.872" endtime="20191101 15:56:51.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3: \n Description \n 1. Prepare a report of patient which create in step1. \n 2. Print the report to PS by virtul printing. \n Expected: \n 1. The report can print to PS successfully. \n</arg>
</arguments>
<msg timestamp="20191101 15:56:51.888" level="INFO">Step 3: 
Description 
1. Prepare a report of patient which create in step1. 
2. Print the report to PS by virtul printing. 
Expected: 
1. The report can print to PS successfully. 
</msg>
<status status="PASS" starttime="20191101 15:56:51.888" endtime="20191101 15:56:51.888"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191101 15:56:56.888" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191101 15:56:51.888" endtime="20191101 15:56:56.888"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191101 15:58:57.075" level="INFO">Report archived failed.
Report achived failed. {"Status": false, "server": "10.112.20.84", "patient_id": "P20191101155651622086", "accession_number": "A20191101155651622086", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "powershell_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.84/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191101 15:58:57.075" level="INFO">${Report_archived_Info} = {"Status": false, "server": "10.112.20.84", "patient_id": "P20191101155651622086", "accession_number": "A20191101155651622086", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\...</msg>
<status status="PASS" starttime="20191101 15:56:56.888" endtime="20191101 15:58:57.075"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191101 15:58:57.075" level="INFO">${Report_archived_Info_Json} = {'Status': False, 'server': '10.112.20.84', 'patient_id': 'P20191101155651622086', 'accession_number': 'A20191101155651622086', 'report_file': 'D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\...</msg>
<status status="PASS" starttime="20191101 15:58:57.075" endtime="20191101 15:58:57.075"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191101 15:58:57.107" level="INFO">${Report_archived_result} = [False]</msg>
<status status="PASS" starttime="20191101 15:58:57.075" endtime="20191101 15:58:57.107"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == False</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 15:58:57.107" endtime="20191101 15:58:57.107"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20191101 15:59:07.107" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20191101 15:58:57.107" endtime="20191101 15:59:07.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4 \n \ Description \n 1. Check the WGGC.dbo.AFP_ReportInfo table. \n Expected: \n 1. New record can be found in AFP_ReportInfo table for received report, and the ReportStatus value should be -1. \n</arg>
</arguments>
<msg timestamp="20191101 15:59:07.107" level="INFO">Step 4 
 Description 
1. Check the WGGC.dbo.AFP_ReportInfo table. 
Expected: 
1. New record can be found in AFP_ReportInfo table for received report, and the ReportStatus value should be -1. 
</msg>
<status status="PASS" starttime="20191101 15:59:07.107" endtime="20191101 15:59:07.107"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Reportinfo By Pid" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with patientid from table wggc.dbp.afp_reportinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${patientID}[0]</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Info}</var>
</assign>
<msg timestamp="20191101 15:59:07.107" level="INFO">${Report_Check_ReportInfo_Info_Info} = {"Result": true, "StudyInstanceUID": "783e3ca536eb4e6ebc45cd41b9f2279f", "ReportStatus": -1, "StatusTime": "2019-11-01 15:57:01.090000", "AccessionNumber": "TMP11011557010896", "FileName": "E:\\Report...</msg>
<status status="PASS" starttime="20191101 15:59:07.107" endtime="20191101 15:59:07.107"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Info}</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Json}</var>
</assign>
<msg timestamp="20191101 15:59:07.107" level="INFO">${Report_Check_ReportInfo_Info_Json} = {'Result': True, 'StudyInstanceUID': '783e3ca536eb4e6ebc45cd41b9f2279f', 'ReportStatus': -1, 'StatusTime': '2019-11-01 15:57:01.090000', 'AccessionNumber': 'TMP11011557010896', 'FileName': 'E:\\Report...</msg>
<status status="PASS" starttime="20191101 15:59:07.107" endtime="20191101 15:59:07.107"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>Result</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_Result}</var>
</assign>
<msg timestamp="20191101 15:59:07.154" level="INFO">${Report_Check_ReportInfo_Info_Result} = [True]</msg>
<status status="PASS" starttime="20191101 15:59:07.107" endtime="20191101 15:59:07.154"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>ReportStatus</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_ReportStatus}</var>
</assign>
<msg timestamp="20191101 15:59:07.185" level="INFO">${Report_Check_ReportInfo_Info_ReportStatus} = [-1]</msg>
<status status="PASS" starttime="20191101 15:59:07.154" endtime="20191101 15:59:07.185"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>FileName</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_ReportPath}</var>
</assign>
<msg timestamp="20191101 15:59:07.232" level="INFO">${Report_Check_ReportInfo_Info_ReportPath} = ['E:\\Report\\Archive\\20191101\\20191101155658.pdf']</msg>
<status status="PASS" starttime="20191101 15:59:07.185" endtime="20191101 15:59:07.232"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Result}[0]</arg>
<arg>Wggc.dbo.AFP_ReportInfo table have new records of this report</arg>
</arguments>
<status status="PASS" starttime="20191101 15:59:07.232" endtime="20191101 15:59:07.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_ReportStatus}[0]</arg>
<arg>-1</arg>
<arg>The report status value in table wggc.dbo.afp_reportinfo is -1</arg>
</arguments>
<msg timestamp="20191101 15:59:07.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 15:59:07.232" endtime="20191101 15:59:07.232"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191101 15:59:12.232" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191101 15:59:07.232" endtime="20191101 15:59:12.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5: \n Description:\n 1. Check the WGGC.dbo.AFP_ReportInfo table. \n Expected: \n 1. New record can be found in AFP_ReportInfo table for received report, and the printstatus value should be 0. \n</arg>
</arguments>
<msg timestamp="20191101 15:59:12.232" level="INFO">Step 5: 
Description:
1. Check the WGGC.dbo.AFP_ReportInfo table. 
Expected: 
1. New record can be found in AFP_ReportInfo table for received report, and the printstatus value should be 0. 
</msg>
<status status="PASS" starttime="20191101 15:59:12.232" endtime="20191101 15:59:12.232"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Json}</arg>
<arg>PrintStatus</arg>
</arguments>
<assign>
<var>${Report_Check_ReportInfo_Info_PrintStatus}</var>
</assign>
<msg timestamp="20191101 15:59:12.263" level="INFO">${Report_Check_ReportInfo_Info_PrintStatus} = [0]</msg>
<status status="PASS" starttime="20191101 15:59:12.232" endtime="20191101 15:59:12.263"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_Result}[0]</arg>
<arg>Wggc.dbo.AFP_ReportInfo table have new records of this report</arg>
</arguments>
<status status="PASS" starttime="20191101 15:59:12.263" endtime="20191101 15:59:12.263"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_PrintStatus}[0]</arg>
<arg>0</arg>
<arg>The report printstatus value is 0</arg>
</arguments>
<msg timestamp="20191101 15:59:12.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 15:59:12.263" endtime="20191101 15:59:12.263"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191101 15:59:17.263" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191101 15:59:12.263" endtime="20191101 15:59:17.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6 \n Description: \n 1. Check the WGGC.dbo.AFP_PrintMode table \n Expected:\n 1. Cannot find a new record in this table and value should be correct. \n</arg>
</arguments>
<msg timestamp="20191101 15:59:17.263" level="INFO">Step 6 
Description: 
1. Check the WGGC.dbo.AFP_PrintMode table 
Expected:
1. Cannot find a new record in this table and value should be correct. 
</msg>
<status status="PASS" starttime="20191101 15:59:17.263" endtime="20191101 15:59:17.263"></status>
</kw>
<kw name="Printmode Get Info From Db By Accn" library="PUMA_PrintModeLibrary">
<doc>printmode_get_info_from_db_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${PrintMode_info}</var>
</assign>
<msg timestamp="20191101 15:59:17.263" level="INFO">Printmode.printmode_get_info_from_db_by_accn: Data Exception for the exam [A20191101155651622086] in wggc.dbo_afp_printmode table
Printmode.printmode_get_info_from_db_by_accn: There are [0] records in table</msg>
<msg timestamp="20191101 15:59:17.263" level="INFO">${PrintMode_info} = {"result": false}</msg>
<status status="PASS" starttime="20191101 15:59:17.263" endtime="20191101 15:59:17.263"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintMode_info}</arg>
</arguments>
<assign>
<var>${PrintMode_info_Json}</var>
</assign>
<msg timestamp="20191101 15:59:17.263" level="INFO">${PrintMode_info_Json} = {'result': False}</msg>
<status status="PASS" starttime="20191101 15:59:17.263" endtime="20191101 15:59:17.263"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${PrintMode_info_Json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${PrintMode_result}</var>
</assign>
<msg timestamp="20191101 15:59:17.294" level="INFO">${PrintMode_result} = [False]</msg>
<status status="PASS" starttime="20191101 15:59:17.263" endtime="20191101 15:59:17.294"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${PrintMode_info_Json}</arg>
<arg>PrintMode</arg>
</arguments>
<assign>
<var>${PrintMode_value}</var>
</assign>
<msg timestamp="20191101 15:59:17.341" level="INFO">${PrintMode_value} = []</msg>
<status status="PASS" starttime="20191101 15:59:17.294" endtime="20191101 15:59:17.341"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${PrintMode_result}[0] == False</arg>
</arguments>
<status status="PASS" starttime="20191101 15:59:17.341" endtime="20191101 15:59:17.341"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20191101 15:59:22.341" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20191101 15:59:17.341" endtime="20191101 15:59:22.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 7 \n Description: \n 1. Check the ReportStoredFlag value in T_Integration_ExamInfo table in WGGC database for this report. \n Expected: \n 1. Cannot find records in the table. \n</arg>
</arguments>
<msg timestamp="20191101 15:59:22.341" level="INFO">Step 7 
Description: 
1. Check the ReportStoredFlag value in T_Integration_ExamInfo table in WGGC database for this report. 
Expected: 
1. Cannot find records in the table. 
</msg>
<status status="PASS" starttime="20191101 15:59:22.341" endtime="20191101 15:59:22.341"></status>
</kw>
<kw name="Report Check ReportStoredFlag In T Integration ExamInfo" library="PUMA_ReportLibrary">
<doc>report_check_ReportStoredFlag_in_T_Integration_ExamInfo</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlag_info}</var>
</assign>
<msg timestamp="20191101 15:59:22.341" level="INFO">Report.report_check_ReportStoredFlag_in_T_Integration_ExamInfo: Data Exception for the patient [P20191101155651622086, A20191101155651622086]</msg>
<msg timestamp="20191101 15:59:22.341" level="INFO">${Report_ReportStoreFlag_info} = {"result": false}</msg>
<status status="PASS" starttime="20191101 15:59:22.341" endtime="20191101 15:59:22.341"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info}</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlag_info_json}</var>
</assign>
<msg timestamp="20191101 15:59:22.341" level="INFO">${Report_ReportStoreFlag_info_json} = {'result': False}</msg>
<status status="PASS" starttime="20191101 15:59:22.341" endtime="20191101 15:59:22.341"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_ReportStoreFlag_info_json}</arg>
<arg>result</arg>
</arguments>
<assign>
<var>${Report_ReportStoreFlage_info_result}</var>
</assign>
<msg timestamp="20191101 15:59:22.372" level="INFO">${Report_ReportStoreFlage_info_result} = [False]</msg>
<status status="PASS" starttime="20191101 15:59:22.341" endtime="20191101 15:59:22.372"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_ReportStoreFlage_info_result}[0] == False</arg>
<arg>Cannot find the records in the database.</arg>
</arguments>
<status status="PASS" starttime="20191101 15:59:22.372" endtime="20191101 15:59:22.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 8: \n Description: \n 1. Check the records in WGGC.dbo.AFP_ExamInfo table in WGGC database for this report. \n Expected: \n 1.Cannot find a new record in table. \n</arg>
</arguments>
<msg timestamp="20191101 15:59:22.372" level="INFO">Step 8: 
Description: 
1. Check the records in WGGC.dbo.AFP_ExamInfo table in WGGC database for this report. 
Expected: 
1.Cannot find a new record in table. 
</msg>
<status status="PASS" starttime="20191101 15:59:22.372" endtime="20191101 15:59:22.372"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_exam_info}</var>
</assign>
<msg timestamp="20191101 15:59:22.372" level="INFO">Databaseinfo.DB_get_wggc_dbo_afp_examinfo_by_accn: Data Exception for the exam [A20191101155651622086] in wggc.dbo.AFP_ExamInfo table
Databaseinfo.DB_get_wggc_dbo_afp_examinfo_by_accn: There are [0] records in table</msg>
<msg timestamp="20191101 15:59:22.372" level="INFO">${Report_exam_info} = {"Result": false}</msg>
<status status="PASS" starttime="20191101 15:59:22.372" endtime="20191101 15:59:22.372"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_exam_info}</arg>
</arguments>
<assign>
<var>${Report_exam_info_Json}</var>
</assign>
<msg timestamp="20191101 15:59:22.372" level="INFO">${Report_exam_info_Json} = {'Result': False}</msg>
<status status="PASS" starttime="20191101 15:59:22.372" endtime="20191101 15:59:22.372"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_exam_info_Json}</arg>
<arg>Result</arg>
</arguments>
<assign>
<var>${Report_exam_info_Result}</var>
</assign>
<msg timestamp="20191101 15:59:22.419" level="INFO">${Report_exam_info_Result} = [False]</msg>
<status status="PASS" starttime="20191101 15:59:22.372" endtime="20191101 15:59:22.419"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_exam_info_Result}[0] == False</arg>
<arg>1.Cannot find a new record in table.</arg>
</arguments>
<status status="PASS" starttime="20191101 15:59:22.419" endtime="20191101 15:59:22.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 9 \n Description \n 1. Check the report in archived folder. (default is E:\\Report\\Archive.) \n Expected: \n 1.The file should exist in the folder \n</arg>
</arguments>
<msg timestamp="20191101 15:59:22.419" level="INFO">Step 9 
Description 
1. Check the report in archived folder. (default is E:\Report\Archive.) 
Expected: 
1.The file should exist in the folder 
</msg>
<status status="PASS" starttime="20191101 15:59:22.419" endtime="20191101 15:59:22.419"></status>
</kw>
<kw name="Report Check File Exist By Path Remote" library="PUMA_ReportLibrary">
<doc>report_check_file_exist_by_path_remote</doc>
<arguments>
<arg>${Report_Check_ReportInfo_Info_ReportPath}[0]</arg>
</arguments>
<assign>
<var>${Report_File_Pathc_Check_Result}</var>
</assign>
<msg timestamp="20191101 15:59:23.169" level="INFO">E:\Report\Archive\20191101\20191101155658.pdf
Report.report_check_file_exist_by_path_remote: The file is exsit in the PS system [E:\Report\Archive\20191101\20191101155658.pdf].</msg>
<msg timestamp="20191101 15:59:23.169" level="INFO">${Report_File_Pathc_Check_Result} = True</msg>
<status status="PASS" starttime="20191101 15:59:22.419" endtime="20191101 15:59:23.169"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_File_Pathc_Check_Result}</arg>
<arg>The file exist in the folder.</arg>
</arguments>
<status status="PASS" starttime="20191101 15:59:23.169" endtime="20191101 15:59:23.169"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191101 15:56:51.622" endtime="20191101 15:59:23.169" critical="yes"></status>
</test>
<test id="s1-t7" name="SmokeTest_007_Core_4178_04.01.01 Terminal K3 Print Workflow with multiple films and multiple reports.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description:\n 1. Configure a K3 terminal on PS. \n 2. Make sure the terminal status is ready to work. \n Expected: \n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191101 15:59:23.169" level="INFO">Step 1 
Description:
1. Configure a K3 terminal on PS. 
2. Make sure the terminal status is ready to work. 
Expected: 
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191101 15:59:23.169" endtime="20191101 15:59:23.169"></status>
</kw>
<kw name="Check Terminal Status" library="PUMA_TerminalLibrary">
<doc>This function is use the API interface to check the terminal status.
The function will enable the terminal status to 'on work' status.</doc>
<arguments>
<arg>K3_Terminal01</arg>
</arguments>
<assign>
<var>${Terminal_status}</var>
</assign>
<msg timestamp="20191101 15:59:23.185" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 15:59:24.029" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/EHDPS/status?tid=K3_Terminal01 HTTP/1.1" 200 609</msg>
<msg timestamp="20191101 15:59:24.029" level="INFO">Terminal._check_terminal_status: The terminal status check and result is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"Status":0,"Terminal":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9929,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20284,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}</msg>
<msg timestamp="20191101 15:59:24.029" level="INFO">${Terminal_status} = True</msg>
<status status="PASS" starttime="20191101 15:59:23.169" endtime="20191101 15:59:24.029"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Terminal_status}</arg>
<arg>The termianl status is ready to print</arg>
</arguments>
<status status="PASS" starttime="20191101 15:59:24.029" endtime="20191101 15:59:24.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Create multiple films for patientA/ExamA. \n Expected \n 1. The films can archived successfully. \n</arg>
</arguments>
<msg timestamp="20191101 15:59:24.029" level="INFO">Step 2 
Description: 
1. Create multiple films for patientA/ExamA. 
Expected 
1. The films can archived successfully. 
</msg>
<status status="PASS" starttime="20191101 15:59:24.029" endtime="20191101 15:59:24.029"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191101 15:59:24.044" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 15:59:24.044" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191101 15:59:24.044" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-01 15:59:24.028532", "UpdateDT": "2019-11-01 15:59:24.028532", "PatientID": "P20191101155924028532", "AccessionNumber": "A20191101155924028532", "StudyInstanceUID": "UID20191101155924028532", "NameCN": "CN20191101155924028532", "NameEN": "EN20191101155924028532", "Gender": "M", "Birthday": "1935-11-22", "Modality": "OT", "ModalityName": "MR", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-01 15:59:24.028532", "RegisterDT": "2019-11-01 15:59:24.028532", "ExamDT": "2019-11-01 15:59:24.028532", "ReportDT": "2019-11-01 15:59:24.028532", "SubmitDT": "2019-11-01 15:59:24.028532", "ApproveDT": "2019-11-01 15:59:24.028532", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191101155924028532", "ExamBodyPart": "Hand", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191101 15:59:24.044" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-01 15:59:24.028532", "UpdateDT": "2019-11-01 15:59:24.028532", "PatientID": "P20191101155924028532", "AccessionNumber": "A20191101155924028532", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191101 15:59:24.029" endtime="20191101 15:59:24.044"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191101 15:59:24.044" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-01 15:59:24.028532', 'UpdateDT': '2019-11-01 15:59:24.028532', 'PatientID': 'P20191101155924028532', 'AccessionNumber': 'A20191101155924028532', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191101 15:59:24.044" endtime="20191101 15:59:24.044"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191101 15:59:24.091" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191101 15:59:24.044" endtime="20191101 15:59:24.091"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191101 15:59:24.122" level="INFO">${patientID} = ['P20191101155924028532']</msg>
<status status="PASS" starttime="20191101 15:59:24.091" endtime="20191101 15:59:24.122"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191101 15:59:24.169" level="INFO">${Accessionnumber} = ['A20191101155924028532']</msg>
<status status="PASS" starttime="20191101 15:59:24.122" endtime="20191101 15:59:24.169"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 15:59:24.169" endtime="20191101 15:59:24.169"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191101 15:59:54.919" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191101155924028532", "AccessionNumber": "A20191101155924028532", "FilmSessionLable": "20191101155924169158", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191101 15:59:54.919" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191101155924028532", "AccessionNumber": "A20191101155924028532", "FilmSessionLable": "20191101155924169158", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191101 15:59:24.169" endtime="20191101 15:59:54.919"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191101 15:59:54.919" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191101155924028532', 'AccessionNumber': 'A20191101155924028532', 'FilmSessionLable': '20191101155924169158', 'DeliveryJob_status': 2, 'WaterMark_Path': 'D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191101 15:59:54.919" endtime="20191101 15:59:54.919"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191101 15:59:54.950" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191101 15:59:54.919" endtime="20191101 15:59:54.950"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 15:59:54.950" endtime="20191101 15:59:54.950"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191101 16:00:35.685" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191101155924028532", "AccessionNumber": "A20191101155924028532", "FilmSessionLable": "20191101155954950447", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191101 16:00:35.685" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191101155924028532", "AccessionNumber": "A20191101155924028532", "FilmSessionLable": "20191101155954950447", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191101 15:59:54.950" endtime="20191101 16:00:35.685"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191101 16:00:35.685" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191101155924028532', 'AccessionNumber': 'A20191101155924028532', 'FilmSessionLable': '20191101155954950447', 'DeliveryJob_status': 2, 'WaterMark_Path': 'D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191101 16:00:35.685" endtime="20191101 16:00:35.685"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191101 16:00:35.747" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191101 16:00:35.685" endtime="20191101 16:00:35.747"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 16:00:35.747" endtime="20191101 16:00:35.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3 \n Description:\n 1. Create multiple reports for patientA/ExamA. \n Expected: \n 1. The reports can archived successfully. \n</arg>
</arguments>
<msg timestamp="20191101 16:00:35.763" level="INFO">Step 3 
Description:
1. Create multiple reports for patientA/ExamA. 
Expected: 
1. The reports can archived successfully. 
</msg>
<status status="PASS" starttime="20191101 16:00:35.747" endtime="20191101 16:00:35.763"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191101 16:00:45.779" level="INFO">PUMA_ReportLibrary._archive_check: Report achived successfully.
Report achived successfully. {"Status": true, "server": "10.112.20.84", "patient_id": "P20191101155924028532", "accession_number": "A20191101155924028532", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "powershell_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.84/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191101 16:00:45.779" level="INFO">${Report_archived_Info} = {"Status": true, "server": "10.112.20.84", "patient_id": "P20191101155924028532", "accession_number": "A20191101155924028532", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191101 16:00:35.763" endtime="20191101 16:00:45.779"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191101 16:00:45.779" level="INFO">${Report_archived_Info_Json} = {'Status': True, 'server': '10.112.20.84', 'patient_id': 'P20191101155924028532', 'accession_number': 'A20191101155924028532', 'report_file': 'D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191101 16:00:45.779" endtime="20191101 16:00:45.779"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191101 16:00:45.810" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191101 16:00:45.779" endtime="20191101 16:00:45.810"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 16:00:45.810" endtime="20191101 16:00:45.810"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191101 16:00:55.826" level="INFO">Select ReportStatus From wggc.dbo.AFP_ReportInfo  WHERE StudyInstanceUID not in ('53a57eaa2ba042ff96486d2ac7457a0a') AND PatientID = 'P20191101155924028532' AND AccessionNumber = 'A20191101155924028532'
[(2, )]
PUMA_ReportLibrary._archive_check: Report achived successfully.
Report achived successfully. {"Status": true, "server": "10.112.20.84", "patient_id": "P20191101155924028532", "accession_number": "A20191101155924028532", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "powershell_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.84/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191101 16:00:55.826" level="INFO">${Report_archived_Info} = {"Status": true, "server": "10.112.20.84", "patient_id": "P20191101155924028532", "accession_number": "A20191101155924028532", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191101 16:00:45.810" endtime="20191101 16:00:55.826"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191101 16:00:55.826" level="INFO">${Report_archived_Info_Json} = {'Status': True, 'server': '10.112.20.84', 'patient_id': 'P20191101155924028532', 'accession_number': 'A20191101155924028532', 'report_file': 'D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191101 16:00:55.826" endtime="20191101 16:00:55.826"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191101 16:00:55.872" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191101 16:00:55.826" endtime="20191101 16:00:55.872"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 16:00:55.872" endtime="20191101 16:00:55.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4 \n Description:\n 1. Set the print mode to both for ExamA \n Expected:\n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191101 16:00:55.872" level="INFO">Step 4 
Description:
1. Set the print mode to both for ExamA 
Expected:
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191101 16:00:55.872" endtime="20191101 16:00:55.872"></status>
</kw>
<kw name="Printmode Set By Accn" library="PUMA_PrintModeLibrary">
<doc>printmode_set_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
<arg>both</arg>
</arguments>
<assign>
<var>${Set_Printmode}</var>
</assign>
<msg timestamp="20191101 16:00:55.872" level="DEBUG">reading WSDL at: http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl ...</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0710, convert type="tns:ExamInfo" to ('ExamInfo', 'http://carestream.org/')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0770, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea07b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea07d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea07f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0810, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0850, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0870, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0890, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea08b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0830, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea08d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea08f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0910, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0930, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0950, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0970, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0990, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea09b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea09d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea09f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0a10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0a30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0a50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0a70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0a90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0ab0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0ad0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0af0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0b10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0b30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0b50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0b70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0b90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0bb0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0bd0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0bf0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0c10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0c30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0c50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0cb0, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0d30, convert type="tns:ExamInfo" to ('ExamInfo', 'http://carestream.org/')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0d90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0db0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0dd0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0e30, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0eb0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0f30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0f50, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0f70, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0f90, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4ea0fb0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4928ab0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4928ad0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4928b10, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4928af0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4928f70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4928e10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4928e30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4928e50, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4928d90, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://carestream.org/')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4928db0, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://carestream.org/')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4928e90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4928d30, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4928cb0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4928c70, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4928ef0, convert type="tns:PatientInfoEx" to ('PatientInfoEx', 'http://carestream.org/')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4928f50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4928fd0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4928f90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4928ed0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4928eb0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4928f10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x49284f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4928490, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4928530, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4928f30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x49284d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4928830, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4928870, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4928850, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x49286f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4928910, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x4928a10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.888" level="DEBUG">Element:0x49280b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">loaded:

schema collection
   Schema:0x4ea0630
   (raw)
      &lt;s:schema elementFormDefault="qualified" targetNamespace="http://carestream.org/"&gt;
         &lt;s:element name="NotifyExamInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ExamInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="CreateDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="UpdateDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="AccessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="StudyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="NameCN" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="NameEN" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Modality" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ModalityName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientType" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="VisitID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDepartment" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RegisterDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ReportDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="SubmitDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ApproveDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PDFReportURL" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="StudyStatus" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="OutHospitalNo" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="InHospitalNo" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PhysicalNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamBodyPart" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RefferingDepartment" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional0" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional1" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional2" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional3" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional4" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional5" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional6" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional7" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional8" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional9" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyExamInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportFile"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportPath" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportFileResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportFileResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetPrintMode"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="printWaitTime" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportWaitTime" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetPrintModeResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyFilmInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyFilmInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="tns:ArrayOfString"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ArrayOfString"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyReportInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyExamReservationInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="base64ExamReservation" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyExamReservationInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamReservationInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyPatientInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientInfo" type="tns:PatientInfoEx"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="PatientInfoEx"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="LocalName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Age" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="IdentifyCardNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="MedicalCardNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="SocialSecurityCardNumber" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyPatientInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyPatientInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrl"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlForQrCode"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlForQrCodeResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlForQrCodeResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
      &lt;/s:schema&gt;
   (model)
      &lt;Element:0x4ea0650 name="NotifyExamInfo"&gt;
         &lt;Complex:0x4ea0690&gt;
            &lt;Sequence:0x4ea06d0&gt;
               &lt;Element:0x4ea0710 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x4ea06b0 name="ExamInfo"&gt;
         &lt;Sequence:0x4ea06f0&gt;
            &lt;Element:0x4ea0770 name="CreateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea07b0 name="UpdateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea07d0 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea07f0 name="AccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0810 name="StudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0850 name="NameCN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0870 name="NameEN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0890 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea08b0 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0830 name="Modality" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea08d0 name="ModalityName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea08f0 name="PatientType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0910 name="VisitID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0930 name="RequestID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0950 name="RequestDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0970 name="RequestDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0990 name="RegisterDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea09b0 name="ExamDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea09d0 name="ReportDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea09f0 name="SubmitDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0a10 name="ApproveDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0a30 name="PDFReportURL" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0a50 name="StudyStatus" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0a70 name="OutHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0a90 name="InHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0ab0 name="PhysicalNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0ad0 name="ExamName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0af0 name="ExamBodyPart" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0b10 name="RefferingDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0b30 name="Optional0" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0b50 name="Optional1" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0b70 name="Optional2" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0b90 name="Optional3" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0bb0 name="Optional4" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0bd0 name="Optional5" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0bf0 name="Optional6" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0c10 name="Optional7" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0c30 name="Optional8" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0c50 name="Optional9" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x4ea0730 name="NotifyExamInfoResponse"&gt;
         &lt;Complex:0x4ea0750&gt;
            &lt;Sequence:0x4ea0790&gt;
               &lt;Element:0x4ea0cb0 name="NotifyExamInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4ea0c70 name="NotifyReportFile"&gt;
         &lt;Complex:0x4ea0c90&gt;
            &lt;Sequence:0x4ea0d10&gt;
               &lt;Element:0x4ea0d30 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
               &lt;Element:0x4ea0d90 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4ea0db0 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4ea0dd0 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4ea0cd0 name="NotifyReportFileResponse"&gt;
         &lt;Complex:0x4ea0d50&gt;
            &lt;Sequence:0x4ea0d70&gt;
               &lt;Element:0x4ea0e30 name="NotifyReportFileResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4ea0df0 name="SetPrintMode"&gt;
         &lt;Complex:0x4ea0e10&gt;
            &lt;Sequence:0x4ea0e90&gt;
               &lt;Element:0x4ea0eb0 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4ea0f30 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4ea0f50 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4ea0f70 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4ea0f90 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4ea0e50 name="SetPrintModeResponse"&gt;
         &lt;Complex:0x4ea0e70&gt;
            &lt;Sequence:0x4ea0f10&gt;
               &lt;Element:0x4ea0fb0 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4ea0ed0 name="NotifyFilmInfo"&gt;
         &lt;Complex:0x4ea0fd0&gt;
            &lt;Sequence:0x4928b50&gt;
               &lt;Element:0x4928ab0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4928ad0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4ea0ff0 name="NotifyFilmInfoResponse"&gt;
         &lt;Complex:0x4928a70&gt;
            &lt;Sequence:0x4928c30&gt;
               &lt;Element:0x4928b10 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4ea0cf0 name="NotifyReportInfo"&gt;
         &lt;Complex:0x4928bd0&gt;
            &lt;Sequence:0x4928970&gt;
               &lt;Element:0x4928af0 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4928f70 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4928e10 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4928e30 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4928e50 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4928d90 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
               &lt;Element:0x4928db0 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x4928b70 name="ArrayOfString"&gt;
         &lt;Sequence:0x4928b30&gt;
            &lt;Element:0x4928e90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x4928b90 name="NotifyReportInfoResponse"&gt;
         &lt;Complex:0x4928dd0&gt;
            &lt;Sequence:0x4928bb0&gt;
               &lt;Element:0x4928d30 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4928df0 name="NotifyExamReservationInfo"&gt;
         &lt;Complex:0x4928d10&gt;
            &lt;Sequence:0x4928c50&gt;
               &lt;Element:0x4928cb0 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4928d50 name="NotifyExamReservationInfoResponse"&gt;
         &lt;Complex:0x4928d70&gt;
            &lt;Sequence:0x4928bf0&gt;
               &lt;Element:0x4928c70 name="NotifyExamReservationInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4928cd0 name="NotifyPatientInfo"&gt;
         &lt;Complex:0x4928cf0&gt;
            &lt;Sequence:0x4928fb0&gt;
               &lt;Element:0x4928ef0 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x4928c10 name="PatientInfoEx"&gt;
         &lt;Sequence:0x4928c90&gt;
            &lt;Element:0x4928f50 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4928fd0 name="PatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4928f90 name="LocalName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4928ed0 name="Age" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4928eb0 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4928f10 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x49284f0 name="Address" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4928490 name="IdentifyCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4928530 name="MedicalCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4928f30 name="PhoneNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x49284d0 name="SocialSecurityCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x49289b0 name="NotifyPatientInfoResponse"&gt;
         &lt;Complex:0x4928e70&gt;
            &lt;Sequence:0x4928ff0&gt;
               &lt;Element:0x4928830 name="NotifyPatientInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4928790 name="QueryCloudFilmUrl"&gt;
         &lt;Complex:0x4928730&gt;
            &lt;Sequence:0x49288b0&gt;
               &lt;Element:0x4928870 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4928850 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4928890 name="QueryCloudFilmUrlResponse"&gt;
         &lt;Complex:0x4928950&gt;
            &lt;Sequence:0x4928650&gt;
               &lt;Element:0x49286f0 name="QueryCloudFilmUrlResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x49287f0 name="QueryCloudFilmUrlForQrCode"&gt;
         &lt;Complex:0x49288d0&gt;
            &lt;Sequence:0x49288f0&gt;
               &lt;Element:0x4928910 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4928a10 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4928750 name="QueryCloudFilmUrlForQrCodeResponse"&gt;
         &lt;Complex:0x49286d0&gt;
            &lt;Sequence:0x4928990&gt;
               &lt;Element:0x49280b0 name="QueryCloudFilmUrlForQrCodeResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">MERGED:
Schema:0x4ea0630
(raw)
   &lt;s:schema elementFormDefault="qualified" targetNamespace="http://carestream.org/"&gt;
      &lt;s:element name="NotifyExamInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ExamInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="CreateDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="UpdateDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="AccessionNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="StudyInstanceUID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="NameCN" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="NameEN" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Modality" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ModalityName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientType" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="VisitID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDepartment" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RegisterDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ReportDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="SubmitDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ApproveDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PDFReportURL" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="StudyStatus" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="OutHospitalNo" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="InHospitalNo" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PhysicalNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamBodyPart" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RefferingDepartment" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional0" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional1" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional2" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional3" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional4" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional5" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional6" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional7" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional8" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional9" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyExamInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportFile"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportPath" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportFileResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportFileResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetPrintMode"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="printWaitTime" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportWaitTime" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetPrintModeResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyFilmInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyFilmInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="tns:ArrayOfString"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ArrayOfString"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyReportInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyExamReservationInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="base64ExamReservation" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyExamReservationInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamReservationInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyPatientInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientInfo" type="tns:PatientInfoEx"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="PatientInfoEx"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="LocalName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Age" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="IdentifyCardNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="MedicalCardNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="SocialSecurityCardNumber" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyPatientInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyPatientInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrl"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlForQrCode"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlForQrCodeResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlForQrCodeResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
   &lt;/s:schema&gt;
(model)
   &lt;Element:0x4ea0650 name="NotifyExamInfo"&gt;
      &lt;Complex:0x4ea0690&gt;
         &lt;Sequence:0x4ea06d0&gt;
            &lt;Element:0x4ea0710 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x4ea06b0 name="ExamInfo"&gt;
      &lt;Sequence:0x4ea06f0&gt;
         &lt;Element:0x4ea0770 name="CreateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea07b0 name="UpdateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea07d0 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea07f0 name="AccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea0810 name="StudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea0850 name="NameCN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea0870 name="NameEN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea0890 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea08b0 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea0830 name="Modality" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea08d0 name="ModalityName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea08f0 name="PatientType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea0910 name="VisitID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea0930 name="RequestID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea0950 name="RequestDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea0970 name="RequestDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea0990 name="RegisterDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea09b0 name="ExamDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea09d0 name="ReportDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea09f0 name="SubmitDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea0a10 name="ApproveDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea0a30 name="PDFReportURL" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea0a50 name="StudyStatus" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea0a70 name="OutHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea0a90 name="InHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea0ab0 name="PhysicalNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea0ad0 name="ExamName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea0af0 name="ExamBodyPart" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea0b10 name="RefferingDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea0b30 name="Optional0" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea0b50 name="Optional1" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea0b70 name="Optional2" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea0b90 name="Optional3" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea0bb0 name="Optional4" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea0bd0 name="Optional5" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea0bf0 name="Optional6" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea0c10 name="Optional7" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea0c30 name="Optional8" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4ea0c50 name="Optional9" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4ea0730 name="NotifyExamInfoResponse"&gt;
      &lt;Complex:0x4ea0750&gt;
         &lt;Sequence:0x4ea0790&gt;
            &lt;Element:0x4ea0cb0 name="NotifyExamInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4ea0c70 name="NotifyReportFile"&gt;
      &lt;Complex:0x4ea0c90&gt;
         &lt;Sequence:0x4ea0d10&gt;
            &lt;Element:0x4ea0d30 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
            &lt;Element:0x4ea0d90 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0db0 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0dd0 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4ea0cd0 name="NotifyReportFileResponse"&gt;
      &lt;Complex:0x4ea0d50&gt;
         &lt;Sequence:0x4ea0d70&gt;
            &lt;Element:0x4ea0e30 name="NotifyReportFileResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4ea0df0 name="SetPrintMode"&gt;
      &lt;Complex:0x4ea0e10&gt;
         &lt;Sequence:0x4ea0e90&gt;
            &lt;Element:0x4ea0eb0 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0f30 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0f50 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0f70 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4ea0f90 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4ea0e50 name="SetPrintModeResponse"&gt;
      &lt;Complex:0x4ea0e70&gt;
         &lt;Sequence:0x4ea0f10&gt;
            &lt;Element:0x4ea0fb0 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4ea0ed0 name="NotifyFilmInfo"&gt;
      &lt;Complex:0x4ea0fd0&gt;
         &lt;Sequence:0x4928b50&gt;
            &lt;Element:0x4928ab0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4928ad0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4ea0ff0 name="NotifyFilmInfoResponse"&gt;
      &lt;Complex:0x4928a70&gt;
         &lt;Sequence:0x4928c30&gt;
            &lt;Element:0x4928b10 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4ea0cf0 name="NotifyReportInfo"&gt;
      &lt;Complex:0x4928bd0&gt;
         &lt;Sequence:0x4928970&gt;
            &lt;Element:0x4928af0 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4928f70 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4928e10 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4928e30 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4928e50 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4928d90 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
            &lt;Element:0x4928db0 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x4928b70 name="ArrayOfString"&gt;
      &lt;Sequence:0x4928b30&gt;
         &lt;Element:0x4928e90 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4928b90 name="NotifyReportInfoResponse"&gt;
      &lt;Complex:0x4928dd0&gt;
         &lt;Sequence:0x4928bb0&gt;
            &lt;Element:0x4928d30 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4928df0 name="NotifyExamReservationInfo"&gt;
      &lt;Complex:0x4928d10&gt;
         &lt;Sequence:0x4928c50&gt;
            &lt;Element:0x4928cb0 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4928d50 name="NotifyExamReservationInfoResponse"&gt;
      &lt;Complex:0x4928d70&gt;
         &lt;Sequence:0x4928bf0&gt;
            &lt;Element:0x4928c70 name="NotifyExamReservationInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4928cd0 name="NotifyPatientInfo"&gt;
      &lt;Complex:0x4928cf0&gt;
         &lt;Sequence:0x4928fb0&gt;
            &lt;Element:0x4928ef0 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x4928c10 name="PatientInfoEx"&gt;
      &lt;Sequence:0x4928c90&gt;
         &lt;Element:0x4928f50 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4928fd0 name="PatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4928f90 name="LocalName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4928ed0 name="Age" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4928eb0 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4928f10 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x49284f0 name="Address" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4928490 name="IdentifyCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4928530 name="MedicalCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4928f30 name="PhoneNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x49284d0 name="SocialSecurityCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x49289b0 name="NotifyPatientInfoResponse"&gt;
      &lt;Complex:0x4928e70&gt;
         &lt;Sequence:0x4928ff0&gt;
            &lt;Element:0x4928830 name="NotifyPatientInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4928790 name="QueryCloudFilmUrl"&gt;
      &lt;Complex:0x4928730&gt;
         &lt;Sequence:0x49288b0&gt;
            &lt;Element:0x4928870 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4928850 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4928890 name="QueryCloudFilmUrlResponse"&gt;
      &lt;Complex:0x4928950&gt;
         &lt;Sequence:0x4928650&gt;
            &lt;Element:0x49286f0 name="QueryCloudFilmUrlResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x49287f0 name="QueryCloudFilmUrlForQrCode"&gt;
      &lt;Complex:0x49288d0&gt;
         &lt;Sequence:0x49288f0&gt;
            &lt;Element:0x4928910 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4928a10 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4928750 name="QueryCloudFilmUrlForQrCodeResponse"&gt;
      &lt;Complex:0x49286d0&gt;
         &lt;Sequence:0x4928990&gt;
            &lt;Element:0x49280b0 name="QueryCloudFilmUrlForQrCodeResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x4ea0650 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('NotifyExamInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4ea0730 name="NotifyExamInfoResponse" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x4ea0c70 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('NotifyReportFileResponse', 'http://carestream.org/'), found as: &lt;Element:0x4ea0cd0 name="NotifyReportFileResponse" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4ea0df0 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x4ea0e50 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x4ea0ed0 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('NotifyFilmInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4ea0ff0 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x4ea0cf0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('NotifyReportInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4928b90 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x4928df0 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('NotifyExamReservationInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4928d50 name="NotifyExamReservationInfoResponse" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x4928cd0 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('NotifyPatientInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x49289b0 name="NotifyPatientInfoResponse" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x4928790 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('QueryCloudFilmUrlResponse', 'http://carestream.org/'), found as: &lt;Element:0x4928890 name="QueryCloudFilmUrlResponse" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x49287f0 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/'), found as: &lt;Element:0x4928750 name="QueryCloudFilmUrlForQrCodeResponse" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x4ea0650 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('NotifyExamInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4ea0730 name="NotifyExamInfoResponse" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x4ea0c70 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('NotifyReportFileResponse', 'http://carestream.org/'), found as: &lt;Element:0x4ea0cd0 name="NotifyReportFileResponse" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4ea0df0 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x4ea0e50 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x4ea0ed0 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('NotifyFilmInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4ea0ff0 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x4ea0cf0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('NotifyReportInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4928b90 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x4928df0 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('NotifyExamReservationInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4928d50 name="NotifyExamReservationInfoResponse" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x4928cd0 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('NotifyPatientInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x49289b0 name="NotifyPatientInfoResponse" /&gt;</msg>
<msg timestamp="20191101 16:00:55.904" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x4928790 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191101 16:00:55.919" level="DEBUG">('QueryCloudFilmUrlResponse', 'http://carestream.org/'), found as: &lt;Element:0x4928890 name="QueryCloudFilmUrlResponse" /&gt;</msg>
<msg timestamp="20191101 16:00:55.919" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x49287f0 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191101 16:00:55.919" level="DEBUG">('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/'), found as: &lt;Element:0x4928750 name="QueryCloudFilmUrlForQrCodeResponse" /&gt;</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">WSDL at 'http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl' loaded:
(Definitions){
   id = "Definitions:0x4eda8d0"
   options = Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x03D0FA30&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x03CE68B0&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x04EDA350&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x03CE68B0&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x03D32AB0&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
Linked:
Definitions:
	proxy: classes=(&lt;class 'dict'&gt;,), default={}
	timeout: classes=(&lt;class 'int'&gt;, &lt;class 'float'&gt;), default=90
	headers: classes=(&lt;class 'dict'&gt;,), default={}
	username: classes=(&lt;class 'str'&gt;,), default=None
	password: classes=(&lt;class 'str'&gt;,), default=None
Content:
	('proxy', {})
	('timeout', 90)
	('headers', {})
	('username', None)
	('password', None)
Linked:
Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x03D0FA30&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x03CE68B0&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x04EDA350&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x03CE68B0&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x03D32AB0&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
   url = "http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl"
   tns[] = 
      "tns",
      "http://carestream.org/",
   types[] = 
      (Types){
         definitions = (Definitions)...
      },
   schema = "&lt;Schema:0x4ea0630 tns="http://carestream.org/"/&gt;"
   imports[] = &lt;empty&gt;
   messages = 
      {
         (NotifyExamInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamInfoSoapIn"
               qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamInfoSoapOut"
               qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportFileSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportFileSoapIn"
               qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportFile', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportFileSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportFileSoapOut"
               qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "SetPrintModeSoapIn"
               qname = "(SetPrintModeSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('SetPrintMode', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "SetPrintModeSoapOut"
               qname = "(SetPrintModeSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('SetPrintModeResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapIn"
               qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyFilmInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapOut"
               qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapIn"
               qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapOut"
               qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamReservationInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamReservationInfoSoapIn"
               qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamReservationInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamReservationInfoSoapOut"
               qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyPatientInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyPatientInfoSoapIn"
               qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyPatientInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyPatientInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyPatientInfoSoapOut"
               qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlSoapIn"
               qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlSoapOut"
               qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlForQrCodeSoapIn"
               qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlForQrCodeSoapOut"
               qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
      }
   port_types = 
      {
         (NotifyServiceSoap, http://carestream.org/, ) = 
            (PortType){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyExamInfoSoapIn"
                                 qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyExamInfoSoapOut"
                                 qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportFileSoapIn"
                                 qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportFile', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportFileSoapOut"
                                 qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "SetPrintModeSoapIn"
                                 qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('SetPrintMode', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetPrintModeSoapOut"
                                 qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyFilmInfoSoapIn"
                                 qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyFilmInfoSoapOut"
                                 qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportInfoSoapIn"
                                 qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportInfoSoapOut"
                                 qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyExamReservationInfoSoapIn"
                                 qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyExamReservationInfoSoapOut"
                                 qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyPatientInfoSoapIn"
                                 qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyPatientInfoSoapOut"
                                 qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "QueryCloudFilmUrlSoapIn"
                                 qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryCloudFilmUrlSoapOut"
                                 qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                 qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                 qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                  }
            }
      }
   bindings = 
      {
         (NotifyServiceSoap, http://carestream.org/, ) = 
            (Binding){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamInfoSoapIn"
                                       qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamInfoSoapOut"
                                       qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportFileSoapIn"
                                       qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFile', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportFileSoapOut"
                                       qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintMode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapIn"
                                       qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapOut"
                                       qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapIn"
                                       qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapOut"
                                       qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapIn"
                                       qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapOut"
                                       qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
         (NotifyServiceSoap12, http://carestream.org/, ) = 
            (Binding){
               name = "NotifyServiceSoap12"
               qname = "(NotifyServiceSoap12, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamInfoSoapIn"
                                       qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamInfoSoapOut"
                                       qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportFileSoapIn"
                                       qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFile', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportFileSoapOut"
                                       qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintMode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapIn"
                                       qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapOut"
                                       qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapIn"
                                       qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapOut"
                                       qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapIn"
                                       qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapOut"
                                       qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
      }
   services[] = 
      (Service){
         name = "NotifyService"
         qname = "(NotifyService, http://carestream.org/)"
         ports[] = 
            (Port){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportFile""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFile', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintMode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamReservationInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyPatientInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrl""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "NotifyServiceSoap"
                           qname = "(NotifyServiceSoap, http://carestream.org/)"
                           operations = 
                              {
                                 NotifyExamInfo = 
                                    (Operation){
                                       name = "NotifyExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamInfoSoapIn"
                                             qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamInfoSoapOut"
                                             qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportFile = 
                                    (Operation){
                                       name = "NotifyReportFile"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportFileSoapIn"
                                             qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportFileSoapOut"
                                             qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyExamReservationInfo = 
                                    (Operation){
                                       name = "NotifyExamReservationInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapIn"
                                             qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapOut"
                                             qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyPatientInfo = 
                                    (Operation){
                                       name = "NotifyPatientInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapIn"
                                             qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapOut"
                                             qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrl = 
                                    (Operation){
                                       name = "QueryCloudFilmUrl"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapIn"
                                             qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapOut"
                                             qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrlForQrCode = 
                                    (Operation){
                                       name = "QueryCloudFilmUrlForQrCode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
               methods = 
                  {
                     NotifyExamInfo = 
                        (Method){
                           name = "NotifyExamInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Method){
                           name = "NotifyReportFile"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Method){
                           name = "NotifyExamReservationInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Method){
                           name = "NotifyPatientInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Method){
                           name = "QueryCloudFilmUrl"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Method){
                           name = "QueryCloudFilmUrlForQrCode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
            (Port){
               name = "NotifyServiceSoap12"
               qname = "(NotifyServiceSoap12, http://carestream.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "NotifyServiceSoap12"
                     qname = "(NotifyServiceSoap12, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportFile""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFile', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintMode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamReservationInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyPatientInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrl""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "NotifyServiceSoap"
                           qname = "(NotifyServiceSoap, http://carestream.org/)"
                           operations = 
                              {
                                 NotifyExamInfo = 
                                    (Operation){
                                       name = "NotifyExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamInfoSoapIn"
                                             qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamInfoSoapOut"
                                             qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportFile = 
                                    (Operation){
                                       name = "NotifyReportFile"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportFileSoapIn"
                                             qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportFileSoapOut"
                                             qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyExamReservationInfo = 
                                    (Operation){
                                       name = "NotifyExamReservationInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapIn"
                                             qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapOut"
                                             qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyPatientInfo = 
                                    (Operation){
                                       name = "NotifyPatientInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapIn"
                                             qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapOut"
                                             qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrl = 
                                    (Operation){
                                       name = "QueryCloudFilmUrl"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapIn"
                                             qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapOut"
                                             qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrlForQrCode = 
                                    (Operation){
                                       name = "QueryCloudFilmUrlForQrCode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
               methods = 
                  {
                     NotifyExamInfo = 
                        (Method){
                           name = "NotifyExamInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Method){
                           name = "NotifyReportFile"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Method){
                           name = "NotifyExamReservationInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Method){
                           name = "NotifyPatientInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Method){
                           name = "QueryCloudFilmUrl"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Method){
                           name = "QueryCloudFilmUrlForQrCode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EA0670&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
      },
 }</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x4ea0650 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">method 'NotifyExamInfo' created: started: 1572595255 (running)</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x4ea0c70 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">method 'NotifyReportFile' created: started: 1572595255 (running)</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4ea0df0 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">method 'SetPrintMode' created: started: 1572595255 (running)</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x4ea0ed0 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">method 'NotifyFilmInfo' created: started: 1572595255 (running)</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x4ea0cf0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">method 'NotifyReportInfo' created: started: 1572595255 (running)</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x4928df0 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">method 'NotifyExamReservationInfo' created: started: 1572595255 (running)</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x4928cd0 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">method 'NotifyPatientInfo' created: started: 1572595255 (running)</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x4928790 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">method 'QueryCloudFilmUrl' created: started: 1572595255 (running)</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x49287f0 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">method 'QueryCloudFilmUrlForQrCode' created: started: 1572595255 (running)</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x4ea0650 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">method 'NotifyExamInfo' created: started: 1572595255 (running)</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x4ea0c70 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">method 'NotifyReportFile' created: started: 1572595255 (running)</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4ea0df0 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">method 'SetPrintMode' created: started: 1572595255 (running)</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x4ea0ed0 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">method 'NotifyFilmInfo' created: started: 1572595255 (running)</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x4ea0cf0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">method 'NotifyReportInfo' created: started: 1572595255 (running)</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x4928df0 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">method 'NotifyExamReservationInfo' created: started: 1572595255 (running)</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x4928cd0 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">method 'NotifyPatientInfo' created: started: 1572595255 (running)</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x4928790 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">method 'QueryCloudFilmUrl' created: started: 1572595255 (running)</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x49287f0 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">method 'QueryCloudFilmUrlForQrCode' created: started: 1572595255 (running)</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">Element:0x4ea0710, resolving: ('ExamInfo', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x4958130"
   ref[] = 
      "ExamInfo",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x4ea0710 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">('ExamInfo', 'http://carestream.org/'), found as: &lt;Complex:0x4ea06b0 name="ExamInfo" /&gt;</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">Element:0x4928cb0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4958130"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4928cb0 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">TypeQuery:0x4958130, found builtin (string)</msg>
<msg timestamp="20191101 16:00:55.951" level="DEBUG">Element:0x4928ab0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4958130"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4928ab0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">TypeQuery:0x4958130, found builtin (string)</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">Element:0x4928ad0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4958130"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4928ad0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">TypeQuery:0x4958130, found builtin (string)</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">Element:0x4928ef0, resolving: ('PatientInfoEx', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x4958130"
   ref[] = 
      "PatientInfoEx",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x4928ef0 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">('PatientInfoEx', 'http://carestream.org/'), found as: &lt;Complex:0x4928c10 name="PatientInfoEx" /&gt;</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">Element:0x4ea0d30, resolving: ('ExamInfo', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x49256b0"
   ref[] = 
      "ExamInfo",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x4ea0d30 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">('ExamInfo', 'http://carestream.org/'), found as: &lt;Complex:0x4ea06b0 name="ExamInfo" /&gt;</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">Element:0x4ea0d90, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x49256b0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4ea0d90 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">TypeQuery:0x49256b0, found builtin (string)</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">Element:0x4ea0db0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x49256b0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4ea0db0 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">TypeQuery:0x49256b0, found builtin (int)</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">Element:0x4ea0dd0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x49256b0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4ea0dd0 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">TypeQuery:0x49256b0, found builtin (string)</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">Element:0x4928af0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4958130"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4928af0 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">TypeQuery:0x4958130, found builtin (string)</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">Element:0x4928f70, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4958130"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4928f70 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">TypeQuery:0x4958130, found builtin (string)</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">Element:0x4928e10, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4958130"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4928e10 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">TypeQuery:0x4958130, found builtin (string)</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">Element:0x4928e30, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4958130"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4928e30 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">TypeQuery:0x4958130, found builtin (string)</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">Element:0x4928e50, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4958130"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4928e50 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">TypeQuery:0x4958130, found builtin (int)</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">Element:0x4928d90, resolving: ('ArrayOfString', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x4958130"
   ref[] = 
      "ArrayOfString",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x4928d90 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">('ArrayOfString', 'http://carestream.org/'), found as: &lt;Complex:0x4928b70 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">Element:0x4928db0, resolving: ('ArrayOfString', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x4958130"
   ref[] = 
      "ArrayOfString",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x4928db0 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">('ArrayOfString', 'http://carestream.org/'), found as: &lt;Complex:0x4928b70 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">Element:0x4928870, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4958130"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4928870 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">TypeQuery:0x4958130, found builtin (string)</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">Element:0x4928850, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4958130"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4928850 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">TypeQuery:0x4958130, found builtin (string)</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">Element:0x4928910, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4958130"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4928910 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">TypeQuery:0x4958130, found builtin (string)</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">Element:0x4928a10, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4958130"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4928a10 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">TypeQuery:0x4958130, found builtin (string)</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">Element:0x4ea0eb0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4958130"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4ea0eb0 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">TypeQuery:0x4958130, found builtin (string)</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">Element:0x4ea0f30, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4958130"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4ea0f30 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">TypeQuery:0x4958130, found builtin (string)</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">Element:0x4ea0f50, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4958130"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4ea0f50 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">TypeQuery:0x4958130, found builtin (int)</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">Element:0x4ea0f70, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4958130"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4ea0f70 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">TypeQuery:0x4958130, found builtin (int)</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">Element:0x4ea0f90, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4958130"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4ea0f90 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">TypeQuery:0x4958130, found builtin (int)</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4ea0df0 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4ea0df0 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">processing:
(Content){
   tag = "strAccessionNumber"
   value = "A20191101155924028532"
   type = &lt;Element:0x4ea0eb0 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4925a90 /&gt;
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x04925FB0&gt;
content:
(Content){
   tag = "strAccessionNumber"
   value = "A20191101155924028532"
   type = &lt;Element:0x4ea0eb0 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4925a90 /&gt;
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">starting content:
(Content){
   tag = "strAccessionNumber"
   value = "A20191101155924028532"
   type = &lt;Element:0x4ea0eb0 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4925a90 /&gt;
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04925FF0&gt;)
&lt;suds.resolver.Frame object at 0x04925FF0&gt;</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">created - node:
&lt;tns:strAccessionNumber xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">ending content:
(Content){
   tag = "strAccessionNumber"
   value = "A20191101155924028532"
   type = &lt;Element:0x4ea0eb0 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4925a90 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04925FF0&gt;)
</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">processing:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x4ea0f30 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4925ad0 /&gt;
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x04925D90&gt;
content:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x4ea0f30 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4925ad0 /&gt;
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">starting content:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x4ea0f30 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4925ad0 /&gt;
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04925DD0&gt;)
&lt;suds.resolver.Frame object at 0x04925DD0&gt;</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">created - node:
&lt;tns:strStudyInstanceUID xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">ending content:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x4ea0f30 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4925ad0 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04925DD0&gt;)
</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">processing:
(Content){
   tag = "nMode"
   value = "0"
   type = &lt;Element:0x4ea0f50 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4925b10 /&gt;
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x049342B0&gt;
content:
(Content){
   tag = "nMode"
   value = "0"
   type = &lt;Element:0x4ea0f50 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4925b10 /&gt;
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">starting content:
(Content){
   tag = "nMode"
   value = "0"
   type = &lt;Element:0x4ea0f50 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4925b10 /&gt;
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x049342F0&gt;)
&lt;suds.resolver.Frame object at 0x049342F0&gt;</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">created - node:
&lt;tns:nMode xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">ending content:
(Content){
   tag = "nMode"
   value = "0"
   type = &lt;Element:0x4ea0f50 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4925b10 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x049342F0&gt;)
</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">processing:
(Content){
   tag = "printWaitTime"
   value = "60"
   type = &lt;Element:0x4ea0f70 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4925b50 /&gt;
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x04934590&gt;
content:
(Content){
   tag = "printWaitTime"
   value = "60"
   type = &lt;Element:0x4ea0f70 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4925b50 /&gt;
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">starting content:
(Content){
   tag = "printWaitTime"
   value = "60"
   type = &lt;Element:0x4ea0f70 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4925b50 /&gt;
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x049345D0&gt;)
&lt;suds.resolver.Frame object at 0x049345D0&gt;</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">created - node:
&lt;tns:printWaitTime xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">ending content:
(Content){
   tag = "printWaitTime"
   value = "60"
   type = &lt;Element:0x4ea0f70 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4925b50 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x049345D0&gt;)
</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">processing:
(Content){
   tag = "reportWaitTime"
   value = "10"
   type = &lt;Element:0x4ea0f90 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4925bd0 /&gt;
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x04934870&gt;
content:
(Content){
   tag = "reportWaitTime"
   value = "10"
   type = &lt;Element:0x4ea0f90 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4925bd0 /&gt;
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">starting content:
(Content){
   tag = "reportWaitTime"
   value = "10"
   type = &lt;Element:0x4ea0f90 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4925bd0 /&gt;
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x049348B0&gt;)
&lt;suds.resolver.Frame object at 0x049348B0&gt;</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">created - node:
&lt;tns:reportWaitTime xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">ending content:
(Content){
   tag = "reportWaitTime"
   value = "10"
   type = &lt;Element:0x4ea0f90 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4925bd0 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x049348B0&gt;)
</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">message for 'SetPrintMode' created: 0 (ms)</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">sending to (http://10.112.20.84/NotifyServer/NotifyService.asmx)
message:
&lt;suds.sax.document.Document object at 0x04925870&gt;</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">headers = {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://carestream.org/SetPrintMode"'}</msg>
<msg timestamp="20191101 16:00:55.966" level="DEBUG">sending:
URL: http://10.112.20.84/NotifyServer/NotifyService.asmx
HEADERS: {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://carestream.org/SetPrintMode"', 'Content-type': 'text/xml; charset=utf-8', 'Soapaction': b'"http://carestream.org/SetPrintMode"'}
MESSAGE:
b'&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://carestream.org/"&gt;&lt;SOAP-ENV:Header/&gt;&lt;ns0:Body&gt;&lt;ns1:SetPrintMode&gt;&lt;ns1:strAccessionNumber&gt;A20191101155924028532&lt;/ns1:strAccessionNumber&gt;&lt;ns1:strStudyInstanceUID&gt;&lt;/ns1:strStudyInstanceUID&gt;&lt;ns1:nMode&gt;0&lt;/ns1:nMode&gt;&lt;ns1:printWaitTime&gt;60&lt;/ns1:printWaitTime&gt;&lt;ns1:reportWaitTime&gt;10&lt;/ns1:reportWaitTime&gt;&lt;/ns1:SetPrintMode&gt;&lt;/ns0:Body&gt;&lt;/SOAP-ENV:Envelope&gt;'</msg>
<msg timestamp="20191101 16:00:56.044" level="DEBUG">received:
CODE: HTTPStatus.OK
HEADERS: Cache-Control: private, max-age=0
Content-Type: text/xml; charset=utf-8
Server: Microsoft-IIS/7.5
X-AspNet-Version: 4.0.30319
X-Powered-By: ASP.NET
Date: Fri, 01 Nov 2019 08:00:55 GMT
Connection: close
Content-Length: 364


MESSAGE:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;SetPrintModeResponse xmlns="http://carestream.org/"&gt;&lt;SetPrintModeResult&gt;0&lt;/SetPrintModeResult&gt;&lt;/SetPrintModeResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191101 16:00:56.044" level="DEBUG">waited 78 (ms) on server reply</msg>
<msg timestamp="20191101 16:00:56.044" level="DEBUG">HTTP succeeded:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;SetPrintModeResponse xmlns="http://carestream.org/"&gt;&lt;SetPrintModeResult&gt;0&lt;/SetPrintModeResult&gt;&lt;/SetPrintModeResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191101 16:00:56.044" level="DEBUG">b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;SetPrintModeResponse xmlns="http://carestream.org/"&gt;&lt;SetPrintModeResult&gt;0&lt;/SetPrintModeResult&gt;&lt;/SetPrintModeResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'
sax duration: 0 (ms)</msg>
<msg timestamp="20191101 16:00:56.044" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x4ea0e50 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191101 16:00:56.044" level="DEBUG">Element:0x4ea0fb0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4934870"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4ea0fb0 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:00:56.044" level="DEBUG">TypeQuery:0x4934870, found builtin (int)</msg>
<msg timestamp="20191101 16:00:56.044" level="DEBUG">reset</msg>
<msg timestamp="20191101 16:00:56.044" level="DEBUG">Element:0x4ea0fb0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4934e90"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4ea0fb0 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:00:56.044" level="DEBUG">TypeQuery:0x4934e90, found builtin (int)</msg>
<msg timestamp="20191101 16:00:56.044" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04934BB0&gt;)
&lt;suds.resolver.Frame object at 0x04934BB0&gt;</msg>
<msg timestamp="20191101 16:00:56.044" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04934BB0&gt;)
</msg>
<msg timestamp="20191101 16:00:56.044" level="DEBUG">method 'SetPrintMode' invoked: 78 (ms)</msg>
<msg timestamp="20191101 16:00:56.044" level="INFO">Printmode.printmode_set_by_accn: Find the records in print mode table of exam: A20191101155924028532.
Printmode.printmode_set_by_accn: Set exam print mode to [both] successfully.</msg>
<msg timestamp="20191101 16:00:56.044" level="INFO">${Set_Printmode} = True</msg>
<status status="PASS" starttime="20191101 16:00:55.872" endtime="20191101 16:00:56.044"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Set_Printmode}</arg>
</arguments>
<status status="PASS" starttime="20191101 16:00:56.044" endtime="20191101 16:00:56.044"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20191101 16:01:06.044" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20191101 16:00:56.044" endtime="20191101 16:01:06.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5 \n Description: \n 1. Wait for the holding time of film and report has passed. \n Expected:\n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191101 16:01:06.044" level="INFO">Step 5 
Description: 
1. Wait for the holding time of film and report has passed. 
Expected:
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191101 16:01:06.044" endtime="20191101 16:01:06.044"></status>
</kw>
<kw name="HoldTime Wait Time Arrive By Accn" library="PUMA_HoldTimeLibrary">
<doc>HoldTime_get_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Holdtime_result}</var>
</assign>
<msg timestamp="20191101 16:02:01.044" level="INFO">HoldTime.HoldTime_wait_time_arrive_by_accn: Sleep [55] seconds to make print ready arrived.</msg>
<msg timestamp="20191101 16:02:01.044" level="INFO">${Holdtime_result} = True</msg>
<status status="PASS" starttime="20191101 16:01:06.044" endtime="20191101 16:02:01.044"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Holdtime_result}</arg>
</arguments>
<status status="PASS" starttime="20191101 16:02:01.044" endtime="20191101 16:02:01.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6 \n Description: \n 1.Print the prepared films and reports with accession number on K3 terminal prepared in step1. \n Expected: \n 1. The print task should finish successfully. The status in wggc.dbo.afp_printtask should be 4. \n</arg>
</arguments>
<msg timestamp="20191101 16:02:01.044" level="INFO">Step 6 
Description: 
1.Print the prepared films and reports with accession number on K3 terminal prepared in step1. 
Expected: 
1. The print task should finish successfully. The status in wggc.dbo.afp_printtask should be 4. 
</msg>
<status status="PASS" starttime="20191101 16:02:01.044" endtime="20191101 16:02:01.044"></status>
</kw>
<kw name="Terminal Print With Cardinfo" library="PUMA_TerminalLibrary">
<doc>This function is simulate the terminal print opertaions with API.
You can select the exist termina name and input the cardinfo to print the report, films.
The function will verify the print mode and exam info to print.
It will return bool value.</doc>
<arguments>
<arg>K3_Terminal01</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Termina_Print_Result}</var>
</assign>
<msg timestamp="20191101 16:02:01.044" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:02:01.060" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/EHDPS/status?tid=K3_Terminal01 HTTP/1.1" 200 609</msg>
<msg timestamp="20191101 16:02:01.060" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:02:01.341" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/EHDPS/printtask/items?Value=A20191101155924028532&amp;Type=0&amp;tid=K3_Terminal01 HTTP/1.1" 200 1443</msg>
<msg timestamp="20191101 16:02:01.341" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:02:01.716" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/EHDPS/printtask/create?tid=K3_Terminal01 HTTP/1.1" 200 732</msg>
<msg timestamp="20191101 16:02:01.732" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:02:01.747" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/EHDPS/printtask/print/2080?tid=K3_Terminal01 HTTP/1.1" 200 729</msg>
<msg timestamp="20191101 16:03:56.763" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:03:57.498" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/ImageSuite/Web/report/pdfviewer.aspx?id=53a57eaa2ba042ff96486d2ac7457a0a HTTP/1.1" 200 284552</msg>
<msg timestamp="20191101 16:03:57.498" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:03:57.607" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/EHDPS/printtask/report/2080/53a57eaa2ba042ff96486d2ac7457a0a/1?tid=K3_Terminal01 HTTP/1.1" 200 221</msg>
<msg timestamp="20191101 16:04:07.607" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:04:07.654" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/ImageSuite/Web/report/pdfviewer.aspx?id=d664139732ce4af9b64cc512477ebe0c HTTP/1.1" 200 284552</msg>
<msg timestamp="20191101 16:04:07.670" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:04:07.701" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/EHDPS/printtask/report/2080/d664139732ce4af9b64cc512477ebe0c/1?tid=K3_Terminal01 HTTP/1.1" 200 221</msg>
<msg timestamp="20191101 16:05:42.701" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:05:42.732" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/EHDPS/printtask/status/2080?tid=K3_Terminal01 HTTP/1.1" 200 734</msg>
<msg timestamp="20191101 16:05:42.732" level="INFO">Terminal._check_terminal_status: The terminal status check and result is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"Status":0,"Terminal":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9929,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20284,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}
Terminal.printtask_report_getinfo: get the report information by cardiinfo: 
{"Status":0,"Code":"","Message":"您有胶片和报告可打印，请稍等！","OriginalException":null,"Entity":{"PrintState":0,"Message":"","FilmCount":2,"ReportCount":2,"PatientInfo":{"PatientId":"P20191101155924028532","PatientName":"CN20191101155924028532","PatientGender":"M","PatientBirthday":null,"PatientType":"2","PatientAge":null},"FilmStatistics":[{"FilmSize":"14INX17IN","FilmType":"BLUE FILM","FilmCount":2}],"ReportStatistics":[{"ReportID":null,"ReportPath":null,"ReportCount":2,"PageCount":0,"PaperSize":0,"PaperType":0,"ColorType":0}],"ExamItems":[{"AccessionNumber":"A20191101155924028532","ModalityType":"OT","ModalityName":"MR","ExamName":"Exam20191101155924028532","ReferringDepartment":null,"ExamDate":null,"ExamBodyPart":"","Status":"Unprinted","StatusComments":null,"PatientType":null,"FilmInfos":[{"FilmSize":"14INX17IN","FilmType":"BLUE FILM","FilmCount":1},{"FilmSize":"14INX17IN","FilmType":"BLUE FILM","FilmCount":1}],"ReportInfos":[{"ReportID":"53a57eaa2ba042ff96486d2ac7457a0a","ReportPath":"http://10.112.20.84/ImageSuite/Web/report/pdfviewer.aspx?id=53a57eaa2ba042ff96486d2ac7457a0a","ReportCount":0,"PageCount":1,"PaperSize":0,"PaperType":0,"ColorType":0},{"ReportID":"d664139732ce4af9b64cc512477ebe0c","ReportPath":"http://10.112.20.84/ImageSuite/Web/report/pdfviewer.aspx?id=d664139732ce4af9b64cc512477ebe0c","ReportCount":0,"PageCount":1,"PaperSize":0,"PaperType":0,"ColorType":0}]}],"ExamItemsOfReg":[]}}
Terminal.create_film_printtask: The terminal film print create and response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"2080","Status":-1,"TotalFilmCount":2,"TotalReportCount":2,"PrintedFilmCount":0,"PrintedReportCount":0,"EstimatedTime":0,"TerminalInfo":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9929,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20284,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}
Terminal.create_film_printtask: The taskID is 2080
Terminal.printtask_print: The terminal print task print response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"","Status":0,"TotalFilmCount":0,"TotalReportCount":0,"PrintedFilmCount":0,"PrintedReportCount":0,"EstimatedTime":0,"TerminalInfo":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9929,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20284,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":"2080"}}}
Terminal.printtask_get_estimatetime: The estimate time is 85 of task 2080 

Terminal.printtask_report_download: download the file successfully from: 
http://10.112.20.84/ImageSuite/Web/report/pdfviewer.aspx?id=53a57eaa2ba042ff96486d2ac7457a0a
Terminal.printtask_report_print: The report 53a57eaa2ba042ff96486d2ac7457a0a print response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"2080","Status":1,"TotalFilmCount":2,"TotalReportCount":2,"PrintedFilmCount":2,"PrintedReportCount":0,"EstimatedTime":85,"TerminalInfo":null}}
Terminal.printtask_report_download: download the file successfully from: 
http://10.112.20.84/ImageSuite/Web/report/pdfviewer.aspx?id=d664139732ce4af9b64cc512477ebe0c
Terminal.printtask_report_print: The report d664139732ce4af9b64cc512477ebe0c print response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"2080","Status":1,"TotalFilmCount":2,"TotalReportCount":2,"PrintedFilmCount":2,"PrintedReportCount":2,"EstimatedTime":85,"TerminalInfo":null}}
Terminal.printtask_status_check: The terminal print task status check response is:
 {"Status":0,"Code":"","Message":null,"OriginalException":null,"Entity":{"TaskId":"2080","Status":4,"TotalFilmCount":2,"TotalReportCount":2,"PrintedFilmCount":2,"PrintedReportCount":2,"EstimatedTime":85,"TerminalInfo":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9927,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20282,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}
Terminal.terminal_print_with_cardinfo: The task 2080 print successfully, the task status is Printed</msg>
<msg timestamp="20191101 16:05:42.732" level="INFO">${Termina_Print_Result} = True</msg>
<status status="PASS" starttime="20191101 16:02:01.044" endtime="20191101 16:05:42.732"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Termina_Print_Result}</arg>
</arguments>
<status status="PASS" starttime="20191101 16:05:42.732" endtime="20191101 16:05:42.732"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191101 15:59:23.169" endtime="20191101 16:05:42.732" critical="yes"></status>
</test>
<test id="s1-t8" name="SmokeTest_008_Core_4177_04.01.02 Terminal K3 Print Workflow with one film and one report.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description:\n 1. Configure a K3 terminal on PS. \n 2. Make sure the terminal status is ready to work. \n Expected: \n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191101 16:05:42.732" level="INFO">Step 1 
Description:
1. Configure a K3 terminal on PS. 
2. Make sure the terminal status is ready to work. 
Expected: 
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191101 16:05:42.732" endtime="20191101 16:05:42.732"></status>
</kw>
<kw name="Check Terminal Status" library="PUMA_TerminalLibrary">
<doc>This function is use the API interface to check the terminal status.
The function will enable the terminal status to 'on work' status.</doc>
<arguments>
<arg>K3_Terminal01</arg>
</arguments>
<assign>
<var>${Terminal_status}</var>
</assign>
<msg timestamp="20191101 16:05:42.732" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:05:42.779" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/EHDPS/status?tid=K3_Terminal01 HTTP/1.1" 200 609</msg>
<msg timestamp="20191101 16:05:42.779" level="INFO">Terminal._check_terminal_status: The terminal status check and result is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"Status":0,"Terminal":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9927,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20282,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}</msg>
<msg timestamp="20191101 16:05:42.779" level="INFO">${Terminal_status} = True</msg>
<status status="PASS" starttime="20191101 16:05:42.732" endtime="20191101 16:05:42.779"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Terminal_status}</arg>
<arg>The termianl status is ready to print</arg>
</arguments>
<status status="PASS" starttime="20191101 16:05:42.779" endtime="20191101 16:05:42.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Create one film for patientB/ExamB. \n Expected \n 1. The film can archived successfully. \n</arg>
</arguments>
<msg timestamp="20191101 16:05:42.779" level="INFO">Step 2 
Description: 
1. Create one film for patientB/ExamB. 
Expected 
1. The film can archived successfully. 
</msg>
<status status="PASS" starttime="20191101 16:05:42.779" endtime="20191101 16:05:42.779"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191101 16:05:42.779" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:05:42.795" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191101 16:05:42.795" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-01 16:05:42.779017", "UpdateDT": "2019-11-01 16:05:42.779017", "PatientID": "P20191101160542779017", "AccessionNumber": "A20191101160542779017", "StudyInstanceUID": "UID20191101160542779017", "NameCN": "CN20191101160542779017", "NameEN": "EN20191101160542779017", "Gender": "F", "Birthday": "1968-11-13", "Modality": "MR", "ModalityName": "DX", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-01 16:05:42.779017", "RegisterDT": "2019-11-01 16:05:42.779017", "ExamDT": "2019-11-01 16:05:42.779017", "ReportDT": "2019-11-01 16:05:42.779017", "SubmitDT": "2019-11-01 16:05:42.779017", "ApproveDT": "2019-11-01 16:05:42.779017", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191101160542779017", "ExamBodyPart": "Chest", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191101 16:05:42.795" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-01 16:05:42.779017", "UpdateDT": "2019-11-01 16:05:42.779017", "PatientID": "P20191101160542779017", "AccessionNumber": "A20191101160542779017", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191101 16:05:42.779" endtime="20191101 16:05:42.795"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191101 16:05:42.795" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-01 16:05:42.779017', 'UpdateDT': '2019-11-01 16:05:42.779017', 'PatientID': 'P20191101160542779017', 'AccessionNumber': 'A20191101160542779017', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191101 16:05:42.795" endtime="20191101 16:05:42.795"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191101 16:05:42.857" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191101 16:05:42.795" endtime="20191101 16:05:42.857"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191101 16:05:42.888" level="INFO">${patientID} = ['P20191101160542779017']</msg>
<status status="PASS" starttime="20191101 16:05:42.857" endtime="20191101 16:05:42.888"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191101 16:05:42.935" level="INFO">${Accessionnumber} = ['A20191101160542779017']</msg>
<status status="PASS" starttime="20191101 16:05:42.888" endtime="20191101 16:05:42.935"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 16:05:42.935" endtime="20191101 16:05:42.935"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191101 16:06:24.045" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191101160542779017", "AccessionNumber": "A20191101160542779017", "FilmSessionLable": "20191101160542935268", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191101 16:06:24.045" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191101160542779017", "AccessionNumber": "A20191101160542779017", "FilmSessionLable": "20191101160542935268", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191101 16:05:42.935" endtime="20191101 16:06:24.045"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191101 16:06:24.045" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191101160542779017', 'AccessionNumber': 'A20191101160542779017', 'FilmSessionLable': '20191101160542935268', 'DeliveryJob_status': 2, 'WaterMark_Path': 'D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191101 16:06:24.045" endtime="20191101 16:06:24.045"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191101 16:06:24.076" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191101 16:06:24.045" endtime="20191101 16:06:24.076"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 16:06:24.076" endtime="20191101 16:06:24.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3 \n Description:\n 1. Create one report for patientB/ExamB. \n Expected: \n 1. The report can archived successfully. \n</arg>
</arguments>
<msg timestamp="20191101 16:06:24.076" level="INFO">Step 3 
Description:
1. Create one report for patientB/ExamB. 
Expected: 
1. The report can archived successfully. 
</msg>
<status status="PASS" starttime="20191101 16:06:24.076" endtime="20191101 16:06:24.076"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191101 16:06:34.092" level="INFO">PUMA_ReportLibrary._archive_check: Report achived successfully.
Report achived successfully. {"Status": true, "server": "10.112.20.84", "patient_id": "P20191101160542779017", "accession_number": "A20191101160542779017", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "powershell_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.84/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191101 16:06:34.092" level="INFO">${Report_archived_Info} = {"Status": true, "server": "10.112.20.84", "patient_id": "P20191101160542779017", "accession_number": "A20191101160542779017", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191101 16:06:24.076" endtime="20191101 16:06:34.092"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191101 16:06:34.092" level="INFO">${Report_archived_Info_Json} = {'Status': True, 'server': '10.112.20.84', 'patient_id': 'P20191101160542779017', 'accession_number': 'A20191101160542779017', 'report_file': 'D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191101 16:06:34.092" endtime="20191101 16:06:34.092"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191101 16:06:34.123" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191101 16:06:34.092" endtime="20191101 16:06:34.123"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 16:06:34.123" endtime="20191101 16:06:34.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4 \n Description:\n 1. Set the print mode to both for ExamB \n Expected:\n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191101 16:06:34.123" level="INFO">Step 4 
Description:
1. Set the print mode to both for ExamB 
Expected:
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191101 16:06:34.123" endtime="20191101 16:06:34.123"></status>
</kw>
<kw name="Printmode Set By Accn" library="PUMA_PrintModeLibrary">
<doc>printmode_set_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
<arg>both</arg>
</arguments>
<assign>
<var>${Set_Printmode}</var>
</assign>
<msg timestamp="20191101 16:06:34.123" level="DEBUG">reading WSDL at: http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl ...</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e2d0, convert type="tns:ExamInfo" to ('ExamInfo', 'http://carestream.org/')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e330, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e370, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e390, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e3b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e3d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e410, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e430, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e450, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e470, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e3f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e490, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e4b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e4d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e4f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e510, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e530, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e550, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e570, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e590, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e5b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e5d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e5f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e610, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e630, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e650, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e670, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e690, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e6b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e6d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e6f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e710, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e730, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e750, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e770, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e790, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.138" level="DEBUG">Element:0x4a2e7b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a2e7d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a2e7f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a2e810, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a2e870, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a2e8f0, convert type="tns:ExamInfo" to ('ExamInfo', 'http://carestream.org/')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a2e950, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a2e970, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a2e990, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a2e9f0, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a2ea70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a2eaf0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a2eb10, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a2eb30, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a2eb50, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a2eb70, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a2ec10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a2ec70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a2ec50, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a2ed10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a2ed90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a2edb0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a2edd0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a2edf0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a2ee30, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://carestream.org/')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a2ee50, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://carestream.org/')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a2ed70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a2eed0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a2ef50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a2efd0, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a4d070, convert type="tns:PatientInfoEx" to ('PatientInfoEx', 'http://carestream.org/')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a4d0d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a4d110, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a4d130, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a4d150, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a4d170, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a4d1b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a4d1d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a4d1f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a4d210, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a4d190, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a4d230, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a4d290, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a4d310, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a4d370, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a4d3b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a4d430, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a4d490, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">Element:0x4a4d4d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:06:34.154" level="DEBUG">loaded:

schema collection
   Schema:0x4a2e1f0
   (raw)
      &lt;s:schema elementFormDefault="qualified" targetNamespace="http://carestream.org/"&gt;
         &lt;s:element name="NotifyExamInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ExamInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="CreateDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="UpdateDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="AccessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="StudyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="NameCN" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="NameEN" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Modality" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ModalityName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientType" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="VisitID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDepartment" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RegisterDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ReportDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="SubmitDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ApproveDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PDFReportURL" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="StudyStatus" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="OutHospitalNo" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="InHospitalNo" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PhysicalNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamBodyPart" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RefferingDepartment" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional0" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional1" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional2" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional3" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional4" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional5" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional6" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional7" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional8" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional9" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyExamInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportFile"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportPath" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportFileResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportFileResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetPrintMode"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="printWaitTime" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportWaitTime" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetPrintModeResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyFilmInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyFilmInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="tns:ArrayOfString"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ArrayOfString"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyReportInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyExamReservationInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="base64ExamReservation" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyExamReservationInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamReservationInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyPatientInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientInfo" type="tns:PatientInfoEx"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="PatientInfoEx"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="LocalName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Age" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="IdentifyCardNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="MedicalCardNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="SocialSecurityCardNumber" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyPatientInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyPatientInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrl"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlForQrCode"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlForQrCodeResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlForQrCodeResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
      &lt;/s:schema&gt;
   (model)
      &lt;Element:0x4a2e210 name="NotifyExamInfo"&gt;
         &lt;Complex:0x4a2e250&gt;
            &lt;Sequence:0x4a2e290&gt;
               &lt;Element:0x4a2e2d0 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x4a2e270 name="ExamInfo"&gt;
         &lt;Sequence:0x4a2e2b0&gt;
            &lt;Element:0x4a2e330 name="CreateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e370 name="UpdateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e390 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e3b0 name="AccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e3d0 name="StudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e410 name="NameCN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e430 name="NameEN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e450 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e470 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e3f0 name="Modality" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e490 name="ModalityName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e4b0 name="PatientType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e4d0 name="VisitID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e4f0 name="RequestID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e510 name="RequestDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e530 name="RequestDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e550 name="RegisterDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e570 name="ExamDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e590 name="ReportDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e5b0 name="SubmitDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e5d0 name="ApproveDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e5f0 name="PDFReportURL" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e610 name="StudyStatus" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e630 name="OutHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e650 name="InHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e670 name="PhysicalNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e690 name="ExamName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e6b0 name="ExamBodyPart" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e6d0 name="RefferingDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e6f0 name="Optional0" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e710 name="Optional1" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e730 name="Optional2" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e750 name="Optional3" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e770 name="Optional4" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e790 name="Optional5" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e7b0 name="Optional6" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e7d0 name="Optional7" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e7f0 name="Optional8" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e810 name="Optional9" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x4a2e2f0 name="NotifyExamInfoResponse"&gt;
         &lt;Complex:0x4a2e310&gt;
            &lt;Sequence:0x4a2e350&gt;
               &lt;Element:0x4a2e870 name="NotifyExamInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4a2e830 name="NotifyReportFile"&gt;
         &lt;Complex:0x4a2e850&gt;
            &lt;Sequence:0x4a2e8d0&gt;
               &lt;Element:0x4a2e8f0 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
               &lt;Element:0x4a2e950 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4a2e970 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4a2e990 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4a2e890 name="NotifyReportFileResponse"&gt;
         &lt;Complex:0x4a2e910&gt;
            &lt;Sequence:0x4a2e930&gt;
               &lt;Element:0x4a2e9f0 name="NotifyReportFileResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4a2e9b0 name="SetPrintMode"&gt;
         &lt;Complex:0x4a2e9d0&gt;
            &lt;Sequence:0x4a2ea50&gt;
               &lt;Element:0x4a2ea70 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4a2eaf0 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4a2eb10 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4a2eb30 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4a2eb50 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4a2ea10 name="SetPrintModeResponse"&gt;
         &lt;Complex:0x4a2ea30&gt;
            &lt;Sequence:0x4a2ead0&gt;
               &lt;Element:0x4a2eb70 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4a2ea90 name="NotifyFilmInfo"&gt;
         &lt;Complex:0x4a2eb90&gt;
            &lt;Sequence:0x4a2ebf0&gt;
               &lt;Element:0x4a2ec10 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4a2ec70 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4a2ebb0 name="NotifyFilmInfoResponse"&gt;
         &lt;Complex:0x4a2e8b0&gt;
            &lt;Sequence:0x4a2ec30&gt;
               &lt;Element:0x4a2ec50 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4a2ebd0 name="NotifyReportInfo"&gt;
         &lt;Complex:0x4a2ec90&gt;
            &lt;Sequence:0x4a2ecf0&gt;
               &lt;Element:0x4a2ed10 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4a2ed90 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4a2edb0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4a2edd0 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4a2edf0 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4a2ee30 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
               &lt;Element:0x4a2ee50 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x4a2ecb0 name="ArrayOfString"&gt;
         &lt;Sequence:0x4a2ecd0&gt;
            &lt;Element:0x4a2ed70 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x4a2ed30 name="NotifyReportInfoResponse"&gt;
         &lt;Complex:0x4a2ee70&gt;
            &lt;Sequence:0x4a2ee10&gt;
               &lt;Element:0x4a2eed0 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4a2ee90 name="NotifyExamReservationInfo"&gt;
         &lt;Complex:0x4a2eeb0&gt;
            &lt;Sequence:0x4a2ef30&gt;
               &lt;Element:0x4a2ef50 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4a2eef0 name="NotifyExamReservationInfoResponse"&gt;
         &lt;Complex:0x4a2ef10&gt;
            &lt;Sequence:0x4a2efb0&gt;
               &lt;Element:0x4a2efd0 name="NotifyExamReservationInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4a2ef70 name="NotifyPatientInfo"&gt;
         &lt;Complex:0x4a2ef90&gt;
            &lt;Sequence:0x4a4d050&gt;
               &lt;Element:0x4a4d070 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x4a2eff0 name="PatientInfoEx"&gt;
         &lt;Sequence:0x4a4d030&gt;
            &lt;Element:0x4a4d0d0 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a4d110 name="PatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a4d130 name="LocalName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a4d150 name="Age" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a4d170 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a4d1b0 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a4d1d0 name="Address" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a4d1f0 name="IdentifyCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a4d210 name="MedicalCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a4d190 name="PhoneNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a4d230 name="SocialSecurityCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x4a4d090 name="NotifyPatientInfoResponse"&gt;
         &lt;Complex:0x4a4d0b0&gt;
            &lt;Sequence:0x4a4d0f0&gt;
               &lt;Element:0x4a4d290 name="NotifyPatientInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4a4d250 name="QueryCloudFilmUrl"&gt;
         &lt;Complex:0x4a4d270&gt;
            &lt;Sequence:0x4a4d2f0&gt;
               &lt;Element:0x4a4d310 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4a4d370 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4a4d2b0 name="QueryCloudFilmUrlResponse"&gt;
         &lt;Complex:0x4a4d2d0&gt;
            &lt;Sequence:0x4a4d390&gt;
               &lt;Element:0x4a4d3b0 name="QueryCloudFilmUrlResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4a4d330 name="QueryCloudFilmUrlForQrCode"&gt;
         &lt;Complex:0x4a4d350&gt;
            &lt;Sequence:0x4a4d410&gt;
               &lt;Element:0x4a4d430 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4a4d490 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4a4d3d0 name="QueryCloudFilmUrlForQrCodeResponse"&gt;
         &lt;Complex:0x4a4d3f0&gt;
            &lt;Sequence:0x4a4d4b0&gt;
               &lt;Element:0x4a4d4d0 name="QueryCloudFilmUrlForQrCodeResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">MERGED:
Schema:0x4a2e1f0
(raw)
   &lt;s:schema elementFormDefault="qualified" targetNamespace="http://carestream.org/"&gt;
      &lt;s:element name="NotifyExamInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ExamInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="CreateDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="UpdateDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="AccessionNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="StudyInstanceUID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="NameCN" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="NameEN" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Modality" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ModalityName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientType" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="VisitID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDepartment" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RegisterDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ReportDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="SubmitDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ApproveDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PDFReportURL" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="StudyStatus" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="OutHospitalNo" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="InHospitalNo" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PhysicalNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamBodyPart" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RefferingDepartment" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional0" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional1" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional2" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional3" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional4" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional5" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional6" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional7" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional8" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional9" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyExamInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportFile"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportPath" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportFileResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportFileResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetPrintMode"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="printWaitTime" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportWaitTime" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetPrintModeResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyFilmInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyFilmInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="tns:ArrayOfString"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ArrayOfString"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyReportInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyExamReservationInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="base64ExamReservation" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyExamReservationInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamReservationInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyPatientInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientInfo" type="tns:PatientInfoEx"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="PatientInfoEx"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="LocalName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Age" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="IdentifyCardNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="MedicalCardNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="SocialSecurityCardNumber" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyPatientInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyPatientInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrl"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlForQrCode"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlForQrCodeResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlForQrCodeResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
   &lt;/s:schema&gt;
(model)
   &lt;Element:0x4a2e210 name="NotifyExamInfo"&gt;
      &lt;Complex:0x4a2e250&gt;
         &lt;Sequence:0x4a2e290&gt;
            &lt;Element:0x4a2e2d0 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x4a2e270 name="ExamInfo"&gt;
      &lt;Sequence:0x4a2e2b0&gt;
         &lt;Element:0x4a2e330 name="CreateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e370 name="UpdateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e390 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e3b0 name="AccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e3d0 name="StudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e410 name="NameCN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e430 name="NameEN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e450 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e470 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e3f0 name="Modality" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e490 name="ModalityName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e4b0 name="PatientType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e4d0 name="VisitID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e4f0 name="RequestID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e510 name="RequestDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e530 name="RequestDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e550 name="RegisterDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e570 name="ExamDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e590 name="ReportDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e5b0 name="SubmitDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e5d0 name="ApproveDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e5f0 name="PDFReportURL" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e610 name="StudyStatus" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e630 name="OutHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e650 name="InHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e670 name="PhysicalNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e690 name="ExamName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e6b0 name="ExamBodyPart" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e6d0 name="RefferingDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e6f0 name="Optional0" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e710 name="Optional1" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e730 name="Optional2" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e750 name="Optional3" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e770 name="Optional4" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e790 name="Optional5" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e7b0 name="Optional6" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e7d0 name="Optional7" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e7f0 name="Optional8" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a2e810 name="Optional9" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4a2e2f0 name="NotifyExamInfoResponse"&gt;
      &lt;Complex:0x4a2e310&gt;
         &lt;Sequence:0x4a2e350&gt;
            &lt;Element:0x4a2e870 name="NotifyExamInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4a2e830 name="NotifyReportFile"&gt;
      &lt;Complex:0x4a2e850&gt;
         &lt;Sequence:0x4a2e8d0&gt;
            &lt;Element:0x4a2e8f0 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
            &lt;Element:0x4a2e950 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e970 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2e990 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4a2e890 name="NotifyReportFileResponse"&gt;
      &lt;Complex:0x4a2e910&gt;
         &lt;Sequence:0x4a2e930&gt;
            &lt;Element:0x4a2e9f0 name="NotifyReportFileResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4a2e9b0 name="SetPrintMode"&gt;
      &lt;Complex:0x4a2e9d0&gt;
         &lt;Sequence:0x4a2ea50&gt;
            &lt;Element:0x4a2ea70 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2eaf0 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2eb10 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2eb30 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2eb50 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4a2ea10 name="SetPrintModeResponse"&gt;
      &lt;Complex:0x4a2ea30&gt;
         &lt;Sequence:0x4a2ead0&gt;
            &lt;Element:0x4a2eb70 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4a2ea90 name="NotifyFilmInfo"&gt;
      &lt;Complex:0x4a2eb90&gt;
         &lt;Sequence:0x4a2ebf0&gt;
            &lt;Element:0x4a2ec10 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2ec70 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4a2ebb0 name="NotifyFilmInfoResponse"&gt;
      &lt;Complex:0x4a2e8b0&gt;
         &lt;Sequence:0x4a2ec30&gt;
            &lt;Element:0x4a2ec50 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4a2ebd0 name="NotifyReportInfo"&gt;
      &lt;Complex:0x4a2ec90&gt;
         &lt;Sequence:0x4a2ecf0&gt;
            &lt;Element:0x4a2ed10 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2ed90 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2edb0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2edd0 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2edf0 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a2ee30 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
            &lt;Element:0x4a2ee50 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x4a2ecb0 name="ArrayOfString"&gt;
      &lt;Sequence:0x4a2ecd0&gt;
         &lt;Element:0x4a2ed70 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4a2ed30 name="NotifyReportInfoResponse"&gt;
      &lt;Complex:0x4a2ee70&gt;
         &lt;Sequence:0x4a2ee10&gt;
            &lt;Element:0x4a2eed0 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4a2ee90 name="NotifyExamReservationInfo"&gt;
      &lt;Complex:0x4a2eeb0&gt;
         &lt;Sequence:0x4a2ef30&gt;
            &lt;Element:0x4a2ef50 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4a2eef0 name="NotifyExamReservationInfoResponse"&gt;
      &lt;Complex:0x4a2ef10&gt;
         &lt;Sequence:0x4a2efb0&gt;
            &lt;Element:0x4a2efd0 name="NotifyExamReservationInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4a2ef70 name="NotifyPatientInfo"&gt;
      &lt;Complex:0x4a2ef90&gt;
         &lt;Sequence:0x4a4d050&gt;
            &lt;Element:0x4a4d070 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x4a2eff0 name="PatientInfoEx"&gt;
      &lt;Sequence:0x4a4d030&gt;
         &lt;Element:0x4a4d0d0 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a4d110 name="PatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a4d130 name="LocalName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a4d150 name="Age" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a4d170 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a4d1b0 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a4d1d0 name="Address" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a4d1f0 name="IdentifyCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a4d210 name="MedicalCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a4d190 name="PhoneNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4a4d230 name="SocialSecurityCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4a4d090 name="NotifyPatientInfoResponse"&gt;
      &lt;Complex:0x4a4d0b0&gt;
         &lt;Sequence:0x4a4d0f0&gt;
            &lt;Element:0x4a4d290 name="NotifyPatientInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4a4d250 name="QueryCloudFilmUrl"&gt;
      &lt;Complex:0x4a4d270&gt;
         &lt;Sequence:0x4a4d2f0&gt;
            &lt;Element:0x4a4d310 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a4d370 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4a4d2b0 name="QueryCloudFilmUrlResponse"&gt;
      &lt;Complex:0x4a4d2d0&gt;
         &lt;Sequence:0x4a4d390&gt;
            &lt;Element:0x4a4d3b0 name="QueryCloudFilmUrlResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4a4d330 name="QueryCloudFilmUrlForQrCode"&gt;
      &lt;Complex:0x4a4d350&gt;
         &lt;Sequence:0x4a4d410&gt;
            &lt;Element:0x4a4d430 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4a4d490 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4a4d3d0 name="QueryCloudFilmUrlForQrCodeResponse"&gt;
      &lt;Complex:0x4a4d3f0&gt;
         &lt;Sequence:0x4a4d4b0&gt;
            &lt;Element:0x4a4d4d0 name="QueryCloudFilmUrlForQrCodeResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a2e210 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('NotifyExamInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a2e2f0 name="NotifyExamInfoResponse" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x4a2e830 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('NotifyReportFileResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a2e890 name="NotifyReportFileResponse" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4a2e9b0 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a2ea10 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a2ea90 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('NotifyFilmInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a2ebb0 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a2ebd0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('NotifyReportInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a2ed30 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a2ee90 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('NotifyExamReservationInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a2eef0 name="NotifyExamReservationInfoResponse" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a2ef70 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('NotifyPatientInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a4d090 name="NotifyPatientInfoResponse" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x4a4d250 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('QueryCloudFilmUrlResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a4d2b0 name="QueryCloudFilmUrlResponse" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x4a4d330 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a4d3d0 name="QueryCloudFilmUrlForQrCodeResponse" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a2e210 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('NotifyExamInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a2e2f0 name="NotifyExamInfoResponse" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x4a2e830 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('NotifyReportFileResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a2e890 name="NotifyReportFileResponse" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4a2e9b0 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a2ea10 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a2ea90 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('NotifyFilmInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a2ebb0 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a2ebd0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('NotifyReportInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a2ed30 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a2ee90 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('NotifyExamReservationInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a2eef0 name="NotifyExamReservationInfoResponse" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a2ef70 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('NotifyPatientInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a4d090 name="NotifyPatientInfoResponse" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x4a4d250 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('QueryCloudFilmUrlResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a4d2b0 name="QueryCloudFilmUrlResponse" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x4a4d330 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191101 16:06:34.170" level="DEBUG">('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a4d3d0 name="QueryCloudFilmUrlForQrCodeResponse" /&gt;</msg>
<msg timestamp="20191101 16:06:34.201" level="DEBUG">WSDL at 'http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl' loaded:
(Definitions){
   id = "Definitions:0x4192670"
   options = Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x049346F0&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x03CE68B0&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x04192610&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x03CE68B0&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x04192430&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
Linked:
Definitions:
	proxy: classes=(&lt;class 'dict'&gt;,), default={}
	timeout: classes=(&lt;class 'int'&gt;, &lt;class 'float'&gt;), default=90
	headers: classes=(&lt;class 'dict'&gt;,), default={}
	username: classes=(&lt;class 'str'&gt;,), default=None
	password: classes=(&lt;class 'str'&gt;,), default=None
Content:
	('proxy', {})
	('timeout', 90)
	('headers', {})
	('username', None)
	('password', None)
Linked:
Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x049346F0&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x03CE68B0&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x04192610&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x03CE68B0&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x04192430&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
   url = "http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl"
   tns[] = 
      "tns",
      "http://carestream.org/",
   types[] = 
      (Types){
         definitions = (Definitions)...
      },
   schema = "&lt;Schema:0x4a2e1f0 tns="http://carestream.org/"/&gt;"
   imports[] = &lt;empty&gt;
   messages = 
      {
         (NotifyExamInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamInfoSoapIn"
               qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamInfoSoapOut"
               qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportFileSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportFileSoapIn"
               qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportFile', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportFileSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportFileSoapOut"
               qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "SetPrintModeSoapIn"
               qname = "(SetPrintModeSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('SetPrintMode', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "SetPrintModeSoapOut"
               qname = "(SetPrintModeSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('SetPrintModeResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapIn"
               qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyFilmInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapOut"
               qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapIn"
               qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapOut"
               qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamReservationInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamReservationInfoSoapIn"
               qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamReservationInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamReservationInfoSoapOut"
               qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyPatientInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyPatientInfoSoapIn"
               qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyPatientInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyPatientInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyPatientInfoSoapOut"
               qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlSoapIn"
               qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlSoapOut"
               qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlForQrCodeSoapIn"
               qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlForQrCodeSoapOut"
               qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
      }
   port_types = 
      {
         (NotifyServiceSoap, http://carestream.org/, ) = 
            (PortType){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyExamInfoSoapIn"
                                 qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyExamInfoSoapOut"
                                 qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportFileSoapIn"
                                 qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportFile', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportFileSoapOut"
                                 qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "SetPrintModeSoapIn"
                                 qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('SetPrintMode', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetPrintModeSoapOut"
                                 qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyFilmInfoSoapIn"
                                 qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyFilmInfoSoapOut"
                                 qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportInfoSoapIn"
                                 qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportInfoSoapOut"
                                 qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyExamReservationInfoSoapIn"
                                 qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyExamReservationInfoSoapOut"
                                 qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyPatientInfoSoapIn"
                                 qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyPatientInfoSoapOut"
                                 qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "QueryCloudFilmUrlSoapIn"
                                 qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryCloudFilmUrlSoapOut"
                                 qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                 qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                 qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                  }
            }
      }
   bindings = 
      {
         (NotifyServiceSoap, http://carestream.org/, ) = 
            (Binding){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamInfoSoapIn"
                                       qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamInfoSoapOut"
                                       qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportFileSoapIn"
                                       qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFile', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportFileSoapOut"
                                       qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintMode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapIn"
                                       qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapOut"
                                       qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapIn"
                                       qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapOut"
                                       qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapIn"
                                       qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapOut"
                                       qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
         (NotifyServiceSoap12, http://carestream.org/, ) = 
            (Binding){
               name = "NotifyServiceSoap12"
               qname = "(NotifyServiceSoap12, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamInfoSoapIn"
                                       qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamInfoSoapOut"
                                       qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportFileSoapIn"
                                       qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFile', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportFileSoapOut"
                                       qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintMode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapIn"
                                       qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapOut"
                                       qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapIn"
                                       qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapOut"
                                       qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapIn"
                                       qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapOut"
                                       qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
      }
   services[] = 
      (Service){
         name = "NotifyService"
         qname = "(NotifyService, http://carestream.org/)"
         ports[] = 
            (Port){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportFile""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFile', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintMode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamReservationInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyPatientInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrl""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "NotifyServiceSoap"
                           qname = "(NotifyServiceSoap, http://carestream.org/)"
                           operations = 
                              {
                                 NotifyExamInfo = 
                                    (Operation){
                                       name = "NotifyExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamInfoSoapIn"
                                             qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamInfoSoapOut"
                                             qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportFile = 
                                    (Operation){
                                       name = "NotifyReportFile"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportFileSoapIn"
                                             qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportFileSoapOut"
                                             qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyExamReservationInfo = 
                                    (Operation){
                                       name = "NotifyExamReservationInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapIn"
                                             qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapOut"
                                             qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyPatientInfo = 
                                    (Operation){
                                       name = "NotifyPatientInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapIn"
                                             qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapOut"
                                             qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrl = 
                                    (Operation){
                                       name = "QueryCloudFilmUrl"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapIn"
                                             qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapOut"
                                             qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrlForQrCode = 
                                    (Operation){
                                       name = "QueryCloudFilmUrlForQrCode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
               methods = 
                  {
                     NotifyExamInfo = 
                        (Method){
                           name = "NotifyExamInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Method){
                           name = "NotifyReportFile"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Method){
                           name = "NotifyExamReservationInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Method){
                           name = "NotifyPatientInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Method){
                           name = "QueryCloudFilmUrl"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Method){
                           name = "QueryCloudFilmUrlForQrCode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
            (Port){
               name = "NotifyServiceSoap12"
               qname = "(NotifyServiceSoap12, http://carestream.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "NotifyServiceSoap12"
                     qname = "(NotifyServiceSoap12, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportFile""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFile', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintMode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamReservationInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyPatientInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrl""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "NotifyServiceSoap"
                           qname = "(NotifyServiceSoap, http://carestream.org/)"
                           operations = 
                              {
                                 NotifyExamInfo = 
                                    (Operation){
                                       name = "NotifyExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamInfoSoapIn"
                                             qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamInfoSoapOut"
                                             qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportFile = 
                                    (Operation){
                                       name = "NotifyReportFile"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportFileSoapIn"
                                             qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportFileSoapOut"
                                             qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyExamReservationInfo = 
                                    (Operation){
                                       name = "NotifyExamReservationInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapIn"
                                             qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapOut"
                                             qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyPatientInfo = 
                                    (Operation){
                                       name = "NotifyPatientInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapIn"
                                             qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapOut"
                                             qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrl = 
                                    (Operation){
                                       name = "QueryCloudFilmUrl"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapIn"
                                             qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapOut"
                                             qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrlForQrCode = 
                                    (Operation){
                                       name = "QueryCloudFilmUrlForQrCode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
               methods = 
                  {
                     NotifyExamInfo = 
                        (Method){
                           name = "NotifyExamInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Method){
                           name = "NotifyReportFile"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Method){
                           name = "NotifyExamReservationInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Method){
                           name = "NotifyPatientInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Method){
                           name = "QueryCloudFilmUrl"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Method){
                           name = "QueryCloudFilmUrlForQrCode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04A2E230&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
      },
 }</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a2e210 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">method 'NotifyExamInfo' created: started: 1572595594 (running)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x4a2e830 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">method 'NotifyReportFile' created: started: 1572595594 (running)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4a2e9b0 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">method 'SetPrintMode' created: started: 1572595594 (running)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a2ea90 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">method 'NotifyFilmInfo' created: started: 1572595594 (running)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a2ebd0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">method 'NotifyReportInfo' created: started: 1572595594 (running)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a2ee90 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">method 'NotifyExamReservationInfo' created: started: 1572595594 (running)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a2ef70 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">method 'NotifyPatientInfo' created: started: 1572595594 (running)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x4a4d250 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">method 'QueryCloudFilmUrl' created: started: 1572595594 (running)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x4a4d330 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">method 'QueryCloudFilmUrlForQrCode' created: started: 1572595594 (running)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a2e210 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">method 'NotifyExamInfo' created: started: 1572595594 (running)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x4a2e830 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">method 'NotifyReportFile' created: started: 1572595594 (running)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4a2e9b0 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">method 'SetPrintMode' created: started: 1572595594 (running)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a2ea90 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">method 'NotifyFilmInfo' created: started: 1572595594 (running)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a2ebd0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">method 'NotifyReportInfo' created: started: 1572595594 (running)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a2ee90 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">method 'NotifyExamReservationInfo' created: started: 1572595594 (running)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x4a2ef70 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">method 'NotifyPatientInfo' created: started: 1572595594 (running)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x4a4d250 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">method 'QueryCloudFilmUrl' created: started: 1572595594 (running)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x4a4d330 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">method 'QueryCloudFilmUrlForQrCode' created: started: 1572595594 (running)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">Element:0x4a2e2d0, resolving: ('ExamInfo', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x4a4d470"
   ref[] = 
      "ExamInfo",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x4a2e2d0 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">('ExamInfo', 'http://carestream.org/'), found as: &lt;Complex:0x4a2e270 name="ExamInfo" /&gt;</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">Element:0x4a2ef50, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a4d470"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a2ef50 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">TypeQuery:0x4a4d470, found builtin (string)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">Element:0x4a2ec10, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a4d470"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a2ec10 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">TypeQuery:0x4a4d470, found builtin (string)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">Element:0x4a2ec70, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a4d470"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a2ec70 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">TypeQuery:0x4a4d470, found builtin (string)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">Element:0x4a4d070, resolving: ('PatientInfoEx', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x4a4d470"
   ref[] = 
      "PatientInfoEx",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x4a4d070 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">('PatientInfoEx', 'http://carestream.org/'), found as: &lt;Complex:0x4a2eff0 name="PatientInfoEx" /&gt;</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">Element:0x4a2e8f0, resolving: ('ExamInfo', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x4a3ecd0"
   ref[] = 
      "ExamInfo",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x4a2e8f0 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">('ExamInfo', 'http://carestream.org/'), found as: &lt;Complex:0x4a2e270 name="ExamInfo" /&gt;</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">Element:0x4a2e950, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a3ecd0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a2e950 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">TypeQuery:0x4a3ecd0, found builtin (string)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">Element:0x4a2e970, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a3ecd0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a2e970 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">TypeQuery:0x4a3ecd0, found builtin (int)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">Element:0x4a2e990, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a3ecd0"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a2e990 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">TypeQuery:0x4a3ecd0, found builtin (string)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">Element:0x4a2ed10, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a4d470"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a2ed10 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">TypeQuery:0x4a4d470, found builtin (string)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">Element:0x4a2ed90, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a4d470"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a2ed90 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">TypeQuery:0x4a4d470, found builtin (string)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">Element:0x4a2edb0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a4d470"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a2edb0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">TypeQuery:0x4a4d470, found builtin (string)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">Element:0x4a2edd0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a4d470"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a2edd0 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">TypeQuery:0x4a4d470, found builtin (string)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">Element:0x4a2edf0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a4d470"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a2edf0 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">TypeQuery:0x4a4d470, found builtin (int)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">Element:0x4a2ee30, resolving: ('ArrayOfString', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x4a4d470"
   ref[] = 
      "ArrayOfString",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x4a2ee30 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">('ArrayOfString', 'http://carestream.org/'), found as: &lt;Complex:0x4a2ecb0 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">Element:0x4a2ee50, resolving: ('ArrayOfString', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x4a4d470"
   ref[] = 
      "ArrayOfString",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x4a2ee50 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">('ArrayOfString', 'http://carestream.org/'), found as: &lt;Complex:0x4a2ecb0 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">Element:0x4a4d310, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a4d470"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a4d310 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">TypeQuery:0x4a4d470, found builtin (string)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">Element:0x4a4d370, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a4d470"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a4d370 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">TypeQuery:0x4a4d470, found builtin (string)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">Element:0x4a4d430, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a4d470"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a4d430 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">TypeQuery:0x4a4d470, found builtin (string)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">Element:0x4a4d490, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a4d470"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a4d490 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">TypeQuery:0x4a4d470, found builtin (string)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">Element:0x4a2ea70, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a4d470"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a2ea70 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">TypeQuery:0x4a4d470, found builtin (string)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">Element:0x4a2eaf0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a4d470"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a2eaf0 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">TypeQuery:0x4a4d470, found builtin (string)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">Element:0x4a2eb10, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a4d470"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a2eb10 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">TypeQuery:0x4a4d470, found builtin (int)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">Element:0x4a2eb30, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a4d470"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a2eb30 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">TypeQuery:0x4a4d470, found builtin (int)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">Element:0x4a2eb50, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a4d470"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a2eb50 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">TypeQuery:0x4a4d470, found builtin (int)</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4a2e9b0 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4a2e9b0 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191101 16:06:34.217" level="DEBUG">processing:
(Content){
   tag = "strAccessionNumber"
   value = "A20191101160542779017"
   type = &lt;Element:0x4a2ea70 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4a39070 /&gt;
 }</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x04A395F0&gt;
content:
(Content){
   tag = "strAccessionNumber"
   value = "A20191101160542779017"
   type = &lt;Element:0x4a2ea70 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4a39070 /&gt;
 }</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">starting content:
(Content){
   tag = "strAccessionNumber"
   value = "A20191101160542779017"
   type = &lt;Element:0x4a2ea70 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4a39070 /&gt;
 }</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04A39630&gt;)
&lt;suds.resolver.Frame object at 0x04A39630&gt;</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">created - node:
&lt;tns:strAccessionNumber xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">ending content:
(Content){
   tag = "strAccessionNumber"
   value = "A20191101160542779017"
   type = &lt;Element:0x4a2ea70 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4a39070 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04A39630&gt;)
</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">processing:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x4a2eaf0 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4a39110 /&gt;
 }</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x04A393B0&gt;
content:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x4a2eaf0 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4a39110 /&gt;
 }</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">starting content:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x4a2eaf0 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4a39110 /&gt;
 }</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04A393F0&gt;)
&lt;suds.resolver.Frame object at 0x04A393F0&gt;</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">created - node:
&lt;tns:strStudyInstanceUID xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">ending content:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x4a2eaf0 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x4a39110 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04A393F0&gt;)
</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">processing:
(Content){
   tag = "nMode"
   value = "0"
   type = &lt;Element:0x4a2eb10 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4a39150 /&gt;
 }</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x04A398D0&gt;
content:
(Content){
   tag = "nMode"
   value = "0"
   type = &lt;Element:0x4a2eb10 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4a39150 /&gt;
 }</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">starting content:
(Content){
   tag = "nMode"
   value = "0"
   type = &lt;Element:0x4a2eb10 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4a39150 /&gt;
 }</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04A39910&gt;)
&lt;suds.resolver.Frame object at 0x04A39910&gt;</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">created - node:
&lt;tns:nMode xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">ending content:
(Content){
   tag = "nMode"
   value = "0"
   type = &lt;Element:0x4a2eb10 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4a39150 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04A39910&gt;)
</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">processing:
(Content){
   tag = "printWaitTime"
   value = "60"
   type = &lt;Element:0x4a2eb30 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4a39190 /&gt;
 }</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x04A39BB0&gt;
content:
(Content){
   tag = "printWaitTime"
   value = "60"
   type = &lt;Element:0x4a2eb30 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4a39190 /&gt;
 }</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">starting content:
(Content){
   tag = "printWaitTime"
   value = "60"
   type = &lt;Element:0x4a2eb30 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4a39190 /&gt;
 }</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04A39BF0&gt;)
&lt;suds.resolver.Frame object at 0x04A39BF0&gt;</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">created - node:
&lt;tns:printWaitTime xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">ending content:
(Content){
   tag = "printWaitTime"
   value = "60"
   type = &lt;Element:0x4a2eb30 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4a39190 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04A39BF0&gt;)
</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">processing:
(Content){
   tag = "reportWaitTime"
   value = "10"
   type = &lt;Element:0x4a2eb50 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4a39210 /&gt;
 }</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x04A39E90&gt;
content:
(Content){
   tag = "reportWaitTime"
   value = "10"
   type = &lt;Element:0x4a2eb50 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4a39210 /&gt;
 }</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">starting content:
(Content){
   tag = "reportWaitTime"
   value = "10"
   type = &lt;Element:0x4a2eb50 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4a39210 /&gt;
 }</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04A39ED0&gt;)
&lt;suds.resolver.Frame object at 0x04A39ED0&gt;</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">created - node:
&lt;tns:reportWaitTime xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">ending content:
(Content){
   tag = "reportWaitTime"
   value = "10"
   type = &lt;Element:0x4a2eb50 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x4a39210 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04A39ED0&gt;)
</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">message for 'SetPrintMode' created: 15 (ms)</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">sending to (http://10.112.20.84/NotifyServer/NotifyService.asmx)
message:
&lt;suds.sax.document.Document object at 0x04A3EC10&gt;</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">headers = {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://carestream.org/SetPrintMode"'}</msg>
<msg timestamp="20191101 16:06:34.232" level="DEBUG">sending:
URL: http://10.112.20.84/NotifyServer/NotifyService.asmx
HEADERS: {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://carestream.org/SetPrintMode"', 'Content-type': 'text/xml; charset=utf-8', 'Soapaction': b'"http://carestream.org/SetPrintMode"'}
MESSAGE:
b'&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://carestream.org/"&gt;&lt;SOAP-ENV:Header/&gt;&lt;ns0:Body&gt;&lt;ns1:SetPrintMode&gt;&lt;ns1:strAccessionNumber&gt;A20191101160542779017&lt;/ns1:strAccessionNumber&gt;&lt;ns1:strStudyInstanceUID&gt;&lt;/ns1:strStudyInstanceUID&gt;&lt;ns1:nMode&gt;0&lt;/ns1:nMode&gt;&lt;ns1:printWaitTime&gt;60&lt;/ns1:printWaitTime&gt;&lt;ns1:reportWaitTime&gt;10&lt;/ns1:reportWaitTime&gt;&lt;/ns1:SetPrintMode&gt;&lt;/ns0:Body&gt;&lt;/SOAP-ENV:Envelope&gt;'</msg>
<msg timestamp="20191101 16:06:34.263" level="DEBUG">received:
CODE: HTTPStatus.OK
HEADERS: Cache-Control: private, max-age=0
Content-Type: text/xml; charset=utf-8
Server: Microsoft-IIS/7.5
X-AspNet-Version: 4.0.30319
X-Powered-By: ASP.NET
Date: Fri, 01 Nov 2019 08:06:34 GMT
Connection: close
Content-Length: 364


MESSAGE:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;SetPrintModeResponse xmlns="http://carestream.org/"&gt;&lt;SetPrintModeResult&gt;0&lt;/SetPrintModeResult&gt;&lt;/SetPrintModeResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191101 16:06:34.263" level="DEBUG">waited 31 (ms) on server reply</msg>
<msg timestamp="20191101 16:06:34.263" level="DEBUG">HTTP succeeded:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;SetPrintModeResponse xmlns="http://carestream.org/"&gt;&lt;SetPrintModeResult&gt;0&lt;/SetPrintModeResult&gt;&lt;/SetPrintModeResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191101 16:06:34.263" level="DEBUG">b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;SetPrintModeResponse xmlns="http://carestream.org/"&gt;&lt;SetPrintModeResult&gt;0&lt;/SetPrintModeResult&gt;&lt;/SetPrintModeResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'
sax duration: 0 (ms)</msg>
<msg timestamp="20191101 16:06:34.263" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x4a2ea10 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191101 16:06:34.263" level="DEBUG">Element:0x4a2eb70, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a39330"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a2eb70 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:06:34.263" level="DEBUG">TypeQuery:0x4a39330, found builtin (int)</msg>
<msg timestamp="20191101 16:06:34.263" level="DEBUG">reset</msg>
<msg timestamp="20191101 16:06:34.263" level="DEBUG">Element:0x4a2eb70, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4a514d0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4a2eb70 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:06:34.263" level="DEBUG">TypeQuery:0x4a514d0, found builtin (int)</msg>
<msg timestamp="20191101 16:06:34.263" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04A51030&gt;)
&lt;suds.resolver.Frame object at 0x04A51030&gt;</msg>
<msg timestamp="20191101 16:06:34.263" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04A51030&gt;)
</msg>
<msg timestamp="20191101 16:06:34.263" level="DEBUG">method 'SetPrintMode' invoked: 31 (ms)</msg>
<msg timestamp="20191101 16:06:34.263" level="INFO">Printmode.printmode_set_by_accn: Find the records in print mode table of exam: A20191101160542779017.
Printmode.printmode_set_by_accn: Set exam print mode to [both] successfully.</msg>
<msg timestamp="20191101 16:06:34.263" level="INFO">${Set_Printmode} = True</msg>
<status status="PASS" starttime="20191101 16:06:34.123" endtime="20191101 16:06:34.263"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Set_Printmode}</arg>
</arguments>
<status status="PASS" starttime="20191101 16:06:34.263" endtime="20191101 16:06:34.263"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20191101 16:06:44.263" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20191101 16:06:34.263" endtime="20191101 16:06:44.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5 \n Description: \n 1. Wait for the holding time of film and report has passed. \n Expected:\n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191101 16:06:44.263" level="INFO">Step 5 
Description: 
1. Wait for the holding time of film and report has passed. 
Expected:
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191101 16:06:44.263" endtime="20191101 16:06:44.263"></status>
</kw>
<kw name="HoldTime Wait Time Arrive By Accn" library="PUMA_HoldTimeLibrary">
<doc>HoldTime_get_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Holdtime_result}</var>
</assign>
<msg timestamp="20191101 16:07:36.264" level="INFO">HoldTime.HoldTime_wait_time_arrive_by_accn: Sleep [52] seconds to make print ready arrived.</msg>
<msg timestamp="20191101 16:07:36.264" level="INFO">${Holdtime_result} = True</msg>
<status status="PASS" starttime="20191101 16:06:44.263" endtime="20191101 16:07:36.264"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Holdtime_result}</arg>
</arguments>
<status status="PASS" starttime="20191101 16:07:36.264" endtime="20191101 16:07:36.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6 \n Description: \n 1.Print the prepared films and reports with accession number on K3 terminal prepared in step1. \n Expected: \n 1. The print task should finish successfully. The status in wggc.dbo.afp_printtask should be 4. \n</arg>
</arguments>
<msg timestamp="20191101 16:07:36.264" level="INFO">Step 6 
Description: 
1.Print the prepared films and reports with accession number on K3 terminal prepared in step1. 
Expected: 
1. The print task should finish successfully. The status in wggc.dbo.afp_printtask should be 4. 
</msg>
<status status="PASS" starttime="20191101 16:07:36.264" endtime="20191101 16:07:36.264"></status>
</kw>
<kw name="Terminal Print With Cardinfo" library="PUMA_TerminalLibrary">
<doc>This function is simulate the terminal print opertaions with API.
You can select the exist termina name and input the cardinfo to print the report, films.
The function will verify the print mode and exam info to print.
It will return bool value.</doc>
<arguments>
<arg>K3_Terminal01</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Termina_Print_Result}</var>
</assign>
<msg timestamp="20191101 16:07:36.264" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:07:36.279" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/EHDPS/status?tid=K3_Terminal01 HTTP/1.1" 200 609</msg>
<msg timestamp="20191101 16:07:36.279" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:07:36.342" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/EHDPS/printtask/items?Value=A20191101160542779017&amp;Type=0&amp;tid=K3_Terminal01 HTTP/1.1" 200 1153</msg>
<msg timestamp="20191101 16:07:36.342" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:07:36.389" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/EHDPS/printtask/create?tid=K3_Terminal01 HTTP/1.1" 200 732</msg>
<msg timestamp="20191101 16:07:36.389" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:07:36.420" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/EHDPS/printtask/print/2081?tid=K3_Terminal01 HTTP/1.1" 200 729</msg>
<msg timestamp="20191101 16:09:09.420" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:09:09.451" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/ImageSuite/Web/report/pdfviewer.aspx?id=53a57eaa2ba042ff96486d2ac7457a0a HTTP/1.1" 200 284552</msg>
<msg timestamp="20191101 16:09:09.451" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:09:09.467" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/EHDPS/printtask/report/2081/53a57eaa2ba042ff96486d2ac7457a0a/1?tid=K3_Terminal01 HTTP/1.1" 200 221</msg>
<msg timestamp="20191101 16:09:19.474" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:09:19.505" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/ImageSuite/Web/report/pdfviewer.aspx?id=d664139732ce4af9b64cc512477ebe0c HTTP/1.1" 200 284552</msg>
<msg timestamp="20191101 16:09:19.505" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:09:19.521" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/EHDPS/printtask/report/2081/d664139732ce4af9b64cc512477ebe0c/1?tid=K3_Terminal01 HTTP/1.1" 200 221</msg>
<msg timestamp="20191101 16:09:29.521" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:09:29.630" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/ImageSuite/Web/report/pdfviewer.aspx?id=92a6632795b749bfa07f07ed6e728b7a HTTP/1.1" 200 284512</msg>
<msg timestamp="20191101 16:09:29.630" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:09:29.677" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/EHDPS/printtask/report/2081/92a6632795b749bfa07f07ed6e728b7a/1?tid=K3_Terminal01 HTTP/1.1" 200 221</msg>
<msg timestamp="20191101 16:10:42.677" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:10:42.693" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/EHDPS/printtask/status/2081?tid=K3_Terminal01 HTTP/1.1" 200 734</msg>
<msg timestamp="20191101 16:10:42.693" level="INFO">Terminal._check_terminal_status: The terminal status check and result is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"Status":0,"Terminal":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9927,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20282,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}
Terminal.printtask_report_getinfo: get the report information by cardiinfo: 
{"Status":0,"Code":"","Message":"您有胶片和报告可打印，请稍等！","OriginalException":null,"Entity":{"PrintState":0,"Message":"","FilmCount":1,"ReportCount":1,"PatientInfo":{"PatientId":"P20191101160542779017","PatientName":"CN20191101160542779017","PatientGender":"F","PatientBirthday":null,"PatientType":"2","PatientAge":null},"FilmStatistics":[{"FilmSize":"14INX17IN","FilmType":"BLUE FILM","FilmCount":1}],"ReportStatistics":[{"ReportID":null,"ReportPath":null,"ReportCount":1,"PageCount":0,"PaperSize":0,"PaperType":0,"ColorType":0}],"ExamItems":[{"AccessionNumber":"A20191101160542779017","ModalityType":"MR","ModalityName":"DX","ExamName":"Exam20191101160542779017","ReferringDepartment":null,"ExamDate":null,"ExamBodyPart":"","Status":"Unprinted","StatusComments":null,"PatientType":null,"FilmInfos":[{"FilmSize":"14INX17IN","FilmType":"BLUE FILM","FilmCount":1}],"ReportInfos":[{"ReportID":"92a6632795b749bfa07f07ed6e728b7a","ReportPath":"http://10.112.20.84/ImageSuite/Web/report/pdfviewer.aspx?id=92a6632795b749bfa07f07ed6e728b7a","ReportCount":0,"PageCount":1,"PaperSize":0,"PaperType":0,"ColorType":0}]}],"ExamItemsOfReg":[]}}
Terminal.create_film_printtask: The terminal film print create and response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"2081","Status":-1,"TotalFilmCount":1,"TotalReportCount":1,"PrintedFilmCount":0,"PrintedReportCount":0,"EstimatedTime":0,"TerminalInfo":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9927,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20282,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}
Terminal.create_film_printtask: The taskID is 2081
Terminal.printtask_print: The terminal print task print response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"","Status":0,"TotalFilmCount":0,"TotalReportCount":0,"PrintedFilmCount":0,"PrintedReportCount":0,"EstimatedTime":0,"TerminalInfo":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9927,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20282,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":"2081"}}}
Terminal.printtask_get_estimatetime: The estimate time is 63 of task 2081 

Terminal.printtask_report_download: download the file successfully from: 
http://10.112.20.84/ImageSuite/Web/report/pdfviewer.aspx?id=53a57eaa2ba042ff96486d2ac7457a0a
Terminal.printtask_report_print: The report 53a57eaa2ba042ff96486d2ac7457a0a print response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"2081","Status":1,"TotalFilmCount":1,"TotalReportCount":1,"PrintedFilmCount":1,"PrintedReportCount":0,"EstimatedTime":63,"TerminalInfo":null}}
Terminal.printtask_report_download: download the file successfully from: 
http://10.112.20.84/ImageSuite/Web/report/pdfviewer.aspx?id=d664139732ce4af9b64cc512477ebe0c
Terminal.printtask_report_print: The report d664139732ce4af9b64cc512477ebe0c print response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"2081","Status":1,"TotalFilmCount":1,"TotalReportCount":1,"PrintedFilmCount":1,"PrintedReportCount":0,"EstimatedTime":63,"TerminalInfo":null}}
Terminal.printtask_report_download: download the file successfully from: 
http://10.112.20.84/ImageSuite/Web/report/pdfviewer.aspx?id=92a6632795b749bfa07f07ed6e728b7a
Terminal.printtask_report_print: The report 92a6632795b749bfa07f07ed6e728b7a print response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"2081","Status":1,"TotalFilmCount":1,"TotalReportCount":1,"PrintedFilmCount":1,"PrintedReportCount":0,"EstimatedTime":63,"TerminalInfo":null}}
Terminal.printtask_status_check: The terminal print task status check response is:
 {"Status":0,"Code":"","Message":null,"OriginalException":null,"Entity":{"TaskId":"2081","Status":4,"TotalFilmCount":1,"TotalReportCount":1,"PrintedFilmCount":1,"PrintedReportCount":1,"EstimatedTime":63,"TerminalInfo":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9926,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20281,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}
Terminal.terminal_print_with_cardinfo: The task 2081 print successfully, the task status is Printed</msg>
<msg timestamp="20191101 16:10:42.693" level="INFO">${Termina_Print_Result} = True</msg>
<status status="PASS" starttime="20191101 16:07:36.264" endtime="20191101 16:10:42.693"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Termina_Print_Result}</arg>
</arguments>
<status status="PASS" starttime="20191101 16:10:42.693" endtime="20191101 16:10:42.693"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191101 16:05:42.732" endtime="20191101 16:10:42.693" critical="yes"></status>
</test>
<test id="s1-t9" name="SmokeTest_009_Core_4187_04.01.03 Terminal K3 Print Workflow with one film.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description:\n 1. Configure a K3 terminal on PS. \n 2. Make sure the terminal status is ready to work. \n Expected: \n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191101 16:10:42.693" level="INFO">Step 1 
Description:
1. Configure a K3 terminal on PS. 
2. Make sure the terminal status is ready to work. 
Expected: 
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191101 16:10:42.693" endtime="20191101 16:10:42.693"></status>
</kw>
<kw name="Check Terminal Status" library="PUMA_TerminalLibrary">
<doc>This function is use the API interface to check the terminal status.
The function will enable the terminal status to 'on work' status.</doc>
<arguments>
<arg>K3_Terminal01</arg>
</arguments>
<assign>
<var>${Terminal_status}</var>
</assign>
<msg timestamp="20191101 16:10:42.693" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:10:42.708" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/EHDPS/status?tid=K3_Terminal01 HTTP/1.1" 200 609</msg>
<msg timestamp="20191101 16:10:42.708" level="INFO">Terminal._check_terminal_status: The terminal status check and result is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"Status":0,"Terminal":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9926,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20281,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}</msg>
<msg timestamp="20191101 16:10:42.708" level="INFO">${Terminal_status} = True</msg>
<status status="PASS" starttime="20191101 16:10:42.693" endtime="20191101 16:10:42.708"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Terminal_status}</arg>
<arg>The termianl status is ready to print</arg>
</arguments>
<status status="PASS" starttime="20191101 16:10:42.708" endtime="20191101 16:10:42.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Create one film for patientB/ExamB. \n Expected \n 1. The film can archived successfully. \n</arg>
</arguments>
<msg timestamp="20191101 16:10:42.708" level="INFO">Step 2 
Description: 
1. Create one film for patientB/ExamB. 
Expected 
1. The film can archived successfully. 
</msg>
<status status="PASS" starttime="20191101 16:10:42.708" endtime="20191101 16:10:42.708"></status>
</kw>
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191101 16:10:42.708" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:10:42.724" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191101 16:10:42.724" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-01 16:10:42.708365", "UpdateDT": "2019-11-01 16:10:42.708365", "PatientID": "P20191101161042708365", "AccessionNumber": "A20191101161042708365", "StudyInstanceUID": "UID20191101161042708365", "NameCN": "CN20191101161042708365", "NameEN": "EN20191101161042708365", "Gender": "F", "Birthday": "1979-11-11", "Modality": "US", "ModalityName": "DR", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-01 16:10:42.708365", "RegisterDT": "2019-11-01 16:10:42.708365", "ExamDT": "2019-11-01 16:10:42.708365", "ReportDT": "2019-11-01 16:10:42.708365", "SubmitDT": "2019-11-01 16:10:42.708365", "ApproveDT": "2019-11-01 16:10:42.708365", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191101161042708365", "ExamBodyPart": "Neck", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191101 16:10:42.724" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-01 16:10:42.708365", "UpdateDT": "2019-11-01 16:10:42.708365", "PatientID": "P20191101161042708365", "AccessionNumber": "A20191101161042708365", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191101 16:10:42.708" endtime="20191101 16:10:42.724"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191101 16:10:42.724" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-01 16:10:42.708365', 'UpdateDT': '2019-11-01 16:10:42.708365', 'PatientID': 'P20191101161042708365', 'AccessionNumber': 'A20191101161042708365', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191101 16:10:42.724" endtime="20191101 16:10:42.724"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191101 16:10:42.771" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191101 16:10:42.724" endtime="20191101 16:10:42.771"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191101 16:10:42.802" level="INFO">${patientID} = ['P20191101161042708365']</msg>
<status status="PASS" starttime="20191101 16:10:42.771" endtime="20191101 16:10:42.802"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191101 16:10:42.849" level="INFO">${Accessionnumber} = ['A20191101161042708365']</msg>
<status status="PASS" starttime="20191101 16:10:42.802" endtime="20191101 16:10:42.849"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 16:10:42.849" endtime="20191101 16:10:42.849"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191101 16:11:24.349" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191101161042708365", "AccessionNumber": "A20191101161042708365", "FilmSessionLable": "20191101161042848991", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191101 16:11:24.349" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191101161042708365", "AccessionNumber": "A20191101161042708365", "FilmSessionLable": "20191101161042848991", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191101 16:10:42.849" endtime="20191101 16:11:24.349"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191101 16:11:24.349" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191101161042708365', 'AccessionNumber': 'A20191101161042708365', 'FilmSessionLable': '20191101161042848991', 'DeliveryJob_status': 2, 'WaterMark_Path': 'D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191101 16:11:24.349" endtime="20191101 16:11:24.349"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191101 16:11:24.396" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191101 16:11:24.349" endtime="20191101 16:11:24.396"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 16:11:24.396" endtime="20191101 16:11:24.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3 \n Description:\n 1. Set the print mode to Film only for ExamB \n Expected:\n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191101 16:11:24.396" level="INFO">Step 3 
Description:
1. Set the print mode to Film only for ExamB 
Expected:
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191101 16:11:24.396" endtime="20191101 16:11:24.396"></status>
</kw>
<kw name="Printmode Set By Accn" library="PUMA_PrintModeLibrary">
<doc>printmode_set_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
<arg>film</arg>
</arguments>
<assign>
<var>${Set_Printmode}</var>
</assign>
<msg timestamp="20191101 16:11:24.396" level="DEBUG">reading WSDL at: http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl ...</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb62b0, convert type="tns:ExamInfo" to ('ExamInfo', 'http://carestream.org/')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6030, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6e10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb64b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6950, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb61d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6390, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6d90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb60b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6970, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6170, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6250, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6a50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6cb0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6230, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6350, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6130, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6a70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6910, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6c70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6e90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6b30, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6cd0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6830, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6990, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6850, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6f90, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6fd0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6110, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb68d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6fb0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6890, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6930, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb65f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6370, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6ed0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6eb0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb68b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb61b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb6750, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb60d0, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.412" level="DEBUG">Element:0x4eb64f0, convert type="tns:ExamInfo" to ('ExamInfo', 'http://carestream.org/')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4eb6dd0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4eb6f10, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4eb6d70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4eb6d50, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4eb6150, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4eb6d10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4eb6e30, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4eb6770, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4eb6790, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4eb68f0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4eb6690, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4eb60f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4eb6c90, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4eb6f70, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4eb6730, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4eb6b50, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4eb67b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4eb6c30, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4eb6b70, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://carestream.org/')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4eb6670, convert type="tns:ArrayOfString" to ('ArrayOfString', 'http://carestream.org/')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4eb6b10, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4eb6ad0, convert type="s:int" to ('int', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4eb67d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4eb6ff0, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4eb6630, convert type="tns:PatientInfoEx" to ('PatientInfoEx', 'http://carestream.org/')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4eb6070, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4f842b0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4f842d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4f84150, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4f842f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4f84330, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4f84350, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4f84030, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4f84050, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4f84310, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4f84070, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4f841f0, convert type="s:boolean" to ('boolean', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4f843d0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4f84430, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4f84470, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4f844f0, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4f84550, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">Element:0x4f84590, convert type="s:string" to ('string', 'http://www.w3.org/2001/XMLSchema')</msg>
<msg timestamp="20191101 16:11:24.427" level="DEBUG">loaded:

schema collection
   Schema:0x4eb63d0
   (raw)
      &lt;s:schema elementFormDefault="qualified" targetNamespace="http://carestream.org/"&gt;
         &lt;s:element name="NotifyExamInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ExamInfo"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="CreateDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="UpdateDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="AccessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="StudyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="NameCN" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="NameEN" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Modality" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ModalityName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientType" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="VisitID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDepartment" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RegisterDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ReportDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="SubmitDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ApproveDT" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PDFReportURL" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="StudyStatus" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="OutHospitalNo" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="InHospitalNo" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PhysicalNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="ExamBodyPart" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="RefferingDepartment" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional0" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional1" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional2" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional3" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional4" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional5" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional6" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional7" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional8" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Optional9" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyExamInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportFile"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportPath" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportFileResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportFileResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetPrintMode"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="printWaitTime" type="s:int"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportWaitTime" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="SetPrintModeResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyFilmInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyFilmInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyReportInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="tns:ArrayOfString"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="ArrayOfString"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyReportInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyExamReservationInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="base64ExamReservation" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyExamReservationInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamReservationInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="NotifyPatientInfo"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientInfo" type="tns:PatientInfoEx"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:complexType name="PatientInfoEx"&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PatientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="LocalName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Age" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="IdentifyCardNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="MedicalCardNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="SocialSecurityCardNumber" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
         &lt;s:element name="NotifyPatientInfoResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyPatientInfoResult" type="s:boolean"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrl"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlForQrCode"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
         &lt;s:element name="QueryCloudFilmUrlForQrCodeResponse"&gt;
            &lt;s:complexType&gt;
               &lt;s:sequence&gt;
                  &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlForQrCodeResult" type="s:string"/&gt;
               &lt;/s:sequence&gt;
            &lt;/s:complexType&gt;
         &lt;/s:element&gt;
      &lt;/s:schema&gt;
   (model)
      &lt;Element:0x4eb6430 name="NotifyExamInfo"&gt;
         &lt;Complex:0x4eb6570&gt;
            &lt;Sequence:0x4eb62d0&gt;
               &lt;Element:0x4eb62b0 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x4eb6590 name="ExamInfo"&gt;
         &lt;Sequence:0x4eb62f0&gt;
            &lt;Element:0x4eb6030 name="CreateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6e10 name="UpdateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb64b0 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6950 name="AccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb61d0 name="StudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6390 name="NameCN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6d90 name="NameEN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb60b0 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6970 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6170 name="Modality" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6250 name="ModalityName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6a50 name="PatientType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6cb0 name="VisitID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6230 name="RequestID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6350 name="RequestDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6130 name="RequestDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6a70 name="RegisterDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6910 name="ExamDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6c70 name="ReportDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6e90 name="SubmitDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6b30 name="ApproveDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6cd0 name="PDFReportURL" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6830 name="StudyStatus" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6990 name="OutHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6850 name="InHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6f90 name="PhysicalNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6fd0 name="ExamName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6110 name="ExamBodyPart" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb68d0 name="RefferingDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6fb0 name="Optional0" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6890 name="Optional1" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6930 name="Optional2" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb65f0 name="Optional3" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6370 name="Optional4" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6ed0 name="Optional5" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6eb0 name="Optional6" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb68b0 name="Optional7" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb61b0 name="Optional8" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6750 name="Optional9" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x4eb63f0 name="NotifyExamInfoResponse"&gt;
         &lt;Complex:0x4eb6d30&gt;
            &lt;Sequence:0x4eb67f0&gt;
               &lt;Element:0x4eb60d0 name="NotifyExamInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4eb6270 name="NotifyReportFile"&gt;
         &lt;Complex:0x4eb66f0&gt;
            &lt;Sequence:0x4eb6190&gt;
               &lt;Element:0x4eb64f0 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
               &lt;Element:0x4eb6dd0 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4eb6f10 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4eb6d70 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4eb6ef0 name="NotifyReportFileResponse"&gt;
         &lt;Complex:0x4eb61f0&gt;
            &lt;Sequence:0x4eb6f30&gt;
               &lt;Element:0x4eb6d50 name="NotifyReportFileResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4eb69d0 name="SetPrintMode"&gt;
         &lt;Complex:0x4eb65d0&gt;
            &lt;Sequence:0x4eb6e70&gt;
               &lt;Element:0x4eb6150 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4eb6d10 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4eb6e30 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4eb6770 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4eb6790 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4eb6c10 name="SetPrintModeResponse"&gt;
         &lt;Complex:0x4eb6870&gt;
            &lt;Sequence:0x4eb6710&gt;
               &lt;Element:0x4eb68f0 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4eb6e50 name="NotifyFilmInfo"&gt;
         &lt;Complex:0x4eb6f50&gt;
            &lt;Sequence:0x4eb6470&gt;
               &lt;Element:0x4eb6690 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4eb60f0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4eb6bf0 name="NotifyFilmInfoResponse"&gt;
         &lt;Complex:0x4eb6cf0&gt;
            &lt;Sequence:0x4eb6610&gt;
               &lt;Element:0x4eb6c90 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4eb6df0 name="NotifyReportInfo"&gt;
         &lt;Complex:0x4eb6450&gt;
            &lt;Sequence:0x4eb6810&gt;
               &lt;Element:0x4eb6f70 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4eb6730 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4eb6b50 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4eb67b0 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4eb6c30 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4eb6b70 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
               &lt;Element:0x4eb6670 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x4eb66b0 name="ArrayOfString"&gt;
         &lt;Sequence:0x4eb6550&gt;
            &lt;Element:0x4eb6b10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x4eb6090 name="NotifyReportInfoResponse"&gt;
         &lt;Complex:0x4eb6bb0&gt;
            &lt;Sequence:0x4eb6db0&gt;
               &lt;Element:0x4eb6ad0 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4eb6a10 name="NotifyExamReservationInfo"&gt;
         &lt;Complex:0x4eb69f0&gt;
            &lt;Sequence:0x4eb6af0&gt;
               &lt;Element:0x4eb67d0 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4eb6a30 name="NotifyExamReservationInfoResponse"&gt;
         &lt;Complex:0x4eb6bd0&gt;
            &lt;Sequence:0x4eb6a90&gt;
               &lt;Element:0x4eb6ff0 name="NotifyExamReservationInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4eb6b90 name="NotifyPatientInfo"&gt;
         &lt;Complex:0x4eb6ab0&gt;
            &lt;Sequence:0x4eb6310&gt;
               &lt;Element:0x4eb6630 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Complex:0x4eb69b0 name="PatientInfoEx"&gt;
         &lt;Sequence:0x4eb63b0&gt;
            &lt;Element:0x4eb6070 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4f842b0 name="PatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4f842d0 name="LocalName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4f84150 name="Age" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4f842f0 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4f84330 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4f84350 name="Address" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4f84030 name="IdentifyCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4f84050 name="MedicalCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4f84310 name="PhoneNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4f84070 name="SocialSecurityCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
      &lt;Element:0x4eb6650 name="NotifyPatientInfoResponse"&gt;
         &lt;Complex:0x4f84090&gt;
            &lt;Sequence:0x4f84270&gt;
               &lt;Element:0x4f841f0 name="NotifyPatientInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4eb6050 name="QueryCloudFilmUrl"&gt;
         &lt;Complex:0x4f840d0&gt;
            &lt;Sequence:0x4f843b0&gt;
               &lt;Element:0x4f843d0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4f84430 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4f84370 name="QueryCloudFilmUrlResponse"&gt;
         &lt;Complex:0x4f84390&gt;
            &lt;Sequence:0x4f84450&gt;
               &lt;Element:0x4f84470 name="QueryCloudFilmUrlResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4f843f0 name="QueryCloudFilmUrlForQrCode"&gt;
         &lt;Complex:0x4f84410&gt;
            &lt;Sequence:0x4f844d0&gt;
               &lt;Element:0x4f844f0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
               &lt;Element:0x4f84550 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
      &lt;Element:0x4f84490 name="QueryCloudFilmUrlForQrCodeResponse"&gt;
         &lt;Complex:0x4f844b0&gt;
            &lt;Sequence:0x4f84570&gt;
               &lt;Element:0x4f84590 name="QueryCloudFilmUrlForQrCodeResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;/Sequence&gt;
         &lt;/Complex&gt;
      &lt;/Element&gt;
</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">MERGED:
Schema:0x4eb63d0
(raw)
   &lt;s:schema elementFormDefault="qualified" targetNamespace="http://carestream.org/"&gt;
      &lt;s:element name="NotifyExamInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ExamInfo"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="CreateDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="UpdateDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="AccessionNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="StudyInstanceUID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="NameCN" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="NameEN" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Modality" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ModalityName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientType" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="VisitID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDepartment" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RequestDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RegisterDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ReportDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="SubmitDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ApproveDT" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PDFReportURL" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="StudyStatus" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="OutHospitalNo" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="InHospitalNo" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PhysicalNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="ExamBodyPart" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="RefferingDepartment" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional0" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional1" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional2" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional3" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional4" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional5" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional6" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional7" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional8" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Optional9" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyExamInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportFile"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="exam" type="tns:ExamInfo"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportPath" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportFileResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportFileResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetPrintMode"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strAccessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="strStudyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="nMode" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="printWaitTime" type="s:int"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportWaitTime" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="SetPrintModeResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="SetPrintModeResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyFilmInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyFilmInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyFilmInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyReportInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientName" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientID" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="studyInstanceUID" type="s:string"/&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="reportStatus" type="s:int"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="reportFileName" type="tns:ArrayOfString"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="pdfPassword" type="tns:ArrayOfString"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="ArrayOfString"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyReportInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyReportInfoResult" type="s:int"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyExamReservationInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="base64ExamReservation" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyExamReservationInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyExamReservationInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="NotifyPatientInfo"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientInfo" type="tns:PatientInfoEx"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:complexType name="PatientInfoEx"&gt;
         &lt;s:sequence&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientID" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PatientName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="LocalName" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Age" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Gender" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Birthday" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="Address" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="IdentifyCardNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="MedicalCardNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="PhoneNumber" type="s:string"/&gt;
            &lt;s:element minOccurs="0" maxOccurs="1" name="SocialSecurityCardNumber" type="s:string"/&gt;
         &lt;/s:sequence&gt;
      &lt;/s:complexType&gt;
      &lt;s:element name="NotifyPatientInfoResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="1" maxOccurs="1" name="NotifyPatientInfoResult" type="s:boolean"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrl"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlForQrCode"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="accessionNumber" type="s:string"/&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="patientId" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
      &lt;s:element name="QueryCloudFilmUrlForQrCodeResponse"&gt;
         &lt;s:complexType&gt;
            &lt;s:sequence&gt;
               &lt;s:element minOccurs="0" maxOccurs="1" name="QueryCloudFilmUrlForQrCodeResult" type="s:string"/&gt;
            &lt;/s:sequence&gt;
         &lt;/s:complexType&gt;
      &lt;/s:element&gt;
   &lt;/s:schema&gt;
(model)
   &lt;Element:0x4eb6430 name="NotifyExamInfo"&gt;
      &lt;Complex:0x4eb6570&gt;
         &lt;Sequence:0x4eb62d0&gt;
            &lt;Element:0x4eb62b0 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x4eb6590 name="ExamInfo"&gt;
      &lt;Sequence:0x4eb62f0&gt;
         &lt;Element:0x4eb6030 name="CreateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb6e10 name="UpdateDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb64b0 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb6950 name="AccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb61d0 name="StudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb6390 name="NameCN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb6d90 name="NameEN" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb60b0 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb6970 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb6170 name="Modality" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb6250 name="ModalityName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb6a50 name="PatientType" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb6cb0 name="VisitID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb6230 name="RequestID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb6350 name="RequestDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb6130 name="RequestDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb6a70 name="RegisterDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb6910 name="ExamDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb6c70 name="ReportDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb6e90 name="SubmitDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb6b30 name="ApproveDT" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb6cd0 name="PDFReportURL" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb6830 name="StudyStatus" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb6990 name="OutHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb6850 name="InHospitalNo" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb6f90 name="PhysicalNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb6fd0 name="ExamName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb6110 name="ExamBodyPart" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb68d0 name="RefferingDepartment" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb6fb0 name="Optional0" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb6890 name="Optional1" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb6930 name="Optional2" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb65f0 name="Optional3" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb6370 name="Optional4" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb6ed0 name="Optional5" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb6eb0 name="Optional6" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb68b0 name="Optional7" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb61b0 name="Optional8" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4eb6750 name="Optional9" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4eb63f0 name="NotifyExamInfoResponse"&gt;
      &lt;Complex:0x4eb6d30&gt;
         &lt;Sequence:0x4eb67f0&gt;
            &lt;Element:0x4eb60d0 name="NotifyExamInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4eb6270 name="NotifyReportFile"&gt;
      &lt;Complex:0x4eb66f0&gt;
         &lt;Sequence:0x4eb6190&gt;
            &lt;Element:0x4eb64f0 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;
            &lt;Element:0x4eb6dd0 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6f10 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6d70 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4eb6ef0 name="NotifyReportFileResponse"&gt;
      &lt;Complex:0x4eb61f0&gt;
         &lt;Sequence:0x4eb6f30&gt;
            &lt;Element:0x4eb6d50 name="NotifyReportFileResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4eb69d0 name="SetPrintMode"&gt;
      &lt;Complex:0x4eb65d0&gt;
         &lt;Sequence:0x4eb6e70&gt;
            &lt;Element:0x4eb6150 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6d10 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6e30 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6770 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6790 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4eb6c10 name="SetPrintModeResponse"&gt;
      &lt;Complex:0x4eb6870&gt;
         &lt;Sequence:0x4eb6710&gt;
            &lt;Element:0x4eb68f0 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4eb6e50 name="NotifyFilmInfo"&gt;
      &lt;Complex:0x4eb6f50&gt;
         &lt;Sequence:0x4eb6470&gt;
            &lt;Element:0x4eb6690 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb60f0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4eb6bf0 name="NotifyFilmInfoResponse"&gt;
      &lt;Complex:0x4eb6cf0&gt;
         &lt;Sequence:0x4eb6610&gt;
            &lt;Element:0x4eb6c90 name="NotifyFilmInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4eb6df0 name="NotifyReportInfo"&gt;
      &lt;Complex:0x4eb6450&gt;
         &lt;Sequence:0x4eb6810&gt;
            &lt;Element:0x4eb6f70 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6730 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6b50 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb67b0 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6c30 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4eb6b70 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
            &lt;Element:0x4eb6670 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x4eb66b0 name="ArrayOfString"&gt;
      &lt;Sequence:0x4eb6550&gt;
         &lt;Element:0x4eb6b10 name="string" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4eb6090 name="NotifyReportInfoResponse"&gt;
      &lt;Complex:0x4eb6bb0&gt;
         &lt;Sequence:0x4eb6db0&gt;
            &lt;Element:0x4eb6ad0 name="NotifyReportInfoResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4eb6a10 name="NotifyExamReservationInfo"&gt;
      &lt;Complex:0x4eb69f0&gt;
         &lt;Sequence:0x4eb6af0&gt;
            &lt;Element:0x4eb67d0 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4eb6a30 name="NotifyExamReservationInfoResponse"&gt;
      &lt;Complex:0x4eb6bd0&gt;
         &lt;Sequence:0x4eb6a90&gt;
            &lt;Element:0x4eb6ff0 name="NotifyExamReservationInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4eb6b90 name="NotifyPatientInfo"&gt;
      &lt;Complex:0x4eb6ab0&gt;
         &lt;Sequence:0x4eb6310&gt;
            &lt;Element:0x4eb6630 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Complex:0x4eb69b0 name="PatientInfoEx"&gt;
      &lt;Sequence:0x4eb63b0&gt;
         &lt;Element:0x4eb6070 name="PatientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4f842b0 name="PatientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4f842d0 name="LocalName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4f84150 name="Age" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4f842f0 name="Gender" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4f84330 name="Birthday" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4f84350 name="Address" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4f84030 name="IdentifyCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4f84050 name="MedicalCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4f84310 name="PhoneNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;Element:0x4f84070 name="SocialSecurityCardNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
      &lt;/Sequence&gt;
   &lt;/Complex&gt;
   &lt;Element:0x4eb6650 name="NotifyPatientInfoResponse"&gt;
      &lt;Complex:0x4f84090&gt;
         &lt;Sequence:0x4f84270&gt;
            &lt;Element:0x4f841f0 name="NotifyPatientInfoResult" type="('boolean', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4eb6050 name="QueryCloudFilmUrl"&gt;
      &lt;Complex:0x4f840d0&gt;
         &lt;Sequence:0x4f843b0&gt;
            &lt;Element:0x4f843d0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4f84430 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4f84370 name="QueryCloudFilmUrlResponse"&gt;
      &lt;Complex:0x4f84390&gt;
         &lt;Sequence:0x4f84450&gt;
            &lt;Element:0x4f84470 name="QueryCloudFilmUrlResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4f843f0 name="QueryCloudFilmUrlForQrCode"&gt;
      &lt;Complex:0x4f84410&gt;
         &lt;Sequence:0x4f844d0&gt;
            &lt;Element:0x4f844f0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
            &lt;Element:0x4f84550 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
   &lt;Element:0x4f84490 name="QueryCloudFilmUrlForQrCodeResponse"&gt;
      &lt;Complex:0x4f844b0&gt;
         &lt;Sequence:0x4f84570&gt;
            &lt;Element:0x4f84590 name="QueryCloudFilmUrlForQrCodeResult" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
         &lt;/Sequence&gt;
      &lt;/Complex&gt;
   &lt;/Element&gt;
</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x4eb6430 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('NotifyExamInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4eb63f0 name="NotifyExamInfoResponse" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x4eb6270 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('NotifyReportFileResponse', 'http://carestream.org/'), found as: &lt;Element:0x4eb6ef0 name="NotifyReportFileResponse" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4eb69d0 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x4eb6c10 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x4eb6e50 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('NotifyFilmInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4eb6bf0 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x4eb6df0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('NotifyReportInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4eb6090 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x4eb6a10 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('NotifyExamReservationInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4eb6a30 name="NotifyExamReservationInfoResponse" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x4eb6b90 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('NotifyPatientInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4eb6650 name="NotifyPatientInfoResponse" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x4eb6050 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('QueryCloudFilmUrlResponse', 'http://carestream.org/'), found as: &lt;Element:0x4f84370 name="QueryCloudFilmUrlResponse" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x4f843f0 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/'), found as: &lt;Element:0x4f84490 name="QueryCloudFilmUrlForQrCodeResponse" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x4eb6430 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('NotifyExamInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4eb63f0 name="NotifyExamInfoResponse" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x4eb6270 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('NotifyReportFileResponse', 'http://carestream.org/'), found as: &lt;Element:0x4eb6ef0 name="NotifyReportFileResponse" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4eb69d0 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x4eb6c10 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x4eb6e50 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('NotifyFilmInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4eb6bf0 name="NotifyFilmInfoResponse" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x4eb6df0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('NotifyReportInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4eb6090 name="NotifyReportInfoResponse" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x4eb6a10 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('NotifyExamReservationInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4eb6a30 name="NotifyExamReservationInfoResponse" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x4eb6b90 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('NotifyPatientInfoResponse', 'http://carestream.org/'), found as: &lt;Element:0x4eb6650 name="NotifyPatientInfoResponse" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x4eb6050 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('QueryCloudFilmUrlResponse', 'http://carestream.org/'), found as: &lt;Element:0x4f84370 name="QueryCloudFilmUrlResponse" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x4f843f0 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191101 16:11:24.443" level="DEBUG">('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/'), found as: &lt;Element:0x4f84490 name="QueryCloudFilmUrlForQrCodeResponse" /&gt;</msg>
<msg timestamp="20191101 16:11:24.474" level="DEBUG">WSDL at 'http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl' loaded:
(Definitions){
   id = "Definitions:0x49219f0"
   options = Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x04921F10&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x03CE68B0&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x04921910&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x03CE68B0&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x04921730&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
Linked:
Definitions:
	proxy: classes=(&lt;class 'dict'&gt;,), default={}
	timeout: classes=(&lt;class 'int'&gt;, &lt;class 'float'&gt;), default=90
	headers: classes=(&lt;class 'dict'&gt;,), default={}
	username: classes=(&lt;class 'str'&gt;,), default=None
	password: classes=(&lt;class 'str'&gt;,), default=None
Content:
	('proxy', {})
	('timeout', 90)
	('headers', {})
	('username', None)
	('password', None)
Linked:
Definitions:
	cache: classes=(&lt;class 'suds.cache.Cache'&gt;,), default=&lt;suds.cache.NoCache object at 0x04921F10&gt;
	documentStore: classes=(&lt;class 'suds.store.DocumentStore'&gt;,), default=&lt;suds.store.DocumentStore object at 0x03CE68B0&gt;
	extraArgumentErrors: classes=(&lt;class 'bool'&gt;,), default=True
	faults: classes=(&lt;class 'bool'&gt;,), default=True
	transport: classes=(&lt;class 'suds.transport.Transport'&gt;,), default=None
	service: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	port: classes=(&lt;class 'int'&gt;, &lt;class 'str'&gt;), default=None
	location: classes=(&lt;class 'str'&gt;,), default=None
	soapheaders: classes=*, default=()
	wsse: classes=(&lt;class 'suds.wsse.Security'&gt;,), default=None
	doctor: classes=(&lt;class 'suds.xsd.doctor.Doctor'&gt;,), default=None
	xstq: classes=(&lt;class 'bool'&gt;,), default=True
	prefixes: classes=(&lt;class 'bool'&gt;,), default=True
	retxml: classes=(&lt;class 'bool'&gt;,), default=False
	prettyxml: classes=(&lt;class 'bool'&gt;,), default=False
	autoblend: classes=(&lt;class 'bool'&gt;,), default=False
	cachingpolicy: classes=(&lt;class 'int'&gt;,), default=0
	plugins: classes=(&lt;class 'list'&gt;, &lt;class 'tuple'&gt;), default=[]
	nosend: classes=(&lt;class 'bool'&gt;,), default=False
	unwrap: classes=(&lt;class 'bool'&gt;,), default=True
Content:
	('cache', &lt;suds.cache.ObjectCache object at 0x04921910&gt;)
	('documentStore', &lt;suds.store.DocumentStore object at 0x03CE68B0&gt;)
	('extraArgumentErrors', True)
	('faults', True)
	('transport', &lt;suds.transport.https.HttpAuthenticated object at 0x04921730&gt;)
	('service', None)
	('port', None)
	('location', None)
	('soapheaders', ())
	('wsse', None)
	('doctor', None)
	('xstq', True)
	('prefixes', True)
	('retxml', False)
	('prettyxml', False)
	('autoblend', False)
	('cachingpolicy', 0)
	('plugins', [])
	('nosend', False)
	('unwrap', True)
   url = "http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl"
   tns[] = 
      "tns",
      "http://carestream.org/",
   types[] = 
      (Types){
         definitions = (Definitions)...
      },
   schema = "&lt;Schema:0x4eb63d0 tns="http://carestream.org/"/&gt;"
   imports[] = &lt;empty&gt;
   messages = 
      {
         (NotifyExamInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamInfoSoapIn"
               qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamInfoSoapOut"
               qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportFileSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportFileSoapIn"
               qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportFile', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportFileSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportFileSoapOut"
               qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "SetPrintModeSoapIn"
               qname = "(SetPrintModeSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('SetPrintMode', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (SetPrintModeSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "SetPrintModeSoapOut"
               qname = "(SetPrintModeSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('SetPrintModeResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapIn"
               qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyFilmInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyFilmInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyFilmInfoSoapOut"
               qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapIn"
               qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyReportInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyReportInfoSoapOut"
               qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamReservationInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamReservationInfoSoapIn"
               qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyExamReservationInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyExamReservationInfoSoapOut"
               qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyPatientInfoSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "NotifyPatientInfoSoapIn"
               qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyPatientInfo', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (NotifyPatientInfoSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "NotifyPatientInfoSoapOut"
               qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlSoapIn"
               qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlSoapOut"
               qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlForQrCodeSoapIn"
               qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                     type = "None"
                  },
            }
         (QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/, ) = 
            (Message){
               name = "QueryCloudFilmUrlForQrCodeSoapOut"
               qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
               parts[] = 
                  (Part){
                     root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                     name = "parameters"
                     qname[] = 
                        "parameters",
                        "http://carestream.org/",
                     element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                     type = "None"
                  },
            }
      }
   port_types = 
      {
         (NotifyServiceSoap, http://carestream.org/, ) = 
            (PortType){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyExamInfoSoapIn"
                                 qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyExamInfoSoapOut"
                                 qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportFileSoapIn"
                                 qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportFile', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportFileSoapOut"
                                 qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "SetPrintModeSoapIn"
                                 qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('SetPrintMode', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "SetPrintModeSoapOut"
                                 qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyFilmInfoSoapIn"
                                 qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyFilmInfoSoapOut"
                                 qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyReportInfoSoapIn"
                                 qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyReportInfoSoapOut"
                                 qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyExamReservationInfoSoapIn"
                                 qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyExamReservationInfoSoapOut"
                                 qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "NotifyPatientInfoSoapIn"
                                 qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "NotifyPatientInfoSoapOut"
                                 qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "QueryCloudFilmUrlSoapIn"
                                 qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryCloudFilmUrlSoapOut"
                                 qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           tns[] = 
                              "tns",
                              "http://carestream.org/",
                           input = 
                              (Message){
                                 name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                 qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           output = 
                              (Message){
                                 name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                 qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                 parts[] = 
                                    (Part){
                                       root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                       name = "parameters"
                                       qname[] = 
                                          "parameters",
                                          "http://carestream.org/",
                                       element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                       type = "None"
                                    },
                              }
                           faults[] = &lt;empty&gt;
                        }
                  }
            }
      }
   bindings = 
      {
         (NotifyServiceSoap, http://carestream.org/, ) = 
            (Binding){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamInfoSoapIn"
                                       qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamInfoSoapOut"
                                       qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportFileSoapIn"
                                       qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFile', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportFileSoapOut"
                                       qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintMode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapIn"
                                       qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapOut"
                                       qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapIn"
                                       qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapOut"
                                       qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapIn"
                                       qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapOut"
                                       qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
         (NotifyServiceSoap12, http://carestream.org/, ) = 
            (Binding){
               name = "NotifyServiceSoap12"
               qname = "(NotifyServiceSoap12, http://carestream.org/)"
               operations = 
                  {
                     NotifyExamInfo = 
                        (Operation){
                           name = "NotifyExamInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Operation){
                           name = "NotifyReportFile"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Operation){
                           name = "SetPrintMode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Operation){
                           name = "NotifyFilmInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Operation){
                           name = "NotifyReportInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Operation){
                           name = "NotifyExamReservationInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Operation){
                           name = "NotifyPatientInfo"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Operation){
                           name = "QueryCloudFilmUrl"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Operation){
                           name = "QueryCloudFilmUrlForQrCode"
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               type = 
                  (PortType){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamInfoSoapIn"
                                       qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamInfoSoapOut"
                                       qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportFileSoapIn"
                                       qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFile', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportFileSoapOut"
                                       qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "SetPrintModeSoapIn"
                                       qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintMode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "SetPrintModeSoapOut"
                                       qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapIn"
                                       qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyFilmInfoSoapOut"
                                       qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyReportInfoSoapIn"
                                       qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyReportInfoSoapOut"
                                       qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapIn"
                                       qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyExamReservationInfoSoapOut"
                                       qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapIn"
                                       qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "NotifyPatientInfoSoapOut"
                                       qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapIn"
                                       qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlSoapOut"
                                       qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 tns[] = 
                                    "tns",
                                    "http://carestream.org/",
                                 input = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 output = 
                                    (Message){
                                       name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                       qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                       parts[] = 
                                          (Part){
                                             root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                             name = "parameters"
                                             qname[] = 
                                                "parameters",
                                                "http://carestream.org/",
                                             element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                             type = "None"
                                          },
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
               soap = 
                  (soap){
                     style = "document"
                  }
            }
      }
   services[] = 
      (Service){
         name = "NotifyService"
         qname = "(NotifyService, http://carestream.org/)"
         ports[] = 
            (Port){
               name = "NotifyServiceSoap"
               qname = "(NotifyServiceSoap, http://carestream.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "NotifyServiceSoap"
                     qname = "(NotifyServiceSoap, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportFile""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFile', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintMode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamReservationInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyPatientInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrl""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "NotifyServiceSoap"
                           qname = "(NotifyServiceSoap, http://carestream.org/)"
                           operations = 
                              {
                                 NotifyExamInfo = 
                                    (Operation){
                                       name = "NotifyExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamInfoSoapIn"
                                             qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamInfoSoapOut"
                                             qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportFile = 
                                    (Operation){
                                       name = "NotifyReportFile"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportFileSoapIn"
                                             qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportFileSoapOut"
                                             qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyExamReservationInfo = 
                                    (Operation){
                                       name = "NotifyExamReservationInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapIn"
                                             qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapOut"
                                             qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyPatientInfo = 
                                    (Operation){
                                       name = "NotifyPatientInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapIn"
                                             qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapOut"
                                             qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrl = 
                                    (Operation){
                                       name = "QueryCloudFilmUrl"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapIn"
                                             qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapOut"
                                             qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrlForQrCode = 
                                    (Operation){
                                       name = "QueryCloudFilmUrlForQrCode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
               methods = 
                  {
                     NotifyExamInfo = 
                        (Method){
                           name = "NotifyExamInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Method){
                           name = "NotifyReportFile"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Method){
                           name = "NotifyExamReservationInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Method){
                           name = "NotifyPatientInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Method){
                           name = "QueryCloudFilmUrl"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Method){
                           name = "QueryCloudFilmUrlForQrCode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
            (Port){
               name = "NotifyServiceSoap12"
               qname = "(NotifyServiceSoap12, http://carestream.org/)"
               _Port__service = (Service)...
               binding = 
                  (Binding){
                     name = "NotifyServiceSoap12"
                     qname = "(NotifyServiceSoap12, http://carestream.org/)"
                     operations = 
                        {
                           NotifyExamInfo = 
                              (Operation){
                                 name = "NotifyExamInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportFile = 
                              (Operation){
                                 name = "NotifyReportFile"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportFile""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFile', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           SetPrintMode = 
                              (Operation){
                                 name = "SetPrintMode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/SetPrintMode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintMode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyFilmInfo = 
                              (Operation){
                                 name = "NotifyFilmInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyFilmInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyReportInfo = 
                              (Operation){
                                 name = "NotifyReportInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyReportInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyExamReservationInfo = 
                              (Operation){
                                 name = "NotifyExamReservationInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyExamReservationInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           NotifyPatientInfo = 
                              (Operation){
                                 name = "NotifyPatientInfo"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/NotifyPatientInfo""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrl = 
                              (Operation){
                                 name = "QueryCloudFilmUrl"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrl""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                           QueryCloudFilmUrlForQrCode = 
                              (Operation){
                                 name = "QueryCloudFilmUrlForQrCode"
                                 soap = 
                                    (soap){
                                       action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                       style = "document"
                                       input = 
                                          (Input){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       output = 
                                          (Output){
                                             body = 
                                                (Body){
                                                   parts[] = 
                                                      (Part){
                                                         root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                         name = "parameters"
                                                         qname[] = 
                                                            "parameters",
                                                            "http://carestream.org/",
                                                         element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                         type = "None"
                                                      },
                                                   use = "literal"
                                                   namespace[] = 
                                                      "tns",
                                                      "http://carestream.org/",
                                                   wrapped = True
                                                }
                                             headers[] = &lt;empty&gt;
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     type = 
                        (PortType){
                           name = "NotifyServiceSoap"
                           qname = "(NotifyServiceSoap, http://carestream.org/)"
                           operations = 
                              {
                                 NotifyExamInfo = 
                                    (Operation){
                                       name = "NotifyExamInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamInfoSoapIn"
                                             qname = "(NotifyExamInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamInfoSoapOut"
                                             qname = "(NotifyExamInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportFile = 
                                    (Operation){
                                       name = "NotifyReportFile"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportFileSoapIn"
                                             qname = "(NotifyReportFileSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportFileSoapOut"
                                             qname = "(NotifyReportFileSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 SetPrintMode = 
                                    (Operation){
                                       name = "SetPrintMode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "SetPrintModeSoapIn"
                                             qname = "(SetPrintModeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "SetPrintModeSoapOut"
                                             qname = "(SetPrintModeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyFilmInfo = 
                                    (Operation){
                                       name = "NotifyFilmInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapIn"
                                             qname = "(NotifyFilmInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyFilmInfoSoapOut"
                                             qname = "(NotifyFilmInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyReportInfo = 
                                    (Operation){
                                       name = "NotifyReportInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyReportInfoSoapIn"
                                             qname = "(NotifyReportInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyReportInfoSoapOut"
                                             qname = "(NotifyReportInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyExamReservationInfo = 
                                    (Operation){
                                       name = "NotifyExamReservationInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapIn"
                                             qname = "(NotifyExamReservationInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyExamReservationInfoSoapOut"
                                             qname = "(NotifyExamReservationInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 NotifyPatientInfo = 
                                    (Operation){
                                       name = "NotifyPatientInfo"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapIn"
                                             qname = "(NotifyPatientInfoSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "NotifyPatientInfoSoapOut"
                                             qname = "(NotifyPatientInfoSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrl = 
                                    (Operation){
                                       name = "QueryCloudFilmUrl"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapIn"
                                             qname = "(QueryCloudFilmUrlSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlSoapOut"
                                             qname = "(QueryCloudFilmUrlSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                                 QueryCloudFilmUrlForQrCode = 
                                    (Operation){
                                       name = "QueryCloudFilmUrlForQrCode"
                                       tns[] = 
                                          "tns",
                                          "http://carestream.org/",
                                       input = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapIn"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapIn, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       output = 
                                          (Message){
                                             name = "QueryCloudFilmUrlForQrCodeSoapOut"
                                             qname = "(QueryCloudFilmUrlForQrCodeSoapOut, http://carestream.org/)"
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                          }
                                       faults[] = &lt;empty&gt;
                                    }
                              }
                        }
                     soap = 
                        (soap){
                           style = "document"
                        }
                  }
               location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
               methods = 
                  {
                     NotifyExamInfo = 
                        (Method){
                           name = "NotifyExamInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportFile = 
                        (Method){
                           name = "NotifyReportFile"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportFile""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFile"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFile', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportFileResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportFileResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     SetPrintMode = 
                        (Method){
                           name = "SetPrintMode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/SetPrintMode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintMode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintMode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:SetPrintModeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('SetPrintModeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyFilmInfo = 
                        (Method){
                           name = "NotifyFilmInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyFilmInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyFilmInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyFilmInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyReportInfo = 
                        (Method){
                           name = "NotifyReportInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyReportInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyReportInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyReportInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyExamReservationInfo = 
                        (Method){
                           name = "NotifyExamReservationInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyExamReservationInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyExamReservationInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyExamReservationInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     NotifyPatientInfo = 
                        (Method){
                           name = "NotifyPatientInfo"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/NotifyPatientInfo""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfo"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfo', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:NotifyPatientInfoResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('NotifyPatientInfoResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrl = 
                        (Method){
                           name = "QueryCloudFilmUrl"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrl""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrl"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrl', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                     QueryCloudFilmUrlForQrCode = 
                        (Method){
                           name = "QueryCloudFilmUrlForQrCode"
                           location = "http://10.112.20.84/NotifyServer/NotifyService.asmx"
                           binding = 
                              (binding){
                                 input = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                                 output = &lt;suds.bindings.document.Document object at 0x04EB6530&gt;
                              }
                           soap = 
                              (soap){
                                 action = ""http://carestream.org/QueryCloudFilmUrlForQrCode""
                                 style = "document"
                                 input = 
                                    (Input){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCode"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCode', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 output = 
                                    (Output){
                                       body = 
                                          (Body){
                                             parts[] = 
                                                (Part){
                                                   root = &lt;wsdl:part name="parameters" element="tns:QueryCloudFilmUrlForQrCodeResponse"/&gt;
                                                   name = "parameters"
                                                   qname[] = 
                                                      "parameters",
                                                      "http://carestream.org/",
                                                   element = "('QueryCloudFilmUrlForQrCodeResponse', 'http://carestream.org/')"
                                                   type = "None"
                                                },
                                             use = "literal"
                                             namespace[] = 
                                                "tns",
                                                "http://carestream.org/",
                                             wrapped = True
                                          }
                                       headers[] = &lt;empty&gt;
                                    }
                                 faults[] = &lt;empty&gt;
                              }
                        }
                  }
            },
      },
 }</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x4eb6430 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">method 'NotifyExamInfo' created: started: 1572595884 (running)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x4eb6270 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">method 'NotifyReportFile' created: started: 1572595884 (running)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4eb69d0 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">method 'SetPrintMode' created: started: 1572595884 (running)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x4eb6e50 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">method 'NotifyFilmInfo' created: started: 1572595884 (running)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x4eb6df0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">method 'NotifyReportInfo' created: started: 1572595884 (running)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x4eb6a10 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">method 'NotifyExamReservationInfo' created: started: 1572595884 (running)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x4eb6b90 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">method 'NotifyPatientInfo' created: started: 1572595884 (running)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x4eb6050 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">method 'QueryCloudFilmUrl' created: started: 1572595884 (running)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x4f843f0 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">method 'QueryCloudFilmUrlForQrCode' created: started: 1572595884 (running)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">('NotifyExamInfo', 'http://carestream.org/'), found as: &lt;Element:0x4eb6430 name="NotifyExamInfo" /&gt;</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">method 'NotifyExamInfo' created: started: 1572595884 (running)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">('NotifyReportFile', 'http://carestream.org/'), found as: &lt;Element:0x4eb6270 name="NotifyReportFile" /&gt;</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">method 'NotifyReportFile' created: started: 1572595884 (running)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4eb69d0 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">method 'SetPrintMode' created: started: 1572595884 (running)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">('NotifyFilmInfo', 'http://carestream.org/'), found as: &lt;Element:0x4eb6e50 name="NotifyFilmInfo" /&gt;</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">method 'NotifyFilmInfo' created: started: 1572595884 (running)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">('NotifyReportInfo', 'http://carestream.org/'), found as: &lt;Element:0x4eb6df0 name="NotifyReportInfo" /&gt;</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">method 'NotifyReportInfo' created: started: 1572595884 (running)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">('NotifyExamReservationInfo', 'http://carestream.org/'), found as: &lt;Element:0x4eb6a10 name="NotifyExamReservationInfo" /&gt;</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">method 'NotifyExamReservationInfo' created: started: 1572595884 (running)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">('NotifyPatientInfo', 'http://carestream.org/'), found as: &lt;Element:0x4eb6b90 name="NotifyPatientInfo" /&gt;</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">method 'NotifyPatientInfo' created: started: 1572595884 (running)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">('QueryCloudFilmUrl', 'http://carestream.org/'), found as: &lt;Element:0x4eb6050 name="QueryCloudFilmUrl" /&gt;</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">method 'QueryCloudFilmUrl' created: started: 1572595884 (running)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">('QueryCloudFilmUrlForQrCode', 'http://carestream.org/'), found as: &lt;Element:0x4f843f0 name="QueryCloudFilmUrlForQrCode" /&gt;</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">method 'QueryCloudFilmUrlForQrCode' created: started: 1572595884 (running)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">Element:0x4eb62b0, resolving: ('ExamInfo', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x4f84530"
   ref[] = 
      "ExamInfo",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x4eb62b0 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">('ExamInfo', 'http://carestream.org/'), found as: &lt;Complex:0x4eb6590 name="ExamInfo" /&gt;</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">Element:0x4eb67d0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4f84530"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4eb67d0 name="base64ExamReservation" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">TypeQuery:0x4f84530, found builtin (string)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">Element:0x4eb6690, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4f84530"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4eb6690 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">TypeQuery:0x4f84530, found builtin (string)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">Element:0x4eb60f0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4f84530"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4eb60f0 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">TypeQuery:0x4f84530, found builtin (string)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">Element:0x4eb6630, resolving: ('PatientInfoEx', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x4f84530"
   ref[] = 
      "PatientInfoEx",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x4eb6630 name="patientInfo" type="('PatientInfoEx', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">('PatientInfoEx', 'http://carestream.org/'), found as: &lt;Complex:0x4eb69b0 name="PatientInfoEx" /&gt;</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">Element:0x4eb64f0, resolving: ('ExamInfo', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x4923630"
   ref[] = 
      "ExamInfo",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x4eb64f0 name="exam" type="('ExamInfo', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">('ExamInfo', 'http://carestream.org/'), found as: &lt;Complex:0x4eb6590 name="ExamInfo" /&gt;</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">Element:0x4eb6dd0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4923630"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4eb6dd0 name="reportPath" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">TypeQuery:0x4923630, found builtin (string)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">Element:0x4eb6f10, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4923630"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4eb6f10 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">TypeQuery:0x4923630, found builtin (int)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">Element:0x4eb6d70, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4923630"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4eb6d70 name="pdfPassword" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">TypeQuery:0x4923630, found builtin (string)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">Element:0x4eb6f70, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4f84530"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4eb6f70 name="patientName" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">TypeQuery:0x4f84530, found builtin (string)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">Element:0x4eb6730, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4f84530"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4eb6730 name="patientID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">TypeQuery:0x4f84530, found builtin (string)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">Element:0x4eb6b50, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4f84530"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4eb6b50 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">TypeQuery:0x4f84530, found builtin (string)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">Element:0x4eb67b0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4f84530"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4eb67b0 name="studyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">TypeQuery:0x4f84530, found builtin (string)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">Element:0x4eb6c30, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4f84530"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4eb6c30 name="reportStatus" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">TypeQuery:0x4f84530, found builtin (int)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">Element:0x4eb6b70, resolving: ('ArrayOfString', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x4f84530"
   ref[] = 
      "ArrayOfString",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x4eb6b70 name="reportFileName" type="('ArrayOfString', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">('ArrayOfString', 'http://carestream.org/'), found as: &lt;Complex:0x4eb66b0 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">Element:0x4eb6670, resolving: ('ArrayOfString', 'http://carestream.org/')
 using:(TypeQuery){
   id = "TypeQuery:0x4f84530"
   ref[] = 
      "ArrayOfString",
      "http://carestream.org/",
   history[] = 
      &lt;Element:0x4eb6670 name="pdfPassword" type="('ArrayOfString', 'http://carestream.org/')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">('ArrayOfString', 'http://carestream.org/'), found as: &lt;Complex:0x4eb66b0 name="ArrayOfString" /&gt;</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">Element:0x4f843d0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4f84530"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4f843d0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">TypeQuery:0x4f84530, found builtin (string)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">Element:0x4f84430, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4f84530"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4f84430 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">TypeQuery:0x4f84530, found builtin (string)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">Element:0x4f844f0, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4f84530"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4f844f0 name="accessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">TypeQuery:0x4f84530, found builtin (string)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">Element:0x4f84550, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4f84530"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4f84550 name="patientId" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">TypeQuery:0x4f84530, found builtin (string)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">Element:0x4eb6150, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4f84530"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4eb6150 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">TypeQuery:0x4f84530, found builtin (string)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">Element:0x4eb6d10, resolving: ('string', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4f84530"
   ref[] = 
      "string",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4eb6d10 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">TypeQuery:0x4f84530, found builtin (string)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">Element:0x4eb6e30, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4f84530"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4eb6e30 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">TypeQuery:0x4f84530, found builtin (int)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">Element:0x4eb6770, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4f84530"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4eb6770 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">TypeQuery:0x4f84530, found builtin (int)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">Element:0x4eb6790, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4f84530"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4eb6790 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">TypeQuery:0x4f84530, found builtin (int)</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4eb69d0 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">('SetPrintMode', 'http://carestream.org/'), found as: &lt;Element:0x4eb69d0 name="SetPrintMode" /&gt;</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">processing:
(Content){
   tag = "strAccessionNumber"
   value = "A20191101161042708365"
   type = &lt;Element:0x4eb6150 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x43f7cb0 /&gt;
 }</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x043F76D0&gt;
content:
(Content){
   tag = "strAccessionNumber"
   value = "A20191101161042708365"
   type = &lt;Element:0x4eb6150 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x43f7cb0 /&gt;
 }</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">starting content:
(Content){
   tag = "strAccessionNumber"
   value = "A20191101161042708365"
   type = &lt;Element:0x4eb6150 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x43f7cb0 /&gt;
 }</msg>
<msg timestamp="20191101 16:11:24.490" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x043F7710&gt;)
&lt;suds.resolver.Frame object at 0x043F7710&gt;</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">created - node:
&lt;tns:strAccessionNumber xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">ending content:
(Content){
   tag = "strAccessionNumber"
   value = "A20191101161042708365"
   type = &lt;Element:0x4eb6150 name="strAccessionNumber" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x43f7cb0 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x043F7710&gt;)
</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">processing:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x4eb6d10 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x43f7b70 /&gt;
 }</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x043F79B0&gt;
content:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x4eb6d10 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x43f7b70 /&gt;
 }</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">starting content:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x4eb6d10 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x43f7b70 /&gt;
 }</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x043F79F0&gt;)
&lt;suds.resolver.Frame object at 0x043F79F0&gt;</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">created - node:
&lt;tns:strStudyInstanceUID xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">ending content:
(Content){
   tag = "strStudyInstanceUID"
   value = ""
   type = &lt;Element:0x4eb6d10 name="strStudyInstanceUID" type="('string', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XString:0x43f7b70 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x043F79F0&gt;)
</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">processing:
(Content){
   tag = "nMode"
   value = "1"
   type = &lt;Element:0x4eb6e30 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x43f7ff0 /&gt;
 }</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x043F75B0&gt;
content:
(Content){
   tag = "nMode"
   value = "1"
   type = &lt;Element:0x4eb6e30 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x43f7ff0 /&gt;
 }</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">starting content:
(Content){
   tag = "nMode"
   value = "1"
   type = &lt;Element:0x4eb6e30 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x43f7ff0 /&gt;
 }</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x043F73B0&gt;)
&lt;suds.resolver.Frame object at 0x043F73B0&gt;</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">created - node:
&lt;tns:nMode xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">ending content:
(Content){
   tag = "nMode"
   value = "1"
   type = &lt;Element:0x4eb6e30 name="nMode" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x43f7ff0 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x043F73B0&gt;)
</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">processing:
(Content){
   tag = "printWaitTime"
   value = "60"
   type = &lt;Element:0x4eb6770 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x43f7f70 /&gt;
 }</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x043F7270&gt;
content:
(Content){
   tag = "printWaitTime"
   value = "60"
   type = &lt;Element:0x4eb6770 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x43f7f70 /&gt;
 }</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">starting content:
(Content){
   tag = "printWaitTime"
   value = "60"
   type = &lt;Element:0x4eb6770 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x43f7f70 /&gt;
 }</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x043F7810&gt;)
&lt;suds.resolver.Frame object at 0x043F7810&gt;</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">created - node:
&lt;tns:printWaitTime xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">ending content:
(Content){
   tag = "printWaitTime"
   value = "60"
   type = &lt;Element:0x4eb6770 name="printWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x43f7f70 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x043F7810&gt;)
</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">processing:
(Content){
   tag = "reportWaitTime"
   value = "10"
   type = &lt;Element:0x4eb6790 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x43f7fd0 /&gt;
 }</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">appending parent:
&lt;suds.sax.document.Document object at 0x04EDA4B0&gt;
content:
(Content){
   tag = "reportWaitTime"
   value = "10"
   type = &lt;Element:0x4eb6790 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x43f7fd0 /&gt;
 }</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">starting content:
(Content){
   tag = "reportWaitTime"
   value = "10"
   type = &lt;Element:0x4eb6790 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x43f7fd0 /&gt;
 }</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04EDAD70&gt;)
&lt;suds.resolver.Frame object at 0x04EDAD70&gt;</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">created - node:
&lt;tns:reportWaitTime xmlns:tns="http://carestream.org/"/&gt;</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">ending content:
(Content){
   tag = "reportWaitTime"
   value = "10"
   type = &lt;Element:0x4eb6790 name="reportWaitTime" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;
   real = &lt;XInteger:0x43f7fd0 /&gt;
   ancestry[] = &lt;empty&gt;
 }</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04EDAD70&gt;)
</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">message for 'SetPrintMode' created: 15 (ms)</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">sending to (http://10.112.20.84/NotifyServer/NotifyService.asmx)
message:
&lt;suds.sax.document.Document object at 0x049237B0&gt;</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">headers = {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://carestream.org/SetPrintMode"'}</msg>
<msg timestamp="20191101 16:11:24.505" level="DEBUG">sending:
URL: http://10.112.20.84/NotifyServer/NotifyService.asmx
HEADERS: {'Content-Type': 'text/xml; charset=utf-8', 'SOAPAction': b'"http://carestream.org/SetPrintMode"', 'Content-type': 'text/xml; charset=utf-8', 'Soapaction': b'"http://carestream.org/SetPrintMode"'}
MESSAGE:
b'&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://carestream.org/"&gt;&lt;SOAP-ENV:Header/&gt;&lt;ns0:Body&gt;&lt;ns1:SetPrintMode&gt;&lt;ns1:strAccessionNumber&gt;A20191101161042708365&lt;/ns1:strAccessionNumber&gt;&lt;ns1:strStudyInstanceUID&gt;&lt;/ns1:strStudyInstanceUID&gt;&lt;ns1:nMode&gt;1&lt;/ns1:nMode&gt;&lt;ns1:printWaitTime&gt;60&lt;/ns1:printWaitTime&gt;&lt;ns1:reportWaitTime&gt;10&lt;/ns1:reportWaitTime&gt;&lt;/ns1:SetPrintMode&gt;&lt;/ns0:Body&gt;&lt;/SOAP-ENV:Envelope&gt;'</msg>
<msg timestamp="20191101 16:11:24.568" level="DEBUG">received:
CODE: HTTPStatus.OK
HEADERS: Cache-Control: private, max-age=0
Content-Type: text/xml; charset=utf-8
Server: Microsoft-IIS/7.5
X-AspNet-Version: 4.0.30319
X-Powered-By: ASP.NET
Date: Fri, 01 Nov 2019 08:11:24 GMT
Connection: close
Content-Length: 364


MESSAGE:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;SetPrintModeResponse xmlns="http://carestream.org/"&gt;&lt;SetPrintModeResult&gt;0&lt;/SetPrintModeResult&gt;&lt;/SetPrintModeResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191101 16:11:24.568" level="DEBUG">waited 62 (ms) on server reply</msg>
<msg timestamp="20191101 16:11:24.568" level="DEBUG">HTTP succeeded:
b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;SetPrintModeResponse xmlns="http://carestream.org/"&gt;&lt;SetPrintModeResult&gt;0&lt;/SetPrintModeResult&gt;&lt;/SetPrintModeResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'</msg>
<msg timestamp="20191101 16:11:24.568" level="DEBUG">b'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;&lt;soap:Body&gt;&lt;SetPrintModeResponse xmlns="http://carestream.org/"&gt;&lt;SetPrintModeResult&gt;0&lt;/SetPrintModeResult&gt;&lt;/SetPrintModeResponse&gt;&lt;/soap:Body&gt;&lt;/soap:Envelope&gt;'
sax duration: 0 (ms)</msg>
<msg timestamp="20191101 16:11:24.568" level="DEBUG">('SetPrintModeResponse', 'http://carestream.org/'), found as: &lt;Element:0x4eb6c10 name="SetPrintModeResponse" /&gt;</msg>
<msg timestamp="20191101 16:11:24.568" level="DEBUG">Element:0x4eb68f0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4eda4b0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4eb68f0 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:11:24.568" level="DEBUG">TypeQuery:0x4eda4b0, found builtin (int)</msg>
<msg timestamp="20191101 16:11:24.568" level="DEBUG">reset</msg>
<msg timestamp="20191101 16:11:24.568" level="DEBUG">Element:0x4eb68f0, resolving: ('int', 'http://www.w3.org/2001/XMLSchema')
 using:(TypeQuery){
   id = "TypeQuery:0x4edabb0"
   ref[] = 
      "int",
      "http://www.w3.org/2001/XMLSchema",
   history[] = 
      &lt;Element:0x4eb68f0 name="SetPrintModeResult" type="('int', 'http://www.w3.org/2001/XMLSchema')" /&gt;,
   resolved = False
 }</msg>
<msg timestamp="20191101 16:11:24.568" level="DEBUG">TypeQuery:0x4edabb0, found builtin (int)</msg>
<msg timestamp="20191101 16:11:24.568" level="DEBUG">push: (&lt;suds.resolver.Frame object at 0x04EDAFB0&gt;)
&lt;suds.resolver.Frame object at 0x04EDAFB0&gt;</msg>
<msg timestamp="20191101 16:11:24.568" level="DEBUG">pop: (&lt;suds.resolver.Frame object at 0x04EDAFB0&gt;)
</msg>
<msg timestamp="20191101 16:11:24.568" level="DEBUG">method 'SetPrintMode' invoked: 62 (ms)</msg>
<msg timestamp="20191101 16:11:24.568" level="INFO">Printmode.printmode_set_by_accn: Find the records in print mode table of exam: A20191101161042708365.
Printmode.printmode_set_by_accn: Set exam print mode to [film] successfully.</msg>
<msg timestamp="20191101 16:11:24.568" level="INFO">${Set_Printmode} = True</msg>
<status status="PASS" starttime="20191101 16:11:24.396" endtime="20191101 16:11:24.568"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Set_Printmode}</arg>
</arguments>
<status status="PASS" starttime="20191101 16:11:24.568" endtime="20191101 16:11:24.568"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20191101 16:11:34.568" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20191101 16:11:24.568" endtime="20191101 16:11:34.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4 \n Description: \n 1. Wait for the holding time of film has passed. \n Expected:\n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191101 16:11:34.568" level="INFO">Step 4 
Description: 
1. Wait for the holding time of film has passed. 
Expected:
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191101 16:11:34.568" endtime="20191101 16:11:34.568"></status>
</kw>
<kw name="HoldTime Wait Time Arrive By Accn" library="PUMA_HoldTimeLibrary">
<doc>HoldTime_get_by_accn</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Holdtime_result}</var>
</assign>
<msg timestamp="20191101 16:12:24.568" level="INFO">HoldTime.HoldTime_wait_time_arrive_by_accn: Sleep [50] seconds to make print ready arrived.</msg>
<msg timestamp="20191101 16:12:24.568" level="INFO">${Holdtime_result} = True</msg>
<status status="PASS" starttime="20191101 16:11:34.568" endtime="20191101 16:12:24.568"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Holdtime_result}</arg>
</arguments>
<status status="PASS" starttime="20191101 16:12:24.568" endtime="20191101 16:12:24.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5 \n Description: \n 1.Print the prepared exam with accession number on K3 terminal prepared in step1. \n Expected: \n 1. The print task should finish successfully. The status in wggc.dbo.afp_printtask should be 4. \n</arg>
</arguments>
<msg timestamp="20191101 16:12:24.568" level="INFO">Step 5 
Description: 
1.Print the prepared exam with accession number on K3 terminal prepared in step1. 
Expected: 
1. The print task should finish successfully. The status in wggc.dbo.afp_printtask should be 4. 
</msg>
<status status="PASS" starttime="20191101 16:12:24.568" endtime="20191101 16:12:24.568"></status>
</kw>
<kw name="Terminal Print With Cardinfo" library="PUMA_TerminalLibrary">
<doc>This function is simulate the terminal print opertaions with API.
You can select the exist termina name and input the cardinfo to print the report, films.
The function will verify the print mode and exam info to print.
It will return bool value.</doc>
<arguments>
<arg>K3_Terminal01</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Termina_Print_Result}</var>
</assign>
<msg timestamp="20191101 16:12:24.568" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:12:24.583" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/EHDPS/status?tid=K3_Terminal01 HTTP/1.1" 200 609</msg>
<msg timestamp="20191101 16:12:24.583" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:12:24.646" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/EHDPS/printtask/items?Value=A20191101161042708365&amp;Type=0&amp;tid=K3_Terminal01 HTTP/1.1" 200 820</msg>
<msg timestamp="20191101 16:12:24.646" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:12:24.693" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/EHDPS/printtask/create?tid=K3_Terminal01 HTTP/1.1" 200 732</msg>
<msg timestamp="20191101 16:12:24.693" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:12:24.724" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/EHDPS/printtask/print/2082?tid=K3_Terminal01 HTTP/1.1" 200 729</msg>
<msg timestamp="20191101 16:15:00.724" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:15:00.740" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/EHDPS/printtask/status/2082?tid=K3_Terminal01 HTTP/1.1" 200 734</msg>
<msg timestamp="20191101 16:15:00.740" level="INFO">Terminal._check_terminal_status: The terminal status check and result is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"Status":0,"Terminal":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9926,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20281,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}
Terminal.printtask_report_getinfo: get the report information by cardiinfo: 
{"Status":0,"Code":"","Message":"您有胶片可打印，请稍等！","OriginalException":null,"Entity":{"PrintState":0,"Message":"","FilmCount":1,"ReportCount":0,"PatientInfo":{"PatientId":"P20191101161042708365","PatientName":"CN20191101161042708365","PatientGender":"F","PatientBirthday":null,"PatientType":"2","PatientAge":null},"FilmStatistics":[{"FilmSize":"14INX17IN","FilmType":"BLUE FILM","FilmCount":1}],"ReportStatistics":[],"ExamItems":[{"AccessionNumber":"A20191101161042708365","ModalityType":"US","ModalityName":"DCMPSTATE1","ExamName":"Exam20191101161042708365","ReferringDepartment":null,"ExamDate":null,"ExamBodyPart":"","Status":"Unprinted","StatusComments":null,"PatientType":null,"FilmInfos":[{"FilmSize":"14INX17IN","FilmType":"BLUE FILM","FilmCount":1}],"ReportInfos":null}],"ExamItemsOfReg":[]}}
Terminal.printtask_report_getinfo: No report to print. [A20191101161042708365]
Terminal.terminal_print_with_cardinfo: There are no report need to print for the patient.

Terminal.create_film_printtask: The terminal film print create and response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"2082","Status":-1,"TotalFilmCount":1,"TotalReportCount":0,"PrintedFilmCount":0,"PrintedReportCount":0,"EstimatedTime":0,"TerminalInfo":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9926,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20281,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}
Terminal.create_film_printtask: The taskID is 2082
Terminal.printtask_print: The terminal print task print response is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"TaskId":"","Status":0,"TotalFilmCount":0,"TotalReportCount":0,"PrintedFilmCount":0,"PrintedReportCount":0,"EstimatedTime":0,"TerminalInfo":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9926,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20281,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":"2082"}}}
Terminal.printtask_get_estimatetime: The estimate time is 63 of task 2082 

Terminal.printtask_status_check: The terminal print task status check response is:
 {"Status":0,"Code":"","Message":null,"OriginalException":null,"Entity":{"TaskId":"2082","Status":4,"TotalFilmCount":1,"TotalReportCount":0,"PrintedFilmCount":1,"PrintedReportCount":0,"EstimatedTime":63,"TerminalInfo":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9925,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20280,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}
Terminal.terminal_print_with_cardinfo: The task 2082 print successfully, the task status is Printed</msg>
<msg timestamp="20191101 16:15:00.740" level="INFO">${Termina_Print_Result} = True</msg>
<status status="PASS" starttime="20191101 16:12:24.568" endtime="20191101 16:15:00.740"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Termina_Print_Result}</arg>
</arguments>
<status status="PASS" starttime="20191101 16:15:00.740" endtime="20191101 16:15:00.740"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191101 16:10:42.693" endtime="20191101 16:15:00.740" critical="yes"></status>
</test>
<test id="s1-t10" name="SmokeTest_010_Core_4179_05.01.01 Central Print multi patients with custom terminal">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description:\n 1. Configure a custom terminal on PS. \n 2. Make sure the terminal status is ready to work. \n Expected: \n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191101 16:15:00.740" level="INFO">Step 1 
Description:
1. Configure a custom terminal on PS. 
2. Make sure the terminal status is ready to work. 
Expected: 
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191101 16:15:00.740" endtime="20191101 16:15:00.740"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>5</arg>
</arguments>
<assign>
<var>${exam_count}</var>
</assign>
<msg timestamp="20191101 16:15:00.740" level="INFO">${exam_count} = 5</msg>
<status status="PASS" starttime="20191101 16:15:00.740" endtime="20191101 16:15:00.740"></status>
</kw>
<kw name="Check Terminal Status" library="PUMA_TerminalLibrary">
<doc>This function is use the API interface to check the terminal status.
The function will enable the terminal status to 'on work' status.</doc>
<arguments>
<arg>Customer_Terminal01</arg>
</arguments>
<assign>
<var>${Terminal_status}</var>
</assign>
<msg timestamp="20191101 16:15:00.756" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:15:00.756" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/EHDPS/status?tid=Customer_Terminal01 HTTP/1.1" 200 621</msg>
<msg timestamp="20191101 16:15:00.756" level="INFO">Terminal._check_terminal_status: The terminal status check and result is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"Status":0,"Terminal":{"TerminalId":"Customer_Terminal01","Status":0,"Type":1,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9925,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20280,"IsPrinting":false,"TerminalId":"Customer_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}</msg>
<msg timestamp="20191101 16:15:00.756" level="INFO">${Terminal_status} = True</msg>
<status status="PASS" starttime="20191101 16:15:00.740" endtime="20191101 16:15:00.756"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Terminal_status}</arg>
<arg>The termianl status is ready to print</arg>
</arguments>
<status status="PASS" starttime="20191101 16:15:00.756" endtime="20191101 16:15:00.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Prepare 5 patients` exam, each has one film and one report. \n Expected: \n 1. The preparation can finish successfully. \n</arg>
</arguments>
<msg timestamp="20191101 16:15:00.756" level="INFO">Step 2 
Description: 
1. Prepare 5 patients` exam, each has one film and one report. 
Expected: 
1. The preparation can finish successfully. 
</msg>
<status status="PASS" starttime="20191101 16:15:00.756" endtime="20191101 16:15:00.756"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${list_Accn}</var>
</assign>
<msg timestamp="20191101 16:15:00.756" level="INFO">${list_Accn} = []</msg>
<status status="PASS" starttime="20191101 16:15:00.756" endtime="20191101 16:15:00.756"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${restinstanceids}</var>
</assign>
<msg timestamp="20191101 16:15:00.756" level="INFO">${restinstanceids} = []</msg>
<status status="PASS" starttime="20191101 16:15:00.756" endtime="20191101 16:15:00.756"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191101 16:15:00.771" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:15:00.771" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191101 16:15:00.771" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-01 16:15:00.755574", "UpdateDT": "2019-11-01 16:15:00.755574", "PatientID": "P20191101161500755574", "AccessionNumber": "A20191101161500755574", "StudyInstanceUID": "UID20191101161500755574", "NameCN": "CN20191101161500755574", "NameEN": "EN20191101161500755574", "Gender": "F", "Birthday": "1993-11-07", "Modality": "CT", "ModalityName": "DR", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-01 16:15:00.755574", "RegisterDT": "2019-11-01 16:15:00.755574", "ExamDT": "2019-11-01 16:15:00.755574", "ReportDT": "2019-11-01 16:15:00.755574", "SubmitDT": "2019-11-01 16:15:00.755574", "ApproveDT": "2019-11-01 16:15:00.755574", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191101161500755574", "ExamBodyPart": "Lung", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191101 16:15:00.771" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-01 16:15:00.755574", "UpdateDT": "2019-11-01 16:15:00.755574", "PatientID": "P20191101161500755574", "AccessionNumber": "A20191101161500755574", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191101 16:15:00.756" endtime="20191101 16:15:00.771"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191101 16:15:00.771" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-01 16:15:00.755574', 'UpdateDT': '2019-11-01 16:15:00.755574', 'PatientID': 'P20191101161500755574', 'AccessionNumber': 'A20191101161500755574', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191101 16:15:00.771" endtime="20191101 16:15:00.771"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191101 16:15:00.818" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191101 16:15:00.771" endtime="20191101 16:15:00.818"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191101 16:15:00.865" level="INFO">${patientID} = ['P20191101161500755574']</msg>
<status status="PASS" starttime="20191101 16:15:00.818" endtime="20191101 16:15:00.865"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191101 16:15:00.927" level="INFO">${Accessionnumber} = ['A20191101161500755574']</msg>
<status status="PASS" starttime="20191101 16:15:00.865" endtime="20191101 16:15:00.927"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 16:15:00.927" endtime="20191101 16:15:00.927"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191101 16:15:33.771" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191101161500755574", "AccessionNumber": "A20191101161500755574", "FilmSessionLable": "20191101161500927447", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191101 16:15:33.771" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191101161500755574", "AccessionNumber": "A20191101161500755574", "FilmSessionLable": "20191101161500927447", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191101 16:15:00.927" endtime="20191101 16:15:33.771"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191101 16:15:33.771" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191101161500755574', 'AccessionNumber': 'A20191101161500755574', 'FilmSessionLable': '20191101161500927447', 'DeliveryJob_status': 2, 'WaterMark_Path': 'D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191101 16:15:33.771" endtime="20191101 16:15:33.771"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191101 16:15:33.802" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191101 16:15:33.771" endtime="20191101 16:15:33.802"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 16:15:33.802" endtime="20191101 16:15:33.802"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191101 16:15:43.818" level="INFO">PUMA_ReportLibrary._archive_check: Report achived successfully.
Report achived successfully. {"Status": true, "server": "10.112.20.84", "patient_id": "P20191101161500755574", "accession_number": "A20191101161500755574", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "powershell_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.84/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191101 16:15:43.818" level="INFO">${Report_archived_Info} = {"Status": true, "server": "10.112.20.84", "patient_id": "P20191101161500755574", "accession_number": "A20191101161500755574", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191101 16:15:33.802" endtime="20191101 16:15:43.818"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191101 16:15:43.818" level="INFO">${Report_archived_Info_Json} = {'Status': True, 'server': '10.112.20.84', 'patient_id': 'P20191101161500755574', 'accession_number': 'A20191101161500755574', 'report_file': 'D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191101 16:15:43.818" endtime="20191101 16:15:43.818"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191101 16:15:43.849" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191101 16:15:43.818" endtime="20191101 16:15:43.849"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 16:15:43.849" endtime="20191101 16:15:43.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<msg timestamp="20191101 16:15:43.849" level="INFO">A20191101161500755574</msg>
<status status="PASS" starttime="20191101 16:15:43.849" endtime="20191101 16:15:43.849"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<status status="PASS" starttime="20191101 16:15:43.849" endtime="20191101 16:15:43.849"></status>
</kw>
<status status="PASS" starttime="20191101 16:15:00.756" endtime="20191101 16:15:43.849"></status>
</kw>
<kw name="${count} = 1" type="foritem">
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191101 16:15:43.865" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:15:43.865" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191101 16:15:43.865" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-01 16:15:43.849379", "UpdateDT": "2019-11-01 16:15:43.849379", "PatientID": "P20191101161543849379", "AccessionNumber": "A20191101161543849379", "StudyInstanceUID": "UID20191101161543849379", "NameCN": "CN20191101161543849379", "NameEN": "EN20191101161543849379", "Gender": "F", "Birthday": "1970-11-13", "Modality": "CT", "ModalityName": "US", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-01 16:15:43.849379", "RegisterDT": "2019-11-01 16:15:43.849379", "ExamDT": "2019-11-01 16:15:43.849379", "ReportDT": "2019-11-01 16:15:43.849379", "SubmitDT": "2019-11-01 16:15:43.849379", "ApproveDT": "2019-11-01 16:15:43.849379", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191101161543849379", "ExamBodyPart": "Leg", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191101 16:15:43.865" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-01 16:15:43.849379", "UpdateDT": "2019-11-01 16:15:43.849379", "PatientID": "P20191101161543849379", "AccessionNumber": "A20191101161543849379", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191101 16:15:43.849" endtime="20191101 16:15:43.865"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191101 16:15:43.881" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-01 16:15:43.849379', 'UpdateDT': '2019-11-01 16:15:43.849379', 'PatientID': 'P20191101161543849379', 'AccessionNumber': 'A20191101161543849379', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191101 16:15:43.865" endtime="20191101 16:15:43.881"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191101 16:15:43.912" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191101 16:15:43.881" endtime="20191101 16:15:43.912"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191101 16:15:43.943" level="INFO">${patientID} = ['P20191101161543849379']</msg>
<status status="PASS" starttime="20191101 16:15:43.912" endtime="20191101 16:15:43.943"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191101 16:15:44.006" level="INFO">${Accessionnumber} = ['A20191101161543849379']</msg>
<status status="PASS" starttime="20191101 16:15:43.943" endtime="20191101 16:15:44.006"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 16:15:44.006" endtime="20191101 16:15:44.006"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191101 16:16:24.678" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191101161543849379", "AccessionNumber": "A20191101161543849379", "FilmSessionLable": "20191101161544005629", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191101 16:16:24.678" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191101161543849379", "AccessionNumber": "A20191101161543849379", "FilmSessionLable": "20191101161544005629", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191101 16:15:44.006" endtime="20191101 16:16:24.678"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191101 16:16:24.678" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191101161543849379', 'AccessionNumber': 'A20191101161543849379', 'FilmSessionLable': '20191101161544005629', 'DeliveryJob_status': 2, 'WaterMark_Path': 'D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191101 16:16:24.678" endtime="20191101 16:16:24.678"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191101 16:16:24.709" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191101 16:16:24.678" endtime="20191101 16:16:24.709"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 16:16:24.709" endtime="20191101 16:16:24.709"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191101 16:16:34.724" level="INFO">PUMA_ReportLibrary._archive_check: Report achived successfully.
Report achived successfully. {"Status": true, "server": "10.112.20.84", "patient_id": "P20191101161543849379", "accession_number": "A20191101161543849379", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "powershell_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.84/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191101 16:16:34.724" level="INFO">${Report_archived_Info} = {"Status": true, "server": "10.112.20.84", "patient_id": "P20191101161543849379", "accession_number": "A20191101161543849379", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191101 16:16:24.709" endtime="20191101 16:16:34.724"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191101 16:16:34.724" level="INFO">${Report_archived_Info_Json} = {'Status': True, 'server': '10.112.20.84', 'patient_id': 'P20191101161543849379', 'accession_number': 'A20191101161543849379', 'report_file': 'D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191101 16:16:34.724" endtime="20191101 16:16:34.724"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191101 16:16:34.756" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191101 16:16:34.724" endtime="20191101 16:16:34.756"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 16:16:34.756" endtime="20191101 16:16:34.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<msg timestamp="20191101 16:16:34.756" level="INFO">A20191101161543849379</msg>
<status status="PASS" starttime="20191101 16:16:34.756" endtime="20191101 16:16:34.756"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<status status="PASS" starttime="20191101 16:16:34.756" endtime="20191101 16:16:34.756"></status>
</kw>
<status status="PASS" starttime="20191101 16:15:43.849" endtime="20191101 16:16:34.756"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191101 16:16:34.771" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:16:34.834" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191101 16:16:34.834" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-01 16:16:34.755694", "UpdateDT": "2019-11-01 16:16:34.755694", "PatientID": "P20191101161634755694", "AccessionNumber": "A20191101161634755694", "StudyInstanceUID": "UID20191101161634755694", "NameCN": "CN20191101161634755694", "NameEN": "EN20191101161634755694", "Gender": "F", "Birthday": "1934-11-22", "Modality": "IO", "ModalityName": "RF", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-01 16:16:34.755694", "RegisterDT": "2019-11-01 16:16:34.755694", "ExamDT": "2019-11-01 16:16:34.755694", "ReportDT": "2019-11-01 16:16:34.755694", "SubmitDT": "2019-11-01 16:16:34.755694", "ApproveDT": "2019-11-01 16:16:34.755694", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191101161634755694", "ExamBodyPart": "Chest", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191101 16:16:34.834" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-01 16:16:34.755694", "UpdateDT": "2019-11-01 16:16:34.755694", "PatientID": "P20191101161634755694", "AccessionNumber": "A20191101161634755694", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191101 16:16:34.756" endtime="20191101 16:16:34.834"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191101 16:16:34.834" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-01 16:16:34.755694', 'UpdateDT': '2019-11-01 16:16:34.755694', 'PatientID': 'P20191101161634755694', 'AccessionNumber': 'A20191101161634755694', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191101 16:16:34.834" endtime="20191101 16:16:34.834"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191101 16:16:34.881" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191101 16:16:34.834" endtime="20191101 16:16:34.881"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191101 16:16:34.912" level="INFO">${patientID} = ['P20191101161634755694']</msg>
<status status="PASS" starttime="20191101 16:16:34.881" endtime="20191101 16:16:34.912"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191101 16:16:34.959" level="INFO">${Accessionnumber} = ['A20191101161634755694']</msg>
<status status="PASS" starttime="20191101 16:16:34.912" endtime="20191101 16:16:34.959"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 16:16:34.959" endtime="20191101 16:16:34.959"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191101 16:17:05.662" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191101161634755694", "AccessionNumber": "A20191101161634755694", "FilmSessionLable": "20191101161634958819", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191101 16:17:05.662" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191101161634755694", "AccessionNumber": "A20191101161634755694", "FilmSessionLable": "20191101161634958819", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191101 16:16:34.959" endtime="20191101 16:17:05.662"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191101 16:17:05.662" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191101161634755694', 'AccessionNumber': 'A20191101161634755694', 'FilmSessionLable': '20191101161634958819', 'DeliveryJob_status': 2, 'WaterMark_Path': 'D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191101 16:17:05.662" endtime="20191101 16:17:05.662"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191101 16:17:05.693" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191101 16:17:05.662" endtime="20191101 16:17:05.693"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 16:17:05.693" endtime="20191101 16:17:05.693"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191101 16:17:15.709" level="INFO">PUMA_ReportLibrary._archive_check: Report achived successfully.
Report achived successfully. {"Status": true, "server": "10.112.20.84", "patient_id": "P20191101161634755694", "accession_number": "A20191101161634755694", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "powershell_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.84/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191101 16:17:15.709" level="INFO">${Report_archived_Info} = {"Status": true, "server": "10.112.20.84", "patient_id": "P20191101161634755694", "accession_number": "A20191101161634755694", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191101 16:17:05.693" endtime="20191101 16:17:15.709"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191101 16:17:15.709" level="INFO">${Report_archived_Info_Json} = {'Status': True, 'server': '10.112.20.84', 'patient_id': 'P20191101161634755694', 'accession_number': 'A20191101161634755694', 'report_file': 'D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191101 16:17:15.709" endtime="20191101 16:17:15.709"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191101 16:17:15.740" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191101 16:17:15.709" endtime="20191101 16:17:15.740"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 16:17:15.740" endtime="20191101 16:17:15.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<msg timestamp="20191101 16:17:15.740" level="INFO">A20191101161634755694</msg>
<status status="PASS" starttime="20191101 16:17:15.740" endtime="20191101 16:17:15.740"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<status status="PASS" starttime="20191101 16:17:15.740" endtime="20191101 16:17:15.740"></status>
</kw>
<status status="PASS" starttime="20191101 16:16:34.756" endtime="20191101 16:17:15.740"></status>
</kw>
<kw name="${count} = 3" type="foritem">
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191101 16:17:15.740" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:17:15.756" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191101 16:17:15.771" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-01 16:17:15.740121", "UpdateDT": "2019-11-01 16:17:15.740121", "PatientID": "P20191101161715740121", "AccessionNumber": "A20191101161715740121", "StudyInstanceUID": "UID20191101161715740121", "NameCN": "CN20191101161715740121", "NameEN": "EN20191101161715740121", "Gender": "F", "Birthday": "2017-11-01", "Modality": "MG", "ModalityName": "CR", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-01 16:17:15.740121", "RegisterDT": "2019-11-01 16:17:15.740121", "ExamDT": "2019-11-01 16:17:15.740121", "ReportDT": "2019-11-01 16:17:15.740121", "SubmitDT": "2019-11-01 16:17:15.740121", "ApproveDT": "2019-11-01 16:17:15.740121", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191101161715740121", "ExamBodyPart": "Head", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191101 16:17:15.771" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-01 16:17:15.740121", "UpdateDT": "2019-11-01 16:17:15.740121", "PatientID": "P20191101161715740121", "AccessionNumber": "A20191101161715740121", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191101 16:17:15.740" endtime="20191101 16:17:15.771"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191101 16:17:15.771" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-01 16:17:15.740121', 'UpdateDT': '2019-11-01 16:17:15.740121', 'PatientID': 'P20191101161715740121', 'AccessionNumber': 'A20191101161715740121', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191101 16:17:15.771" endtime="20191101 16:17:15.771"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191101 16:17:15.803" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191101 16:17:15.771" endtime="20191101 16:17:15.803"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191101 16:17:15.834" level="INFO">${patientID} = ['P20191101161715740121']</msg>
<status status="PASS" starttime="20191101 16:17:15.803" endtime="20191101 16:17:15.834"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191101 16:17:15.881" level="INFO">${Accessionnumber} = ['A20191101161715740121']</msg>
<status status="PASS" starttime="20191101 16:17:15.834" endtime="20191101 16:17:15.881"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 16:17:15.881" endtime="20191101 16:17:15.881"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191101 16:17:59.053" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191101161715740121", "AccessionNumber": "A20191101161715740121", "FilmSessionLable": "20191101161715880747", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191101 16:17:59.053" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191101161715740121", "AccessionNumber": "A20191101161715740121", "FilmSessionLable": "20191101161715880747", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191101 16:17:15.881" endtime="20191101 16:17:59.053"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191101 16:17:59.053" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191101161715740121', 'AccessionNumber': 'A20191101161715740121', 'FilmSessionLable': '20191101161715880747', 'DeliveryJob_status': 2, 'WaterMark_Path': 'D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191101 16:17:59.053" endtime="20191101 16:17:59.053"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191101 16:17:59.100" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191101 16:17:59.053" endtime="20191101 16:17:59.100"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 16:17:59.100" endtime="20191101 16:17:59.100"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191101 16:18:09.115" level="INFO">PUMA_ReportLibrary._archive_check: Report achived successfully.
Report achived successfully. {"Status": true, "server": "10.112.20.84", "patient_id": "P20191101161715740121", "accession_number": "A20191101161715740121", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "powershell_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.84/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191101 16:18:09.115" level="INFO">${Report_archived_Info} = {"Status": true, "server": "10.112.20.84", "patient_id": "P20191101161715740121", "accession_number": "A20191101161715740121", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191101 16:17:59.100" endtime="20191101 16:18:09.115"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191101 16:18:09.115" level="INFO">${Report_archived_Info_Json} = {'Status': True, 'server': '10.112.20.84', 'patient_id': 'P20191101161715740121', 'accession_number': 'A20191101161715740121', 'report_file': 'D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191101 16:18:09.115" endtime="20191101 16:18:09.115"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191101 16:18:09.146" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191101 16:18:09.115" endtime="20191101 16:18:09.146"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 16:18:09.146" endtime="20191101 16:18:09.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<msg timestamp="20191101 16:18:09.146" level="INFO">A20191101161715740121</msg>
<status status="PASS" starttime="20191101 16:18:09.146" endtime="20191101 16:18:09.146"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<status status="PASS" starttime="20191101 16:18:09.146" endtime="20191101 16:18:09.146"></status>
</kw>
<status status="PASS" starttime="20191101 16:17:15.740" endtime="20191101 16:18:09.146"></status>
</kw>
<kw name="${count} = 4" type="foritem">
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191101 16:18:09.162" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:18:09.178" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191101 16:18:09.178" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-01 16:18:09.146440", "UpdateDT": "2019-11-01 16:18:09.146440", "PatientID": "P20191101161809146440", "AccessionNumber": "A20191101161809146440", "StudyInstanceUID": "UID20191101161809146440", "NameCN": "CN20191101161809146440", "NameEN": "EN20191101161809146440", "Gender": "M", "Birthday": "1956-11-16", "Modality": "OT", "ModalityName": "MR", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-01 16:18:09.146440", "RegisterDT": "2019-11-01 16:18:09.146440", "ExamDT": "2019-11-01 16:18:09.146440", "ReportDT": "2019-11-01 16:18:09.146440", "SubmitDT": "2019-11-01 16:18:09.146440", "ApproveDT": "2019-11-01 16:18:09.146440", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191101161809146440", "ExamBodyPart": "Chest", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191101 16:18:09.178" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-01 16:18:09.146440", "UpdateDT": "2019-11-01 16:18:09.146440", "PatientID": "P20191101161809146440", "AccessionNumber": "A20191101161809146440", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191101 16:18:09.146" endtime="20191101 16:18:09.178"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191101 16:18:09.178" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-01 16:18:09.146440', 'UpdateDT': '2019-11-01 16:18:09.146440', 'PatientID': 'P20191101161809146440', 'AccessionNumber': 'A20191101161809146440', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191101 16:18:09.178" endtime="20191101 16:18:09.178"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191101 16:18:09.209" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191101 16:18:09.178" endtime="20191101 16:18:09.209"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191101 16:18:09.256" level="INFO">${patientID} = ['P20191101161809146440']</msg>
<status status="PASS" starttime="20191101 16:18:09.209" endtime="20191101 16:18:09.256"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191101 16:18:09.287" level="INFO">${Accessionnumber} = ['A20191101161809146440']</msg>
<status status="PASS" starttime="20191101 16:18:09.256" endtime="20191101 16:18:09.287"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 16:18:09.287" endtime="20191101 16:18:09.287"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191101 16:18:49.990" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191101161809146440", "AccessionNumber": "A20191101161809146440", "FilmSessionLable": "20191101161809287066", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191101 16:18:49.990" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191101161809146440", "AccessionNumber": "A20191101161809146440", "FilmSessionLable": "20191101161809287066", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191101 16:18:09.287" endtime="20191101 16:18:49.990"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191101 16:18:49.990" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191101161809146440', 'AccessionNumber': 'A20191101161809146440', 'FilmSessionLable': '20191101161809287066', 'DeliveryJob_status': 2, 'WaterMark_Path': 'D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191101 16:18:49.990" endtime="20191101 16:18:49.990"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191101 16:18:50.021" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191101 16:18:49.990" endtime="20191101 16:18:50.021"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 16:18:50.021" endtime="20191101 16:18:50.021"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191101 16:19:00.053" level="INFO">PUMA_ReportLibrary._archive_check: Report achived successfully.
Report achived successfully. {"Status": true, "server": "10.112.20.84", "patient_id": "P20191101161809146440", "accession_number": "A20191101161809146440", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "powershell_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.84/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191101 16:19:00.053" level="INFO">${Report_archived_Info} = {"Status": true, "server": "10.112.20.84", "patient_id": "P20191101161809146440", "accession_number": "A20191101161809146440", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191101 16:18:50.021" endtime="20191101 16:19:00.053"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191101 16:19:00.053" level="INFO">${Report_archived_Info_Json} = {'Status': True, 'server': '10.112.20.84', 'patient_id': 'P20191101161809146440', 'accession_number': 'A20191101161809146440', 'report_file': 'D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191101 16:19:00.053" endtime="20191101 16:19:00.053"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191101 16:19:00.084" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191101 16:19:00.053" endtime="20191101 16:19:00.084"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 16:19:00.084" endtime="20191101 16:19:00.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<msg timestamp="20191101 16:19:00.084" level="INFO">A20191101161809146440</msg>
<status status="PASS" starttime="20191101 16:19:00.084" endtime="20191101 16:19:00.084"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<status status="PASS" starttime="20191101 16:19:00.084" endtime="20191101 16:19:00.084"></status>
</kw>
<status status="PASS" starttime="20191101 16:18:09.146" endtime="20191101 16:19:00.084"></status>
</kw>
<status status="PASS" starttime="20191101 16:15:00.756" endtime="20191101 16:19:00.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${list_Accn}</arg>
</arguments>
<msg timestamp="20191101 16:19:00.084" level="INFO">['A20191101161500755574', 'A20191101161543849379', 'A20191101161634755694', 'A20191101161715740121', 'A20191101161809146440']</msg>
<status status="PASS" starttime="20191101 16:19:00.084" endtime="20191101 16:19:00.084"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${Report_Print_DateTime_old}</var>
</assign>
<msg timestamp="20191101 16:19:00.084" level="INFO">${Report_Print_DateTime_old} = []</msg>
<status status="PASS" starttime="20191101 16:19:00.084" endtime="20191101 16:19:00.084"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${Film_Print_DateTime_old}</var>
</assign>
<msg timestamp="20191101 16:19:00.084" level="INFO">${Film_Print_DateTime_old} = []</msg>
<status status="PASS" starttime="20191101 16:19:00.084" endtime="20191101 16:19:00.084"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191101 16:19:00.084" level="INFO">${ACCN} = A20191101161500755574</msg>
<status status="PASS" starttime="20191101 16:19:00.084" endtime="20191101 16:19:00.084"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:19:00.084" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191101161500755574", "FilmPrintStatus": 0, "FilmPrintTime": null, "HoldFlag": 1, "ImageCount": 1, "Modalities": "CT", "ExamName": "Exam20191101161500755574", "B...</msg>
<status status="PASS" starttime="20191101 16:19:00.084" endtime="20191101 16:19:00.084"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:19:00.084" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191101161500755574', 'FilmPrintStatus': 0, 'FilmPrintTime': None, 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'CT', 'ExamName': 'Exam20191101161500755574', 'B...</msg>
<status status="PASS" starttime="20191101 16:19:00.084" endtime="20191101 16:19:00.084"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrintTime}</var>
</assign>
<msg timestamp="20191101 16:19:00.131" level="INFO">${FilmPrintTime} = [None]</msg>
<status status="PASS" starttime="20191101 16:19:00.084" endtime="20191101 16:19:00.131"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrintTime}</var>
</assign>
<msg timestamp="20191101 16:19:00.162" level="INFO">${ReportPrintTime} = [None]</msg>
<status status="PASS" starttime="20191101 16:19:00.131" endtime="20191101 16:19:00.162"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${FilmPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191101 16:19:00.162" endtime="20191101 16:19:00.162"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${ReportPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191101 16:19:00.162" endtime="20191101 16:19:00.162"></status>
</kw>
<status status="PASS" starttime="20191101 16:19:00.084" endtime="20191101 16:19:00.162"></status>
</kw>
<kw name="${count} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191101 16:19:00.162" level="INFO">${ACCN} = A20191101161543849379</msg>
<status status="PASS" starttime="20191101 16:19:00.162" endtime="20191101 16:19:00.162"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:19:00.178" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191101161543849379", "FilmPrintStatus": 0, "FilmPrintTime": null, "HoldFlag": 1, "ImageCount": 1, "Modalities": "CT", "ExamName": "Exam20191101161543849379", "B...</msg>
<status status="PASS" starttime="20191101 16:19:00.162" endtime="20191101 16:19:00.178"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:19:00.178" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191101161543849379', 'FilmPrintStatus': 0, 'FilmPrintTime': None, 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'CT', 'ExamName': 'Exam20191101161543849379', 'B...</msg>
<status status="PASS" starttime="20191101 16:19:00.178" endtime="20191101 16:19:00.178"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrintTime}</var>
</assign>
<msg timestamp="20191101 16:19:00.209" level="INFO">${FilmPrintTime} = [None]</msg>
<status status="PASS" starttime="20191101 16:19:00.178" endtime="20191101 16:19:00.209"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrintTime}</var>
</assign>
<msg timestamp="20191101 16:19:00.240" level="INFO">${ReportPrintTime} = [None]</msg>
<status status="PASS" starttime="20191101 16:19:00.209" endtime="20191101 16:19:00.240"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${FilmPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191101 16:19:00.240" endtime="20191101 16:19:00.240"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${ReportPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191101 16:19:00.240" endtime="20191101 16:19:00.240"></status>
</kw>
<status status="PASS" starttime="20191101 16:19:00.162" endtime="20191101 16:19:00.240"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191101 16:19:00.240" level="INFO">${ACCN} = A20191101161634755694</msg>
<status status="PASS" starttime="20191101 16:19:00.240" endtime="20191101 16:19:00.240"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:19:00.256" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191101161634755694", "FilmPrintStatus": 0, "FilmPrintTime": null, "HoldFlag": 1, "ImageCount": 1, "Modalities": "IO", "ExamName": "Exam20191101161634755694", "B...</msg>
<status status="PASS" starttime="20191101 16:19:00.240" endtime="20191101 16:19:00.256"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:19:00.256" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191101161634755694', 'FilmPrintStatus': 0, 'FilmPrintTime': None, 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'IO', 'ExamName': 'Exam20191101161634755694', 'B...</msg>
<status status="PASS" starttime="20191101 16:19:00.256" endtime="20191101 16:19:00.256"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrintTime}</var>
</assign>
<msg timestamp="20191101 16:19:00.303" level="INFO">${FilmPrintTime} = [None]</msg>
<status status="PASS" starttime="20191101 16:19:00.256" endtime="20191101 16:19:00.303"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrintTime}</var>
</assign>
<msg timestamp="20191101 16:19:00.334" level="INFO">${ReportPrintTime} = [None]</msg>
<status status="PASS" starttime="20191101 16:19:00.303" endtime="20191101 16:19:00.334"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${FilmPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191101 16:19:00.334" endtime="20191101 16:19:00.350"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${ReportPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191101 16:19:00.350" endtime="20191101 16:19:00.350"></status>
</kw>
<status status="PASS" starttime="20191101 16:19:00.240" endtime="20191101 16:19:00.350"></status>
</kw>
<kw name="${count} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191101 16:19:00.350" level="INFO">${ACCN} = A20191101161715740121</msg>
<status status="PASS" starttime="20191101 16:19:00.350" endtime="20191101 16:19:00.350"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:19:00.350" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191101161715740121", "FilmPrintStatus": 0, "FilmPrintTime": null, "HoldFlag": 1, "ImageCount": 1, "Modalities": "MG", "ExamName": "Exam20191101161715740121", "B...</msg>
<status status="PASS" starttime="20191101 16:19:00.350" endtime="20191101 16:19:00.350"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:19:00.350" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191101161715740121', 'FilmPrintStatus': 0, 'FilmPrintTime': None, 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'MG', 'ExamName': 'Exam20191101161715740121', 'B...</msg>
<status status="PASS" starttime="20191101 16:19:00.350" endtime="20191101 16:19:00.350"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrintTime}</var>
</assign>
<msg timestamp="20191101 16:19:00.381" level="INFO">${FilmPrintTime} = [None]</msg>
<status status="PASS" starttime="20191101 16:19:00.350" endtime="20191101 16:19:00.381"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrintTime}</var>
</assign>
<msg timestamp="20191101 16:19:00.428" level="INFO">${ReportPrintTime} = [None]</msg>
<status status="PASS" starttime="20191101 16:19:00.381" endtime="20191101 16:19:00.428"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${FilmPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191101 16:19:00.428" endtime="20191101 16:19:00.428"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${ReportPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191101 16:19:00.428" endtime="20191101 16:19:00.428"></status>
</kw>
<status status="PASS" starttime="20191101 16:19:00.350" endtime="20191101 16:19:00.428"></status>
</kw>
<kw name="${count} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191101 16:19:00.428" level="INFO">${ACCN} = A20191101161809146440</msg>
<status status="PASS" starttime="20191101 16:19:00.428" endtime="20191101 16:19:00.428"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:19:00.428" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191101161809146440", "FilmPrintStatus": 0, "FilmPrintTime": null, "HoldFlag": 1, "ImageCount": 1, "Modalities": "OT", "ExamName": "Exam20191101161809146440", "B...</msg>
<status status="PASS" starttime="20191101 16:19:00.428" endtime="20191101 16:19:00.428"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:19:00.428" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191101161809146440', 'FilmPrintStatus': 0, 'FilmPrintTime': None, 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'OT', 'ExamName': 'Exam20191101161809146440', 'B...</msg>
<status status="PASS" starttime="20191101 16:19:00.428" endtime="20191101 16:19:00.428"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrintTime}</var>
</assign>
<msg timestamp="20191101 16:19:00.459" level="INFO">${FilmPrintTime} = [None]</msg>
<status status="PASS" starttime="20191101 16:19:00.428" endtime="20191101 16:19:00.459"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrintTime}</var>
</assign>
<msg timestamp="20191101 16:19:00.506" level="INFO">${ReportPrintTime} = [None]</msg>
<status status="PASS" starttime="20191101 16:19:00.459" endtime="20191101 16:19:00.506"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${FilmPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191101 16:19:00.506" endtime="20191101 16:19:00.506"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${ReportPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191101 16:19:00.506" endtime="20191101 16:19:00.506"></status>
</kw>
<status status="PASS" starttime="20191101 16:19:00.428" endtime="20191101 16:19:00.506"></status>
</kw>
<status status="PASS" starttime="20191101 16:19:00.084" endtime="20191101 16:19:00.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
</arguments>
<msg timestamp="20191101 16:19:00.506" level="INFO">[None, None, None, None, None]</msg>
<status status="PASS" starttime="20191101 16:19:00.506" endtime="20191101 16:19:00.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
</arguments>
<msg timestamp="20191101 16:19:00.506" level="INFO">[None, None, None, None, None]</msg>
<status status="PASS" starttime="20191101 16:19:00.506" endtime="20191101 16:19:00.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3 \n Description: \n1. Use the API to simulate the central print operation: \ \ Print the exams created in step2 with the terminal which created in step1. \n Excepted:\n 1. The API should return the successful response. \n</arg>
</arguments>
<msg timestamp="20191101 16:19:00.506" level="INFO">Step 3 
Description: 
1. Use the API to simulate the central print operation:   Print the exams created in step2 with the terminal which created in step1. 
Excepted:
1. The API should return the successful response. 
</msg>
<status status="PASS" starttime="20191101 16:19:00.506" endtime="20191101 16:19:00.506"></status>
</kw>
<kw name="Platform Login User Pwd" library="PUMA_PlatformLibrary">
<doc>platform_login_user_pwd</doc>
<arguments>
<arg>admin</arg>
<arg>123456</arg>
</arguments>
<assign>
<var>${login_result}</var>
</assign>
<msg timestamp="20191101 16:19:00.506" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:19:05.662" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/ HTTP/1.1" 200 8522</msg>
<msg timestamp="20191101 16:19:05.662" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:19:06.162" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/Platform//account/login HTTP/1.1" 200 78</msg>
<msg timestamp="20191101 16:19:06.162" level="INFO">Platform.platform_login_user_pwd: The user login in successfully. [admin, 123456]</msg>
<msg timestamp="20191101 16:19:06.162" level="INFO">${login_result} = True</msg>
<status status="PASS" starttime="20191101 16:19:00.506" endtime="20191101 16:19:06.162"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${login_result}</arg>
</arguments>
<status status="PASS" starttime="20191101 16:19:06.162" endtime="20191101 16:19:06.162"></status>
</kw>
<kw name="Platform Worklist Central Print" library="PUMA_PlatformLibrary">
<doc>Platform_worklist_central_print</doc>
<arguments>
<arg>Customer_Terminal01</arg>
<arg>admin</arg>
<arg>${list_Accn}</arg>
<arg>${restinstanceids}</arg>
</arguments>
<assign>
<var>${centralprint_result}</var>
</assign>
<msg timestamp="20191101 16:19:06.178" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:19:08.834" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/centralPrint HTTP/1.1" 200 671</msg>
<msg timestamp="20191101 16:19:08.834" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:19:08.865" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printEstimateTime/ HTTP/1.1" 200 3</msg>
<msg timestamp="20191101 16:19:13.865" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:19:13.865" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:19:13.881" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:19:13.928" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191101 16:19:18.928" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:19:18.928" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:19:18.928" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:19:18.943" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191101 16:19:23.943" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:19:23.975" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:19:23.975" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:19:23.990" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191101 16:19:28.990" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:19:28.990" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:19:28.990" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:19:29.006" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191101 16:19:34.006" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:19:34.006" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:19:34.006" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:19:34.022" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191101 16:19:39.022" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:19:39.022" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:19:39.022" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:19:39.037" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191101 16:19:44.037" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:19:44.037" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:19:44.037" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:19:44.053" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191101 16:19:49.053" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:19:49.053" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:19:49.053" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:19:49.068" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191101 16:19:54.068" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:19:54.068" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:19:54.068" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:19:54.084" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191101 16:19:59.084" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:19:59.084" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:19:59.084" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:19:59.100" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191101 16:20:04.100" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:20:04.100" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:20:04.115" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:20:04.115" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191101 16:20:09.115" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:20:09.115" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:20:09.115" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:20:09.131" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191101 16:20:14.131" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:20:14.131" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:20:14.131" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:20:14.147" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191101 16:20:19.147" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:20:19.147" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:20:19.147" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:20:19.162" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191101 16:20:24.162" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:20:24.162" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:20:24.162" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:20:24.193" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191101 16:20:29.193" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:20:29.193" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:20:29.193" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:20:29.209" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:20:34.209" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:20:34.209" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:20:34.225" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:20:34.225" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:20:39.225" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:20:39.225" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:20:39.225" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:20:39.240" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:20:44.240" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:20:44.240" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:20:44.240" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:20:44.256" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:20:49.256" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:20:49.256" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:20:49.256" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:20:49.272" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:20:54.272" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:20:54.272" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:20:54.272" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:20:54.287" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:20:59.287" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:20:59.287" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:20:59.287" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:20:59.303" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:21:04.303" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:21:04.319" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:21:04.319" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:21:04.319" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:21:09.319" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:21:09.319" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:21:09.334" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:21:09.334" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:21:14.334" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:21:14.334" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:21:14.334" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:21:14.350" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:21:19.350" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:21:19.350" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:21:19.350" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:21:19.365" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:21:24.365" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:21:24.365" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:21:24.365" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:21:24.381" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:21:29.381" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:21:29.381" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:21:29.381" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:21:29.397" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:21:34.397" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:21:34.397" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:21:34.397" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:21:34.412" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:21:39.412" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:21:39.412" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:21:39.412" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:21:39.428" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:21:44.428" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:21:44.428" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:21:44.428" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:21:44.444" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:21:49.444" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:21:49.444" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:21:49.444" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:21:49.459" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:21:54.459" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:21:54.459" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:21:54.459" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:21:54.475" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:21:59.475" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:21:59.475" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:21:59.475" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:21:59.490" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:22:04.490" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:22:04.490" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:22:04.506" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:22:04.506" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:22:09.506" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:22:09.506" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:22:09.506" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:22:09.522" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:22:14.522" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:22:14.522" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:22:14.522" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:22:14.584" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:22:19.584" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:22:19.584" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:22:19.584" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:22:19.602" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:22:24.616" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:22:24.616" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:22:24.616" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:22:24.631" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:22:29.631" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:22:29.631" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:22:29.631" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:22:29.647" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:22:34.647" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:22:34.647" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:22:34.662" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:22:34.662" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:22:39.662" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:22:39.662" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:22:39.662" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:22:39.678" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:22:44.678" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:22:44.678" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:22:44.678" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:22:44.694" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:22:49.694" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:22:49.694" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:22:49.694" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:22:49.709" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:22:54.709" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:22:54.709" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:22:54.709" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:22:54.725" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:22:59.725" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:22:59.725" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:22:59.725" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:22:59.741" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:23:04.741" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:23:04.741" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:23:04.756" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:23:04.756" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:23:09.756" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:23:09.756" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:23:09.756" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:23:09.772" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:23:14.772" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:23:14.772" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:23:14.772" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:23:14.787" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:23:19.787" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:23:19.787" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:23:19.787" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:23:19.803" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:23:24.803" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:23:24.803" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:23:24.803" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:23:24.819" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:23:29.819" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:23:29.819" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:23:29.819" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:23:29.834" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:23:34.834" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:23:34.834" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:23:34.850" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:23:34.866" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:23:39.866" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:23:39.866" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:23:39.866" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:23:39.881" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:23:44.897" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:23:44.897" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:23:44.897" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:23:44.912" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 57</msg>
<msg timestamp="20191101 16:23:49.913" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:23:49.913" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:23:49.913" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:23:49.928" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191101 16:23:49.928" level="INFO">Platform.Platform_worklist_central_print_get_tasks: All exams can central print.
350
105
Platform.Platform_worklist_central_print: Print successfully:
{'printedTime': 350, 'isFinishPrint': True, 'failedTasks': 0}</msg>
<msg timestamp="20191101 16:23:49.928" level="INFO">${centralprint_result} = (True, [{'returnValue': 0, 'patientName': 'CN20191101161500755574', 'printTaskID': '2083', 'warningCode': 0, 'warningDescription': '', 'extensions': ''}, {'returnValue': 0, 'patientName': 'CN201911011...</msg>
<status status="PASS" starttime="20191101 16:19:06.162" endtime="20191101 16:23:49.928"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${centralprint_result}[0] == True</arg>
</arguments>
<status status="PASS" starttime="20191101 16:23:49.928" endtime="20191101 16:23:49.928"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${centralprint_result}[1]</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${taksinfo}</var>
</assign>
<msg timestamp="20191101 16:23:49.928" level="INFO">${taksinfo} = {'returnValue': 0, 'patientName': 'CN20191101161500755574', 'printTaskID': '2083', 'warningCode': 0, 'warningDescription': '', 'extensions': ''}</msg>
<status status="PASS" starttime="20191101 16:23:49.928" endtime="20191101 16:23:49.928"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${taksinfo}</arg>
<arg>printTaskID</arg>
</arguments>
<assign>
<var>${printtask_sn}</var>
</assign>
<msg timestamp="20191101 16:23:49.928" level="INFO">${printtask_sn} = 2083</msg>
<status status="PASS" starttime="20191101 16:23:49.928" endtime="20191101 16:23:49.928"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Printtask By Sn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with SN from table wggc.dbp.afp_printtask in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${printtask_sn}</arg>
</arguments>
<assign>
<var>${PrintTask_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:23:49.928" level="INFO">${PrintTask_DB_Value} = {"Result": true, "SN": 2083, "PatientID": "P20191101161500755574", "TerminalID": "Customer_Terminal01", "Status": 4, "ImageCount": 1, "ReportCount": 1, "EstimateTime": 63, "ErrorCode": 0, "ErrorDesc":...</msg>
<status status="PASS" starttime="20191101 16:23:49.928" endtime="20191101 16:23:49.928"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintTask_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:23:49.928" level="INFO">${json} = {'Result': True, 'SN': 2083, 'PatientID': 'P20191101161500755574', 'TerminalID': 'Customer_Terminal01', 'Status': 4, 'ImageCount': 1, 'ReportCount': 1, 'EstimateTime': 63, 'ErrorCode': 0, 'ErrorDesc':...</msg>
<status status="PASS" starttime="20191101 16:23:49.928" endtime="20191101 16:23:49.928"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Printtask_status}</var>
</assign>
<msg timestamp="20191101 16:23:49.975" level="INFO">${Printtask_status} = [4]</msg>
<status status="PASS" starttime="20191101 16:23:49.928" endtime="20191101 16:23:49.975"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191101 16:23:50.006" level="INFO">${Patient_id} = ['P20191101161500755574']</msg>
<status status="PASS" starttime="20191101 16:23:49.975" endtime="20191101 16:23:50.006"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Printtask_status}[0]</arg>
<arg>4</arg>
<arg>The Print task status in DB is 4</arg>
</arguments>
<msg timestamp="20191101 16:23:50.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 16:23:50.006" endtime="20191101 16:23:50.006"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:49.928" endtime="20191101 16:23:50.006"></status>
</kw>
<kw name="${count} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${centralprint_result}[1]</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${taksinfo}</var>
</assign>
<msg timestamp="20191101 16:23:50.006" level="INFO">${taksinfo} = {'returnValue': 0, 'patientName': 'CN20191101161543849379', 'printTaskID': '2084', 'warningCode': 0, 'warningDescription': '', 'extensions': ''}</msg>
<status status="PASS" starttime="20191101 16:23:50.006" endtime="20191101 16:23:50.006"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${taksinfo}</arg>
<arg>printTaskID</arg>
</arguments>
<assign>
<var>${printtask_sn}</var>
</assign>
<msg timestamp="20191101 16:23:50.006" level="INFO">${printtask_sn} = 2084</msg>
<status status="PASS" starttime="20191101 16:23:50.006" endtime="20191101 16:23:50.006"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Printtask By Sn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with SN from table wggc.dbp.afp_printtask in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${printtask_sn}</arg>
</arguments>
<assign>
<var>${PrintTask_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:23:50.006" level="INFO">${PrintTask_DB_Value} = {"Result": true, "SN": 2084, "PatientID": "P20191101161543849379", "TerminalID": "Customer_Terminal01", "Status": 4, "ImageCount": 1, "ReportCount": 1, "EstimateTime": 63, "ErrorCode": 0, "ErrorDesc":...</msg>
<status status="PASS" starttime="20191101 16:23:50.006" endtime="20191101 16:23:50.006"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintTask_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:23:50.006" level="INFO">${json} = {'Result': True, 'SN': 2084, 'PatientID': 'P20191101161543849379', 'TerminalID': 'Customer_Terminal01', 'Status': 4, 'ImageCount': 1, 'ReportCount': 1, 'EstimateTime': 63, 'ErrorCode': 0, 'ErrorDesc':...</msg>
<status status="PASS" starttime="20191101 16:23:50.006" endtime="20191101 16:23:50.006"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Printtask_status}</var>
</assign>
<msg timestamp="20191101 16:23:50.053" level="INFO">${Printtask_status} = [4]</msg>
<status status="PASS" starttime="20191101 16:23:50.006" endtime="20191101 16:23:50.053"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191101 16:23:50.100" level="INFO">${Patient_id} = ['P20191101161543849379']</msg>
<status status="PASS" starttime="20191101 16:23:50.053" endtime="20191101 16:23:50.100"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Printtask_status}[0]</arg>
<arg>4</arg>
<arg>The Print task status in DB is 4</arg>
</arguments>
<msg timestamp="20191101 16:23:50.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 16:23:50.100" endtime="20191101 16:23:50.100"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:50.006" endtime="20191101 16:23:50.100"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${centralprint_result}[1]</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${taksinfo}</var>
</assign>
<msg timestamp="20191101 16:23:50.100" level="INFO">${taksinfo} = {'returnValue': 0, 'patientName': 'CN20191101161634755694', 'printTaskID': '2085', 'warningCode': 0, 'warningDescription': '', 'extensions': ''}</msg>
<status status="PASS" starttime="20191101 16:23:50.100" endtime="20191101 16:23:50.100"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${taksinfo}</arg>
<arg>printTaskID</arg>
</arguments>
<assign>
<var>${printtask_sn}</var>
</assign>
<msg timestamp="20191101 16:23:50.100" level="INFO">${printtask_sn} = 2085</msg>
<status status="PASS" starttime="20191101 16:23:50.100" endtime="20191101 16:23:50.100"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Printtask By Sn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with SN from table wggc.dbp.afp_printtask in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${printtask_sn}</arg>
</arguments>
<assign>
<var>${PrintTask_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:23:50.100" level="INFO">${PrintTask_DB_Value} = {"Result": true, "SN": 2085, "PatientID": "P20191101161634755694", "TerminalID": "Customer_Terminal01", "Status": 4, "ImageCount": 1, "ReportCount": 1, "EstimateTime": 63, "ErrorCode": 0, "ErrorDesc":...</msg>
<status status="PASS" starttime="20191101 16:23:50.100" endtime="20191101 16:23:50.100"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintTask_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:23:50.100" level="INFO">${json} = {'Result': True, 'SN': 2085, 'PatientID': 'P20191101161634755694', 'TerminalID': 'Customer_Terminal01', 'Status': 4, 'ImageCount': 1, 'ReportCount': 1, 'EstimateTime': 63, 'ErrorCode': 0, 'ErrorDesc':...</msg>
<status status="PASS" starttime="20191101 16:23:50.100" endtime="20191101 16:23:50.100"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Printtask_status}</var>
</assign>
<msg timestamp="20191101 16:23:50.147" level="INFO">${Printtask_status} = [4]</msg>
<status status="PASS" starttime="20191101 16:23:50.100" endtime="20191101 16:23:50.147"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191101 16:23:50.178" level="INFO">${Patient_id} = ['P20191101161634755694']</msg>
<status status="PASS" starttime="20191101 16:23:50.147" endtime="20191101 16:23:50.178"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Printtask_status}[0]</arg>
<arg>4</arg>
<arg>The Print task status in DB is 4</arg>
</arguments>
<msg timestamp="20191101 16:23:50.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 16:23:50.178" endtime="20191101 16:23:50.178"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:50.100" endtime="20191101 16:23:50.178"></status>
</kw>
<kw name="${count} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${centralprint_result}[1]</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${taksinfo}</var>
</assign>
<msg timestamp="20191101 16:23:50.178" level="INFO">${taksinfo} = {'returnValue': 0, 'patientName': 'CN20191101161715740121', 'printTaskID': '2086', 'warningCode': 0, 'warningDescription': '', 'extensions': ''}</msg>
<status status="PASS" starttime="20191101 16:23:50.178" endtime="20191101 16:23:50.178"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${taksinfo}</arg>
<arg>printTaskID</arg>
</arguments>
<assign>
<var>${printtask_sn}</var>
</assign>
<msg timestamp="20191101 16:23:50.178" level="INFO">${printtask_sn} = 2086</msg>
<status status="PASS" starttime="20191101 16:23:50.178" endtime="20191101 16:23:50.178"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Printtask By Sn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with SN from table wggc.dbp.afp_printtask in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${printtask_sn}</arg>
</arguments>
<assign>
<var>${PrintTask_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:23:50.194" level="INFO">${PrintTask_DB_Value} = {"Result": true, "SN": 2086, "PatientID": "P20191101161715740121", "TerminalID": "Customer_Terminal01", "Status": 4, "ImageCount": 1, "ReportCount": 1, "EstimateTime": 63, "ErrorCode": 0, "ErrorDesc":...</msg>
<status status="PASS" starttime="20191101 16:23:50.178" endtime="20191101 16:23:50.194"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintTask_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:23:50.194" level="INFO">${json} = {'Result': True, 'SN': 2086, 'PatientID': 'P20191101161715740121', 'TerminalID': 'Customer_Terminal01', 'Status': 4, 'ImageCount': 1, 'ReportCount': 1, 'EstimateTime': 63, 'ErrorCode': 0, 'ErrorDesc':...</msg>
<status status="PASS" starttime="20191101 16:23:50.194" endtime="20191101 16:23:50.194"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Printtask_status}</var>
</assign>
<msg timestamp="20191101 16:23:50.225" level="INFO">${Printtask_status} = [4]</msg>
<status status="PASS" starttime="20191101 16:23:50.194" endtime="20191101 16:23:50.225"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191101 16:23:50.256" level="INFO">${Patient_id} = ['P20191101161715740121']</msg>
<status status="PASS" starttime="20191101 16:23:50.225" endtime="20191101 16:23:50.256"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Printtask_status}[0]</arg>
<arg>4</arg>
<arg>The Print task status in DB is 4</arg>
</arguments>
<msg timestamp="20191101 16:23:50.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 16:23:50.256" endtime="20191101 16:23:50.256"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:50.178" endtime="20191101 16:23:50.256"></status>
</kw>
<kw name="${count} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${centralprint_result}[1]</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${taksinfo}</var>
</assign>
<msg timestamp="20191101 16:23:50.256" level="INFO">${taksinfo} = {'returnValue': 0, 'patientName': 'CN20191101161809146440', 'printTaskID': '2087', 'warningCode': 0, 'warningDescription': '', 'extensions': ''}</msg>
<status status="PASS" starttime="20191101 16:23:50.256" endtime="20191101 16:23:50.256"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${taksinfo}</arg>
<arg>printTaskID</arg>
</arguments>
<assign>
<var>${printtask_sn}</var>
</assign>
<msg timestamp="20191101 16:23:50.256" level="INFO">${printtask_sn} = 2087</msg>
<status status="PASS" starttime="20191101 16:23:50.256" endtime="20191101 16:23:50.256"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Printtask By Sn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with SN from table wggc.dbp.afp_printtask in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${printtask_sn}</arg>
</arguments>
<assign>
<var>${PrintTask_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:23:50.272" level="INFO">${PrintTask_DB_Value} = {"Result": true, "SN": 2087, "PatientID": "P20191101161809146440", "TerminalID": "Customer_Terminal01", "Status": 4, "ImageCount": 1, "ReportCount": 1, "EstimateTime": 63, "ErrorCode": 0, "ErrorDesc":...</msg>
<status status="PASS" starttime="20191101 16:23:50.256" endtime="20191101 16:23:50.272"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintTask_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:23:50.272" level="INFO">${json} = {'Result': True, 'SN': 2087, 'PatientID': 'P20191101161809146440', 'TerminalID': 'Customer_Terminal01', 'Status': 4, 'ImageCount': 1, 'ReportCount': 1, 'EstimateTime': 63, 'ErrorCode': 0, 'ErrorDesc':...</msg>
<status status="PASS" starttime="20191101 16:23:50.272" endtime="20191101 16:23:50.272"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Printtask_status}</var>
</assign>
<msg timestamp="20191101 16:23:50.303" level="INFO">${Printtask_status} = [4]</msg>
<status status="PASS" starttime="20191101 16:23:50.272" endtime="20191101 16:23:50.303"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191101 16:23:50.334" level="INFO">${Patient_id} = ['P20191101161809146440']</msg>
<status status="PASS" starttime="20191101 16:23:50.303" endtime="20191101 16:23:50.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Printtask_status}[0]</arg>
<arg>4</arg>
<arg>The Print task status in DB is 4</arg>
</arguments>
<msg timestamp="20191101 16:23:50.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 16:23:50.334" endtime="20191101 16:23:50.350"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:50.256" endtime="20191101 16:23:50.350"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:49.928" endtime="20191101 16:23:50.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4 \n Description: \n 1. Check the print task status in the wggc.dbo.afp_printtask table. \n Expected: \n 1. All print tasks should be successful and status should be 4. \n</arg>
</arguments>
<msg timestamp="20191101 16:23:50.350" level="INFO">Step 4 
Description: 
1. Check the print task status in the wggc.dbo.afp_printtask table. 
Expected: 
1. All print tasks should be successful and status should be 4. 
</msg>
<status status="PASS" starttime="20191101 16:23:50.350" endtime="20191101 16:23:50.350"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191101 16:23:50.350" level="INFO">${ACCN} = A20191101161500755574</msg>
<status status="PASS" starttime="20191101 16:23:50.350" endtime="20191101 16:23:50.350"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:23:50.350" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191101161500755574", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-01 16:20:01.727000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "CT", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:50.350" endtime="20191101 16:23:50.350"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:23:50.350" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191101161500755574', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-01 16:20:01.727000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'CT', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:50.350" endtime="20191101 16:23:50.350"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintStatus</arg>
</arguments>
<assign>
<var>${Filmprint_Status}</var>
</assign>
<msg timestamp="20191101 16:23:50.381" level="INFO">${Filmprint_Status} = [1]</msg>
<status status="PASS" starttime="20191101 16:23:50.350" endtime="20191101 16:23:50.381"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191101 16:23:50.428" level="INFO">${Patient_id} = ['P20191101161500755574']</msg>
<status status="PASS" starttime="20191101 16:23:50.381" endtime="20191101 16:23:50.428"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Filmprint_Status}[0]</arg>
<arg>1</arg>
<arg>The filmp rint status in DB is 1</arg>
</arguments>
<msg timestamp="20191101 16:23:50.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 16:23:50.428" endtime="20191101 16:23:50.428"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:50.350" endtime="20191101 16:23:50.428"></status>
</kw>
<kw name="${count} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191101 16:23:50.428" level="INFO">${ACCN} = A20191101161543849379</msg>
<status status="PASS" starttime="20191101 16:23:50.428" endtime="20191101 16:23:50.428"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:23:50.428" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191101161543849379", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-01 16:20:57.937000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "CT", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:50.428" endtime="20191101 16:23:50.428"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:23:50.428" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191101161543849379', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-01 16:20:57.937000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'CT', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:50.428" endtime="20191101 16:23:50.428"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintStatus</arg>
</arguments>
<assign>
<var>${Filmprint_Status}</var>
</assign>
<msg timestamp="20191101 16:23:50.459" level="INFO">${Filmprint_Status} = [1]</msg>
<status status="PASS" starttime="20191101 16:23:50.428" endtime="20191101 16:23:50.459"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191101 16:23:50.506" level="INFO">${Patient_id} = ['P20191101161543849379']</msg>
<status status="PASS" starttime="20191101 16:23:50.459" endtime="20191101 16:23:50.506"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Filmprint_Status}[0]</arg>
<arg>1</arg>
<arg>The filmp rint status in DB is 1</arg>
</arguments>
<msg timestamp="20191101 16:23:50.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 16:23:50.506" endtime="20191101 16:23:50.506"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:50.428" endtime="20191101 16:23:50.506"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191101 16:23:50.506" level="INFO">${ACCN} = A20191101161634755694</msg>
<status status="PASS" starttime="20191101 16:23:50.506" endtime="20191101 16:23:50.506"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:23:50.506" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191101161634755694", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-01 16:21:53.630000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "IO", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:50.506" endtime="20191101 16:23:50.506"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:23:50.506" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191101161634755694', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-01 16:21:53.630000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'IO', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:50.506" endtime="20191101 16:23:50.506"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintStatus</arg>
</arguments>
<assign>
<var>${Filmprint_Status}</var>
</assign>
<msg timestamp="20191101 16:23:50.538" level="INFO">${Filmprint_Status} = [1]</msg>
<status status="PASS" starttime="20191101 16:23:50.506" endtime="20191101 16:23:50.538"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191101 16:23:50.584" level="INFO">${Patient_id} = ['P20191101161634755694']</msg>
<status status="PASS" starttime="20191101 16:23:50.538" endtime="20191101 16:23:50.584"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Filmprint_Status}[0]</arg>
<arg>1</arg>
<arg>The filmp rint status in DB is 1</arg>
</arguments>
<msg timestamp="20191101 16:23:50.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 16:23:50.584" endtime="20191101 16:23:50.584"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:50.506" endtime="20191101 16:23:50.584"></status>
</kw>
<kw name="${count} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191101 16:23:50.584" level="INFO">${ACCN} = A20191101161715740121</msg>
<status status="PASS" starttime="20191101 16:23:50.584" endtime="20191101 16:23:50.584"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:23:50.584" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191101161715740121", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-01 16:22:50.123000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "MG", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:50.584" endtime="20191101 16:23:50.584"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:23:50.584" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191101161715740121', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-01 16:22:50.123000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'MG', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:50.584" endtime="20191101 16:23:50.584"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintStatus</arg>
</arguments>
<assign>
<var>${Filmprint_Status}</var>
</assign>
<msg timestamp="20191101 16:23:50.616" level="INFO">${Filmprint_Status} = [1]</msg>
<status status="PASS" starttime="20191101 16:23:50.584" endtime="20191101 16:23:50.616"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191101 16:23:50.663" level="INFO">${Patient_id} = ['P20191101161715740121']</msg>
<status status="PASS" starttime="20191101 16:23:50.616" endtime="20191101 16:23:50.663"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Filmprint_Status}[0]</arg>
<arg>1</arg>
<arg>The filmp rint status in DB is 1</arg>
</arguments>
<msg timestamp="20191101 16:23:50.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 16:23:50.663" endtime="20191101 16:23:50.663"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:50.584" endtime="20191101 16:23:50.663"></status>
</kw>
<kw name="${count} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191101 16:23:50.663" level="INFO">${ACCN} = A20191101161809146440</msg>
<status status="PASS" starttime="20191101 16:23:50.663" endtime="20191101 16:23:50.663"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:23:50.663" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191101161809146440", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-01 16:23:45.817000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "OT", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:50.663" endtime="20191101 16:23:50.663"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:23:50.663" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191101161809146440', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-01 16:23:45.817000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'OT', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:50.663" endtime="20191101 16:23:50.663"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintStatus</arg>
</arguments>
<assign>
<var>${Filmprint_Status}</var>
</assign>
<msg timestamp="20191101 16:23:50.694" level="INFO">${Filmprint_Status} = [1]</msg>
<status status="PASS" starttime="20191101 16:23:50.663" endtime="20191101 16:23:50.694"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191101 16:23:50.741" level="INFO">${Patient_id} = ['P20191101161809146440']</msg>
<status status="PASS" starttime="20191101 16:23:50.694" endtime="20191101 16:23:50.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Filmprint_Status}[0]</arg>
<arg>1</arg>
<arg>The filmp rint status in DB is 1</arg>
</arguments>
<msg timestamp="20191101 16:23:50.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 16:23:50.741" endtime="20191101 16:23:50.741"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:50.663" endtime="20191101 16:23:50.741"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:50.350" endtime="20191101 16:23:50.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5 \n Description: \n 1. Check the FilmPrintStatus of these patients in WGGC.dbo.afp_ExamInfo table. \n Expected: \n 1. The status should be printed.</arg>
</arguments>
<msg timestamp="20191101 16:23:50.741" level="INFO">Step 5 
Description: 
1. Check the FilmPrintStatus of these patients in WGGC.dbo.afp_ExamInfo table. 
Expected: 
1. The status should be printed.</msg>
<status status="PASS" starttime="20191101 16:23:50.741" endtime="20191101 16:23:50.741"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191101 16:23:50.741" level="INFO">${ACCN} = A20191101161500755574</msg>
<status status="PASS" starttime="20191101 16:23:50.741" endtime="20191101 16:23:50.741"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:23:50.756" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191101161500755574", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-01 16:20:01.727000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "CT", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:50.741" endtime="20191101 16:23:50.756"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:23:50.756" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191101161500755574', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-01 16:20:01.727000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'CT', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:50.756" endtime="20191101 16:23:50.756"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintStatus</arg>
</arguments>
<assign>
<var>${ReportPrint_Status}</var>
</assign>
<msg timestamp="20191101 16:23:50.788" level="INFO">${ReportPrint_Status} = [1]</msg>
<status status="PASS" starttime="20191101 16:23:50.756" endtime="20191101 16:23:50.788"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191101 16:23:50.819" level="INFO">${Patient_id} = ['P20191101161500755574']</msg>
<status status="PASS" starttime="20191101 16:23:50.788" endtime="20191101 16:23:50.819"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${ReportPrint_Status}[0]</arg>
<arg>1</arg>
<arg>The Report print status in DB is 1</arg>
</arguments>
<msg timestamp="20191101 16:23:50.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 16:23:50.819" endtime="20191101 16:23:50.834"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:50.741" endtime="20191101 16:23:50.834"></status>
</kw>
<kw name="${count} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191101 16:23:50.834" level="INFO">${ACCN} = A20191101161543849379</msg>
<status status="PASS" starttime="20191101 16:23:50.834" endtime="20191101 16:23:50.834"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:23:50.834" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191101161543849379", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-01 16:20:57.937000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "CT", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:50.834" endtime="20191101 16:23:50.834"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:23:50.834" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191101161543849379', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-01 16:20:57.937000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'CT', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:50.834" endtime="20191101 16:23:50.834"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintStatus</arg>
</arguments>
<assign>
<var>${ReportPrint_Status}</var>
</assign>
<msg timestamp="20191101 16:23:50.881" level="INFO">${ReportPrint_Status} = [1]</msg>
<status status="PASS" starttime="20191101 16:23:50.834" endtime="20191101 16:23:50.881"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191101 16:23:50.928" level="INFO">${Patient_id} = ['P20191101161543849379']</msg>
<status status="PASS" starttime="20191101 16:23:50.881" endtime="20191101 16:23:50.928"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${ReportPrint_Status}[0]</arg>
<arg>1</arg>
<arg>The Report print status in DB is 1</arg>
</arguments>
<msg timestamp="20191101 16:23:50.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 16:23:50.928" endtime="20191101 16:23:50.928"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:50.834" endtime="20191101 16:23:50.928"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191101 16:23:50.928" level="INFO">${ACCN} = A20191101161634755694</msg>
<status status="PASS" starttime="20191101 16:23:50.928" endtime="20191101 16:23:50.928"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:23:50.944" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191101161634755694", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-01 16:21:53.630000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "IO", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:50.928" endtime="20191101 16:23:50.944"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:23:50.944" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191101161634755694', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-01 16:21:53.630000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'IO', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:50.944" endtime="20191101 16:23:50.944"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintStatus</arg>
</arguments>
<assign>
<var>${ReportPrint_Status}</var>
</assign>
<msg timestamp="20191101 16:23:50.975" level="INFO">${ReportPrint_Status} = [1]</msg>
<status status="PASS" starttime="20191101 16:23:50.944" endtime="20191101 16:23:50.975"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191101 16:23:51.022" level="INFO">${Patient_id} = ['P20191101161634755694']</msg>
<status status="PASS" starttime="20191101 16:23:50.975" endtime="20191101 16:23:51.022"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${ReportPrint_Status}[0]</arg>
<arg>1</arg>
<arg>The Report print status in DB is 1</arg>
</arguments>
<msg timestamp="20191101 16:23:51.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 16:23:51.022" endtime="20191101 16:23:51.022"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:50.928" endtime="20191101 16:23:51.022"></status>
</kw>
<kw name="${count} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191101 16:23:51.022" level="INFO">${ACCN} = A20191101161715740121</msg>
<status status="PASS" starttime="20191101 16:23:51.022" endtime="20191101 16:23:51.022"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:23:51.022" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191101161715740121", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-01 16:22:50.123000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "MG", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:51.022" endtime="20191101 16:23:51.022"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:23:51.022" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191101161715740121', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-01 16:22:50.123000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'MG', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:51.022" endtime="20191101 16:23:51.022"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintStatus</arg>
</arguments>
<assign>
<var>${ReportPrint_Status}</var>
</assign>
<msg timestamp="20191101 16:23:51.069" level="INFO">${ReportPrint_Status} = [1]</msg>
<status status="PASS" starttime="20191101 16:23:51.022" endtime="20191101 16:23:51.069"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191101 16:23:51.147" level="INFO">${Patient_id} = ['P20191101161715740121']</msg>
<status status="PASS" starttime="20191101 16:23:51.069" endtime="20191101 16:23:51.147"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${ReportPrint_Status}[0]</arg>
<arg>1</arg>
<arg>The Report print status in DB is 1</arg>
</arguments>
<msg timestamp="20191101 16:23:51.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 16:23:51.147" endtime="20191101 16:23:51.147"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:51.022" endtime="20191101 16:23:51.147"></status>
</kw>
<kw name="${count} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191101 16:23:51.147" level="INFO">${ACCN} = A20191101161809146440</msg>
<status status="PASS" starttime="20191101 16:23:51.147" endtime="20191101 16:23:51.147"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:23:51.147" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191101161809146440", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-01 16:23:45.817000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "OT", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:51.147" endtime="20191101 16:23:51.147"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:23:51.147" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191101161809146440', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-01 16:23:45.817000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'OT', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:51.147" endtime="20191101 16:23:51.147"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintStatus</arg>
</arguments>
<assign>
<var>${ReportPrint_Status}</var>
</assign>
<msg timestamp="20191101 16:23:51.178" level="INFO">${ReportPrint_Status} = [1]</msg>
<status status="PASS" starttime="20191101 16:23:51.147" endtime="20191101 16:23:51.178"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191101 16:23:51.225" level="INFO">${Patient_id} = ['P20191101161809146440']</msg>
<status status="PASS" starttime="20191101 16:23:51.178" endtime="20191101 16:23:51.225"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${ReportPrint_Status}[0]</arg>
<arg>1</arg>
<arg>The Report print status in DB is 1</arg>
</arguments>
<msg timestamp="20191101 16:23:51.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 16:23:51.225" endtime="20191101 16:23:51.225"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:51.147" endtime="20191101 16:23:51.225"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:50.741" endtime="20191101 16:23:51.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6 \n Description: \n 1. Check the ReportPrintStatus of these patients \ in WGGC.dbo.afp_ExamInfo table. \n Expected: \n The status should be printed. \n</arg>
</arguments>
<msg timestamp="20191101 16:23:51.225" level="INFO">Step 6 
Description: 
1. Check the ReportPrintStatus of these patients  in WGGC.dbo.afp_ExamInfo table. 
Expected: 
The status should be printed. 
</msg>
<status status="PASS" starttime="20191101 16:23:51.225" endtime="20191101 16:23:51.225"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Report_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191101 16:23:51.225" level="INFO">${Report_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191101 16:23:51.225" endtime="20191101 16:23:51.225"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191101 16:23:51.225" level="INFO">${ACCN} = A20191101161500755574</msg>
<status status="PASS" starttime="20191101 16:23:51.225" endtime="20191101 16:23:51.225"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:23:51.256" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191101161500755574", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-01 16:20:01.727000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "CT", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:51.225" endtime="20191101 16:23:51.256"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:23:51.256" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191101161500755574', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-01 16:20:01.727000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'CT', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:51.256" endtime="20191101 16:23:51.256"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrint_DateTime}</var>
</assign>
<msg timestamp="20191101 16:23:51.288" level="INFO">${ReportPrint_DateTime} = ['2019-11-01 16:20:01.737000']</msg>
<status status="PASS" starttime="20191101 16:23:51.256" endtime="20191101 16:23:51.288"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Report_Print_DateTime_orignal}</arg>
<arg>${ReportPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191101 16:23:51.288" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-11-01 16:20:01.737000]</msg>
<msg timestamp="20191101 16:23:51.288" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191101 16:23:51.288" endtime="20191101 16:23:51.288"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The report print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191101 16:23:51.288" endtime="20191101 16:23:51.288"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:51.225" endtime="20191101 16:23:51.303"></status>
</kw>
<kw name="${count} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Report_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191101 16:23:51.303" level="INFO">${Report_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191101 16:23:51.303" endtime="20191101 16:23:51.303"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191101 16:23:51.303" level="INFO">${ACCN} = A20191101161543849379</msg>
<status status="PASS" starttime="20191101 16:23:51.303" endtime="20191101 16:23:51.303"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:23:51.303" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191101161543849379", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-01 16:20:57.937000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "CT", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:51.303" endtime="20191101 16:23:51.303"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:23:51.303" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191101161543849379', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-01 16:20:57.937000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'CT', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:51.303" endtime="20191101 16:23:51.303"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrint_DateTime}</var>
</assign>
<msg timestamp="20191101 16:23:51.334" level="INFO">${ReportPrint_DateTime} = ['2019-11-01 16:20:57.947000']</msg>
<status status="PASS" starttime="20191101 16:23:51.303" endtime="20191101 16:23:51.334"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Report_Print_DateTime_orignal}</arg>
<arg>${ReportPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191101 16:23:51.334" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-11-01 16:20:57.947000]</msg>
<msg timestamp="20191101 16:23:51.334" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191101 16:23:51.334" endtime="20191101 16:23:51.334"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The report print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191101 16:23:51.334" endtime="20191101 16:23:51.334"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:51.303" endtime="20191101 16:23:51.334"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Report_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191101 16:23:51.334" level="INFO">${Report_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191101 16:23:51.334" endtime="20191101 16:23:51.334"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191101 16:23:51.334" level="INFO">${ACCN} = A20191101161634755694</msg>
<status status="PASS" starttime="20191101 16:23:51.334" endtime="20191101 16:23:51.334"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:23:51.334" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191101161634755694", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-01 16:21:53.630000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "IO", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:51.334" endtime="20191101 16:23:51.334"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:23:51.334" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191101161634755694', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-01 16:21:53.630000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'IO', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:51.334" endtime="20191101 16:23:51.334"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrint_DateTime}</var>
</assign>
<msg timestamp="20191101 16:23:51.381" level="INFO">${ReportPrint_DateTime} = ['2019-11-01 16:21:53.637000']</msg>
<status status="PASS" starttime="20191101 16:23:51.334" endtime="20191101 16:23:51.381"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Report_Print_DateTime_orignal}</arg>
<arg>${ReportPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191101 16:23:51.381" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-11-01 16:21:53.637000]</msg>
<msg timestamp="20191101 16:23:51.381" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191101 16:23:51.381" endtime="20191101 16:23:51.381"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The report print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191101 16:23:51.381" endtime="20191101 16:23:51.381"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:51.334" endtime="20191101 16:23:51.381"></status>
</kw>
<kw name="${count} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Report_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191101 16:23:51.381" level="INFO">${Report_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191101 16:23:51.381" endtime="20191101 16:23:51.381"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191101 16:23:51.381" level="INFO">${ACCN} = A20191101161715740121</msg>
<status status="PASS" starttime="20191101 16:23:51.381" endtime="20191101 16:23:51.381"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:23:51.397" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191101161715740121", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-01 16:22:50.123000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "MG", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:51.381" endtime="20191101 16:23:51.397"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:23:51.397" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191101161715740121', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-01 16:22:50.123000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'MG', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:51.397" endtime="20191101 16:23:51.397"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrint_DateTime}</var>
</assign>
<msg timestamp="20191101 16:23:51.444" level="INFO">${ReportPrint_DateTime} = ['2019-11-01 16:22:50.130000']</msg>
<status status="PASS" starttime="20191101 16:23:51.397" endtime="20191101 16:23:51.444"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Report_Print_DateTime_orignal}</arg>
<arg>${ReportPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191101 16:23:51.444" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-11-01 16:22:50.130000]</msg>
<msg timestamp="20191101 16:23:51.444" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191101 16:23:51.444" endtime="20191101 16:23:51.444"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The report print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191101 16:23:51.444" endtime="20191101 16:23:51.444"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:51.381" endtime="20191101 16:23:51.444"></status>
</kw>
<kw name="${count} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Report_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191101 16:23:51.444" level="INFO">${Report_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191101 16:23:51.444" endtime="20191101 16:23:51.444"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191101 16:23:51.444" level="INFO">${ACCN} = A20191101161809146440</msg>
<status status="PASS" starttime="20191101 16:23:51.444" endtime="20191101 16:23:51.444"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:23:51.444" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191101161809146440", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-01 16:23:45.817000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "OT", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:51.444" endtime="20191101 16:23:51.444"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:23:51.444" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191101161809146440', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-01 16:23:45.817000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'OT', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:51.444" endtime="20191101 16:23:51.444"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrint_DateTime}</var>
</assign>
<msg timestamp="20191101 16:23:51.491" level="INFO">${ReportPrint_DateTime} = ['2019-11-01 16:23:45.823000']</msg>
<status status="PASS" starttime="20191101 16:23:51.444" endtime="20191101 16:23:51.491"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Report_Print_DateTime_orignal}</arg>
<arg>${ReportPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191101 16:23:51.506" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-11-01 16:23:45.823000]</msg>
<msg timestamp="20191101 16:23:51.506" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191101 16:23:51.506" endtime="20191101 16:23:51.506"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The report print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191101 16:23:51.506" endtime="20191101 16:23:51.506"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:51.444" endtime="20191101 16:23:51.506"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:51.225" endtime="20191101 16:23:51.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 7 \n Description: \n 1. Check the report print date and time in the exam table of patients. \n Expected: \n 1. The values should be updated. \ \n</arg>
</arguments>
<msg timestamp="20191101 16:23:51.506" level="INFO">Step 7 
Description: 
1. Check the report print date and time in the exam table of patients. 
Expected: 
1. The values should be updated.  
</msg>
<status status="PASS" starttime="20191101 16:23:51.506" endtime="20191101 16:23:51.506"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Film_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191101 16:23:51.506" level="INFO">${Film_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191101 16:23:51.506" endtime="20191101 16:23:51.506"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191101 16:23:51.506" level="INFO">${ACCN} = A20191101161500755574</msg>
<status status="PASS" starttime="20191101 16:23:51.506" endtime="20191101 16:23:51.506"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:23:51.506" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191101161500755574", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-01 16:20:01.727000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "CT", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:51.506" endtime="20191101 16:23:51.506"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:23:51.506" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191101161500755574', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-01 16:20:01.727000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'CT', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:51.506" endtime="20191101 16:23:51.506"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrint_DateTime}</var>
</assign>
<msg timestamp="20191101 16:23:51.538" level="INFO">${FilmPrint_DateTime} = ['2019-11-01 16:20:01.727000']</msg>
<status status="PASS" starttime="20191101 16:23:51.506" endtime="20191101 16:23:51.538"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Film_Print_DateTime_orignal}</arg>
<arg>${FilmPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191101 16:23:51.538" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-11-01 16:20:01.727000]</msg>
<msg timestamp="20191101 16:23:51.538" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191101 16:23:51.538" endtime="20191101 16:23:51.538"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The film print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191101 16:23:51.538" endtime="20191101 16:23:51.538"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:51.506" endtime="20191101 16:23:51.538"></status>
</kw>
<kw name="${count} = 1" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Film_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191101 16:23:51.538" level="INFO">${Film_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191101 16:23:51.538" endtime="20191101 16:23:51.538"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191101 16:23:51.538" level="INFO">${ACCN} = A20191101161543849379</msg>
<status status="PASS" starttime="20191101 16:23:51.538" endtime="20191101 16:23:51.538"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:23:51.600" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191101161543849379", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-01 16:20:57.937000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "CT", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:51.538" endtime="20191101 16:23:51.600"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:23:51.600" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191101161543849379', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-01 16:20:57.937000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'CT', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:51.600" endtime="20191101 16:23:51.600"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrint_DateTime}</var>
</assign>
<msg timestamp="20191101 16:23:51.631" level="INFO">${FilmPrint_DateTime} = ['2019-11-01 16:20:57.937000']</msg>
<status status="PASS" starttime="20191101 16:23:51.600" endtime="20191101 16:23:51.631"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Film_Print_DateTime_orignal}</arg>
<arg>${FilmPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191101 16:23:51.631" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-11-01 16:20:57.937000]</msg>
<msg timestamp="20191101 16:23:51.631" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191101 16:23:51.631" endtime="20191101 16:23:51.631"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The film print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191101 16:23:51.631" endtime="20191101 16:23:51.631"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:51.538" endtime="20191101 16:23:51.631"></status>
</kw>
<kw name="${count} = 2" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Film_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191101 16:23:51.631" level="INFO">${Film_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191101 16:23:51.631" endtime="20191101 16:23:51.631"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191101 16:23:51.631" level="INFO">${ACCN} = A20191101161634755694</msg>
<status status="PASS" starttime="20191101 16:23:51.631" endtime="20191101 16:23:51.631"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:23:51.631" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191101161634755694", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-01 16:21:53.630000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "IO", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:51.631" endtime="20191101 16:23:51.631"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:23:51.631" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191101161634755694', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-01 16:21:53.630000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'IO', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:51.631" endtime="20191101 16:23:51.631"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrint_DateTime}</var>
</assign>
<msg timestamp="20191101 16:23:51.681" level="INFO">${FilmPrint_DateTime} = ['2019-11-01 16:21:53.630000']</msg>
<status status="PASS" starttime="20191101 16:23:51.631" endtime="20191101 16:23:51.681"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Film_Print_DateTime_orignal}</arg>
<arg>${FilmPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191101 16:23:51.681" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-11-01 16:21:53.630000]</msg>
<msg timestamp="20191101 16:23:51.681" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191101 16:23:51.681" endtime="20191101 16:23:51.681"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The film print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191101 16:23:51.681" endtime="20191101 16:23:51.681"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:51.631" endtime="20191101 16:23:51.681"></status>
</kw>
<kw name="${count} = 3" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Film_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191101 16:23:51.681" level="INFO">${Film_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191101 16:23:51.681" endtime="20191101 16:23:51.681"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191101 16:23:51.681" level="INFO">${ACCN} = A20191101161715740121</msg>
<status status="PASS" starttime="20191101 16:23:51.681" endtime="20191101 16:23:51.681"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:23:51.681" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191101161715740121", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-01 16:22:50.123000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "MG", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:51.681" endtime="20191101 16:23:51.681"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:23:51.681" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191101161715740121', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-01 16:22:50.123000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'MG', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:51.681" endtime="20191101 16:23:51.681"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrint_DateTime}</var>
</assign>
<msg timestamp="20191101 16:23:51.725" level="INFO">${FilmPrint_DateTime} = ['2019-11-01 16:22:50.123000']</msg>
<status status="PASS" starttime="20191101 16:23:51.681" endtime="20191101 16:23:51.725"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Film_Print_DateTime_orignal}</arg>
<arg>${FilmPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191101 16:23:51.725" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-11-01 16:22:50.123000]</msg>
<msg timestamp="20191101 16:23:51.725" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191101 16:23:51.725" endtime="20191101 16:23:51.725"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The film print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191101 16:23:51.725" endtime="20191101 16:23:51.725"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:51.681" endtime="20191101 16:23:51.725"></status>
</kw>
<kw name="${count} = 4" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Film_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191101 16:23:51.725" level="INFO">${Film_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191101 16:23:51.725" endtime="20191101 16:23:51.725"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191101 16:23:51.725" level="INFO">${ACCN} = A20191101161809146440</msg>
<status status="PASS" starttime="20191101 16:23:51.725" endtime="20191101 16:23:51.725"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:23:51.725" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191101161809146440", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-01 16:23:45.817000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "OT", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:51.725" endtime="20191101 16:23:51.725"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:23:51.725" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191101161809146440', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-01 16:23:45.817000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'OT', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191101 16:23:51.725" endtime="20191101 16:23:51.725"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrint_DateTime}</var>
</assign>
<msg timestamp="20191101 16:23:51.756" level="INFO">${FilmPrint_DateTime} = ['2019-11-01 16:23:45.817000']</msg>
<status status="PASS" starttime="20191101 16:23:51.725" endtime="20191101 16:23:51.756"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Film_Print_DateTime_orignal}</arg>
<arg>${FilmPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191101 16:23:51.756" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-11-01 16:23:45.817000]</msg>
<msg timestamp="20191101 16:23:51.756" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191101 16:23:51.756" endtime="20191101 16:23:51.756"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The film print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191101 16:23:51.756" endtime="20191101 16:23:51.756"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:51.725" endtime="20191101 16:23:51.756"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:51.506" endtime="20191101 16:23:51.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 8 \n Description: \n 1. Check the Film print date and time in the exam table of patients. \n Expected: \n 1. The values should be updated. \ \n</arg>
</arguments>
<msg timestamp="20191101 16:23:51.756" level="INFO">Step 8 
Description: 
1. Check the Film print date and time in the exam table of patients. 
Expected: 
1. The values should be updated.  
</msg>
<status status="PASS" starttime="20191101 16:23:51.756" endtime="20191101 16:23:51.756"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191101 16:15:00.740" endtime="20191101 16:23:51.756" critical="yes"></status>
</test>
<test id="s1-t11" name="SmokeTest_011_Core_4180_06.01.01 Central Print multi patients with standard terminal">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description:\n 1. Configure a custom terminal on PS. \n 2. Make sure the terminal status is ready to work. \n Expected: \n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191101 16:23:51.756" level="INFO">Step 1 
Description:
1. Configure a custom terminal on PS. 
2. Make sure the terminal status is ready to work. 
Expected: 
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191101 16:23:51.756" endtime="20191101 16:23:51.756"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${exam_count}</var>
</assign>
<msg timestamp="20191101 16:23:51.756" level="INFO">${exam_count} = 1</msg>
<status status="PASS" starttime="20191101 16:23:51.756" endtime="20191101 16:23:51.756"></status>
</kw>
<kw name="Check Terminal Status" library="PUMA_TerminalLibrary">
<doc>This function is use the API interface to check the terminal status.
The function will enable the terminal status to 'on work' status.</doc>
<arguments>
<arg>K3_Terminal01</arg>
</arguments>
<assign>
<var>${Terminal_status}</var>
</assign>
<msg timestamp="20191101 16:23:51.772" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:23:51.788" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/EHDPS/status?tid=K3_Terminal01 HTTP/1.1" 200 609</msg>
<msg timestamp="20191101 16:23:51.788" level="INFO">Terminal._check_terminal_status: The terminal status check and result is:
 {"Status":0,"Code":"","Message":"","OriginalException":null,"Entity":{"Status":0,"Terminal":{"TerminalId":"K3_Terminal01","Status":0,"Type":3,"ErrorCode":"","FilmPrinters":[{"Bin_1":{"MediaType":2,"MediaSize":0,"FilmCount":9920,"Capacity":125},"Bin_2":{"MediaType":2,"MediaSize":0,"FilmCount":9999,"Capacity":125},"Bin_3":{"MediaType":2,"MediaSize":2,"FilmCount":356,"Capacity":125},"FilmCount":20275,"IsPrinting":false,"TerminalId":"K3_Terminal01","PrinterId":"1","ErrorCode":"","RawErrorCodes":null,"PMDate":null,"PMCount":0,"FRCount":0,"Status":8,"PrintStatus":0}],"ReportPrinters":[],"PrintTaskID":null}}}</msg>
<msg timestamp="20191101 16:23:51.788" level="INFO">${Terminal_status} = True</msg>
<status status="PASS" starttime="20191101 16:23:51.756" endtime="20191101 16:23:51.788"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Terminal_status}</arg>
<arg>The termianl status is ready to print</arg>
</arguments>
<status status="PASS" starttime="20191101 16:23:51.788" endtime="20191101 16:23:51.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Prepare 5 patients` exam, each has one film and one report. \n Expected: \n 1. The preparation can finish successfully. \n</arg>
</arguments>
<msg timestamp="20191101 16:23:51.788" level="INFO">Step 2 
Description: 
1. Prepare 5 patients` exam, each has one film and one report. 
Expected: 
1. The preparation can finish successfully. 
</msg>
<status status="PASS" starttime="20191101 16:23:51.788" endtime="20191101 16:23:51.788"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${list_Accn}</var>
</assign>
<msg timestamp="20191101 16:23:51.788" level="INFO">${list_Accn} = []</msg>
<status status="PASS" starttime="20191101 16:23:51.788" endtime="20191101 16:23:51.788"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${restinstanceids}</var>
</assign>
<msg timestamp="20191101 16:23:51.788" level="INFO">${restinstanceids} = []</msg>
<status status="PASS" starttime="20191101 16:23:51.788" endtime="20191101 16:23:51.788"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Patient Create Randomly" library="PUMA_PatientLibrary">
<doc>create patient with random information</doc>
<assign>
<var>${patientinfo}</var>
</assign>
<msg timestamp="20191101 16:23:51.803" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:23:51.819" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/NotifyServer/NotifyService.asmx HTTP/1.1" 200 373</msg>
<msg timestamp="20191101 16:23:51.819" level="INFO">Patient.patient_create_randomly:Patient create successfully.
 {"Status": true, "CreateDT": "2019-11-01 16:23:51.787504", "UpdateDT": "2019-11-01 16:23:51.787504", "PatientID": "P20191101162351787504", "AccessionNumber": "A20191101162351787504", "StudyInstanceUID": "UID20191101162351787504", "NameCN": "CN20191101162351787504", "NameEN": "EN20191101162351787504", "Gender": "F", "Birthday": "2015-11-02", "Modality": "NM", "ModalityName": "US", "PatientType": "\u95e8\u8bca\u75c5\u4eba", "VisitID": "", "RequestID": "", "RequestDepartment": 1, "RequestDT": "2019-11-01 16:23:51.787504", "RegisterDT": "2019-11-01 16:23:51.787504", "ExamDT": "2019-11-01 16:23:51.787504", "ReportDT": "2019-11-01 16:23:51.787504", "SubmitDT": "2019-11-01 16:23:51.787504", "ApproveDT": "2019-11-01 16:23:51.787504", "PDFReportURL": "", "StudyStatus": "", "OutHospitalNo": "", "InHospitalNo": "", "PhysicalNumber": "", "ExamName": "Exam20191101162351787504", "ExamBodyPart": "Neck", "RefferingDepartment": "", "Optional0": "", "Optional1": "", "Optional2": "", "Optional3": "", "Optional4": "", "Optional5": "", "Optional6": "", "Optional7": "", "Optional8": "", "Optional9": "", "notifyserver_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx"}</msg>
<msg timestamp="20191101 16:23:51.819" level="INFO">${patientinfo} = {"Status": true, "CreateDT": "2019-11-01 16:23:51.787504", "UpdateDT": "2019-11-01 16:23:51.787504", "PatientID": "P20191101162351787504", "AccessionNumber": "A20191101162351787504", "StudyInstanceUID...</msg>
<status status="PASS" starttime="20191101 16:23:51.788" endtime="20191101 16:23:51.819"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${patientinfo}</arg>
</arguments>
<assign>
<var>${json_object}</var>
</assign>
<msg timestamp="20191101 16:23:51.819" level="INFO">${json_object} = {'Status': True, 'CreateDT': '2019-11-01 16:23:51.787504', 'UpdateDT': '2019-11-01 16:23:51.787504', 'PatientID': 'P20191101162351787504', 'AccessionNumber': 'A20191101162351787504', 'StudyInstanceUID...</msg>
<status status="PASS" starttime="20191101 16:23:51.819" endtime="20191101 16:23:51.819"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20191101 16:23:51.850" level="INFO">${status} = [True]</msg>
<status status="PASS" starttime="20191101 16:23:51.819" endtime="20191101 16:23:51.850"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${patientID}</var>
</assign>
<msg timestamp="20191101 16:23:51.897" level="INFO">${patientID} = ['P20191101162351787504']</msg>
<status status="PASS" starttime="20191101 16:23:51.850" endtime="20191101 16:23:51.897"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json_object}</arg>
<arg>AccessionNumber</arg>
</arguments>
<assign>
<var>${Accessionnumber}</var>
</assign>
<msg timestamp="20191101 16:23:51.928" level="INFO">${Accessionnumber} = ['A20191101162351787504']</msg>
<status status="PASS" starttime="20191101 16:23:51.897" endtime="20191101 16:23:51.928"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}[0]== True</arg>
<arg>The patient Create successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 16:23:51.928" endtime="20191101 16:23:51.928"></status>
</kw>
<kw name="Film Create Film With Sample" library="PUMA_FilmLibrary">
<doc>film create film with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${Accessionnumber}[0]</arg>
</arguments>
<assign>
<var>${Print_res}</var>
</assign>
<msg timestamp="20191101 16:24:32.803" level="INFO">Film.film_create_film_with_sample:Film archived successfully: {"Status": true, "PatientID": "P20191101162351787504", "AccessionNumber": "A20191101162351787504", "FilmSessionLable": "20191101162351928133", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark", "WaterMark_OutputText2BMP_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\OutputText2BMP.exe", "WaterMark_TextSize": "20", "WaterMark_BMPName": "Demo.bmp", "WaterMark_ImageFolder": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images", "WaterMark_SampleDicom": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\sample.dcm", "WaterMark_App": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\WaterMark.exe", "WaterMark_ProcessDCM": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\images\\sample.dcm", "SCU_Path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU", "SCU_dcmpsprt_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpsprt.exe", "SCU_printers_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\printers.cfg", "SCU_dcmprscu_app": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmprscu.exe", "SCU_dcmpstat_cfg": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\dcmpstat.cfg.scu", "SCU_database": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Tool\\WaterMark\\SCU\\database"}</msg>
<msg timestamp="20191101 16:24:32.803" level="INFO">${Print_res} = {"Status": true, "PatientID": "P20191101162351787504", "AccessionNumber": "A20191101162351787504", "FilmSessionLable": "20191101162351928133", "DeliveryJob_status": 2, "WaterMark_Path": "D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191101 16:23:51.928" endtime="20191101 16:24:32.803"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Print_res}</arg>
</arguments>
<assign>
<var>${Print_Res_Json}</var>
</assign>
<msg timestamp="20191101 16:24:32.803" level="INFO">${Print_Res_Json} = {'Status': True, 'PatientID': 'P20191101162351787504', 'AccessionNumber': 'A20191101162351787504', 'FilmSessionLable': '20191101162351928133', 'DeliveryJob_status': 2, 'WaterMark_Path': 'D:\\PUMA_AUTO...</msg>
<status status="PASS" starttime="20191101 16:24:32.803" endtime="20191101 16:24:32.803"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Print_Res_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Print_Result}</var>
</assign>
<msg timestamp="20191101 16:24:32.834" level="INFO">${Print_Result} = [True]</msg>
<status status="PASS" starttime="20191101 16:24:32.803" endtime="20191101 16:24:32.834"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Print_Result}[0] == True</arg>
<arg>Film print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 16:24:32.834" endtime="20191101 16:24:32.834"></status>
</kw>
<kw name="Report Create Report With Sample" library="PUMA_ReportLibrary">
<doc>report create report with sample</doc>
<arguments>
<arg>${patientID}[0]</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<assign>
<var>${Report_archived_Info}</var>
</assign>
<msg timestamp="20191101 16:24:42.850" level="INFO">PUMA_ReportLibrary._archive_check: Report achived successfully.
Report achived successfully. {"Status": true, "server": "10.112.20.84", "patient_id": "P20191101162351787504", "accession_number": "A20191101162351787504", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Report.txt", "report_template_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\ReportSample\\Template.txt", "powershell_path": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\PowerShellScripts", "default_printer": "PDFCreator", "report_check_file_path": "", "notify_server_url": "http://10.112.20.84/NotifyServer/NotifyService.asmx?wsdl", "print_server_url": "http://10.112.20.84/PrintServer/PrintService.asmx?wsdl", "reportstatus_mode_value": {"not ready": "0", "temporary": "1", "formal": "2"}, "Reportstatus_value_mode": {"0": "not ready", "1": "temporary", "2": "formal"}}</msg>
<msg timestamp="20191101 16:24:42.850" level="INFO">${Report_archived_Info} = {"Status": true, "server": "10.112.20.84", "patient_id": "P20191101162351787504", "accession_number": "A20191101162351787504", "report_file": "D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191101 16:24:32.834" endtime="20191101 16:24:42.850"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Report_archived_Info}</arg>
</arguments>
<assign>
<var>${Report_archived_Info_Json}</var>
</assign>
<msg timestamp="20191101 16:24:42.850" level="INFO">${Report_archived_Info_Json} = {'Status': True, 'server': '10.112.20.84', 'patient_id': 'P20191101162351787504', 'accession_number': 'A20191101162351787504', 'report_file': 'D:\\PUMA_AUTO\\RF_PUMA\\PUMA\\Libs\\PUMA_ReportLibrary\\R...</msg>
<status status="PASS" starttime="20191101 16:24:42.850" endtime="20191101 16:24:42.850"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Report_archived_Info_Json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Report_archived_result}</var>
</assign>
<msg timestamp="20191101 16:24:42.881" level="INFO">${Report_archived_result} = [True]</msg>
<status status="PASS" starttime="20191101 16:24:42.850" endtime="20191101 16:24:42.881"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Report_archived_result}[0] == True</arg>
<arg>The report can print to PS successfully.</arg>
</arguments>
<status status="PASS" starttime="20191101 16:24:42.881" endtime="20191101 16:24:42.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<msg timestamp="20191101 16:24:42.881" level="INFO">A20191101162351787504</msg>
<status status="PASS" starttime="20191101 16:24:42.881" endtime="20191101 16:24:42.881"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${AccessionNumber}[0]</arg>
</arguments>
<status status="PASS" starttime="20191101 16:24:42.881" endtime="20191101 16:24:42.881"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:51.788" endtime="20191101 16:24:42.881"></status>
</kw>
<status status="PASS" starttime="20191101 16:23:51.788" endtime="20191101 16:24:42.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${list_Accn}</arg>
</arguments>
<msg timestamp="20191101 16:24:42.881" level="INFO">['A20191101162351787504']</msg>
<status status="PASS" starttime="20191101 16:24:42.881" endtime="20191101 16:24:42.881"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${Report_Print_DateTime_old}</var>
</assign>
<msg timestamp="20191101 16:24:42.881" level="INFO">${Report_Print_DateTime_old} = []</msg>
<status status="PASS" starttime="20191101 16:24:42.881" endtime="20191101 16:24:42.881"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${Film_Print_DateTime_old}</var>
</assign>
<msg timestamp="20191101 16:24:42.881" level="INFO">${Film_Print_DateTime_old} = []</msg>
<status status="PASS" starttime="20191101 16:24:42.881" endtime="20191101 16:24:42.881"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191101 16:24:42.881" level="INFO">${ACCN} = A20191101162351787504</msg>
<status status="PASS" starttime="20191101 16:24:42.881" endtime="20191101 16:24:42.881"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:24:42.881" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191101162351787504", "FilmPrintStatus": 0, "FilmPrintTime": null, "HoldFlag": 1, "ImageCount": 1, "Modalities": "NM", "ExamName": "Exam20191101162351787504", "B...</msg>
<status status="PASS" starttime="20191101 16:24:42.881" endtime="20191101 16:24:42.881"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:24:42.881" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191101162351787504', 'FilmPrintStatus': 0, 'FilmPrintTime': None, 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'NM', 'ExamName': 'Exam20191101162351787504', 'B...</msg>
<status status="PASS" starttime="20191101 16:24:42.881" endtime="20191101 16:24:42.881"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrintTime}</var>
</assign>
<msg timestamp="20191101 16:24:42.928" level="INFO">${FilmPrintTime} = [None]</msg>
<status status="PASS" starttime="20191101 16:24:42.881" endtime="20191101 16:24:42.928"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrintTime}</var>
</assign>
<msg timestamp="20191101 16:24:42.959" level="INFO">${ReportPrintTime} = [None]</msg>
<status status="PASS" starttime="20191101 16:24:42.928" endtime="20191101 16:24:42.959"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${FilmPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191101 16:24:42.959" endtime="20191101 16:24:42.959"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${ReportPrintTime}[0]</arg>
</arguments>
<status status="PASS" starttime="20191101 16:24:42.959" endtime="20191101 16:24:42.959"></status>
</kw>
<status status="PASS" starttime="20191101 16:24:42.881" endtime="20191101 16:24:42.959"></status>
</kw>
<status status="PASS" starttime="20191101 16:24:42.881" endtime="20191101 16:24:42.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
</arguments>
<msg timestamp="20191101 16:24:42.959" level="INFO">[None]</msg>
<status status="PASS" starttime="20191101 16:24:42.959" endtime="20191101 16:24:42.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
</arguments>
<msg timestamp="20191101 16:24:42.959" level="INFO">[None]</msg>
<status status="PASS" starttime="20191101 16:24:42.959" endtime="20191101 16:24:42.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3 \n Description: \n1. Use the API to simulate the central print operation: \ \ Print the exams created in step2 with the terminal which created in step1. \n Excepted:\n 1. The API should return the successful response. \n</arg>
</arguments>
<msg timestamp="20191101 16:24:42.959" level="INFO">Step 3 
Description: 
1. Use the API to simulate the central print operation:   Print the exams created in step2 with the terminal which created in step1. 
Excepted:
1. The API should return the successful response. 
</msg>
<status status="PASS" starttime="20191101 16:24:42.959" endtime="20191101 16:24:42.959"></status>
</kw>
<kw name="Platform Login User Pwd" library="PUMA_PlatformLibrary">
<doc>platform_login_user_pwd</doc>
<arguments>
<arg>admin</arg>
<arg>123456</arg>
</arguments>
<assign>
<var>${login_result}</var>
</assign>
<msg timestamp="20191101 16:24:42.975" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:24:42.975" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191101 16:24:42.991" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:24:43.022" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/Platform//account/login HTTP/1.1" 200 78</msg>
<msg timestamp="20191101 16:24:43.022" level="INFO">Platform.platform_login_user_pwd: The user login in successfully. [admin, 123456]</msg>
<msg timestamp="20191101 16:24:43.022" level="INFO">${login_result} = True</msg>
<status status="PASS" starttime="20191101 16:24:42.959" endtime="20191101 16:24:43.022"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${login_result}</arg>
</arguments>
<status status="PASS" starttime="20191101 16:24:43.022" endtime="20191101 16:24:43.022"></status>
</kw>
<kw name="Platform Worklist Central Print" library="PUMA_PlatformLibrary">
<doc>Platform_worklist_central_print</doc>
<arguments>
<arg>Customer_Terminal01</arg>
<arg>admin</arg>
<arg>${list_Accn}</arg>
<arg>${restinstanceids}</arg>
</arguments>
<assign>
<var>${centralprint_result}</var>
</assign>
<msg timestamp="20191101 16:24:43.038" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:24:43.334" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/centralPrint HTTP/1.1" 200 135</msg>
<msg timestamp="20191101 16:24:43.334" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:24:43.334" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printEstimateTime/ HTTP/1.1" 200 2</msg>
<msg timestamp="20191101 16:24:48.334" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:24:48.334" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:24:48.334" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:24:48.350" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191101 16:24:53.350" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:24:53.350" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:24:53.350" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:24:53.366" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191101 16:24:58.366" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:24:58.366" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:24:58.366" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:24:58.381" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191101 16:25:03.381" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:03.381" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:03.381" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:03.397" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191101 16:25:08.397" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:08.397" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:08.397" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:08.413" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191101 16:25:13.413" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:13.413" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:13.413" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:13.428" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191101 16:25:18.428" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:18.428" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:18.428" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:18.444" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191101 16:25:23.444" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:23.444" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:23.444" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:23.459" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191101 16:25:28.460" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:28.460" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:28.460" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:28.475" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191101 16:25:33.475" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:33.475" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:33.475" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:33.491" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 56</msg>
<msg timestamp="20191101 16:25:38.491" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:38.506" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:38.506" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:38.522" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/printStatus/ HTTP/1.1" 200 55</msg>
<msg timestamp="20191101 16:25:38.522" level="INFO">Platform.Platform_worklist_central_print_get_tasks: All exams can central print.
70
21
Platform.Platform_worklist_central_print: Print successfully:
{'printedTime': 70, 'isFinishPrint': True, 'failedTasks': 0}</msg>
<msg timestamp="20191101 16:25:38.522" level="INFO">${centralprint_result} = (True, [{'returnValue': 0, 'patientName': 'CN20191101162351787504', 'printTaskID': '2088', 'warningCode': 0, 'warningDescription': '', 'extensions': ''}])</msg>
<status status="PASS" starttime="20191101 16:24:43.022" endtime="20191101 16:25:38.522"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${centralprint_result}[0] == True</arg>
</arguments>
<status status="PASS" starttime="20191101 16:25:38.522" endtime="20191101 16:25:38.522"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${centralprint_result}[1]</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${taksinfo}</var>
</assign>
<msg timestamp="20191101 16:25:38.522" level="INFO">${taksinfo} = {'returnValue': 0, 'patientName': 'CN20191101162351787504', 'printTaskID': '2088', 'warningCode': 0, 'warningDescription': '', 'extensions': ''}</msg>
<status status="PASS" starttime="20191101 16:25:38.522" endtime="20191101 16:25:38.522"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${taksinfo}</arg>
<arg>printTaskID</arg>
</arguments>
<assign>
<var>${printtask_sn}</var>
</assign>
<msg timestamp="20191101 16:25:38.522" level="INFO">${printtask_sn} = 2088</msg>
<status status="PASS" starttime="20191101 16:25:38.522" endtime="20191101 16:25:38.522"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Printtask By Sn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with SN from table wggc.dbp.afp_printtask in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${printtask_sn}</arg>
</arguments>
<assign>
<var>${PrintTask_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:25:38.522" level="INFO">${PrintTask_DB_Value} = {"Result": true, "SN": 2088, "PatientID": "P20191101162351787504", "TerminalID": "Customer_Terminal01", "Status": 4, "ImageCount": 1, "ReportCount": 1, "EstimateTime": 63, "ErrorCode": 0, "ErrorDesc":...</msg>
<status status="PASS" starttime="20191101 16:25:38.522" endtime="20191101 16:25:38.522"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${PrintTask_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:25:38.522" level="INFO">${json} = {'Result': True, 'SN': 2088, 'PatientID': 'P20191101162351787504', 'TerminalID': 'Customer_Terminal01', 'Status': 4, 'ImageCount': 1, 'ReportCount': 1, 'EstimateTime': 63, 'ErrorCode': 0, 'ErrorDesc':...</msg>
<status status="PASS" starttime="20191101 16:25:38.522" endtime="20191101 16:25:38.522"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>Status</arg>
</arguments>
<assign>
<var>${Printtask_status}</var>
</assign>
<msg timestamp="20191101 16:25:38.585" level="INFO">${Printtask_status} = [4]</msg>
<status status="PASS" starttime="20191101 16:25:38.522" endtime="20191101 16:25:38.585"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191101 16:25:38.647" level="INFO">${Patient_id} = ['P20191101162351787504']</msg>
<status status="PASS" starttime="20191101 16:25:38.585" endtime="20191101 16:25:38.647"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Printtask_status}[0]</arg>
<arg>4</arg>
<arg>The Print task status in DB is 4</arg>
</arguments>
<msg timestamp="20191101 16:25:38.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 16:25:38.647" endtime="20191101 16:25:38.647"></status>
</kw>
<status status="PASS" starttime="20191101 16:25:38.522" endtime="20191101 16:25:38.647"></status>
</kw>
<status status="PASS" starttime="20191101 16:25:38.522" endtime="20191101 16:25:38.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4 \n Description: \n 1. Check the print task status in the wggc.dbo.afp_printtask table. \n Expected: \n 1. All print tasks should be successful and status should be 4. \n</arg>
</arguments>
<msg timestamp="20191101 16:25:38.647" level="INFO">Step 4 
Description: 
1. Check the print task status in the wggc.dbo.afp_printtask table. 
Expected: 
1. All print tasks should be successful and status should be 4. 
</msg>
<status status="PASS" starttime="20191101 16:25:38.647" endtime="20191101 16:25:38.647"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191101 16:25:38.663" level="INFO">${ACCN} = A20191101162351787504</msg>
<status status="PASS" starttime="20191101 16:25:38.647" endtime="20191101 16:25:38.663"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:25:38.663" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191101162351787504", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-01 16:25:38.260000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "NM", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191101 16:25:38.663" endtime="20191101 16:25:38.663"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:25:38.663" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191101162351787504', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-01 16:25:38.260000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'NM', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191101 16:25:38.663" endtime="20191101 16:25:38.663"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintStatus</arg>
</arguments>
<assign>
<var>${Filmprint_Status}</var>
</assign>
<msg timestamp="20191101 16:25:38.694" level="INFO">${Filmprint_Status} = [1]</msg>
<status status="PASS" starttime="20191101 16:25:38.663" endtime="20191101 16:25:38.694"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191101 16:25:38.741" level="INFO">${Patient_id} = ['P20191101162351787504']</msg>
<status status="PASS" starttime="20191101 16:25:38.694" endtime="20191101 16:25:38.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${Filmprint_Status}[0]</arg>
<arg>1</arg>
<arg>The filmp rint status in DB is 1</arg>
</arguments>
<msg timestamp="20191101 16:25:38.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 16:25:38.741" endtime="20191101 16:25:38.741"></status>
</kw>
<status status="PASS" starttime="20191101 16:25:38.647" endtime="20191101 16:25:38.741"></status>
</kw>
<status status="PASS" starttime="20191101 16:25:38.647" endtime="20191101 16:25:38.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5 \n Description: \n 1. Check the FilmPrintStatus of these patients in WGGC.dbo.afp_ExamInfo table. \n Expected: \n 1. The status should be printed.</arg>
</arguments>
<msg timestamp="20191101 16:25:38.741" level="INFO">Step 5 
Description: 
1. Check the FilmPrintStatus of these patients in WGGC.dbo.afp_ExamInfo table. 
Expected: 
1. The status should be printed.</msg>
<status status="PASS" starttime="20191101 16:25:38.741" endtime="20191101 16:25:38.741"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191101 16:25:38.741" level="INFO">${ACCN} = A20191101162351787504</msg>
<status status="PASS" starttime="20191101 16:25:38.741" endtime="20191101 16:25:38.741"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:25:38.741" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191101162351787504", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-01 16:25:38.260000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "NM", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191101 16:25:38.741" endtime="20191101 16:25:38.741"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:25:38.741" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191101162351787504', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-01 16:25:38.260000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'NM', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191101 16:25:38.741" endtime="20191101 16:25:38.741"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintStatus</arg>
</arguments>
<assign>
<var>${ReportPrint_Status}</var>
</assign>
<msg timestamp="20191101 16:25:38.788" level="INFO">${ReportPrint_Status} = [1]</msg>
<status status="PASS" starttime="20191101 16:25:38.741" endtime="20191101 16:25:38.788"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>PatientID</arg>
</arguments>
<assign>
<var>${Patient_id}</var>
</assign>
<msg timestamp="20191101 16:25:38.850" level="INFO">${Patient_id} = ['P20191101162351787504']</msg>
<status status="PASS" starttime="20191101 16:25:38.788" endtime="20191101 16:25:38.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${ReportPrint_Status}[0]</arg>
<arg>1</arg>
<arg>The Report print status in DB is 1</arg>
</arguments>
<msg timestamp="20191101 16:25:38.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 16:25:38.850" endtime="20191101 16:25:38.850"></status>
</kw>
<status status="PASS" starttime="20191101 16:25:38.741" endtime="20191101 16:25:38.850"></status>
</kw>
<status status="PASS" starttime="20191101 16:25:38.741" endtime="20191101 16:25:38.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 6 \n Description: \n 1. Check the ReportPrintStatus of these patients \ in WGGC.dbo.afp_ExamInfo table. \n Expected: \n The status should be printed. \n</arg>
</arguments>
<msg timestamp="20191101 16:25:38.850" level="INFO">Step 6 
Description: 
1. Check the ReportPrintStatus of these patients  in WGGC.dbo.afp_ExamInfo table. 
Expected: 
The status should be printed. 
</msg>
<status status="PASS" starttime="20191101 16:25:38.850" endtime="20191101 16:25:38.850"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Report_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Report_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191101 16:25:38.850" level="INFO">${Report_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191101 16:25:38.850" endtime="20191101 16:25:38.850"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191101 16:25:38.850" level="INFO">${ACCN} = A20191101162351787504</msg>
<status status="PASS" starttime="20191101 16:25:38.850" endtime="20191101 16:25:38.850"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:25:38.850" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191101162351787504", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-01 16:25:38.260000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "NM", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191101 16:25:38.850" endtime="20191101 16:25:38.850"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:25:38.850" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191101162351787504', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-01 16:25:38.260000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'NM', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191101 16:25:38.850" endtime="20191101 16:25:38.850"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>ReportPrintTime</arg>
</arguments>
<assign>
<var>${ReportPrint_DateTime}</var>
</assign>
<msg timestamp="20191101 16:25:38.897" level="INFO">${ReportPrint_DateTime} = ['2019-11-01 16:25:38.270000']</msg>
<status status="PASS" starttime="20191101 16:25:38.850" endtime="20191101 16:25:38.897"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Report_Print_DateTime_orignal}</arg>
<arg>${ReportPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191101 16:25:38.897" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-11-01 16:25:38.270000]</msg>
<msg timestamp="20191101 16:25:38.897" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191101 16:25:38.897" endtime="20191101 16:25:38.897"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The report print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191101 16:25:38.897" endtime="20191101 16:25:38.897"></status>
</kw>
<status status="PASS" starttime="20191101 16:25:38.850" endtime="20191101 16:25:38.897"></status>
</kw>
<status status="PASS" starttime="20191101 16:25:38.850" endtime="20191101 16:25:38.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 7 \n Description: \n 1. Check the report print date and time in the exam table of patients. \n Expected: \n 1. The values should be updated. \ \n</arg>
</arguments>
<msg timestamp="20191101 16:25:38.897" level="INFO">Step 7 
Description: 
1. Check the report print date and time in the exam table of patients. 
Expected: 
1. The values should be updated.  
</msg>
<status status="PASS" starttime="20191101 16:25:38.897" endtime="20191101 16:25:38.897"></status>
</kw>
<kw name="${count} IN RANGE [ ${exam_count} ]" type="for">
<kw name="${count} = 0" type="foritem">
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Film_Print_DateTime_old}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${Film_Print_DateTime_orignal}</var>
</assign>
<msg timestamp="20191101 16:25:38.897" level="INFO">${Film_Print_DateTime_orignal} = None</msg>
<status status="PASS" starttime="20191101 16:25:38.897" endtime="20191101 16:25:38.897"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list_Accn}</arg>
<arg>${count}</arg>
</arguments>
<assign>
<var>${ACCN}</var>
</assign>
<msg timestamp="20191101 16:25:38.897" level="INFO">${ACCN} = A20191101162351787504</msg>
<status status="PASS" starttime="20191101 16:25:38.897" endtime="20191101 16:25:38.897"></status>
</kw>
<kw name="DB Get Wggc Dbo Afp Examinfo By Accn" library="PUMA_DatabaseLibrary">
<doc>This function is query the data with accnession number from table wggc.dbp.afp_examinfo in database.
The data will order by create time desc as default.
The each column data will organize as list and map to dict with column name to return.</doc>
<arguments>
<arg>${ACCN}</arg>
</arguments>
<assign>
<var>${Exmainfo_DB_Value}</var>
</assign>
<msg timestamp="20191101 16:25:38.897" level="INFO">${Exmainfo_DB_Value} = {"Result": true, "AccessionNumber": "A20191101162351787504", "FilmPrintStatus": 1, "FilmPrintTime": "2019-11-01 16:25:38.260000", "HoldFlag": 1, "ImageCount": 1, "Modalities": "NM", "ExamName": "Exam2...</msg>
<status status="PASS" starttime="20191101 16:25:38.897" endtime="20191101 16:25:38.897"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Exmainfo_DB_Value}</arg>
</arguments>
<assign>
<var>${json}</var>
</assign>
<msg timestamp="20191101 16:25:38.897" level="INFO">${json} = {'Result': True, 'AccessionNumber': 'A20191101162351787504', 'FilmPrintStatus': 1, 'FilmPrintTime': '2019-11-01 16:25:38.260000', 'HoldFlag': 1, 'ImageCount': 1, 'Modalities': 'NM', 'ExamName': 'Exam2...</msg>
<status status="PASS" starttime="20191101 16:25:38.897" endtime="20191101 16:25:38.897"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${json}</arg>
<arg>FilmPrintTime</arg>
</arguments>
<assign>
<var>${FilmPrint_DateTime}</var>
</assign>
<msg timestamp="20191101 16:25:38.944" level="INFO">${FilmPrint_DateTime} = ['2019-11-01 16:25:38.260000']</msg>
<status status="PASS" starttime="20191101 16:25:38.897" endtime="20191101 16:25:38.944"></status>
</kw>
<kw name="Platform Worklist Central Print Print Datetime Check" library="PUMA_PlatformLibrary">
<doc>platform_worklist_central_print_print_datetime_check</doc>
<arguments>
<arg>${Film_Print_DateTime_orignal}</arg>
<arg>${FilmPrint_DateTime}[0]</arg>
</arguments>
<assign>
<var>${DateTime_Check_Status}</var>
</assign>
<msg timestamp="20191101 16:25:38.944" level="INFO">platform_worklist_central_print_film_print_datetime_check: The date time is updated. [None,2019-11-01 16:25:38.260000]</msg>
<msg timestamp="20191101 16:25:38.944" level="INFO">${DateTime_Check_Status} = True</msg>
<status status="PASS" starttime="20191101 16:25:38.944" endtime="20191101 16:25:38.944"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${DateTime_Check_Status}</arg>
<arg>The film print status has updated</arg>
</arguments>
<status status="PASS" starttime="20191101 16:25:38.944" endtime="20191101 16:25:38.944"></status>
</kw>
<status status="PASS" starttime="20191101 16:25:38.897" endtime="20191101 16:25:38.944"></status>
</kw>
<status status="PASS" starttime="20191101 16:25:38.897" endtime="20191101 16:25:38.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 8 \n Description: \n 1. Check the Film print date and time in the exam table of patients. \n Expected: \n 1. The values should be updated. \ \n</arg>
</arguments>
<msg timestamp="20191101 16:25:38.944" level="INFO">Step 8 
Description: 
1. Check the Film print date and time in the exam table of patients. 
Expected: 
1. The values should be updated.  
</msg>
<status status="PASS" starttime="20191101 16:25:38.944" endtime="20191101 16:25:38.944"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191101 16:23:51.756" endtime="20191101 16:25:38.944" critical="yes"></status>
</test>
<test id="s1-t12" name="SmokeTest_0012_Core_4181_07.01.01 Worklist workflow fuzzy query by patientid">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description \n 1. Prepare some patients /exams in PS system. \n Expected: \n 1. The preparation can finish successfully. \n</arg>
</arguments>
<msg timestamp="20191101 16:25:38.944" level="INFO">Step 1 
Description 
1. Prepare some patients /exams in PS system. 
Expected: 
1. The preparation can finish successfully. 
</msg>
<status status="PASS" starttime="20191101 16:25:38.944" endtime="20191101 16:25:38.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Use the fuzzy query API to simalute the fuzzy query operation with patient id. \n Expected: \n The records count and information should be correct. \n</arg>
</arguments>
<msg timestamp="20191101 16:25:38.944" level="INFO">Step 2 
Description: 
1. Use the fuzzy query API to simalute the fuzzy query operation with patient id. 
Expected: 
The records count and information should be correct. 
</msg>
<status status="PASS" starttime="20191101 16:25:38.944" endtime="20191101 16:25:38.944"></status>
</kw>
<kw name="Platform Login User Pwd" library="PUMA_PlatformLibrary">
<doc>platform_login_user_pwd</doc>
<arguments>
<arg>admin</arg>
<arg>123456</arg>
</arguments>
<assign>
<var>${login_result}</var>
</assign>
<msg timestamp="20191101 16:25:38.944" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:38.944" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191101 16:25:38.960" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:38.975" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/Platform//account/login HTTP/1.1" 200 78</msg>
<msg timestamp="20191101 16:25:38.975" level="INFO">Platform.platform_login_user_pwd: The user login in successfully. [admin, 123456]</msg>
<msg timestamp="20191101 16:25:38.975" level="INFO">${login_result} = True</msg>
<status status="PASS" starttime="20191101 16:25:38.944" endtime="20191101 16:25:38.975"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${login_result}</arg>
</arguments>
<status status="PASS" starttime="20191101 16:25:38.975" endtime="20191101 16:25:38.975"></status>
</kw>
<kw name="Platform Worklist Fuzzy Query By PatientID" library="PUMA_PlatformLibrary">
<doc>platform_worklist_fuzzy_query_by_patientID</doc>
<arguments>
<arg>20</arg>
</arguments>
<assign>
<var>${Query_result}</var>
</assign>
<msg timestamp="20191101 16:25:38.975" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:38.991" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:38.991" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.085" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11892</msg>
<msg timestamp="20191101 16:25:39.085" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.100" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:39.100" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.100" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11892</msg>
<msg timestamp="20191101 16:25:39.116" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.116" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:39.116" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.131" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11529</msg>
<msg timestamp="20191101 16:25:39.131" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.131" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:39.147" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.147" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11574</msg>
<msg timestamp="20191101 16:25:39.163" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.163" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:39.163" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.178" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11542</msg>
<msg timestamp="20191101 16:25:39.178" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.194" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:39.194" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.194" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11588</msg>
<msg timestamp="20191101 16:25:39.210" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.210" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:39.210" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.225" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12236</msg>
<msg timestamp="20191101 16:25:39.225" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.241" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:39.241" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.256" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12243</msg>
<msg timestamp="20191101 16:25:39.256" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.272" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:39.272" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.288" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11659</msg>
<msg timestamp="20191101 16:25:39.288" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.288" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:39.288" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.303" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11708</msg>
<msg timestamp="20191101 16:25:39.303" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.319" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:39.319" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.319" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11598</msg>
<msg timestamp="20191101 16:25:39.335" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.335" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:39.335" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.350" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11304</msg>
<msg timestamp="20191101 16:25:39.366" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.366" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:39.366" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.381" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11504</msg>
<msg timestamp="20191101 16:25:39.397" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.397" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:39.397" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.413" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11037</msg>
<msg timestamp="20191101 16:25:39.413" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.428" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:39.428" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.444" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 10628</msg>
<msg timestamp="20191101 16:25:39.444" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.444" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:39.460" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.460" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 10625</msg>
<msg timestamp="20191101 16:25:39.475" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.475" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:39.475" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.491" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 10598</msg>
<msg timestamp="20191101 16:25:39.506" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.506" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:39.506" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.522" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 10628</msg>
<msg timestamp="20191101 16:25:39.538" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.631" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:39.631" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.647" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 10982</msg>
<msg timestamp="20191101 16:25:39.647" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.663" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:39.663" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.678" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12314</msg>
<msg timestamp="20191101 16:25:39.678" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.678" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:39.694" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.710" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:39.725" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.725" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:39.725" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.741" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:39.741" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.756" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:39.756" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.772" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:39.772" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.788" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:39.788" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.803" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:39.819" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.819" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:39.819" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.835" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:39.835" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.850" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:39.850" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.866" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:39.866" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.866" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:39.866" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.881" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:39.897" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.897" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:39.897" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.913" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:39.913" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.928" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:39.928" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.944" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:39.944" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.944" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:39.960" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.975" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:39.975" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:39.975" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:39.991" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.006" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:40.006" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.006" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:40.022" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.022" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12450</msg>
<msg timestamp="20191101 16:25:40.038" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.038" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:40.038" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.053" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12518</msg>
<msg timestamp="20191101 16:25:40.069" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.069" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:40.069" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.100" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12515</msg>
<msg timestamp="20191101 16:25:40.100" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.100" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:40.100" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.116" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 3810</msg>
<msg timestamp="20191101 16:25:40.163" level="INFO">{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
Platform.platform_worklist_fuzzy_query_by_patientID: There are [666] rows data queried out.
Platform.platform_worklist_fuzzy_query_by_patientID: The query data is correct!</msg>
<msg timestamp="20191101 16:25:40.163" level="INFO">${Query_result} = True</msg>
<status status="PASS" starttime="20191101 16:25:38.975" endtime="20191101 16:25:40.163"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Query_result}</arg>
<arg>The query result is correct.</arg>
</arguments>
<status status="PASS" starttime="20191101 16:25:40.163" endtime="20191101 16:25:40.163"></status>
</kw>
<kw name="Platform Logout" library="PUMA_PlatformLibrary">
<doc>platform_logout_user_pwd</doc>
<assign>
<var>${logoff_status}</var>
</assign>
<msg timestamp="20191101 16:25:40.163" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.178" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191101 16:25:40.178" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.178" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform//account/logOff HTTP/1.1" 302 127</msg>
<msg timestamp="20191101 16:25:40.194" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191101 16:25:40.194" level="INFO">Platform.platform_logout: Logoff successfully.</msg>
<msg timestamp="20191101 16:25:40.194" level="INFO">${logoff_status} = True</msg>
<status status="PASS" starttime="20191101 16:25:40.163" endtime="20191101 16:25:40.194"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${logoff_status}</arg>
</arguments>
<status status="PASS" starttime="20191101 16:25:40.194" endtime="20191101 16:25:40.194"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191101 16:25:38.944" endtime="20191101 16:25:40.194" critical="yes"></status>
</test>
<test id="s1-t13" name="SmokeTest_0013_Core_4182_07.01.02 Worklist workflow fuzzy query by accession number.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description \n 1. Prepare some patients /exams in PS system. \n Expected: \n 1. The preparation can finish successfully. \n</arg>
</arguments>
<msg timestamp="20191101 16:25:40.194" level="INFO">Step 1 
Description 
1. Prepare some patients /exams in PS system. 
Expected: 
1. The preparation can finish successfully. 
</msg>
<status status="PASS" starttime="20191101 16:25:40.194" endtime="20191101 16:25:40.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Use the fuzzy query API to simalute the fuzzy query operation with patient`s accession number. \n Expected: \n The records count and information should be correct. \n</arg>
</arguments>
<msg timestamp="20191101 16:25:40.194" level="INFO">Step 2 
Description: 
1. Use the fuzzy query API to simalute the fuzzy query operation with patient`s accession number. 
Expected: 
The records count and information should be correct. 
</msg>
<status status="PASS" starttime="20191101 16:25:40.194" endtime="20191101 16:25:40.194"></status>
</kw>
<kw name="Platform Login User Pwd" library="PUMA_PlatformLibrary">
<doc>platform_login_user_pwd</doc>
<arguments>
<arg>admin</arg>
<arg>123456</arg>
</arguments>
<assign>
<var>${login_result}</var>
</assign>
<msg timestamp="20191101 16:25:40.194" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.210" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191101 16:25:40.210" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.256" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/Platform//account/login HTTP/1.1" 200 78</msg>
<msg timestamp="20191101 16:25:40.256" level="INFO">Platform.platform_login_user_pwd: The user login in successfully. [admin, 123456]</msg>
<msg timestamp="20191101 16:25:40.256" level="INFO">${login_result} = True</msg>
<status status="PASS" starttime="20191101 16:25:40.194" endtime="20191101 16:25:40.256"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${login_result}</arg>
</arguments>
<status status="PASS" starttime="20191101 16:25:40.256" endtime="20191101 16:25:40.256"></status>
</kw>
<kw name="Platform Worklist Fuzzy Query By Accn" library="PUMA_PlatformLibrary">
<doc>platform_worklist_fuzzy_query_by_accn</doc>
<arguments>
<arg>20</arg>
</arguments>
<assign>
<var>${Query_result_accn}</var>
</assign>
<msg timestamp="20191101 16:25:40.256" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.272" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:40.272" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.288" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11892</msg>
<msg timestamp="20191101 16:25:40.288" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.303" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:40.303" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.303" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11892</msg>
<msg timestamp="20191101 16:25:40.319" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.319" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:40.335" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.335" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11529</msg>
<msg timestamp="20191101 16:25:40.350" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.350" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:40.350" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.366" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11574</msg>
<msg timestamp="20191101 16:25:40.366" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.366" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:40.381" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.381" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11542</msg>
<msg timestamp="20191101 16:25:40.397" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.397" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:40.397" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.413" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11588</msg>
<msg timestamp="20191101 16:25:40.413" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.413" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:40.428" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.428" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12236</msg>
<msg timestamp="20191101 16:25:40.444" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.444" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:40.444" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.460" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12243</msg>
<msg timestamp="20191101 16:25:40.460" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.460" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:40.475" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.475" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11659</msg>
<msg timestamp="20191101 16:25:40.491" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.491" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:40.491" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.506" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11708</msg>
<msg timestamp="20191101 16:25:40.506" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.522" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:40.522" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.710" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11598</msg>
<msg timestamp="20191101 16:25:40.710" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.725" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:40.725" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.741" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11304</msg>
<msg timestamp="20191101 16:25:40.741" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.741" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:40.741" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.756" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11504</msg>
<msg timestamp="20191101 16:25:40.756" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.772" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:40.772" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.788" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11037</msg>
<msg timestamp="20191101 16:25:40.788" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.788" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:40.788" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.803" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 10628</msg>
<msg timestamp="20191101 16:25:40.819" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.819" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:40.819" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.835" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 10625</msg>
<msg timestamp="20191101 16:25:40.835" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.850" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:40.850" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.866" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 10598</msg>
<msg timestamp="20191101 16:25:40.866" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.866" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:40.881" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.881" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 10628</msg>
<msg timestamp="20191101 16:25:40.897" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.897" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:40.913" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.913" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 10982</msg>
<msg timestamp="20191101 16:25:40.928" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.928" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:40.928" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.944" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12314</msg>
<msg timestamp="20191101 16:25:40.944" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.960" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:40.960" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.975" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:40.975" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.975" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:40.991" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:40.991" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:41.006" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.006" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:41.006" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.022" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:41.022" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.038" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:41.038" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.053" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:41.053" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.053" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:41.053" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.069" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:41.085" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.085" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:41.085" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.100" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:41.100" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.116" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:41.116" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.131" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:41.131" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.147" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:41.147" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.163" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:41.163" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.163" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:41.178" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.194" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:41.194" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.210" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:41.210" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.241" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:41.241" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.241" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:41.241" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.256" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:41.272" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.272" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:41.272" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.288" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12450</msg>
<msg timestamp="20191101 16:25:41.303" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.303" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:41.303" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.335" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12518</msg>
<msg timestamp="20191101 16:25:41.335" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.335" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:41.350" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.350" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12515</msg>
<msg timestamp="20191101 16:25:41.366" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.366" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:41.366" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.397" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 4915</msg>
<msg timestamp="20191101 16:25:41.428" level="INFO">{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
Platform.platform_worklist_fuzzy_query_by_accn: There are [668] rows data queried out.
Platform.platform_worklist_fuzzy_query_by_accn: The query data is correct!</msg>
<msg timestamp="20191101 16:25:41.428" level="INFO">${Query_result_accn} = True</msg>
<status status="PASS" starttime="20191101 16:25:40.256" endtime="20191101 16:25:41.428"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Query_result_accn}</arg>
<arg>The query result is correct.</arg>
</arguments>
<status status="PASS" starttime="20191101 16:25:41.428" endtime="20191101 16:25:41.428"></status>
</kw>
<kw name="Platform Logout" library="PUMA_PlatformLibrary">
<doc>platform_logout_user_pwd</doc>
<assign>
<var>${logoff_status}</var>
</assign>
<msg timestamp="20191101 16:25:41.428" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.444" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191101 16:25:41.444" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.444" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform//account/logOff HTTP/1.1" 302 127</msg>
<msg timestamp="20191101 16:25:41.444" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191101 16:25:41.444" level="INFO">Platform.platform_logout: Logoff successfully.</msg>
<msg timestamp="20191101 16:25:41.444" level="INFO">${logoff_status} = True</msg>
<status status="PASS" starttime="20191101 16:25:41.428" endtime="20191101 16:25:41.444"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${logoff_status}</arg>
</arguments>
<status status="PASS" starttime="20191101 16:25:41.444" endtime="20191101 16:25:41.444"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191101 16:25:40.194" endtime="20191101 16:25:41.444" critical="yes"></status>
</test>
<test id="s1-t14" name="SmokeTest_0014_Core_4183_07.01.03 Worklist workflow fuzzy query by patient name.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description \n 1. Prepare some patients /exams in PS system. \n Expected: \n 1. The preparation can finish successfully. \n</arg>
</arguments>
<msg timestamp="20191101 16:25:41.460" level="INFO">Step 1 
Description 
1. Prepare some patients /exams in PS system. 
Expected: 
1. The preparation can finish successfully. 
</msg>
<status status="PASS" starttime="20191101 16:25:41.460" endtime="20191101 16:25:41.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description: \n 1. Use the fuzzy query API to simalute the fuzzy query operation with patient`s accession number. \n Expected: \n The records count and information should be correct. \n</arg>
</arguments>
<msg timestamp="20191101 16:25:41.460" level="INFO">Step 2 
Description: 
1. Use the fuzzy query API to simalute the fuzzy query operation with patient`s accession number. 
Expected: 
The records count and information should be correct. 
</msg>
<status status="PASS" starttime="20191101 16:25:41.460" endtime="20191101 16:25:41.460"></status>
</kw>
<kw name="Platform Login User Pwd" library="PUMA_PlatformLibrary">
<doc>platform_login_user_pwd</doc>
<arguments>
<arg>admin</arg>
<arg>123456</arg>
</arguments>
<assign>
<var>${login_result}</var>
</assign>
<msg timestamp="20191101 16:25:41.460" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.460" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191101 16:25:41.460" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.491" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/Platform//account/login HTTP/1.1" 200 78</msg>
<msg timestamp="20191101 16:25:41.491" level="INFO">Platform.platform_login_user_pwd: The user login in successfully. [admin, 123456]</msg>
<msg timestamp="20191101 16:25:41.491" level="INFO">${login_result} = True</msg>
<status status="PASS" starttime="20191101 16:25:41.460" endtime="20191101 16:25:41.491"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${login_result}</arg>
</arguments>
<status status="PASS" starttime="20191101 16:25:41.491" endtime="20191101 16:25:41.491"></status>
</kw>
<kw name="Platform Worklist Fuzzy Query By Patientname" library="PUMA_PlatformLibrary">
<doc>platform_worklist_fuzzy_query_by_patientname</doc>
<arguments>
<arg>20</arg>
</arguments>
<assign>
<var>${Query_result}</var>
</assign>
<msg timestamp="20191101 16:25:41.506" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.506" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:41.506" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.553" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11892</msg>
<msg timestamp="20191101 16:25:41.569" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.569" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:41.569" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.585" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11892</msg>
<msg timestamp="20191101 16:25:41.585" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.600" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:41.600" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.600" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11529</msg>
<msg timestamp="20191101 16:25:41.616" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.616" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:41.616" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.631" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11574</msg>
<msg timestamp="20191101 16:25:41.631" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.631" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:41.631" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.647" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11542</msg>
<msg timestamp="20191101 16:25:41.663" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.663" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:41.678" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.694" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11588</msg>
<msg timestamp="20191101 16:25:41.694" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.710" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:41.710" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.710" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12236</msg>
<msg timestamp="20191101 16:25:41.725" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.725" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:41.741" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.741" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12243</msg>
<msg timestamp="20191101 16:25:41.741" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.756" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:41.756" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.772" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11659</msg>
<msg timestamp="20191101 16:25:41.772" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.772" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:41.788" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.788" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11708</msg>
<msg timestamp="20191101 16:25:41.803" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.803" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:41.803" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.819" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11598</msg>
<msg timestamp="20191101 16:25:41.819" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.835" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:41.835" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.835" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11304</msg>
<msg timestamp="20191101 16:25:41.850" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.850" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:41.850" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.866" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11504</msg>
<msg timestamp="20191101 16:25:41.866" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.881" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:41.881" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.881" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11037</msg>
<msg timestamp="20191101 16:25:41.897" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.897" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:41.897" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.913" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 10628</msg>
<msg timestamp="20191101 16:25:41.913" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.928" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:41.928" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.944" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 10625</msg>
<msg timestamp="20191101 16:25:41.944" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.944" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:41.960" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.975" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 10598</msg>
<msg timestamp="20191101 16:25:41.975" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:41.991" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:41.991" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.006" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 10628</msg>
<msg timestamp="20191101 16:25:42.006" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.006" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:42.006" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.022" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 10982</msg>
<msg timestamp="20191101 16:25:42.038" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.038" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:42.038" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.069" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12314</msg>
<msg timestamp="20191101 16:25:42.085" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.085" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:42.085" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.100" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:42.100" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.116" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:42.116" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.131" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:42.131" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.131" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:42.147" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.147" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:42.163" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.163" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:42.163" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.178" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:42.178" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.194" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:42.194" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.210" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:42.210" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.210" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:42.225" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.241" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:42.241" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.241" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:42.256" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.272" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:42.272" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.288" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:42.288" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.303" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:42.303" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.303" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:42.319" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.335" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:42.335" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.335" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:42.335" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.366" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:42.366" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.366" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:42.381" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.397" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12438</msg>
<msg timestamp="20191101 16:25:42.397" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.413" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:42.413" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.428" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12450</msg>
<msg timestamp="20191101 16:25:42.428" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.444" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:42.444" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.460" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12518</msg>
<msg timestamp="20191101 16:25:42.460" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.460" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:42.475" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.506" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12515</msg>
<msg timestamp="20191101 16:25:42.506" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.506" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:42.522" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.538" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 3810</msg>
<msg timestamp="20191101 16:25:42.600" level="INFO">{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
Platform.platform_worklist_fuzzy_query_by_patientname: There are [666] rows data queried out.
Platform.platform_worklist_fuzzy_query_by_patientname: The query data is correct!</msg>
<msg timestamp="20191101 16:25:42.600" level="INFO">${Query_result} = True</msg>
<status status="PASS" starttime="20191101 16:25:41.491" endtime="20191101 16:25:42.600"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Query_result}</arg>
<arg>The query result is correct.</arg>
</arguments>
<status status="PASS" starttime="20191101 16:25:42.600" endtime="20191101 16:25:42.600"></status>
</kw>
<kw name="Platform Logout" library="PUMA_PlatformLibrary">
<doc>platform_logout_user_pwd</doc>
<assign>
<var>${logoff_status}</var>
</assign>
<msg timestamp="20191101 16:25:42.600" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.600" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191101 16:25:42.600" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.616" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform//account/logOff HTTP/1.1" 302 127</msg>
<msg timestamp="20191101 16:25:42.616" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191101 16:25:42.616" level="INFO">Platform.platform_logout: Logoff successfully.</msg>
<msg timestamp="20191101 16:25:42.616" level="INFO">${logoff_status} = True</msg>
<status status="PASS" starttime="20191101 16:25:42.600" endtime="20191101 16:25:42.616"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${logoff_status}</arg>
</arguments>
<status status="PASS" starttime="20191101 16:25:42.616" endtime="20191101 16:25:42.616"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191101 16:25:41.444" endtime="20191101 16:25:42.616" critical="yes"></status>
</test>
<test id="s1-t15" name="SmokeTest_0015_Core_4184_07.01.04 Worklist workflow create a short cut with condition of patient type.">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 1 \n Description: \n 1. Prepare some patients/exams in PS system. \n Expected: \n 1. The preparation can finish successfully. \n</arg>
</arguments>
<msg timestamp="20191101 16:25:42.616" level="INFO">Step 1 
Description: 
1. Prepare some patients/exams in PS system. 
Expected: 
1. The preparation can finish successfully. 
</msg>
<status status="PASS" starttime="20191101 16:25:42.616" endtime="20191101 16:25:42.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 2 \n Description:\n 1.Clear the query condition with API in worklist. \n Expected Result:\n 1. The operation can execute successfully. \n</arg>
</arguments>
<msg timestamp="20191101 16:25:42.616" level="INFO">Step 2 
Description:
1.Clear the query condition with API in worklist. 
Expected Result:
1. The operation can execute successfully. 
</msg>
<status status="PASS" starttime="20191101 16:25:42.616" endtime="20191101 16:25:42.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 3 \n Description: \n 1. Use the query API to query all records of one patient type. \n Expected:\n 1. The query result should be correct. \n</arg>
</arguments>
<msg timestamp="20191101 16:25:42.616" level="INFO">Step 3 
Description: 
1. Use the query API to query all records of one patient type. 
Expected:
1. The query result should be correct. 
</msg>
<status status="PASS" starttime="20191101 16:25:42.616" endtime="20191101 16:25:42.616"></status>
</kw>
<kw name="Platform Login User Pwd" library="PUMA_PlatformLibrary">
<doc>platform_login_user_pwd</doc>
<arguments>
<arg>admin</arg>
<arg>123456</arg>
</arguments>
<assign>
<var>${login_result}</var>
</assign>
<msg timestamp="20191101 16:25:42.631" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.631" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191101 16:25:42.631" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.647" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/Platform//account/login HTTP/1.1" 200 78</msg>
<msg timestamp="20191101 16:25:42.663" level="INFO">Platform.platform_login_user_pwd: The user login in successfully. [admin, 123456]</msg>
<msg timestamp="20191101 16:25:42.663" level="INFO">${login_result} = True</msg>
<status status="PASS" starttime="20191101 16:25:42.616" endtime="20191101 16:25:42.663"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${login_result}</arg>
</arguments>
<status status="PASS" starttime="20191101 16:25:42.663" endtime="20191101 16:25:42.663"></status>
</kw>
<kw name="Platform Worklist Fuzzy Query By Patienttype" library="PUMA_PlatformLibrary">
<doc>platform_worklist_fuzzy_query_by_patienttype</doc>
<arguments>
<arg>门诊病人,住院病人</arg>
</arguments>
<assign>
<var>${Query_result}</var>
</assign>
<msg timestamp="20191101 16:25:42.663" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.663" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:42.663" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.694" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11892</msg>
<msg timestamp="20191101 16:25:42.694" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.710" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:42.710" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.710" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11892</msg>
<msg timestamp="20191101 16:25:42.725" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.725" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:42.725" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.725" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11529</msg>
<msg timestamp="20191101 16:25:42.741" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.741" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:42.756" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.756" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11574</msg>
<msg timestamp="20191101 16:25:42.772" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.772" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:42.772" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.788" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11542</msg>
<msg timestamp="20191101 16:25:42.788" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.788" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:42.803" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.803" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11588</msg>
<msg timestamp="20191101 16:25:42.803" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.819" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:42.819" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.835" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12236</msg>
<msg timestamp="20191101 16:25:42.835" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.835" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:42.835" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.850" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12243</msg>
<msg timestamp="20191101 16:25:42.866" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.866" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:42.866" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.881" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11659</msg>
<msg timestamp="20191101 16:25:42.881" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.881" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:42.897" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.897" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11708</msg>
<msg timestamp="20191101 16:25:42.913" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.913" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:42.913" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.928" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11598</msg>
<msg timestamp="20191101 16:25:42.928" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.944" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:42.944" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.944" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11304</msg>
<msg timestamp="20191101 16:25:42.960" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.960" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:42.960" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.975" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11504</msg>
<msg timestamp="20191101 16:25:42.975" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:42.991" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:42.991" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:43.006" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11037</msg>
<msg timestamp="20191101 16:25:43.006" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:43.006" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:43.022" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:43.022" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 10628</msg>
<msg timestamp="20191101 16:25:43.038" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:43.038" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:43.038" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:43.053" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 10563</msg>
<msg timestamp="20191101 16:25:43.053" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:43.053" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/Account/CheckLoginStatus HTTP/1.1" 200 4</msg>
<msg timestamp="20191101 16:25:43.069" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:43.069" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 7815</msg>
<msg timestamp="20191101 16:25:43.100" level="INFO">2,1
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
{'isFuzzy': '', 'patientName': None, 'patientID': None, 'accessionNumber': None, 'createDateRange': {'startTime': None, 'endTime': None}, 'shortcutDateRange': '', 'patientSex': '', 'reportStatus': '', 'reportPrintStatus': '', 'filmPrintStatus': '', 'printMode': '', 'modalityType': '', 'patientType': '', 'department': '', 'completeStatus': None, 'pagination': {'pageIndex': 1, 'pageSize': 20}, 'workListOrderBy': '', 'ExamName': '', 'CallingAE': ''}
Platform.platform_worklist_fuzzy_query_by_patienttype: There are [315] rows data queried out.
Platform.platform_worklist_fuzzy_query_by_patienttype: The query data is correct!</msg>
<msg timestamp="20191101 16:25:43.100" level="INFO">${Query_result} = {"Result": true, "worklist_data": [{"accessionNumber": "A20191101162351787504", "patientID": "P20191101162351787504", "patientName": "CN20191101162351787504", "studyDate": "2019-11-01", "studyTime": "...</msg>
<status status="PASS" starttime="20191101 16:25:42.663" endtime="20191101 16:25:43.100"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Query_result}</arg>
</arguments>
<assign>
<var>${Json_result}</var>
</assign>
<msg timestamp="20191101 16:25:43.116" level="INFO">${Json_result} = {'Result': True, 'worklist_data': [{'accessionNumber': 'A20191101162351787504', 'patientID': 'P20191101162351787504', 'patientName': 'CN20191101162351787504', 'studyDate': '2019-11-01', 'studyTime': '...</msg>
<status status="PASS" starttime="20191101 16:25:43.100" endtime="20191101 16:25:43.116"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Json_result}</arg>
<arg>Result</arg>
</arguments>
<assign>
<var>${Result}</var>
</assign>
<msg timestamp="20191101 16:25:43.147" level="INFO">${Result} = [True]</msg>
<status status="PASS" starttime="20191101 16:25:43.116" endtime="20191101 16:25:43.147"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Result}[0]</arg>
</arguments>
<status status="PASS" starttime="20191101 16:25:43.147" endtime="20191101 16:25:43.163"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${Json_result}</arg>
<arg>worklist_data</arg>
</arguments>
<assign>
<var>${query_data}</var>
</assign>
<msg timestamp="20191101 16:25:43.225" level="INFO">${query_data} = [[{'accessionNumber': 'A20191101162351787504', 'patientID': 'P20191101162351787504', 'patientName': 'CN20191101162351787504', 'studyDate': '2019-11-01', 'studyTime': '16:24:25', 'patientSex': 'F', 'pa...</msg>
<status status="PASS" starttime="20191101 16:25:43.163" endtime="20191101 16:25:43.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${query_data}</arg>
</arguments>
<msg timestamp="20191101 16:25:43.241" level="INFO">[[{'accessionNumber': 'A20191101162351787504', 'patientID': 'P20191101162351787504', 'patientName': 'CN20191101162351787504', 'studyDate': '2019-11-01', 'studyTime': '16:24:25', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101162351787504', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 16:25:38.260', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 16:25:38.270', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101161809146440', 'patientID': 'P20191101161809146440', 'patientName': 'CN20191101161809146440', 'studyDate': '2019-11-01', 'studyTime': '16:18:40', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101161809146440', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 16:23:45.817', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 16:23:45.823', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101161715740121', 'patientID': 'P20191101161715740121', 'patientName': 'CN20191101161715740121', 'studyDate': '2019-11-01', 'studyTime': '16:17:50', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101161715740121', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 16:22:50.123', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 16:22:50.130', 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101161634755694', 'patientID': 'P20191101161634755694', 'patientName': 'CN20191101161634755694', 'studyDate': '2019-11-01', 'studyTime': '16:17:05', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101161634755694', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 16:21:53.630', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 16:21:53.637', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101161543849379', 'patientID': 'P20191101161543849379', 'patientName': 'CN20191101161543849379', 'studyDate': '2019-11-01', 'studyTime': '16:16:15', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101161543849379', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 16:20:57.937', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 16:20:57.947', 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101161500755574', 'patientID': 'P20191101161500755574', 'patientName': 'CN20191101161500755574', 'studyDate': '2019-11-01', 'studyTime': '16:15:30', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101161500755574', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 16:20:01.727', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 16:20:01.737', 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101161042708365', 'patientID': 'P20191101161042708365', 'patientName': 'CN20191101161042708365', 'studyDate': '2019-11-01', 'studyTime': '16:11:14', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191101161042708365', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 16:12:55.700', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101160542779017', 'patientID': 'P20191101160542779017', 'patientName': 'CN20191101160542779017', 'studyDate': '2019-11-01', 'studyTime': '16:06:14', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101160542779017', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 16:09:30.573', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 16:09:29.540', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101155924028532', 'patientID': 'P20191101155924028532', 'patientName': 'CN20191101155924028532', 'studyDate': '2019-11-01', 'studyTime': '15:59:54', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101155924028532', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 16:04:08.743', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 16:04:07.570', 'reportCount': 2, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101155604153275', 'patientID': 'P20191101155604153275', 'patientName': 'CN20191101155604153275', 'studyDate': '2019-11-01', 'studyTime': '15:56:15', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101155552668885', 'patientID': 'P20191101155552668885', 'patientName': 'CN20191101155552668885', 'studyDate': '2019-11-01', 'studyTime': '15:55:58', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101155541309493', 'patientID': 'P20191101155541309493', 'patientName': 'CN20191101155541309493', 'studyDate': '2019-11-01', 'studyTime': '15:55:46', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101155510090705', 'patientID': 'P20191101155510090705', 'patientName': 'CN20191101155510090705', 'studyDate': '2019-11-01', 'studyTime': '15:55:39', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101155510090705', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101101132925282', 'patientID': 'P20191101101132925282', 'patientName': 'CN20191101101132925282', 'studyDate': '2019-11-01', 'studyTime': '10:12:02', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101101132925282', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 10:13:09.157', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 10:13:09.180', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101100547732952', 'patientID': 'P20191101100547732952', 'patientName': 'CN20191101100547732952', 'studyDate': '2019-11-01', 'studyTime': '10:06:22', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101100547732952', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 10:11:26.807', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 10:11:26.817', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101100456811010', 'patientID': 'P20191101100456811010', 'patientName': 'CN20191101100456811010', 'studyDate': '2019-11-01', 'studyTime': '10:05:27', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101100456811010', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 10:10:31.350', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 10:10:31.357', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101100405592195', 'patientID': 'P20191101100405592195', 'patientName': 'CN20191101100405592195', 'studyDate': '2019-11-01', 'studyTime': '10:04:37', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101100405592195', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 10:09:34.097', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 10:09:34.130', 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101100324404642', 'patientID': 'P20191101100324404642', 'patientName': 'CN20191101100324404642', 'studyDate': '2019-11-01', 'studyTime': '10:03:53', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101100324404642', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 10:08:38.637', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 10:08:38.843', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101100243482717', 'patientID': 'P20191101100243482717', 'patientName': 'CN20191101100243482717', 'studyDate': '2019-11-01', 'studyTime': '10:03:12', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101100243482717', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 10:07:43.227', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 10:07:43.233', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101095827863760', 'patientID': 'P20191101095827863760', 'patientName': 'CN20191101095827863760', 'studyDate': '2019-11-01', 'studyTime': '09:58:57', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191101095827863760', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 10:00:38.963', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101095326957122', 'patientID': 'P20191101095326957122', 'patientName': 'CN20191101095326957122', 'studyDate': '2019-11-01', 'studyTime': '09:54:02', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101095326957122', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 09:57:15.943', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 09:57:14.720', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101094701269124', 'patientID': 'P20191101094701269124', 'patientName': 'CN20191101094701269124', 'studyDate': '2019-11-01', 'studyTime': '09:47:37', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101094701269124', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-11-01 09:51:52.390', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-11-01 09:51:51.797', 'reportCount': 2, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101094341081377', 'patientID': 'P20191101094341081377', 'patientName': 'CN20191101094341081377', 'studyDate': '2019-11-01', 'studyTime': '09:43:55', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101094329971981', 'patientID': 'P20191101094329971981', 'patientName': 'CN20191101094329971981', 'studyDate': '2019-11-01', 'studyTime': '09:43:35', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101094318471965', 'patientID': 'P20191101094318471965', 'patientName': 'CN20191101094318471965', 'studyDate': '2019-11-01', 'studyTime': '09:43:24', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191101094237346913', 'patientID': 'P20191101094237346913', 'patientName': 'CN20191101094237346913', 'studyDate': '2019-11-01', 'studyTime': '09:43:12', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191101094237346913', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024172144656599', 'patientID': 'P20191024172144656599', 'patientName': 'CN20191024172144656599', 'studyDate': '2019-10-24', 'studyTime': '17:22:16', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191024172144656599', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-24 17:23:31.100', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-24 17:23:31.107', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024171610593661', 'patientID': 'P20191024171610593661', 'patientName': 'CN20191024171610593661', 'studyDate': '2019-10-24', 'studyTime': '17:16:41', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191024171610593661', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-24 17:21:38.280', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-24 17:21:38.290', 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024171519687345', 'patientID': 'P20191024171519687345', 'patientName': 'CN20191024171519687345', 'studyDate': '2019-10-24', 'studyTime': '17:15:51', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191024171519687345', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-24 17:20:41.837', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-24 17:20:41.847', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024171438736216', 'patientID': 'P20191024171438736216', 'patientName': 'CN20191024171438736216', 'studyDate': '2019-10-24', 'studyTime': '17:15:06', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191024171438736216', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-24 17:19:45.543', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-24 17:19:45.550', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024171347751775', 'patientID': 'P20191024171347751775', 'patientName': 'CN20191024171347751775', 'studyDate': '2019-10-24', 'studyTime': '17:14:21', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191024171347751775', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-24 17:18:49.167', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-24 17:18:49.177', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024171306861098', 'patientID': 'P20191024171306861098', 'patientName': 'CN20191024171306861098', 'studyDate': '2019-10-24', 'studyTime': '17:13:36', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191024171306861098', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-24 17:17:53.500', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-24 17:17:53.507', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024170847688889', 'patientID': 'P20191024170847688889', 'patientName': 'CN20191024170847688889', 'studyDate': '2019-10-24', 'studyTime': '17:09:21', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191024170847688889', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-24 17:11:00.000', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024170342016621', 'patientID': 'P20191024170342016621', 'patientName': 'CN20191024170342016621', 'studyDate': '2019-10-24', 'studyTime': '17:04:15', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191024170342016621', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-24 17:07:35.490', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-24 17:07:34.537', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024165726234887', 'patientID': 'P20191024165726234887', 'patientName': 'CN20191024165726234887', 'studyDate': '2019-10-24', 'studyTime': '16:57:55', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191024165726234887', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-24 17:02:07.097', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-24 17:02:06.750', 'reportCount': 2, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024165406484631', 'patientID': 'P20191024165406484631', 'patientName': 'CN20191024165406484631', 'studyDate': '2019-10-24', 'studyTime': '16:54:20', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024165355140866', 'patientID': 'P20191024165355140866', 'patientName': 'CN20191024165355140866', 'studyDate': '2019-10-24', 'studyTime': '16:54:00', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024165343703351', 'patientID': 'P20191024165343703351', 'patientName': 'CN20191024165343703351', 'studyDate': '2019-10-24', 'studyTime': '16:53:49', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024165302640798', 'patientID': 'P20191024165302640798', 'patientName': 'CN20191024165302640798', 'studyDate': '2019-10-24', 'studyTime': '16:53:35', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191024165302640798', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191024164430818581', 'patientID': 'P20191024164430818581', 'patientName': 'CN20191024164430818581', 'studyDate': '2019-10-24', 'studyTime': '16:44:44', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023165935810848', 'patientID': 'P20191023165935810848', 'patientName': 'CN20191023165935810848', 'studyDate': '2019-10-23', 'studyTime': '17:00:09', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023165935810848', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023165732701317', 'patientID': 'P20191023165732701317', 'patientName': 'CN20191023165732701317', 'studyDate': '2019-10-23', 'studyTime': '16:57:44', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023164026767938', 'patientID': 'P20191023164026767938', 'patientName': 'CN20191023164026767938', 'studyDate': '2019-10-23', 'studyTime': '16:41:04', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191023164026767938', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-23 16:42:45.600', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023162507805563', 'patientID': 'P20191023162507805563', 'patientName': 'CN20191023162507805563', 'studyDate': '2019-10-23', 'studyTime': '16:25:39', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191023162507805563', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-23 16:38:06.153', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023160147681617', 'patientID': 'P20191023160147681617', 'patientName': 'CN20191023160147681617', 'studyDate': '2019-10-23', 'studyTime': '16:02:18', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023160147681617', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-23 16:03:33.437', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-23 16:03:33.560', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023155609399931', 'patientID': 'P20191023155609399931', 'patientName': 'CN20191023155609399931', 'studyDate': '2019-10-23', 'studyTime': '15:56:43', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023155609399931', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-23 16:01:40.700', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-23 16:01:40.790', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023155526821751', 'patientID': 'P20191023155526821751', 'patientName': 'CN20191023155526821751', 'studyDate': '2019-10-23', 'studyTime': '15:55:59', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023155526821751', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-23 16:00:44.040', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-23 16:00:44.050', 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023155435696686', 'patientID': 'P20191023155435696686', 'patientName': 'CN20191023155435696686', 'studyDate': '2019-10-23', 'studyTime': '15:55:08', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023155435696686', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-23 15:59:48.637', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-23 15:59:48.647', 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023155344462247', 'patientID': 'P20191023155344462247', 'patientName': 'CN20191023155344462247', 'studyDate': '2019-10-23', 'studyTime': '15:54:18', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023155344462247', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-23 15:58:52.220', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-23 15:58:52.237', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023155303384068', 'patientID': 'P20191023155303384068', 'patientName': 'CN20191023155303384068', 'studyDate': '2019-10-23', 'studyTime': '15:53:33', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023155303384068', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-23 15:57:56.883', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-23 15:57:56.890', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023155122184304', 'patientID': 'P20191023155122184304', 'patientName': 'CN20191023155122184304', 'studyDate': '2019-10-23', 'studyTime': '15:51:53', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191023155122184304', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023154632418307', 'patientID': 'P20191023154632418307', 'patientName': 'CN20191023154632418307', 'studyDate': '2019-10-23', 'studyTime': '15:47:03', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023154632418307', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-23 15:50:09.850', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-23 15:50:08.907', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023154012990789', 'patientID': 'P20191023154012990789', 'patientName': 'CN20191023154012990789', 'studyDate': '2019-10-23', 'studyTime': '15:40:48', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023154012990789', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-23 15:44:57.887', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-23 15:44:57.277', 'reportCount': 2, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023153653928031', 'patientID': 'P20191023153653928031', 'patientName': 'CN20191023153653928031', 'studyDate': '2019-10-23', 'studyTime': '15:37:05', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023153419874119', 'patientID': 'P20191023153419874119', 'patientName': 'CN20191023153419874119', 'studyDate': '2019-10-23', 'studyTime': '15:34:30', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023150553473922', 'patientID': 'P20191023150553473922', 'patientName': 'CN20191023150553473922', 'studyDate': '2019-10-23', 'studyTime': '15:06:27', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023150553473922', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023150522380128', 'patientID': 'P20191023150522380128', 'patientName': 'CN20191023150522380128', 'studyDate': '2019-10-23', 'studyTime': '15:05:52', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023150522380128', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023150338036244', 'patientID': 'P20191023150338036244', 'patientName': 'CN20191023150338036244', 'studyDate': '2019-10-23', 'studyTime': '15:04:12', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191023150338036244', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023150307098708', 'patientID': 'P20191023150307098708', 'patientName': 'CN20191023150307098708', 'studyDate': '2019-10-23', 'studyTime': '15:03:37', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023150307098708', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023150145301725', 'patientID': 'P20191023150145301725', 'patientName': 'CN20191023150145301725', 'studyDate': '2019-10-23', 'studyTime': '15:02:17', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023150145301725', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023150123004822', 'patientID': 'P20191023150123004822', 'patientName': 'CN20191023150123004822', 'studyDate': '2019-10-23', 'studyTime': '15:01:28', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023150111801682', 'patientID': 'P20191023150111801682', 'patientName': 'CN20191023150111801682', 'studyDate': '2019-10-23', 'studyTime': '15:01:17', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191023150030754754', 'patientID': 'P20191023150030754754', 'patientName': 'CN20191023150030754754', 'studyDate': '2019-10-23', 'studyTime': '15:01:02', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191023150030754754', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191021153247939219', 'patientID': 'P20191021153247939219', 'patientName': 'CN20191021153247939219', 'studyDate': '2019-10-21', 'studyTime': '15:32:53', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191021153206930748', 'patientID': 'P20191021153206930748', 'patientName': 'CN20191021153206930748', 'studyDate': '2019-10-21', 'studyTime': '15:32:40', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191021153206930748', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191018104829102614', 'patientID': 'P20191018104829102614', 'patientName': 'CN20191018104829102614', 'studyDate': '2019-10-18', 'studyTime': '10:48:57', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191018104829102614', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-18 10:50:38.317', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191018104329137638', 'patientID': 'P20191018104329137638', 'patientName': 'CN20191018104329137638', 'studyDate': '2019-10-18', 'studyTime': '10:44:02', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191018104329137638', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-18 10:47:16.810', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-18 10:47:15.797', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191018103711671274', 'patientID': 'P20191018103711671274', 'patientName': 'CN20191018103711671274', 'studyDate': '2019-10-18', 'studyTime': '10:37:42', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191018103711671274', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-18 10:41:54.423', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-18 10:41:53.813', 'reportCount': 2, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191018103351875966', 'patientID': 'P20191018103351875966', 'patientName': 'CN20191018103351875966', 'studyDate': '2019-10-18', 'studyTime': '10:34:02', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191018103340850340', 'patientID': 'P20191018103340850340', 'patientName': 'CN20191018103340850340', 'studyDate': '2019-10-18', 'studyTime': '10:33:46', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191018103329642708', 'patientID': 'P20191018103329642708', 'patientName': 'CN20191018103329642708', 'studyDate': '2019-10-18', 'studyTime': '10:33:35', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191018103258486946', 'patientID': 'P20191018103258486946', 'patientName': 'CN20191018103258486946', 'studyDate': '2019-10-18', 'studyTime': '10:33:26', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191018103258486946', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017165327956325', 'patientID': 'P20191017165327956325', 'patientName': 'CN20191017165327956325', 'studyDate': '2019-10-17', 'studyTime': '16:54:01', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017165327956325', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 16:55:14.050', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 16:55:14.073', 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017164755455888', 'patientID': 'P20191017164755455888', 'patientName': 'CN20191017164755455888', 'studyDate': '2019-10-17', 'studyTime': '16:48:27', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017164755455888', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 16:53:25.553', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 16:53:25.563', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017164704518326', 'patientID': 'P20191017164704518326', 'patientName': 'CN20191017164704518326', 'studyDate': '2019-10-17', 'studyTime': '16:47:36', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017164704518326', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 16:52:30.103', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 16:52:30.110', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017164613565136', 'patientID': 'P20191017164613565136', 'patientName': 'CN20191017164613565136', 'studyDate': '2019-10-17', 'studyTime': '16:46:47', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017164613565136', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 16:51:34.720', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 16:51:34.727', 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017164522596318', 'patientID': 'P20191017164522596318', 'patientName': 'CN20191017164522596318', 'studyDate': '2019-10-17', 'studyTime': '16:45:56', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017164522596318', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 16:50:38.210', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 16:50:38.217', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017164441455642', 'patientID': 'P20191017164441455642', 'patientName': 'CN20191017164441455642', 'studyDate': '2019-10-17', 'studyTime': '16:45:10', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017164441455642', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 16:49:41.830', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 16:49:41.843', 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017164017795155', 'patientID': 'P20191017164017795155', 'patientName': 'CN20191017164017795155', 'studyDate': '2019-10-17', 'studyTime': '16:40:55', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20191017164017795155', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 16:42:35.797', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017163516966647', 'patientID': 'P20191017163516966647', 'patientName': 'CN20191017163516966647', 'studyDate': '2019-10-17', 'studyTime': '16:35:55', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017163516966647', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 16:39:05.253', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 16:39:04.503', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017162849957949', 'patientID': 'P20191017162849957949', 'patientName': 'CN20191017162849957949', 'studyDate': '2019-10-17', 'studyTime': '16:29:25', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017162849957949', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 16:33:42.290', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 16:33:41.683', 'reportCount': 2, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017162531070638', 'patientID': 'P20191017162531070638', 'patientName': 'CN20191017162531070638', 'studyDate': '2019-10-17', 'studyTime': '16:25:39', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017162519904097', 'patientID': 'P20191017162519904097', 'patientName': 'CN20191017162519904097', 'studyDate': '2019-10-17', 'studyTime': '16:25:25', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017162508601233', 'patientID': 'P20191017162508601233', 'patientName': 'CN20191017162508601233', 'studyDate': '2019-10-17', 'studyTime': '16:25:14', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017162426999885', 'patientID': 'P20191017162426999885', 'patientName': 'CN20191017162426999885', 'studyDate': '2019-10-17', 'studyTime': '16:25:00', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017162426999885', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017162154398019', 'patientID': 'P20191017162154398019', 'patientName': 'CN20191017162154398019', 'studyDate': '2019-10-17', 'studyTime': '16:22:04', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017162059641921', 'patientID': 'P20191017162059641921', 'patientName': 'CN20191017162059641921', 'studyDate': '2019-10-17', 'studyTime': '16:21:09', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017161940386436', 'patientID': 'P20191017161940386436', 'patientName': 'CN20191017161940386436', 'studyDate': '2019-10-17', 'studyTime': '16:19:48', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017102445600845', 'patientID': 'P20191017102445600845', 'patientName': 'CN20191017102445600845', 'studyDate': '2019-10-17', 'studyTime': '10:25:18', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017102445600845', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 10:26:32.633', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 10:26:32.643', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017100910542843', 'patientID': 'P20191017100910542843', 'patientName': 'CN20191017100910542843', 'studyDate': '2019-10-17', 'studyTime': '10:09:38', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017100910542843', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 10:14:31.523', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 10:14:31.530', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017100829445486', 'patientID': 'P20191017100829445486', 'patientName': 'CN20191017100829445486', 'studyDate': '2019-10-17', 'studyTime': '10:08:57', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017100829445486', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 10:13:34.840', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 10:13:34.963', 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017100748536624', 'patientID': 'P20191017100748536624', 'patientName': 'CN20191017100748536624', 'studyDate': '2019-10-17', 'studyTime': '10:08:17', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017100748536624', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 10:12:38.447', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 10:12:38.453', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017100707360294', 'patientID': 'P20191017100707360294', 'patientName': 'CN20191017100707360294', 'studyDate': '2019-10-17', 'studyTime': '10:07:37', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017100707360294', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 10:11:43.127', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 10:11:43.137', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017100616376425', 'patientID': 'P20191017100616376425', 'patientName': 'CN20191017100616376425', 'studyDate': '2019-10-17', 'studyTime': '10:06:47', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017100616376425', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 10:10:47.683', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 10:10:47.690', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017100302602000', 'patientID': 'P20191017100302602000', 'patientName': 'CN20191017100302602000', 'studyDate': '2019-10-17', 'studyTime': '10:03:32', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017100302602000', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 10:04:38.400', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 10:04:38.410', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017095853570431', 'patientID': 'P20191017095853570431', 'patientName': 'CN20191017095853570431', 'studyDate': '2019-10-17', 'studyTime': '09:59:27', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017095853570431', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 10:00:39.953', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 10:00:39.980', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017095407847062', 'patientID': 'P20191017095407847062', 'patientName': 'CN20191017095407847062', 'studyDate': '2019-10-17', 'studyTime': '09:54:37', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017095407847062', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 09:55:44.310', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 09:55:44.327', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017095113777898', 'patientID': 'P20191017095113777898', 'patientName': 'CN20191017095113777898', 'studyDate': '2019-10-17', 'studyTime': '09:51:47', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017095113777898', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-17 09:53:00.580', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-17 09:53:00.587', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017094020804467', 'patientID': 'P20191017094020804467', 'patientName': 'CN20191017094020804467', 'studyDate': '2019-10-17', 'studyTime': '09:40:50', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017094020804467', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191017093701763631', 'patientID': 'P20191017093701763631', 'patientName': 'CN20191017093701763631', 'studyDate': '2019-10-17', 'studyTime': '09:37:35', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191017093701763631', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191016143409908620', 'patientID': 'P20191016143409908620', 'patientName': 'CN20191016143409908620', 'studyDate': '2019-10-16', 'studyTime': '14:34:40', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191016143409908620', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-16 14:35:46.750', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-16 14:35:46.760', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191016141455027361', 'patientID': 'P20191016141455027361', 'patientName': 'CN20191016141455027361', 'studyDate': '2019-10-16', 'studyTime': '14:15:24', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191016141455027361', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-16 14:16:32.063', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-16 14:16:32.080', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191016141002180666', 'patientID': 'P20191016141002180666', 'patientName': 'CN20191016141002180666', 'studyDate': '2019-10-16', 'studyTime': '14:10:29', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191016141002180666', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-16 14:11:38.430', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-16 14:11:38.440', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191016140735633606', 'patientID': 'P20191016140735633606', 'patientName': 'CN20191016140735633606', 'studyDate': '2019-10-16', 'studyTime': '14:08:04', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191016140735633606', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-16 14:09:11.753', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-16 14:09:11.780', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191016135937736399', 'patientID': 'P20191016135937736399', 'patientName': 'CN20191016135937736399', 'studyDate': '2019-10-16', 'studyTime': '14:00:09', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191016135937736399', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-16 14:01:24.600', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-16 14:01:24.607', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191016135533358820', 'patientID': 'P20191016135533358820', 'patientName': 'CN20191016135533358820', 'studyDate': '2019-10-16', 'studyTime': '13:56:04', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191016135533358820', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-16 13:57:16.713', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-16 13:57:16.757', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014171955400770', 'patientID': 'P20191014171955400770', 'patientName': 'CN20191014171955400770', 'studyDate': '2019-10-14', 'studyTime': '17:20:27', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014171955400770', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 17:25:26.770', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 17:25:26.780', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014171904385073', 'patientID': 'P20191014171904385073', 'patientName': 'CN20191014171904385073', 'studyDate': '2019-10-14', 'studyTime': '17:19:37', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014171904385073', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 17:24:30.693', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 17:24:30.700', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014171823431894', 'patientID': 'P20191014171823431894', 'patientName': 'CN20191014171823431894', 'studyDate': '2019-10-14', 'studyTime': '17:18:52', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014171823431894', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 17:23:34.100', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 17:23:34.120', 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014171742009966', 'patientID': 'P20191014171742009966', 'patientName': 'CN20191014171742009966', 'studyDate': '2019-10-14', 'studyTime': '17:18:12', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014171742009966', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 17:22:38.740', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 17:22:38.750', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014171651103652', 'patientID': 'P20191014171651103652', 'patientName': 'CN20191014171651103652', 'studyDate': '2019-10-14', 'studyTime': '17:17:22', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014171651103652', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 17:21:42.160', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 17:21:42.173', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014164754520904', 'patientID': 'P20191014164754520904', 'patientName': 'CN20191014164754520904', 'studyDate': '2019-10-14', 'studyTime': '16:48:27', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014164754520904', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:50:37.140', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:50:37.147', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014164713239610', 'patientID': 'P20191014164713239610', 'patientName': 'CN20191014164713239610', 'studyDate': '2019-10-14', 'studyTime': '16:47:42', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014164713239610', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:49:40.713', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:49:40.720', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014163853901111', 'patientID': 'P20191014163853901111', 'patientName': 'CN20191014163853901111', 'studyDate': '2019-10-14', 'studyTime': '16:39:22', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014163853901111', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:41:26.883', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:41:26.907', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014163810932310', 'patientID': 'P20191014163810932310', 'patientName': 'CN20191014163810932310', 'studyDate': '2019-10-14', 'studyTime': '16:38:42', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014163810932310', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:40:30.473', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:40:30.480', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014163403478863', 'patientID': 'P20191014163403478863', 'patientName': 'CN20191014163403478863', 'studyDate': '2019-10-14', 'studyTime': '16:34:32', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014163403478863', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:36:36.533', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:36:36.543', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014163322103810', 'patientID': 'P20191014163322103810', 'patientName': 'CN20191014163322103810', 'studyDate': '2019-10-14', 'studyTime': '16:33:52', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014163322103810', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:35:40.107', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:35:40.123', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014162906056606', 'patientID': 'P20191014162906056606', 'patientName': 'CN20191014162906056606', 'studyDate': '2019-10-14', 'studyTime': '16:29:37', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014162906056606', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:31:39.117', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:31:39.123', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014162815103418', 'patientID': 'P20191014162815103418', 'patientName': 'CN20191014162815103418', 'studyDate': '2019-10-14', 'studyTime': '16:28:46', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014162815103418', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:30:42.663', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:30:42.673', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014160847178045', 'patientID': 'P20191014160847178045', 'patientName': 'CN20191014160847178045', 'studyDate': '2019-10-14', 'studyTime': '16:09:16', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014160847178045', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:11:22.113', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:11:22.123', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014160806264874', 'patientID': 'P20191014160806264874', 'patientName': 'CN20191014160806264874', 'studyDate': '2019-10-14', 'studyTime': '16:08:36', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014160806264874', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:10:25.097', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:10:25.113', 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014160333295772', 'patientID': 'P20191014160333295772', 'patientName': 'CN20191014160333295772', 'studyDate': '2019-10-14', 'studyTime': '16:04:06', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014160333295772', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:06:16.107', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:06:16.113', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014160252358221', 'patientID': 'P20191014160252358221', 'patientName': 'CN20191014160252358221', 'studyDate': '2019-10-14', 'studyTime': '16:03:21', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014160252358221', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:05:19.063', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:05:19.087', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014155755708988', 'patientID': 'P20191014155755708988', 'patientName': 'CN20191014155755708988', 'studyDate': '2019-10-14', 'studyTime': '15:58:26', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014155755708988', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 16:00:28.523', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 16:00:28.530', 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014155703974544', 'patientID': 'P20191014155703974544', 'patientName': 'CN20191014155703974544', 'studyDate': '2019-10-14', 'studyTime': '15:57:36', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014155703974544', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 15:59:32.090', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 15:59:32.103', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014153601784817', 'patientID': 'P20191014153601784817', 'patientName': 'CN20191014153601784817', 'studyDate': '2019-10-14', 'studyTime': '15:36:31', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014153601784817', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 15:41:28.643', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 15:41:28.650', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014153520737890', 'patientID': 'P20191014153520737890', 'patientName': 'CN20191014153520737890', 'studyDate': '2019-10-14', 'studyTime': '15:35:50', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014153520737890', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 15:40:33.177', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 15:40:33.200', 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014153438003460', 'patientID': 'P20191014153438003460', 'patientName': 'CN20191014153438003460', 'studyDate': '2019-10-14', 'studyTime': '15:35:05', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014153438003460', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 15:39:36.610', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 15:39:36.623', 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014153346940893', 'patientID': 'P20191014153346940893', 'patientName': 'CN20191014153346940893', 'studyDate': '2019-10-14', 'studyTime': '15:34:20', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014153346940893', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 15:38:41.130', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 15:38:41.140', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191014153304518966', 'patientID': 'P20191014153304518966', 'patientName': 'CN20191014153304518966', 'studyDate': '2019-10-14', 'studyTime': '15:33:35', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191014153304518966', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-14 15:37:45.643', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-14 15:37:45.653', 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191011134029101725', 'patientID': 'P20191011134029101725', 'patientName': 'CN20191011134029101725', 'studyDate': '2019-10-11', 'studyTime': '13:41:00', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191011134029101725', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-11 13:46:07.067', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-11 13:46:07.077', 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191011133938195410', 'patientID': 'P20191011133938195410', 'patientName': 'CN20191011133938195410', 'studyDate': '2019-10-11', 'studyTime': '13:40:10', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191011133938195410', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-11 13:45:11.783', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-11 13:45:11.790', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191011133857257857', 'patientID': 'P20191011133857257857', 'patientName': 'CN20191011133857257857', 'studyDate': '2019-10-11', 'studyTime': '13:39:25', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191011133857257857', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-11 13:44:15.090', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-11 13:44:15.097', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191011133816351554', 'patientID': 'P20191011133816351554', 'patientName': 'CN20191011133816351554', 'studyDate': '2019-10-11', 'studyTime': '13:38:45', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191011133816351554', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-11 13:43:18.123', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-11 13:43:18.130', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191011133734632751', 'patientID': 'P20191011133734632751', 'patientName': 'CN20191011133734632751', 'studyDate': '2019-10-11', 'studyTime': '13:38:05', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191011133734632751', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-11 13:42:22.697', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-11 13:42:22.703', 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010160251795173', 'patientID': 'P20191010160251795173', 'patientName': 'CN20191010160251795173', 'studyDate': '2019-10-10', 'studyTime': '16:03:19', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010160251795173', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 16:08:14.330', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 16:08:14.347', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010160210739577', 'patientID': 'P20191010160210739577', 'patientName': 'CN20191010160210739577', 'studyDate': '2019-10-10', 'studyTime': '16:02:39', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010160210739577', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 16:07:17.920', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 16:07:18.003', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010160129822084', 'patientID': 'P20191010160129822084', 'patientName': 'CN20191010160129822084', 'studyDate': '2019-10-10', 'studyTime': '16:01:59', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010160129822084', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 16:06:21.527', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 16:06:21.533', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010160048292734', 'patientID': 'P20191010160048292734', 'patientName': 'CN20191010160048292734', 'studyDate': '2019-10-10', 'studyTime': '16:01:18', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010160048292734', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 16:05:25.110', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 16:05:25.117', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010155956714566', 'patientID': 'P20191010155956714566', 'patientName': 'CN20191010155956714566', 'studyDate': '2019-10-10', 'studyTime': '16:00:28', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010155956714566', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 16:04:28.707', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 16:04:28.717', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010134406669827', 'patientID': 'P20191010134406669827', 'patientName': 'CN20191010134406669827', 'studyDate': '2019-10-10', 'studyTime': '13:44:38', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010134406669827', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 13:49:37.297', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 13:49:37.303', 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010134315763508', 'patientID': 'P20191010134315763508', 'patientName': 'CN20191010134315763508', 'studyDate': '2019-10-10', 'studyTime': '13:43:48', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010134315763508', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 13:48:42.120', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 13:48:42.127', 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010134234794706', 'patientID': 'P20191010134234794706', 'patientName': 'CN20191010134234794706', 'studyDate': '2019-10-10', 'studyTime': '13:43:03', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010134234794706', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 13:47:45.777', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 13:47:45.783', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010134151753476', 'patientID': 'P20191010134151753476', 'patientName': 'CN20191010134151753476', 'studyDate': '2019-10-10', 'studyTime': '13:42:22', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010134151753476', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 13:46:49.283', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 13:46:49.307', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010134108359021', 'patientID': 'P20191010134108359021', 'patientName': 'CN20191010134108359021', 'studyDate': '2019-10-10', 'studyTime': '13:41:37', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010134108359021', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 13:45:52.840', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 13:45:52.850', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010133853865953', 'patientID': 'P20191010133853865953', 'patientName': 'CN20191010133853865953', 'studyDate': '2019-10-10', 'studyTime': '13:39:27', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010133853865953', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 13:40:40.157', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 13:40:40.163', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010112307017746', 'patientID': 'P20191010112307017746', 'patientName': 'CN20191010112307017746', 'studyDate': '2019-10-10', 'studyTime': '11:23:37', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010112307017746', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 11:24:42.577', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 11:24:42.583', 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010112141970762', 'patientID': 'P20191010112141970762', 'patientName': 'CN20191010112141970762', 'studyDate': '2019-10-10', 'studyTime': '11:22:12', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010112141970762', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010112025423789', 'patientID': 'P20191010112025423789', 'patientName': 'CN20191010112025423789', 'studyDate': '2019-10-10', 'studyTime': '11:20:57', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010112025423789', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010111821970507', 'patientID': 'P20191010111821970507', 'patientName': 'CN20191010111821970507', 'studyDate': '2019-10-10', 'studyTime': '11:18:51', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010111821970507', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010111516832642', 'patientID': 'P20191010111516832642', 'patientName': 'CN20191010111516832642', 'studyDate': '2019-10-10', 'studyTime': '11:15:46', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010111516832642', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010110602441302', 'patientID': 'P20191010110602441302', 'patientName': 'CN20191010110602441302', 'studyDate': '2019-10-10', 'studyTime': '11:06:31', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010110602441302', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010110521503752', 'patientID': 'P20191010110521503752', 'patientName': 'CN20191010110521503752', 'studyDate': '2019-10-10', 'studyTime': '11:05:51', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010110521503752', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010110440581826', 'patientID': 'P20191010110440581826', 'patientName': 'CN20191010110440581826', 'studyDate': '2019-10-10', 'studyTime': '11:05:06', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010110440581826', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010110349644258', 'patientID': 'P20191010110349644258', 'patientName': 'CN20191010110349644258', 'studyDate': '2019-10-10', 'studyTime': '11:04:21', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010110349644258', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010110306347327', 'patientID': 'P20191010110306347327', 'patientName': 'CN20191010110306347327', 'studyDate': '2019-10-10', 'studyTime': '11:03:36', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010110306347327', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010110120019073', 'patientID': 'P20191010110120019073', 'patientName': 'CN20191010110120019073', 'studyDate': '2019-10-10', 'studyTime': '11:01:51', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010110120019073', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010110006456471', 'patientID': 'P20191010110006456471', 'patientName': 'CN20191010110006456471', 'studyDate': '2019-10-10', 'studyTime': '11:00:36', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010110006456471', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010104807720577', 'patientID': 'P20191010104807720577', 'patientName': 'CN20191010104807720577', 'studyDate': '2019-10-10', 'studyTime': '10:48:36', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010104807720577', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 10:53:27.833', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 10:53:27.840', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010104724214839', 'patientID': 'P20191010104724214839', 'patientName': 'CN20191010104724214839', 'studyDate': '2019-10-10', 'studyTime': '10:47:56', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010104724214839', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 10:52:31.333', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 10:52:31.343', 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010104642893018', 'patientID': 'P20191010104642893018', 'patientName': 'CN20191010104642893018', 'studyDate': '2019-10-10', 'studyTime': '10:47:11', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010104642893018', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 10:51:36.073', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 10:51:36.080', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010104551982177', 'patientID': 'P20191010104551982177', 'patientName': 'CN20191010104551982177', 'studyDate': '2019-10-10', 'studyTime': '10:46:25', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010104551982177', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 10:50:40.730', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 10:50:40.740', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010104511031472', 'patientID': 'P20191010104511031472', 'patientName': 'CN20191010104511031472', 'studyDate': '2019-10-10', 'studyTime': '10:45:40', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010104511031472', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 10:49:44.143', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 10:49:44.153', 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010104129793670', 'patientID': 'P20191010104129793670', 'patientName': 'CN20191010104129793670', 'studyDate': '2019-10-10', 'studyTime': '10:42:00', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010104129793670', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 10:47:01.347', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 10:47:01.357', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010104038887163', 'patientID': 'P20191010104038887163', 'patientName': 'CN20191010104038887163', 'studyDate': '2019-10-10', 'studyTime': '10:41:10', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010104038887163', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 10:46:04.287', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 10:46:04.297', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010103957896841', 'patientID': 'P20191010103957896841', 'patientName': 'CN20191010103957896841', 'studyDate': '2019-10-10', 'studyTime': '10:40:25', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010103957896841', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 10:45:07.777', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 10:45:07.787', 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010103917012245', 'patientID': 'P20191010103917012245', 'patientName': 'CN20191010103917012245', 'studyDate': '2019-10-10', 'studyTime': '10:39:45', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010103917012245', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 10:44:11.377', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 10:44:11.383', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010103836096929', 'patientID': 'P20191010103836096929', 'patientName': 'CN20191010103836096929', 'studyDate': '2019-10-10', 'studyTime': '10:39:05', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010103836096929', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-10 10:43:15.840', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-10 10:43:15.863', 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010103549734117', 'patientID': 'P20191010103549734117', 'patientName': 'CN20191010103549734117', 'studyDate': '2019-10-10', 'studyTime': '10:36:20', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010103549734117', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010103458796550', 'patientID': 'P20191010103458796550', 'patientName': 'CN20191010103458796550', 'studyDate': '2019-10-10', 'studyTime': '10:35:30', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010103458796550', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010103417890245', 'patientID': 'P20191010103417890245', 'patientName': 'CN20191010103417890245', 'studyDate': '2019-10-10', 'studyTime': '10:34:45', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010103417890245', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010103337001091', 'patientID': 'P20191010103337001091', 'patientName': 'CN20191010103337001091', 'studyDate': '2019-10-10', 'studyTime': '10:34:05', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010103337001091', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010103253826489', 'patientID': 'P20191010103253826489', 'patientName': 'CN20191010103253826489', 'studyDate': '2019-10-10', 'studyTime': '10:33:25', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010103253826489', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010102237134937', 'patientID': 'P20191010102237134937', 'patientName': 'CN20191010102237134937', 'studyDate': '2019-10-10', 'studyTime': '10:23:10', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010102237134937', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010102146025736', 'patientID': 'P20191010102146025736', 'patientName': 'CN20191010102146025736', 'studyDate': '2019-10-10', 'studyTime': '10:22:19', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010102146025736', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010102104459380', 'patientID': 'P20191010102104459380', 'patientName': 'CN20191010102104459380', 'studyDate': '2019-10-10', 'studyTime': '10:21:34', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010102104459380', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010102021344566', 'patientID': 'P20191010102021344566', 'patientName': 'CN20191010102021344566', 'studyDate': '2019-10-10', 'studyTime': '10:20:49', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010102021344566', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191010101929449627', 'patientID': 'P20191010101929449627', 'patientName': 'CN20191010101929449627', 'studyDate': '2019-10-10', 'studyTime': '10:20:04', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191010101929449627', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009105501006700', 'patientID': 'P20191009105501006700', 'patientName': 'CN20191009105501006700', 'studyDate': '2019-10-09', 'studyTime': '10:55:33', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009105501006700', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-10-09 22:04:06.090', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-10-09 22:04:06.100', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009105419881609', 'patientID': 'P20191009105419881609', 'patientName': 'CN20191009105419881609', 'studyDate': '2019-10-09', 'studyTime': '10:54:48', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009105419881609', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-10-09 22:05:02.540', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-10-09 22:05:02.560', 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009105338959681', 'patientID': 'P20191009105338959681', 'patientName': 'CN20191009105338959681', 'studyDate': '2019-10-09', 'studyTime': '10:54:08', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009105338959681', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009105256256500', 'patientID': 'P20191009105256256500', 'patientName': 'CN20191009105256256500', 'studyDate': '2019-10-09', 'studyTime': '10:53:28', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009105256256500', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009105215071835', 'patientID': 'P20191009105215071835', 'patientName': 'CN20191009105215071835', 'studyDate': '2019-10-09', 'studyTime': '10:52:43', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009105215071835', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009102342161377', 'patientID': 'P20191009102342161377', 'patientName': 'CN20191009102342161377', 'studyDate': '2019-10-09', 'studyTime': '10:24:13', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009102342161377', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-09 23:51:31.633', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-09 23:51:31.650', 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009102251101515', 'patientID': 'P20191009102251101515', 'patientName': 'CN20191009102251101515', 'studyDate': '2019-10-09', 'studyTime': '10:23:22', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009102251101515', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-09 23:52:28.093', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-09 23:52:28.100', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009102209898137', 'patientID': 'P20191009102209898137', 'patientName': 'CN20191009102209898137', 'studyDate': '2019-10-09', 'studyTime': '10:22:37', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009102209898137', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-09 23:53:23.553', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-09 23:53:23.560', 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009102128913709', 'patientID': 'P20191009102128913709', 'patientName': 'CN20191009102128913709', 'studyDate': '2019-10-09', 'studyTime': '10:21:57', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009102128913709', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-09 23:54:19.070', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-09 23:54:19.080', 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009102047694908', 'patientID': 'P20191009102047694908', 'patientName': 'CN20191009102047694908', 'studyDate': '2019-10-09', 'studyTime': '10:21:17', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009102047694908', 'bodayPart': None, 'filmPrintStatus': 1, 'filmPrintTime': '2019-10-09 23:55:14.503', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 1, 'reportPrintTime': '2019-10-09 23:55:14.513', 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20191009101320760227', 'patientID': 'P20191009101320760227', 'patientName': 'CN20191009101320760227', 'studyDate': '2019-10-09', 'studyTime': '10:13:52', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20191009101320760227', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 5, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 5, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927164000570746', 'patientID': 'P20190927164000570746', 'patientName': 'CN20190927164000570746', 'studyDate': '2019-09-27', 'studyTime': '16:40:27', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927164000570746', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-27 17:10:17.513', 'filmDeleteStatus': 0, 'imageCount': 5, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-09-27 17:10:17.540', 'reportCount': 5, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927163417835013', 'patientID': 'P20190927163417835013', 'patientName': 'CN20190927163417835013', 'studyDate': '2019-09-27', 'studyTime': '16:34:47', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927163417835013', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927163336901631', 'patientID': 'P20190927163336901631', 'patientName': 'CN20190927163336901631', 'studyDate': '2019-09-27', 'studyTime': '16:34:07', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927163336901631', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927163245690885', 'patientID': 'P20190927163245690885', 'patientName': 'CN20190927163245690885', 'studyDate': '2019-09-27', 'studyTime': '16:33:17', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927163245690885', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927161636047375', 'patientID': 'P20190927161636047375', 'patientName': 'CN20190927161636047375', 'studyDate': '2019-09-27', 'studyTime': '16:17:07', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927161636047375', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927105826242723', 'patientID': 'P20190927105826242723', 'patientName': 'CN20190927105826242723', 'studyDate': '2019-09-27', 'studyTime': '10:58:56', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190927105826242723', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-27 11:10:39.767', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927105526022866', 'patientID': 'P20190927105526022866', 'patientName': 'CN20190927105526022866', 'studyDate': '2019-09-27', 'studyTime': '10:55:56', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927105526022866', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-27 13:59:33.563', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927105024617800', 'patientID': 'P20190927105024617800', 'patientName': 'CN20190927105024617800', 'studyDate': '2019-09-27', 'studyTime': '10:50:56', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927105024617800', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-27 14:00:31.600', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-09-27 14:00:31.630', 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927104417974277', 'patientID': 'P20190927104417974277', 'patientName': 'CN20190927104417974277', 'studyDate': '2019-09-27', 'studyTime': '10:44:46', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927104417974277', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-27 10:48:50.233', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-09-27 10:48:49.417', 'reportCount': 2, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927104058380319', 'patientID': 'P20190927104058380319', 'patientName': 'CN20190927104058380319', 'studyDate': '2019-09-27', 'studyTime': '10:41:08', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927104047302129', 'patientID': 'P20190927104047302129', 'patientName': 'CN20190927104047302129', 'studyDate': '2019-09-27', 'studyTime': '10:40:52', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927104036177118', 'patientID': 'P20190927104036177118', 'patientName': 'CN20190927104036177118', 'studyDate': '2019-09-27', 'studyTime': '10:40:41', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927103954817684', 'patientID': 'P20190927103954817684', 'patientName': 'CN20190927103954817684', 'studyDate': '2019-09-27', 'studyTime': '10:40:26', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927103954817684', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927100029339182', 'patientID': 'P20190927100029339182', 'patientName': 'CN20190927100029339182', 'studyDate': '2019-09-27', 'studyTime': '10:01:01', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190927100029339182', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-27 10:02:42.463', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927095545981047', 'patientID': 'P20190927095545981047', 'patientName': 'CN20190927095545981047', 'studyDate': '2019-09-27', 'studyTime': '09:56:20', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927095545981047', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-27 09:59:17.210', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-09-27 09:59:16.160', 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927094614330297', 'patientID': 'P20190927094614330297', 'patientName': 'CN20190927094614330297', 'studyDate': '2019-09-27', 'studyTime': '09:46:45', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927094614330297', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-27 09:49:46.100', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-09-27 09:49:45.417', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927094001810321', 'patientID': 'P20190927094001810321', 'patientName': 'CN20190927094001810321', 'studyDate': '2019-09-27', 'studyTime': '09:40:32', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927094001810321', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-27 09:43:33.247', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-09-27 09:43:32.873', 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927093019331369', 'patientID': 'P20190927093019331369', 'patientName': 'CN20190927093019331369', 'studyDate': '2019-09-27', 'studyTime': '09:30:52', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927093019331369', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927091913211536', 'patientID': 'P20190927091913211536', 'patientName': 'CN20190927091913211536', 'studyDate': '2019-09-27', 'studyTime': '09:19:47', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927091913211536', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927091554875257', 'patientID': 'P20190927091554875257', 'patientName': 'CN20190927091554875257', 'studyDate': '2019-09-27', 'studyTime': '09:16:27', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927091554875257', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190927090901982897', 'patientID': 'P20190927090901982897', 'patientName': 'CN20190927090901982897', 'studyDate': '2019-09-27', 'studyTime': '09:09:37', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190927090901982897', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926200306711632', 'patientID': 'P20190926200306711632', 'patientName': 'CN20190926200306711632', 'studyDate': '2019-09-26', 'studyTime': '20:03:36', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190926200306711632', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-26 21:40:02.300', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926200116351634', 'patientID': 'P20190926200116351634', 'patientName': 'CN20190926200116351634', 'studyDate': '2019-09-26', 'studyTime': '20:01:46', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926200116351634', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926195833054191', 'patientID': 'P20190926195833054191', 'patientName': 'CN20190926195833054191', 'studyDate': '2019-09-26', 'studyTime': '19:59:06', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926195833054191', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926194344857588', 'patientID': 'P20190926194344857588', 'patientName': 'CN20190926194344857588', 'studyDate': '2019-09-26', 'studyTime': '19:44:16', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190926194344857588', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-26 20:39:26.507', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926194144529307', 'patientID': 'P20190926194144529307', 'patientName': 'CN20190926194144529307', 'studyDate': '2019-09-26', 'studyTime': '19:42:16', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926194144529307', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926193620732015', 'patientID': 'P20190926193620732015', 'patientName': 'CN20190926193620732015', 'studyDate': '2019-09-26', 'studyTime': '19:36:51', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926193620732015', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926193513966305', 'patientID': 'P20190926193513966305', 'patientName': 'CN20190926193513966305', 'studyDate': '2019-09-26', 'studyTime': '19:35:24', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926193502575669', 'patientID': 'P20190926193502575669', 'patientName': 'CN20190926193502575669', 'studyDate': '2019-09-26', 'studyTime': '19:35:08', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926193451419400', 'patientID': 'P20190926193451419400', 'patientName': 'CN20190926193451419400', 'studyDate': '2019-09-26', 'studyTime': '19:34:56', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926193419341232', 'patientID': 'P20190926193419341232', 'patientName': 'CN20190926193419341232', 'studyDate': '2019-09-26', 'studyTime': '19:34:51', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926193419341232', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926190804570999', 'patientID': 'P20190926190804570999', 'patientName': 'CN20190926190804570999', 'studyDate': '2019-09-26', 'studyTime': '19:08:36', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190926190804570999', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-26 19:10:11.917', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926190406106216', 'patientID': 'P20190926190406106216', 'patientName': 'CN20190926190406106216', 'studyDate': '2019-09-26', 'studyTime': '19:04:35', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190926190406106216', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-26 19:06:13.930', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926190259103869', 'patientID': 'P20190926190259103869', 'patientName': 'CN20190926190259103869', 'studyDate': '2019-09-26', 'studyTime': '19:03:30', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926190259103869', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926190130538136', 'patientID': 'P20190926190130538136', 'patientName': 'CN20190926190130538136', 'studyDate': '2019-09-26', 'studyTime': '19:02:00', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926190130538136', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926185749581646', 'patientID': 'P20190926185749581646', 'patientName': 'CN20190926185749581646', 'studyDate': '2019-09-26', 'studyTime': '18:58:20', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926185749581646', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926184922019125', 'patientID': 'P20190926184922019125', 'patientName': 'CN20190926184922019125', 'studyDate': '2019-09-26', 'studyTime': '18:49:55', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190926184922019125', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-26 18:51:37.443', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926181253683850', 'patientID': 'P20190926181253683850', 'patientName': 'CN20190926181253683850', 'studyDate': '2019-09-26', 'studyTime': '18:13:25', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190926181253683850', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-26 18:15:04.660', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926180655059231', 'patientID': 'P20190926180655059231', 'patientName': 'CN20190926180655059231', 'studyDate': '2019-09-26', 'studyTime': '18:07:25', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190926180655059231', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926180317252946', 'patientID': 'P20190926180317252946', 'patientName': 'CN20190926180317252946', 'studyDate': '2019-09-26', 'studyTime': '18:03:50', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190926180317252946', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926175113276968', 'patientID': 'P20190926175113276968', 'patientName': 'CN20190926175113276968', 'studyDate': '2019-09-26', 'studyTime': '17:51:45', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 1, 'examName': 'Exam20190926175113276968', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926174443673001', 'patientID': 'P20190926174443673001', 'patientName': 'CN20190926174443673001', 'studyDate': '2019-09-26', 'studyTime': '17:45:15', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926174443673001', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926172734307873', 'patientID': 'P20190926172734307873', 'patientName': 'CN20190926172734307873', 'studyDate': '2019-09-26', 'studyTime': '17:28:05', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926172734307873', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-26 17:30:26.560', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-09-26 17:30:25.987', 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926170023027884', 'patientID': 'P20190926170023027884', 'patientName': 'CN20190926170023027884', 'studyDate': '2019-09-26', 'studyTime': '17:00:54', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926170023027884', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-26 17:04:42.847', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-09-26 17:04:42.170', 'reportCount': 2, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926165127567516', 'patientID': 'P20190926165127567516', 'patientName': 'CN20190926165127567516', 'studyDate': '2019-09-26', 'studyTime': '16:51:59', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926165127567516', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-26 16:55:42.000', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-09-26 16:55:41.443', 'reportCount': 2, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926162829948320', 'patientID': 'P20190926162829948320', 'patientName': 'CN20190926162829948320', 'studyDate': '2019-09-26', 'studyTime': '16:28:59', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926162829948320', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-09-26 16:32:36.220', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': '2019-09-26 16:32:35.173', 'reportCount': 2, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926162407328680', 'patientID': 'P20190926162407328680', 'patientName': 'CN20190926162407328680', 'studyDate': '2019-09-26', 'studyTime': '16:24:39', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926162407328680', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926161836085793', 'patientID': 'P20190926161836085793', 'patientName': 'CN20190926161836085793', 'studyDate': '2019-09-26', 'studyTime': '16:19:04', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926161836085793', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926161457711201', 'patientID': 'P20190926161457711201', 'patientName': 'CN20190926161457711201', 'studyDate': '2019-09-26', 'studyTime': '16:15:29', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926161457711201', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926161103583182', 'patientID': 'P20190926161103583182', 'patientName': 'CN20190926161103583182', 'studyDate': '2019-09-26', 'studyTime': '16:11:34', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926161103583182', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926160457817657', 'patientID': 'P20190926160457817657', 'patientName': 'CN20190926160457817657', 'studyDate': '2019-09-26', 'studyTime': '16:05:28', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926160457817657', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926155434884612', 'patientID': 'P20190926155434884612', 'patientName': 'CN20190926155434884612', 'studyDate': '2019-09-26', 'studyTime': '15:55:03', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926155434884612', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926154948662730', 'patientID': 'P20190926154948662730', 'patientName': 'CN20190926154948662730', 'studyDate': '2019-09-26', 'studyTime': '15:50:18', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926154948662730', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926152214771679', 'patientID': 'P20190926152214771679', 'patientName': 'CN20190926152214771679', 'studyDate': '2019-09-26', 'studyTime': '15:22:48', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190926152214771679', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926152151141858', 'patientID': 'P20190926152151141858', 'patientName': 'CN20190926152151141858', 'studyDate': '2019-09-26', 'studyTime': '15:21:56', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190926151527430059', 'patientID': 'P20190926151527430059', 'patientName': 'CN20190926151527430059', 'studyDate': '2019-09-26', 'studyTime': '15:15:35', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190925151339559062', 'patientID': 'P20190925151339559062', 'patientName': 'CN20190925151339559062', 'studyDate': '2019-09-25', 'studyTime': '15:14:12', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190925151339559062', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190925151112100099', 'patientID': 'P20190925151112100099', 'patientName': 'CN20190925151112100099', 'studyDate': '2019-09-25', 'studyTime': '15:11:42', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 3, 'examName': 'Exam20190925151112100099', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190925150604547069', 'patientID': 'P20190925150604547069', 'patientName': 'CN20190925150604547069', 'studyDate': '2019-09-25', 'studyTime': '15:06:37', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 3, 'examName': 'Exam20190925150604547069', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190925144432852059', 'patientID': 'P20190925144432852059', 'patientName': 'CN20190925144432852059', 'studyDate': '2019-09-25', 'studyTime': '14:45:06', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190925144432852059', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190925143718731410', 'patientID': 'P20190925143718731410', 'patientName': 'CN20190925143718731410', 'studyDate': '2019-09-25', 'studyTime': '14:37:51', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190925143718731410', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190925143345549503', 'patientID': 'P20190925143345549503', 'patientName': 'CN20190925143345549503', 'studyDate': '2019-09-25', 'studyTime': '14:34:16', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190925143345549503', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190925142250517879', 'patientID': 'P20190925142250517879', 'patientName': 'CN20190925142250517879', 'studyDate': '2019-09-25', 'studyTime': '14:23:21', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190925142250517879', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 2, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190925141608606774', 'patientID': 'P20190925141608606774', 'patientName': 'CN20190925141608606774', 'studyDate': '2019-09-25', 'studyTime': '14:16:40', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190925141608606774', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190924140239208696', 'patientID': 'P20190924140239208696', 'patientName': 'CN20190924140239208696', 'studyDate': '2019-09-24', 'studyTime': '14:03:09', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190924140239208696', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 3, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190924134211922347', 'patientID': 'P20190924134211922347', 'patientName': 'CN20190924134211922347', 'studyDate': '2019-09-24', 'studyTime': '13:42:39', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190924134211922347', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190924134005185090', 'patientID': 'P20190924134005185090', 'patientName': 'CN20190924134005185090', 'studyDate': '2019-09-24', 'studyTime': '13:40:34', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190924134005185090', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190924133636470877', 'patientID': 'P20190924133636470877', 'patientName': 'CN20190924133636470877', 'studyDate': '2019-09-24', 'studyTime': '13:37:21', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190924133636470877', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190920151641764670', 'patientID': 'P20190920151641764670', 'patientName': 'CN20190920151641764670', 'studyDate': '2019-09-20', 'studyTime': '15:16:53', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190920101314045529', 'patientID': 'P20190920101314045529', 'patientName': 'CN20190920101314045529', 'studyDate': '2019-09-20', 'studyTime': '10:13:27', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190920101302844554', 'patientID': 'P20190920101302844554', 'patientName': 'CN20190920101302844554', 'studyDate': '2019-09-20', 'studyTime': '10:13:08', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190920101251464315', 'patientID': 'P20190920101251464315', 'patientName': 'CN20190920101251464315', 'studyDate': '2019-09-20', 'studyTime': '10:12:57', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190920101220423507', 'patientID': 'P20190920101220423507', 'patientName': 'CN20190920101220423507', 'studyDate': '2019-09-20', 'studyTime': '10:12:49', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': 'Exam20190920101220423507', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'DCMPSTATE1', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190906212504320861', 'patientID': 'P20190906212504320861', 'patientName': 'CN20190906212504320861', 'studyDate': '2019-09-06', 'studyTime': '21:25:16', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 0, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190906212222660430', 'patientID': 'P20190906212222660430', 'patientName': 'CN20190906212222660430', 'studyDate': '2019-09-06', 'studyTime': '21:22:30', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190906211930483389', 'patientID': 'P20190906211930483389', 'patientName': 'CN20190906211930483389', 'studyDate': '2019-09-06', 'studyTime': '21:19:40', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190906204051801198', 'patientID': 'P20190906204051801198', 'patientName': 'CN20190906204051801198', 'studyDate': '2019-09-06', 'studyTime': '20:40:59', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190906203853570302', 'patientID': 'P20190906203853570302', 'patientName': 'CN20190906203853570302', 'studyDate': '2019-09-06', 'studyTime': '20:39:04', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190906202539364997', 'patientID': 'P20190906202539364997', 'patientName': 'CN20190906202539364997', 'studyDate': '2019-09-06', 'studyTime': '20:25:48', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190906202218239273', 'patientID': 'P20190906202218239273', 'patientName': 'CN20190906202218239273', 'studyDate': '2019-09-06', 'studyTime': '20:22:28', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190905223436021463', 'patientID': 'P20190905223436021463', 'patientName': 'CN20190905223436021463', 'studyDate': '2019-09-05', 'studyTime': '22:34:41', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190905212205513802', 'patientID': 'P20190905212205513802', 'patientName': 'CN20190905212205513802', 'studyDate': '2019-09-05', 'studyTime': '21:22:10', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190905212111738668', 'patientID': 'P20190905212111738668', 'patientName': 'CN20190905212111738668', 'studyDate': '2019-09-05', 'studyTime': '21:21:15', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190905211755776242', 'patientID': 'P20190905211755776242', 'patientName': 'CN20190905211755776242', 'studyDate': '2019-09-05', 'studyTime': '21:18:00', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190905211349106859', 'patientID': 'P20190905211349106859', 'patientName': 'CN20190905211349106859', 'studyDate': '2019-09-05', 'studyTime': '21:13:55', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903172505152418', 'patientID': 'P20190903172505152418', 'patientName': 'CN20190903172505152418', 'studyDate': '2019-09-03', 'studyTime': '17:25:12', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903170227056234', 'patientID': 'P20190903170227056234', 'patientName': 'CN20190903170227056234', 'studyDate': '2019-09-03', 'studyTime': '17:02:31', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903170051099638', 'patientID': 'P20190903170051099638', 'patientName': 'CN20190903170051099638', 'studyDate': '2019-09-03', 'studyTime': '17:00:56', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903165955457397', 'patientID': 'P20190903165955457397', 'patientName': 'CN20190903165955457397', 'studyDate': '2019-09-03', 'studyTime': '17:00:01', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903165901885271', 'patientID': 'P20190903165901885271', 'patientName': 'CN20190903165901885271', 'studyDate': '2019-09-03', 'studyTime': '16:59:06', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903165542153628', 'patientID': 'P20190903165542153628', 'patientName': 'CN20190903165542153628', 'studyDate': '2019-09-03', 'studyTime': '16:55:45', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903165418596754', 'patientID': 'P20190903165418596754', 'patientName': 'CN20190903165418596754', 'studyDate': '2019-09-03', 'studyTime': '16:54:25', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903164954783371', 'patientID': 'P20190903164954783371', 'patientName': 'CN20190903164954783371', 'studyDate': '2019-09-03', 'studyTime': '16:50:00', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'US', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903164800887729', 'patientID': 'P20190903164800887729', 'patientName': 'CN20190903164800887729', 'studyDate': '2019-09-03', 'studyTime': '16:48:09', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903153259666283', 'patientID': 'P20190903153259666283', 'patientName': 'CN20190903153259666283', 'studyDate': '2019-09-03', 'studyTime': '15:33:04', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'XA', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903153139846628', 'patientID': 'P20190903153139846628', 'patientName': 'CN20190903153139846628', 'studyDate': '2019-09-03', 'studyTime': '15:31:50', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903153001170875', 'patientID': 'P20190903153001170875', 'patientName': 'CN20190903153001170875', 'studyDate': '2019-09-03', 'studyTime': '15:30:11', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903152902688466', 'patientID': 'P20190903152902688466', 'patientName': 'CN20190903152902688466', 'studyDate': '2019-09-03', 'studyTime': '15:29:13', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903152102563471', 'patientID': 'P20190903152102563471', 'patientName': 'CN20190903152102563471', 'studyDate': '2019-09-03', 'studyTime': '15:21:12', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903152025122287', 'patientID': 'P20190903152025122287', 'patientName': 'CN20190903152025122287', 'studyDate': '2019-09-03', 'studyTime': '15:20:35', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903151513291106', 'patientID': 'P20190903151513291106', 'patientName': 'CN20190903151513291106', 'studyDate': '2019-09-03', 'studyTime': '15:15:23', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903151421178072', 'patientID': 'P20190903151421178072', 'patientName': 'CN20190903151421178072', 'studyDate': '2019-09-03', 'studyTime': '15:14:31', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903151230111593', 'patientID': 'P20190903151230111593', 'patientName': 'CN20190903151230111593', 'studyDate': '2019-09-03', 'studyTime': '15:12:40', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903104428938966', 'patientID': 'P20190903104428938966', 'patientName': 'CN20190903104428938966', 'studyDate': '2019-09-03', 'studyTime': '10:44:38', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'RF', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903104253914424', 'patientID': 'P20190903104253914424', 'patientName': 'CN20190903104253914424', 'studyDate': '2019-09-03', 'studyTime': '10:43:03', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'IO', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903104133545742', 'patientID': 'P20190903104133545742', 'patientName': 'CN20190903104133545742', 'studyDate': '2019-09-03', 'studyTime': '10:41:43', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'NM', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903103922870119', 'patientID': 'P20190903103922870119', 'patientName': 'CN20190903103922870119', 'studyDate': '2019-09-03', 'studyTime': '10:39:33', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'OT', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903102755578047', 'patientID': 'P20190903102755578047', 'patientName': 'CN20190903102755578047', 'studyDate': '2019-09-03', 'studyTime': '10:27:55', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903102136190927', 'patientID': 'P20190903102136190927', 'patientName': 'CN20190903102136190927', 'studyDate': '2019-09-03', 'studyTime': '10:21:36', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'MG', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'A20190903101857687685', 'patientID': 'P20190903101857687685', 'patientName': 'CN20190903101857687685', 'studyDate': '2019-09-03', 'studyTime': '10:18:57', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': -1, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 0, 'reportStatus': 2, 'reportPrintStatus': 0, 'reportPrintTime': None, 'reportCount': 1, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': '0016818', 'patientID': '8017446', 'patientName': 'Meng_Cui_Ping', 'studyDate': '2019-02-25', 'studyTime': '13:32:56', 'patientSex': '男', 'patientType': '1', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'ralfacc001', 'patientID': 'ralf001', 'patientName': 'ralf001new', 'studyDate': '2019-01-25', 'studyTime': '15:05:51', 'patientSex': '男', 'patientType': '1', 'holdFlag': 0, 'printMode': 0, 'examName': '', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'ImageSuite179', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'Az004', 'patientID': 'PID004', 'patientName': '赵六', 'studyDate': '2019-01-25', 'studyTime': '14:16:06', 'patientSex': '男', 'patientType': '1', 'holdFlag': 0, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'E003', 'patientID': 'PID003', 'patientName': '王五', 'studyDate': '2019-01-25', 'studyTime': '13:56:55', 'patientSex': '男', 'patientType': '1', 'holdFlag': 0, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'CR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'E001', 'patientID': 'PID001', 'patientName': '张三', 'studyDate': '2019-01-18', 'studyTime': '15:47:11', 'patientSex': '男', 'patientType': '1', 'holdFlag': 0, 'printMode': 0, 'examName': '', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'DX', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'KMKJD', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'AT015', 'patientID': 'PT015', 'patientName': '周伯通', 'studyDate': '2019-01-15', 'studyTime': '13:07:32', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': '', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-01-15 13:33:07.023', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': '2019-01-15 13:33:05.123', 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'Test', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'AT014', 'patientID': 'PT014', 'patientName': '段玉', 'studyDate': '2019-01-04', 'studyTime': '10:46:01', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': '', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-01-15 09:47:23.803', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': '2019-01-15 13:28:47.160', 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'Test', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'AT013', 'patientID': 'PT013', 'patientName': '穆念慈', 'studyDate': '2019-01-03', 'studyTime': '10:06:48', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-01-03 11:21:21.317', 'filmDeleteStatus': 0, 'imageCount': 8, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': '2019-01-03 11:21:21.040', 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'Test', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'AT012', 'patientID': 'PT012', 'patientName': '杨康', 'studyDate': '2019-01-03', 'studyTime': '09:55:12', 'patientSex': 'F', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': '', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2019-01-03 10:58:34.843', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': '2019-01-03 10:58:31.770', 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'Test', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'AT011', 'patientID': 'PT011', 'patientName': '郭靖', 'studyDate': '2018-12-14', 'studyTime': '17:08:37', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2018-12-24 14:15:09.657', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': '2018-12-24 14:15:06.917', 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'Test', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'AT009', 'patientID': 'PT009', 'patientName': '黑熊精', 'studyDate': '2018-11-20', 'studyTime': '09:21:42', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 0, 'examName': '', 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2018-11-20 11:02:20.957', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': '2018-11-21 14:11:08.760', 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'Test', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'AT005', 'patientID': 'PT005', 'patientName': '沙和尚', 'studyDate': '2018-11-15', 'studyTime': '10:06:48', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 3, 'examName': None, 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2018-12-14 16:00:12.993', 'filmDeleteStatus': 0, 'imageCount': 2, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': '2018-12-14 15:59:57.837', 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'Test', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'AT004', 'patientID': 'PT004', 'patientName': '白龙马', 'studyDate': '2018-11-15', 'studyTime': '10:02:36', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 1, 'printMode': 3, 'examName': None, 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': '2018-11-16 12:21:33.033', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': '2018-11-16 12:24:24.733', 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'Test', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'asdfasdf', 'patientID': 'M0001', 'patientName': 'test1', 'studyDate': '2018-10-30', 'studyTime': '13:55:36', 'patientSex': '男', 'patientType': '1', 'holdFlag': 1, 'printMode': 4, 'examName': None, 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 4, 'reportStatus': 0, 'reportPrintStatus': -1, 'reportPrintTime': None, 'reportCount': 0, 'modality': 'MR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': None, 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'AT002', 'patientID': 'PT002', 'patientName': '唐僧', 'studyDate': '2018-08-09', 'studyTime': '16:24:04', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 0, 'printMode': 0, 'examName': None, 'bodayPart': None, 'filmPrintStatus': 0, 'filmPrintTime': None, 'filmDeleteStatus': 0, 'imageCount': 3, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': '2018-08-09 16:28:51.707', 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': '', 'reportInfos': None, 'filmInfos': None}, {'accessionNumber': 'AT001', 'patientID': 'PT001', 'patientName': '孙悟空', 'studyDate': '2018-08-09', 'studyTime': '14:17:56', 'patientSex': 'M', 'patientType': '2', 'holdFlag': 0, 'printMode': 3, 'examName': None, 'bodayPart': '', 'filmPrintStatus': 0, 'filmPrintTime': '2019-01-11 13:35:59.797', 'filmDeleteStatus': 0, 'imageCount': 1, 'reportStatus': 2, 'reportPrintStatus': -1, 'reportPrintTime': '2018-12-10 16:36:03.217', 'reportCount': 0, 'modality': 'DR', 'deleteStatus': 0, 'completeStatus': None, 'callingAE': 'Test', 'reportInfos': None, 'filmInfos': None}]]</msg>
<status status="PASS" starttime="20191101 16:25:43.241" endtime="20191101 16:25:43.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 4 \n Description: \n 1. Use API to add a shortcut with name like 'patienttype'. \n Expected: \n 1. The shortcut should add and save successfully. \n</arg>
</arguments>
<msg timestamp="20191101 16:25:43.241" level="INFO">Step 4 
Description: 
1. Use API to add a shortcut with name like 'patienttype'. 
Expected: 
1. The shortcut should add and save successfully. 
</msg>
<status status="PASS" starttime="20191101 16:25:43.241" endtime="20191101 16:25:43.241"></status>
</kw>
<kw name="Platform Worklist Shotcut Save" library="PUMA_PlatformLibrary">
<doc>Platform_worklist_shotcut_save</doc>
<arguments>
<arg>ralf</arg>
<arg>isFuzzy_bool=True</arg>
<arg>patientType=门诊病人,住院病人</arg>
<arg>UserName=admin</arg>
</arguments>
<assign>
<var>${Save_shortCut_result}</var>
</assign>
<msg timestamp="20191101 16:25:43.256" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:43.460" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/deleteShortcut HTTP/1.1" 200 33</msg>
<msg timestamp="20191101 16:25:43.460" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:43.506" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/saveShortcut HTTP/1.1" 200 33</msg>
<msg timestamp="20191101 16:25:43.506" level="INFO">Platform.Platform_worklist_shotcut_save: The shortcut exist, delete as your selected.
Platform.Platform_worklist_shotcut_del_by_name: The shortcut of user is deleted successfully. [ralf, admin], message is [{"isSuccess":true,"message":null}]</msg>
<msg timestamp="20191101 16:25:43.506" level="INFO">${Save_shortCut_result} = {'Result': True, 'shortCutname': 'ralf'}</msg>
<status status="PASS" starttime="20191101 16:25:43.241" endtime="20191101 16:25:43.506"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${Save_shortCut_result}[Result] == True</arg>
<arg>The shorcut save successuflly</arg>
</arguments>
<status status="PASS" starttime="20191101 16:25:43.506" endtime="20191101 16:25:43.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Step 5 \n Description：\n 1. Use API to simulate the operations as click the shortcut to query data. \n Expected:\n 1. The data should same with step2.</arg>
</arguments>
<msg timestamp="20191101 16:25:43.506" level="INFO">Step 5 
Description：
1. Use API to simulate the operations as click the shortcut to query data. 
Expected:
1. The data should same with step2.</msg>
<status status="PASS" starttime="20191101 16:25:43.506" endtime="20191101 16:25:43.506"></status>
</kw>
<kw name="Platform Worklist Shotcut Query By Name" library="PUMA_PlatformLibrary">
<doc>Platform_worklist_shotcut_query_by_name</doc>
<arguments>
<arg>admin</arg>
<arg>ralf</arg>
</arguments>
<assign>
<var>${Shortcut_Query_String}</var>
</assign>
<msg timestamp="20191101 16:25:43.522" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:43.522" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11892</msg>
<msg timestamp="20191101 16:25:43.538" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:43.553" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11892</msg>
<msg timestamp="20191101 16:25:43.553" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:43.569" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11529</msg>
<msg timestamp="20191101 16:25:43.569" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:43.600" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11574</msg>
<msg timestamp="20191101 16:25:43.600" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:43.600" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11542</msg>
<msg timestamp="20191101 16:25:43.600" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:43.616" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11588</msg>
<msg timestamp="20191101 16:25:43.616" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:43.631" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12236</msg>
<msg timestamp="20191101 16:25:43.631" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:43.631" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 12243</msg>
<msg timestamp="20191101 16:25:43.647" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:43.647" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11659</msg>
<msg timestamp="20191101 16:25:43.663" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:43.663" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11708</msg>
<msg timestamp="20191101 16:25:43.678" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:43.678" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11598</msg>
<msg timestamp="20191101 16:25:43.694" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:43.694" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11304</msg>
<msg timestamp="20191101 16:25:43.710" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:43.710" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11504</msg>
<msg timestamp="20191101 16:25:43.710" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:43.725" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 11037</msg>
<msg timestamp="20191101 16:25:43.725" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:43.741" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 10628</msg>
<msg timestamp="20191101 16:25:43.741" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:43.756" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 10563</msg>
<msg timestamp="20191101 16:25:43.756" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:43.772" level="DEBUG">http://127.0.0.1:8888 "POST http://10.112.20.84/webapi/api/worklist/searchWorklist HTTP/1.1" 200 7815</msg>
<msg timestamp="20191101 16:25:43.772" level="INFO">${Shortcut_Query_String} = {"Result": true, "Data": [{"accessionNumber": "A20191101162351787504", "patientID": "P20191101162351787504", "patientName": "CN20191101162351787504", "studyDate": "2019-11-01", "studyTime": "16:24:25"...</msg>
<status status="PASS" starttime="20191101 16:25:43.506" endtime="20191101 16:25:43.772"></status>
</kw>
<kw name="Convert String to JSON" library="JSONLibrary">
<doc>Convert String to JSON object</doc>
<arguments>
<arg>${Shortcut_Query_String}</arg>
</arguments>
<assign>
<var>${ShortCut_Query_Json}</var>
</assign>
<msg timestamp="20191101 16:25:43.788" level="INFO">${ShortCut_Query_Json} = {'Result': True, 'Data': [{'accessionNumber': 'A20191101162351787504', 'patientID': 'P20191101162351787504', 'patientName': 'CN20191101162351787504', 'studyDate': '2019-11-01', 'studyTime': '16:24:25'...</msg>
<status status="PASS" starttime="20191101 16:25:43.772" endtime="20191101 16:25:43.788"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${ShortCut_Query_Json}</arg>
<arg>Data</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20191101 16:25:43.835" level="INFO">${data} = [[{'accessionNumber': 'A20191101162351787504', 'patientID': 'P20191101162351787504', 'patientName': 'CN20191101162351787504', 'studyDate': '2019-11-01', 'studyTime': '16:24:25', 'patientSex': 'F', 'pa...</msg>
<status status="PASS" starttime="20191101 16:25:43.788" endtime="20191101 16:25:43.835"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${query_data}</arg>
</arguments>
<assign>
<var>${query_data}</var>
</assign>
<msg timestamp="20191101 16:25:43.835" level="DEBUG">Argument types are:
&lt;class 'list'&gt;</msg>
<msg timestamp="20191101 16:25:43.835" level="INFO">${query_data} = [[{'accessionNumber': 'A20191101162351787504', 'patientID': 'P20191101162351787504', 'patientName': 'CN20191101162351787504', 'studyDate': '2019-11-01', 'studyTime': '16:24:25', 'patientSex': 'F', 'pa...</msg>
<status status="PASS" starttime="20191101 16:25:43.835" endtime="20191101 16:25:43.835"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20191101 16:25:43.835" level="DEBUG">Argument types are:
&lt;class 'list'&gt;</msg>
<msg timestamp="20191101 16:25:43.835" level="INFO">${data} = [[{'accessionNumber': 'A20191101162351787504', 'patientID': 'P20191101162351787504', 'patientName': 'CN20191101162351787504', 'studyDate': '2019-11-01', 'studyTime': '16:24:25', 'patientSex': 'F', 'pa...</msg>
<status status="PASS" starttime="20191101 16:25:43.835" endtime="20191101 16:25:43.835"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${query_data}</arg>
<arg>${data}</arg>
</arguments>
<msg timestamp="20191101 16:25:43.835" level="DEBUG">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20191101 16:25:43.835" endtime="20191101 16:25:43.835"></status>
</kw>
<kw name="Platform Logout" library="PUMA_PlatformLibrary">
<doc>platform_logout_user_pwd</doc>
<assign>
<var>${logoff_status}</var>
</assign>
<msg timestamp="20191101 16:25:43.850" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:43.850" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191101 16:25:43.850" level="DEBUG">Starting new HTTP connection (1): 127.0.0.1:8888</msg>
<msg timestamp="20191101 16:25:43.850" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform//account/logOff HTTP/1.1" 302 127</msg>
<msg timestamp="20191101 16:25:43.866" level="DEBUG">http://127.0.0.1:8888 "GET http://10.112.20.84/Platform/ HTTP/1.1" 200 9677</msg>
<msg timestamp="20191101 16:25:43.866" level="INFO">Platform.platform_logout: Logoff successfully.</msg>
<msg timestamp="20191101 16:25:43.866" level="INFO">${logoff_status} = True</msg>
<status status="PASS" starttime="20191101 16:25:43.835" endtime="20191101 16:25:43.866"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${logoff_status}</arg>
</arguments>
<status status="PASS" starttime="20191101 16:25:43.866" endtime="20191101 16:25:43.866"></status>
</kw>
<tags>
<tag>Smoke</tag>
</tags>
<status status="PASS" starttime="20191101 16:25:42.616" endtime="20191101 16:25:43.866" critical="yes"></status>
</test>
<status status="PASS" starttime="20191101 15:54:26.731" endtime="20191101 16:25:43.866"></status>
</suite>
<statistics>
<total>
<stat pass="15" fail="0">Critical Tests</stat>
<stat pass="15" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="15" fail="0">Smoke</stat>
</tag>
<suite>
<stat pass="15" fail="0" id="s1" name="SmokeTest">SmokeTest</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
